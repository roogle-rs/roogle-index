{"root":"0:0:1843","crate_version":"2.2.1","includes_private":false,"index":{"0:32:2144":{"id":"0:32:2144","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[48,4],"end":[50,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:41195:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2316","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:36:1930":{"id":"0:36:1930","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[62,4],"end":[62,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:74:664":{"id":"0:74:664","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:9057:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98":{"id":"0:98","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:122":{"id":"0:122","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:40:1944":{"id":"0:40:1944","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[74,4],"end":[74,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2532-0:70:1905":{"id":"b:1:2532-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2505:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2534:690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:24:1857":{"id":"0:24:1857","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7271:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:37:1934":{"id":"0:37:1934","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[65,4],"end":[65,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2534:690":{"id":"1:2534:690","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2542:1465":{"id":"1:2542:1465","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:41339:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2512:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1843":{"id":"0:0:1843","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1690,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` macro adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\nAlso see the _Debug and Display_ section for details about standard text\nrepresentations for flags types.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation. This library defines a standard\ntext-based representation for flags that generated flags types can use. For details on the exact\ngrammar, see the [`parser`] module.\n\nTo support formatting and parsing your generated flags types using that representation, you can implement\nthe standard `Display` and `FromStr` traits in this fashion:\n\n```\nuse bitflags::bitflags;\nuse std::{fmt, str};\n\nbitflags::bitflags! {\n    pub struct Flags: u32 {\n        const A = 1;\n        const B = 2;\n        const C = 4;\n        const D = 8;\n    }\n}\n\nimpl fmt::Debug for Flags {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Debug::fmt(&self.0, f)\n    }\n}\n\nimpl fmt::Display for Flags {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(&self.0, f)\n    }\n}\n\nimpl str::FromStr for Flags {\n    type Err = bitflags::parser::ParseError;\n\n    fn from_str(flags: &str) -> Result<Self, Self::Err> {\n        Ok(Self(flags.parse()?))\n    }\n}\n```\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n## Multi-bit Flags\n\nIt is allowed to define a flag with multiple bits set, however such\nflags are _not_ treated as a set where any of those bits is a valid\nflag. Instead, each flag is treated as a unit when converting from\nbits with [`from_bits`] or [`from_bits_truncate`].\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u8 {\n        const F3 = 0b00000011;\n    }\n}\n\nfn main() {\n    // This bit pattern does not set all the bits in `F3`, so it is rejected.\n    assert!(Flags::from_bits(0b00000001).is_none());\n    assert!(Flags::from_bits_truncate(0b00000001).is_empty());\n}\n```\n\n[`from_bits`]: BitFlags::from_bits\n[`from_bits_truncate`]: BitFlags::from_bits_truncate\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```\n\n# The internal field\n\nThis library generates newtypes like:\n\n```\n# pub struct Field0;\npub struct Flags(Field0);\n```\n\nYou can freely use methods and trait implementations on this internal field as `.0`.\nFor details on exactly what's generated for it, see the [`Field0`](example_generated/struct.Field0.html)\nexample docs.","links":{"`parser`":"0:5:1824","BitFlags::from_bits_truncate":"0:30:1922","BitFlags::from_bits":"0:29:1917"},"attrs":["#![no_std]","#![forbid(unsafe_code)]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.2.1\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1824","0:4-0:22:1823","0:56:1843"],"is_stripped":false}},"1:2547:1464":{"id":"1:2547:1464","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:41339:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2512:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4-0:22:1823":{"id":"0:4-0:22:1823","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[429,0],"end":[429,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:22:1823","glob":false}},"1:2243:9651":{"id":"1:2243:9651","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2240:2511":{"id":"1:2240:2511","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34:2139":{"id":"0:34:2139","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[56,4],"end":[56,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1823","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:2546:126":{"id":"1:2546:126","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:31837:3969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2528-0:70:1905":{"id":"b:1:2528-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2505:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2502:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2531:2741"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:39:1941":{"id":"0:39:1941","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[71,4],"end":[71,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:8:2282":{"id":"0:8:2282","crate_id":0,"name":"invalid_hex_flag","span":{"filename":"src/parser.rs","begin":[57,4],"end":[68,5]},"visibility":"public","docs":"An invalid hex flag was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9098:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9098:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28:1883":{"id":"0:28:1883","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1823","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:38:1939":{"id":"0:38:1939","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[68,4],"end":[68,44]},"visibility":"default","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:33:791":{"id":"0:33:791","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[53,4],"end":[53,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1823","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[90,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9098:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:12:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:30:1922":{"id":"0:30:1922","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[41,4],"end":[41,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.\n\nNote that each [multi-bit flag] is treated as a unit for this comparison.\n\n[multi-bit flag]: index.html#multi-bit-flags","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1823","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:8202:4085-0:70:1905":{"id":"a:1:8202:4085-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8202:4085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"isize"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:31:1926":{"id":"0:31:1926","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1823","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:123":{"id":"0:123","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:50:2349":{"id":"0:50:2349","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[156,4],"end":[156,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:56:1843":{"id":"0:56:1843","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[550,0],"end":[632,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nlet e1 = Flags::A | Flags::C;\nlet e2 = Flags::B | Flags::C;\nassert_eq!((e1 | e2), Flags::ABC);   // union\nassert_eq!((e1 & e2), Flags::C);     // intersection\nassert_eq!((e1 - e2), Flags::A);     // set difference\nassert_eq!(!e2, Flags::A);           // set complement\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nlet mut flags = Flags::A | Flags::B;\n\nflags.clear();\nassert!(flags.is_empty());\n\nassert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\nassert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"a:1:2731:2614-0:70:1905":{"id":"a:1:2731:2614-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2731:2614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:1:2241-0:70:1905":{"id":"b:1:2241-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2316","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2235:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2243:9651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2691:226-0:70:1905":{"id":"a:1:2691:226-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2691:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:70:1905":{"id":"0:70:1905","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[35,0],"end":[35,38]},"visibility":"public","docs":"An error encountered while parsing flags from text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:7","a:1:2691:226-0:70:1905","a:1:8203:4084-0:70:1905","a:1:2674:218-0:70:1905","a:1:8202:4085-0:70:1905","a:1:2731:2614-0:70:1905","b:1:2538-0:70:1905","b:1:2241-0:70:1905","b:1:3307-0:70:1905","b:1:2528-0:70:1905","b:1:2543-0:70:1905","b:1:2532-0:70:1905","b:1:2238-0:70:1905","0:11","0:73"]}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:8203:4084-0:70:1905":{"id":"a:1:8203:4084-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8203:4084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:41:1946":{"id":"0:41:1946","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[77,4],"end":[77,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:9:2285":{"id":"0:9:2285","crate_id":0,"name":"invalid_named_flag","span":{"filename":"src/parser.rs","begin":[71,4],"end":[82,5]},"visibility":"public","docs":"A named flag that doesn't correspond to any on the flags type was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9098:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9098:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9093:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2543-0:70:1905":{"id":"b:1:2543-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2502:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2512:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2546:126","1:2547:1464"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3307-0:70:1905":{"id":"b:1:3307-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2316","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3305:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3309:1478"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:27:283":{"id":"0:27:283","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5:1824":{"id":"0:5:1824","crate_id":0,"name":"parser","span":{"filename":"src/parser.rs","begin":[1,0],"end":[123,40]},"visibility":"public","docs":"Parsing flags from text.\n\n`bitflags` defines the following *whitespace-insensitive*, *case-sensitive* grammar for flags formatted\nas text:\n\n- _Flags:_ (_Flag_)`|`*\n- _Flag:_ _Identifier_ | _HexNumber_\n- _Identifier:_ Any Rust identifier\n- _HexNumber_: `0x`([0-9a-fA-F])*\n\nAs an example, this is how `Flags::A | Flags::B | 0x0c` can be represented as text:\n\n```text\nA | B | 0x0c\n```\n\nAlternatively, it could be represented without whitespace:\n\n```text\nA|B|0x0C\n```\n\nNote that identifiers are *case-sensitive*, so the following is *not equivalent*:\n\n```text\na | b | 0x0c\n```","links":{},"attrs":["#![allow(clippy :: let_unit_value)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:70:1905"],"is_stripped":false}},"0:29:1917":{"id":"0:29:1917","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[31,4],"end":[33,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.\n\nNote that each [multi-bit flag] is treated as a unit for this comparison.\n\n[multi-bit flag]: index.html#multi-bit-flags","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1823","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:41195:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2316","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:2674:218-0:70:1905":{"id":"a:1:2674:218-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2674:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:10:2287":{"id":"0:10:2287","crate_id":0,"name":"empty_flag","span":{"filename":"src/parser.rs","begin":[85,4],"end":[87,5]},"visibility":"public","docs":"A hex or named flag wasn't found between separators.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:22:1823":{"id":"0:22:1823","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[81,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:23:2304","0:24:1857","0:25:2308","0:26:1911","0:27:283","0:28:1883","0:29:1917","0:30:1922","0:31:1926","0:32:2144","0:33:791","0:34:2139","0:35:1928","0:36:1930","0:37:1934","0:38:1939","0:39:1941","0:40:1944","0:41:1946","0:42:1999"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:43:2302","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:44:2335":{"id":"0:44:2335","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[91,0],"end":[91,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:107","0:114","0:115","0:90","0:131","0:91","0:130","0:99","0:98","0:123","0:122","0:106"]}},"0:42:1999":{"id":"0:42:1999","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[80,4],"end":[80,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[150,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2335","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:35:1928":{"id":"0:35:1928","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[59,4],"end":[59,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2238-0:70:1905":{"id":"b:1:2238-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2681:2316","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2232:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2240:2511"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2538-0:70:1905":{"id":"b:1:2538-0:70:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2512:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2508:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:126","1:2542:1465"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[55,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:70:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:8:2282","0:9:2285","0:10:2287"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3309:1478":{"id":"1:3309:1478","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:39139:3272","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2531:2741":{"id":"1:2531:2741","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2505:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2541:126":{"id":"1:2541:126","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2512:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:12:664":{"id":"0:12:664","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[91,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9068:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:9057:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:25:2308":{"id":"0:25:2308","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7271:157","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:23:2304":{"id":"0:23:2304","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:45:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:26:1911":{"id":"0:26:1911","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:49:2090":{"id":"0:49:2090","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[154,0],"end":[157,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:50:2349"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"paths":{"1:9098:118":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:45054:3575":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:2459:2335":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:20673:9258":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:43899:4174":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:44076:203":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:21321:3689":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:43879:4168":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:6538:2459":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:45279:3584":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:20724:9249":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:2232:96":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11312:3207":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:21807:3249":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:39353:10997":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:41280:3468":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:21573:3226":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:40125:3437":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:11423:3193":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:42714:9681":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:4752:386":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:20914:3222":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:39173:2725":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:2800:2293":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:43724:3541":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:45195:3581":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:12217:13990":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:39799:3408":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:2691:226":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:1628:3120":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:12244:190":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:51120:785":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:39858:4022":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:3356:3971":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:2886:115":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:40274:3156":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:51104:1388":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:40225:3445":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:20467:11871":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:41133:3466":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:2768:2584":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:1747:3121":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:1738:11827":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:39843:3130":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:3496:3016":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:29860:3758":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:30119:10964":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:21682:3233":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:51117:1484":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:8202:4085":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:43414:3521":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:41331:191":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:4:1008":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:1537:3014":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:9770:2335":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:30653:181":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:51099:1502":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:20905:2335":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2746:2415":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:39813:3409":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:2920:2598":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:46997:3665":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:43210:3515":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:39950:3425":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:45325:3591":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:44992:3573":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:9112:2719":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:12404:3045":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:4799:791":{"crate_id":1,"path":["core","iter"],"kind":"module"},"3:0:2571":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:2685:223":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:43264:3198":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:2839:2592":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:41169:3173":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:22346:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:42506:3492":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:45501:3596":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:12196:149":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:43903:4175":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:2751:2583":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:2835:2298":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:42718:3188":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:21642:9951":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:20505:12147":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:39056:199":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:45425:3594":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:10206:3198":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:43068:3508":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:2899:2594":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:51108:638":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:41832:3183":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:22313:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:40157:3441":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:43772:3554":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:39870:3416":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:9559:3034":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:21717:3236":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:21821:3250":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:41110:10980":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:7216:2615":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:2141:585":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:22214:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:44880:3568":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:11826:110":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:9321:143":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:11137:4131":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:4011:102":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:11671:4187":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:2579:114":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:2762:2585":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:2307:123":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:43738:4194":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:20507:12152":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:42484:143":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:2731:2614":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:31873:2349":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:40519:3164":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:40168:3151":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:9356:4123":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:7151:132":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:51123:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:40288:3157":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:21164:9254":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:51111:738":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:47333:3680":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:42299:72":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:39014:197":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:44086:209":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:40027:3427":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:2674:218":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:45024:3574":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:45691:3602":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:41712:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:3630:2421":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:40148:3147":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:2917:2597":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:20712:2335":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:22886:3116":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:47356:3681":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:9108:192":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:9923:1857":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:30049:3258":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:42222:108":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:43282:3199":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:9093:110":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:9972:3190":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:22445:3255":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:45094:3577":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:2951:2609":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:2756:2582":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:47219:3672":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:41407:181":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:40047:3429":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:3305:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:4252:3137":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:41181:3176":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:10248:3201":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:9110:2718":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:43595:3537":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:9477:3031":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:42259:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:41432:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:2502:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:39771:3405":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:39132:2605":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:45825:3605":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:9947:3189":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:43955:3557":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:43687:3215":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:3999:3133":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:22247:3254":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:41271:2421":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:10015:3193":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:43967:4201":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:11349:3210":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:8628:85":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:2681:2316":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:49583:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47280:3677":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:43612:3538":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:43911:4170":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:44970:3572":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:41246:2306":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:43459:3413":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:49635:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47208:3671":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:40087:3434":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:20753:2335":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:45377:3593":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:45177:3580":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:10733:3202":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:43228:3516":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:9246:3185":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:43759:3548":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:0:493":{"crate_id":1,"path":["core"],"kind":"module"},"1:39783:10970":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:39100:2602":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:7118:4069":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:12269:3220":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:46605:3661":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:7544:4067":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:2593:126":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:3157:2608":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:42987:3502":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:43934:120":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:40500:3452":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:43382:3520":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:11153:3204":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:45076:3576":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:10220:3199":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:40200:3444":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:39166:3274":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:51115:1486":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:6627:4073":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:46935:3664":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:3145:133":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:40260:3450":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:39922:3422":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:9058:2717":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:51112:739":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:43544:4193":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2973:2600":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:3222:2612":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:41339:208":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:21169:9277":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:42976:3501":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:51097:932":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:20881:2335":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:2776:2417":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:45214:3582":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:40078:3433":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:3130:2604":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:51121:1539":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:2686:107":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:41322:4090":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:39851:3413":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:2302:186":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:31877:3263":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"0:56:1843":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:21800:14032":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:21520:3224":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:8796:9880":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:12435:203":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:4034:4000":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:2815:2590":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:43566:3527":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:45355:3592":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:6674:13033":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:42277:126":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:44150:159":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:11625:4177":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:43146:3414":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:7193:119":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:2338:180":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:40485:3451":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:47143:3668":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:21626:3227":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:45232:3583":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:21771:10994":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:51098:415":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:9361:3186":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:41975:2362":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:2682:3973":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:2910:2595":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:21429:9252":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:40139:3440":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:30089:3259":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:39823:3410":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:41632:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:51118:1485":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:2780:2588":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:42947:3497":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:41752:84":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:51103:1358":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:6870:3159":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:47105:3667":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:22379:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:45569:3599":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:11614:4179":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:40509:3029":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:25696:3117":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:41512:80":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:38912:2610":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:10234:3200":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:40007:3426":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:2772:2586":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:2684:224":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:47318:3679":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:31837:3969":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:20912:9255":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4102:3134":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:41313:3470":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:43013:3427":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"0:0:1843":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:8770:664":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:46139:3625":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:2496:74":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:20484:12149":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:4324:2725":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:9591:3040":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:20636:9257":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:30681:3262":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:9100:2360":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:42938:3496":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:43026:3504":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:51113:740":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:2810:2297":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:43130:3206":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:8204:3179":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:4378:2726":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:46399:3629":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:0:439":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:8203:4084":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:40494:3162":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:12183:134":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:39139:3272":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:42250:70":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:41263:3189":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:47395:3682":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:42459:3479":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:42194:11824":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:2736:3977":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:229:208":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:2821:2591":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:22082:176":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:21734:10989":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:47228:3673":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:2499:73":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:41552:87":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:40471:3160":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:4247:3136":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:20452:11871":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:21658:3228":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:2460:3757":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:41382:1857":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:4369:3021":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:39180:3275":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:3185:2611":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:5539:3146":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:41195:179":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:20699:9259":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:40190:3442":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:47239:3674":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:2831:2296":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:9102:2359":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:20486:12151":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:42496:3488":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:42475:3482":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:7271:157":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:43915:4200":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:2914:2596":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:2805:2295":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:42699:3494":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:4424:2727":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:46061:3624":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:51109:639":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:51096:369":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:43660:3540":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:2508:236":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:43468:3130":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:39762:3404":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:41027:3170":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:38873:2613":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:2844:2593":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:43104:3509":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:49609:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3151:2606":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:41390:3189":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:50931:3691":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:43364:3519":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:42467:3481":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:4398:2728":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:3923:3014":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:43895:4176":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:20439:3262":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:31942:3265":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:2505:131":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:12516:4227":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:44167:3565":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:43581:3534":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:10127:3196":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:12393:105":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:45644:3601":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:22115:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:3368:3129":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:1812:3125":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:2788:2589":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:40069:3431":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:43039:3505":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:44129:3560":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:46747:3662":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:39903:3421":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:47265:3676":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:45979:3623":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:4133:3135":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:39159:3273":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:3987:3132":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:40209:3153":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:49596:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:42887:3495":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:38959:2601":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"0:5:1824":{"crate_id":0,"path":["bitflags","parser"],"kind":"module"},"1:39917:100":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:43443:3524":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:45547:3598":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:7164:2419":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:51105:1468":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:43477:3412":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:6721:4059":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:46249:3628":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:41968:2361":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:46215:3627":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:41961:2360":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:51102:310":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:40116:3143":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:42956:3499":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:9313:139":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:20886:9250":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:44924:3570":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:46857:3663":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:45903:3621":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:3170:15462":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:43891:4172":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:30083:3118":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:40177:3152":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:43887:4173":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:47059:3666":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:47254:3675":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:20802:3222":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:43424:3522":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:9057:208":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:4175:2724":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:41792:91":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:43136:3513":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:11560:1904":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:44137:3562":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:4773:13427":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:44192:3567":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:7541:3999":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:1724:3963":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:44094:193":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:5940:3148":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:40527:3166":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:6930:4002":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:47181:3669":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:2734:3898":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:41592:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:1906:3126":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:46185:3626":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:39034:200":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:21427:2335":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:2254:104":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:51116:1483":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:10092:3195":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:41004:153":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:9780:220":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:2235:97":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:11605:3180":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:10054:3194":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:45949:3622":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:42966:3500":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:41255:1857":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:5481:3144":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2737:3960":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:41146:4079":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:42514:3493":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:3140:232":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:2741:2581":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:7585:10366":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:2512:235":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:40239:3155":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:14:2289":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:50910:3690":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:51101:1043":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:47199:3670":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:8309:3180":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:43883:4171":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:45722:3603":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:39884:4023":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:9576:3035":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:43118:3512":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:49570:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:38990:196":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:43328:3518":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:9106:2362":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:39934:10981":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:43907:4169":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:2827:2294":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:45155:3579":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:41398:2421":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:41954:2359":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:21755:10976":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:43048:3506":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:8791:10365":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:51114:736":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:49557:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2793:2299":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:51110:741":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:43160:3190":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:2728:3974":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:44946:3571":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:10766:3203":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:7548:4068":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:8623:78":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:40056:3430":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:22280:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:40097:3436":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:7114:4070":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:20755:9251":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:45125:3578":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:44900:3569":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:22181:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:21833:3789":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:10165:3197":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:41672:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:41472:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:40249:3447":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:1621:584":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:49200:9286":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:43452:3213":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:51119:1482":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:43749:3544":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:39835:3412":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:4243:205":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:39877:3417":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:51122:1118":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:47303:3678":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:11372:3211":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:41090:9893":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:21709:3235":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:2969:2599":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:39756:3130":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:39078:201":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:42234:1846":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:9068:130":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:4314:3020":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:44179:3566":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"0:70:1905":{"crate_id":0,"path":["bitflags","parser","ParseError"],"kind":"struct"},"1:3067:2603":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:40107:3140":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:45745:3604":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:21694:10963":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:43178:3196":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:43058:3507":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:11388:3212":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:2784:2587":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:11620:4178":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:39997:3022":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:9104:2361":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:2344:187":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:2696:2730":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:45593:3600":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:41044:3172":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:38974:198":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:20761:9253":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:22148:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:22412:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:42204:67":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:30177:10979":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:43310:3517":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:43792:3216":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:21333:11874":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:45471:3595":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:49622:244":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:45523:3597":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:41061:4078":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:7155:150":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:43434:3523":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:40478:3161":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:30283:10961":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:30105:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}