{"root":"0:0:1821","crate_version":"2.1.0","includes_private":false,"index":{"1:2233:2462":{"id":"1:2233:2462","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:30:1900":{"id":"0:30:1900","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1799","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:23:2278":{"id":"0:23:2278","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:45:2278","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:26:1889":{"id":"0:26:1889","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:36:1908":{"id":"0:36:1908","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:34:2117":{"id":"0:34:2117","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1799","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:24:1835":{"id":"0:24:1835","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7252:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:8:2256":{"id":"0:8:2256","crate_id":0,"name":"invalid_hex_flag","span":{"filename":"src/parser.rs","begin":[57,4],"end":[68,5]},"visibility":"public","docs":"An invalid hex flag was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9056:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9056:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:10:2261":{"id":"0:10:2261","crate_id":0,"name":"empty_flag","span":{"filename":"src/parser.rs","begin":[85,4],"end":[87,5]},"visibility":"public","docs":"A hex or named flag wasn't found between separators.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2231-0:68:1883":{"id":"b:1:2231-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2225:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2233:2462"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1821":{"id":"0:0:1821","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1668,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` macro adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\nAlso see the _Debug and Display_ section for details about standard text\nrepresentations for flags types.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation. This library defines a standard\ntext-based representation for flags that generated flags types can use. For details on the exact\ngrammar, see the [`parser`] module.\n\nTo support formatting and parsing your generated flags types using that representation, you can implement\nthe standard `Display` and `FromStr` traits in this fashion:\n\n```\nuse bitflags::bitflags;\nuse std::{fmt, str};\n\nbitflags::bitflags! {\n    pub struct Flags: u32 {\n        const A = 1;\n        const B = 2;\n        const C = 4;\n        const D = 8;\n    }\n}\n\nimpl fmt::Debug for Flags {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Debug::fmt(&self.0, f)\n    }\n}\n\nimpl fmt::Display for Flags {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        fmt::Display::fmt(&self.0, f)\n    }\n}\n\nimpl str::FromStr for Flags {\n    type Err = bitflags::parser::ParseError;\n\n    fn from_str(flags: &str) -> Result<Self, Self::Err> {\n        Ok(Self(flags.parse()?))\n    }\n}\n```\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```\n\n# The internal field\n\nThis library generates newtypes like:\n\n```\n# pub struct Field0;\npub struct Flags(Field0);\n```\n\nYou can freely use methods and trait implementations on this internal field as `.0`.\nFor details on exactly what's generated for it, see the [`Field0`](example_generated/struct.Field0.html)\nexample docs.","links":{"`parser`":"0:5:1800"},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.1.0\")]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5:1800","0:4-0:22:1799","0:56:1821"],"is_stripped":false}},"0:38:1917":{"id":"0:38:1917","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` if all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:3329:1467":{"id":"1:3329:1467","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:38928:3219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2529:684":{"id":"1:2529:684","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2537:1454":{"id":"1:2537:1454","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40733:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2507:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31:1904":{"id":"0:31:1904","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1799","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:44:2307":{"id":"0:44:2307","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:88","0:89","0:112","0:97","0:129","0:104","0:113","0:128","0:120","0:105","0:121","0:96"]}},"1:2541:127":{"id":"1:2541:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:31689:3796","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:1:2538-0:68:1883":{"id":"b:1:2538-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2497:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2507:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2541:127","1:2542:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8187:3913-0:68:1883":{"id":"a:1:8187:3913-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:8187:3913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2236:9483":{"id":"1:2236:9483","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2526:2692":{"id":"1:2526:2692","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2500:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2523-0:68:1883":{"id":"b:1:2523-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2497:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2526:2692"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:8186:3914-0:68:1883":{"id":"a:1:8186:3914-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:8186:3914","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:11":{"id":"0:11","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[90,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:9056:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:12:658"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:27:282":{"id":"0:27:282","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:32:2122":{"id":"0:32:2122","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:40589:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:49:2068":{"id":"0:49:2068","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[146,0],"end":[149,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:50:2321"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:28:1861":{"id":"0:28:1861","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1799","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:68:1883":{"id":"0:68:1883","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[35,0],"end":[35,38]},"visibility":"public","docs":"An error encountered while parsing flags from text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:7","a:1:8187:3913-0:68:1883","a:1:2682:225-0:68:1883","a:1:8186:3914-0:68:1883","a:1:2732:2564-0:68:1883","a:1:2668:217-0:68:1883","b:1:2231-0:68:1883","b:1:3327-0:68:1883","b:1:2527-0:68:1883","b:1:2538-0:68:1883","b:1:2234-0:68:1883","b:1:2533-0:68:1883","b:1:2523-0:68:1883","0:11","0:71"]}},"0:41:1924":{"id":"0:41:1924","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:2533-0:68:1883":{"id":"b:1:2533-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2507:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2503:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2536:127","1:2537:1454"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:29:1895":{"id":"0:29:1895","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1799","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:40589:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:35:1906":{"id":"0:35:1906","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:42:1977":{"id":"0:42:1977","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:2668:217-0:68:1883":{"id":"a:1:2668:217-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2668:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:9:2259":{"id":"0:9:2259","crate_id":0,"name":"invalid_named_flag","span":{"filename":"src/parser.rs","begin":[71,4],"end":[82,5]},"visibility":"public","docs":"A named flag that doesn't correspond to any on the flags type was encountered.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["flag",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9056:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl fmt::Display","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:9056:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2542:1453":{"id":"1:2542:1453","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:40733:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2507:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:39:1919":{"id":"0:39:1919","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:56:1821":{"id":"0:56:1821","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[528,0],"end":[610,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nlet e1 = Flags::A | Flags::C;\nlet e2 = Flags::B | Flags::C;\nassert_eq!((e1 | e2), Flags::ABC);   // union\nassert_eq!((e1 & e2), Flags::C);     // intersection\nassert_eq!((e1 - e2), Flags::A);     // set difference\nassert_eq!(!e2, Flags::A);           // set complement\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nlet mut flags = Flags::A | Flags::B;\n\nflags.clear();\nassert!(flags.is_empty());\n\nassert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\nassert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"b:1:2234-0:68:1883":{"id":"b:1:2234-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2228:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2236:9483"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2732:2564-0:68:1883":{"id":"a:1:2732:2564-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2732:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:37:1912":{"id":"0:37:1912","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:1:3327-0:68:1883":{"id":"b:1:3327-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2675:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3325:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3329:1467"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"isize"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:12:658":{"id":"0:12:658","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[91,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:9010:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8999:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:71":{"id":"0:71","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:9051:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:72:658"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:40:1922":{"id":"0:40:1922","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:1:2682:225-0:68:1883":{"id":"a:1:2682:225-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2682:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:25:2282":{"id":"0:25:2282","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7252:156","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2527-0:68:1883":{"id":"b:1:2527-0:68:1883","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2500:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2529:684"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4-0:22:1799":{"id":"0:4-0:22:1799","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[401,0],"end":[401,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:22:1799","glob":false}},"0:5:1800":{"id":"0:5:1800","crate_id":0,"name":"parser","span":{"filename":"src/parser.rs","begin":[1,0],"end":[123,40]},"visibility":"public","docs":"Parsing flags from text.\n\n`bitflags` defines the following *whitespace-insensitive*, *case-sensitive* grammar for flags formatted\nas text:\n\n- _Flags:_ (_Flag_)`|`*\n- _Flag:_ _Identifier_ | _HexNumber_\n- _Identifier:_ Any Rust identifier\n- _HexNumber_: `0x`([0-9a-fA-F])*\n\nAs an example, this is how `Flags::A | Flags::B | 0x0c` can be represented as text:\n\n```text\nA | B | 0x0c\n```\n\nAlternatively, it could be represented without whitespace:\n\n```text\nA|B|0x0C\n```\n\nNote that identifiers are *case-sensitive*, so the following is *not equivalent*:\n\n```text\na | b | 0x0c\n```","links":{},"attrs":["#![allow(clippy :: let_unit_value)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:68:1883"],"is_stripped":false}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:72:658":{"id":"0:72:658","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:9010:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:8999:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[55,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseError","id":"0:68:1883","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:8:2256","0:9:2259","0:10:2261"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2536:127":{"id":"1:2536:127","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2507:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:33:785":{"id":"0:33:785","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:22:1799","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:22:1799":{"id":"0:22:1799","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:23:2278","0:24:1835","0:25:2282","0:26:1889","0:27:282","0:28:1861","0:29:1895","0:30:1900","0:31:1904","0:32:2122","0:33:785","0:34:2117","0:35:1906","0:36:1908","0:37:1912","0:38:1917","0:39:1919","0:40:1922","0:41:1924","0:42:1977"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:43:2276","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:50:2321":{"id":"0:50:2321","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[148,4],"end":[148,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:44:2307","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:43086:3366":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:39903:2976":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:42392:3326":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:2679:222":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:45207:3446":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:45519:3452":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:44228:3395":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:38856:200":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:44897:3425":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:2825:2269":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:41612:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:20428:13008":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:42690:3145":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:50416:733":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:44204:3394":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:4001:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:50418:730":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"0:0:1821":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:21568:3174":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:50420:1472":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:42860:3350":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:41922:3314":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:21624:3180":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:4024:3825":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:3977:3079":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:44499:3406":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:2792:2536":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:42708:3146":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:6702:3888":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:20854:9086":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:43218:3163":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:2588:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:50424:779":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:9288:144":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:2859:2542":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:4241:3084":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:41910:144":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:39210:3231":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:20744:3169":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:50426:1110":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:50414:735":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:46558:3500":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:38690:2560":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:42636:3342":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:20856:3169":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:43321:4007":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:20703:9084":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:39131:3077":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:39391:2969":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:11119:3151":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:39594:3270":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:42840:3348":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:44873:3424":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:39421:3253":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:22123:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:9328:3133":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:39401:3252":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:46409:3492":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:39297:3247":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:46512:3496":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:2864:2543":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:41355:2332":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:2813:2273":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:2248:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:2507:234":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:2129:580":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:5921:3095":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"0:5:1800":{"crate_id":0,"path":["bitflags","parser"],"kind":"module"},"1:38937:3220":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:39879:3277":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:39619:3271":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9981:3140":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:2687:2681":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:43150:3367":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:42808:3347":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:9056:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:50407:1348":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:21371:9083":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:50419:1475":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:39542:3094":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:38768:195":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:3388:3076":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:50408:1378":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:50235:3516":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:41651:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:25596:3064":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:2847:2268":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:40540:3908":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:42556:3153":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:45026:3428":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:43512:208":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:48874:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:42572:3341":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:45489:3451":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:39328:11470":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:43007:3360":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:6851:3106":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:43360:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:40792:2393":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:8608:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:45703:3454":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:38834:198":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:40575:3123":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:50400:368":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:39137:3223":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:42413:3328":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:38928:3219":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:4092:3081":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:21462:3171":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:42869:3351":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:44518:3407":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:4413:2678":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:2841:2541":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:39344:3251":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:22222:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:39316:3248":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:20615:9089":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:42903:3231":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:39257:3241":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:38752:197":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:20697:9082":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:4236:3083":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:43329:4006":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:40640:2280":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:2454:2307":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:42382:3325":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:39188:3228":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:43341:4030":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:22354:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:44659:3417":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:39218:3847":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:39510:3090":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:50401:925":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:40776:1835":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:2766:2387":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:7174:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:40906:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:44328:3399":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:10172:3145":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:40986:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:50422:1474":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:10214:3148":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:3087:2553":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:39682:3104":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:41106:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:44629:3416":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:9068:2668":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:11570:3127":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:40784:3136":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:11585:4009":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:43038:3364":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:2682:225":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:4721:3858":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:42754:3345":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:9559:2987":{"crate_id":1,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:40725:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:40866:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:50412:632":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:8755:658":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"1:21263:3514":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:44380:3401":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:4164:2675":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:21763:3197":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:22024:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:1618:3067":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:43325:4005":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:43313:4004":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:11354:3159":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:43576:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:40801:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:44805:3421":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:42373:3323":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:21636:11418":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:8776:11561":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:44827:3422":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:44995:3427":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:43309:4002":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:46584:3502":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:0:488":{"crate_id":1,"path":["core"],"kind":"module"},"1:39481:3260":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:44583:3409":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:11338:3158":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:43555:3386":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:48504:9117":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:29935:3065":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:40946:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:46485:3494":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:42474:3332":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:44358:3400":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:42402:3327":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:42885:3241":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:2937:2547":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:29963:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:229:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:1800:3072":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:11103:3961":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:12480:4058":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:11389:3140":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:48887:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:38878:2552":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:2757:3803":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"1:44948:3426":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"0:56:1821":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:38910:2555":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:39654:3276":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:2804:2537":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:2719:3800":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:42364:3322":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:2906:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:40421:3117":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:9323:3953":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:0:435":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:39472:3259":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:39264:3242":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:40665:2393":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:20823:2307":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:41348:2331":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:44775:3420":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:2835:2540":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:41940:3319":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:4313:2676":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:3505:2963":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1:9070:2669":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:39584:3268":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:8613:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:22156:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:1527:2961":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:21676:11426":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:41709:2674":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:9889:1835":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:8187:3913":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:2940:2548":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:12208:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:46622:3504":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:39463:3257":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:22288:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:6608:3902":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:2333:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:11526:1882":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:1712:3789":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:9010:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:45253:3447":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:29941:3206":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:40733:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:4387:2679":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:12357:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:3177:2558":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:46569:3501":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:4122:3082":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:41588:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:40398:152":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:6655:12715":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:39501:3087":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:7525:3896":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:42586:3137":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:42140:11109":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:2297:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:50405:1035":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:39311:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:39865:3107":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:50417:734":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:39491:3262":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:10058:3142":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:8186:3914":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:42144:3135":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:9938:3137":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:40657:3136":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:5527:3093":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:2796:2389":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:2302:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:43593:3391":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:2993:2550":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:9064:2334":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:46543:3499":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:21749:3196":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:20654:2307":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:2745:3723":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:8293:3127":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:42562:3339":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:40674:3294":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:1726:12211":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:29712:3583":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:21659:3183":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:2732:2564":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:20578:9088":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:2788:2534":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:43337:4001":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:7566:11562":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:41066:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:31725:2321":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:3165:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:40438:3119":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:29901:3205":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:2930:2545":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:12399:202":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:2675:2288":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:7132:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:40563:3120":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:50409:1457":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:22057:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:42992:3353":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:3640:2393":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:9058:2332":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:2676:3799":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:9062:2333":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:50425:1528":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:6911:3827":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:44729:3419":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:41893:3307":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:2800:2538":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:22321:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:45283:3448":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:4768:785":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:39519:3263":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:39603:3100":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:39643:3273":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:3171:2556":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:40455:3907":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:4303:2967":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:41186:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:39241:3848":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:39158:11505":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:43502:202":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:14:2263":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:39888:3109":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:4367:2677":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:21600:3175":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:2225:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:41226:3130":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:39668:3103":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:43381:3383":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:2830:2271":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:20449:13006":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:20409:12926":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:39441:3255":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:3160:231":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:43021:3363":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:39571:3099":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:48861:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:48939:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:8188:3126":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:44398:3402":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:21106:9085":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:39450:3256":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:46301:3490":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:6519:2430":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:2919:2544":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:7197:2565":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:39271:3243":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:20666:9080":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:21515:3173":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:39174:3227":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:39235:3077":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:30516:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:44536:3408":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10732:3150":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:9736:2307":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:38944:3221":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:3150:2554":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:45129:3430":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:41673:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:46607:3503":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:50403:1491":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:46239:3489":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:43113:3162":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:42452:3330":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:22090:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:5697:13613":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:38958:3222":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:2339:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:39562:3098":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:12147:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:9066:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:9913:3136":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"3:0:2521":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:50423:1471":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:20394:12926":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:21369:2307":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:41606:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:21775:3614":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:11636:4017":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:10699:3149":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:7252:156":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:39551:3267":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:41621:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:22255:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:41026:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:43175:3370":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:41725:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:44481:3405":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:42850:3349":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:2776:2532":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:9544:2982":{"crate_id":1,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:9746:219":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:40826:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:46532:3498":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:46447:3493":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:46363:3491":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:2491:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:45049:3429":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:30141:11504":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:50402:411":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:20381:3209":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:38812:199":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:8999:207":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"1:1894:3073":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:43185:3374":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:41932:3318":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:41885:3305":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:2934:2546":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:8781:10803":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:11579:4010":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:7522:3823":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:40504:11447":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:10131:3144":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:44184:3393":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:4232:204":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:11278:3154":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:30035:11468":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:44296:3398":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:3205:2561":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:3325:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:42313:3321":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:42970:4023":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:50413:633":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:3190:13003":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:10186:3146":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:20847:2307":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:41369:2334":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:21713:11422":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:43520:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:50406:309":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:1735:3068":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:10093:3143":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:42894:3077":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:21742:12238":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:2678:223":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:7095:3899":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:21275:12929":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:2761:2531":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:9204:3132":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:2851:2270":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:2680:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:20695:2307":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:2574:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:44851:3423":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:39872:3108":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:39633:3102":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:7136:149":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:50427:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:50421:1473":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:31729:3210":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:40707:3296":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:43605:3392":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:43164:4024":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:42494:3334":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:42484:3333":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:10200:3147":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:42465:3331":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:9527:2981":{"crate_id":1,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:43333:4000":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:4742:12085":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:42439:3253":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:39921:3113":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:20426:13004":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:41901:3308":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:40527:3292":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:45553:3453":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:42544:3338":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:22387:3202":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:20641:9090":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:46161:3488":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:2228:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:46660:3506":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:9000:2665":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"0:68:1883":{"crate_id":0,"path":["bitflags","parser","ParseError"],"kind":"struct"},"1:40716:3919":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:46523:3497":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:38951:2676":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:12160:4055":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:41362:2333":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:20447:13009":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:9051:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:30533:3209":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:50415:732":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:2808:2539":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:43317:4003":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:44429:3403":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:2455:3582":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:7099:3898":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:38737:2551":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:10020:3141":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:9274:140":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:44250:3396":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:9445:2978":{"crate_id":1,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:40649:1835":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:2771:2533":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:7145:2391":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:22189:3201":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:2855:2272":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:45443:3450":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:2668:217":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:41639:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:4358:2968":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:50214:3515":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:39278:3849":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:2497:147":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:46051:3487":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:11791:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:48900:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:21111:9108":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:43393:4031":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:48926:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11590:4008":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:45909:3486":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:12181:15476":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:44681:3418":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:3989:3080":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:3376:3798":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:39894:3278":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:42790:3346":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:39146:3224":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:9060:2331":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:31738:3212":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:21651:3182":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:40484:10835":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:42604:3143":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:46503:3495":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:43563:3388":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:21697:11507":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:42878:3160":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:3932:2961":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:39913:3111":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:2500:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:41146:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:38792:196":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:2989:2549":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:12233:3167":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:43305:3998":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1:7529:3897":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:21584:10854":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:3242:2562":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:2820:2267":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:12368:2992":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:40589:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:2782:2535":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:39533:3266":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:39198:3229":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:48913:243":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:44274:3397":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:1611:579":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:11315:3157":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:45365:3449":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:2503:235":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:20828:9081":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:2494:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:38651:2563":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:44459:3404":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:42654:3343":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:42736:3344":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:46699:3507":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:46637:3505":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:42530:3335":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:2971:2559":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:29977:11444":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:31689:3796":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:22786:3063":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:5450:3091":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:42125:3320":{"crate_id":1,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:4:1000":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:43198:3380":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"}},"external_crates":{"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}