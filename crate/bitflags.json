{"root":"0:0:1749","crate_version":"2.0.0-rc.1","includes_private":false,"index":{"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:25:770":{"id":"0:25:770","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1740","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:17:2117":{"id":"0:17:2117","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7152:155","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:22:1815":{"id":"0:22:1815","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1740","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5:1739":{"id":"0:5:1739","crate_id":0,"name":"traits","span":{"filename":"src/traits.rs","begin":[1,0],"end":[148,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:14:1740","0:36:2142","0:41:1953"],"is_stripped":true}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,33],"end":[351,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::traits","name":"traits","id":"0:5:1739","glob":true}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:29:1827":{"id":"0:29:1827","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:24:2005":{"id":"0:24:2005","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48048:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:31:1834":{"id":"0:31:1834","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:21:1810":{"id":"0:21:1810","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1740","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48048:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:20:1788":{"id":"0:20:1788","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1740","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:34:1892":{"id":"0:34:1892","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:23:1819":{"id":"0:23:1819","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1740","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:18:1804":{"id":"0:18:1804","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:0:1749":{"id":"0:0:1749","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1430,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` trait adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.0-rc.1\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:4","0:48:1749"],"is_stripped":false}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:16:1762":{"id":"0:16:1762","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7152:155","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:41:1953":{"id":"0:41:1953","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:42:2156"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:14:1740":{"id":"0:14:1740","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:15:2113","0:16:1762","0:17:2117","0:18:1804","0:19:280","0:20:1788","0:21:1810","0:22:1815","0:23:1819","0:24:2005","0:25:770","0:26:2002","0:27:1821","0:28:1823","0:29:1827","0:30:1832","0:31:1834","0:32:1837","0:33:1839","0:34:1892"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:35:2111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:28:1823":{"id":"0:28:1823","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:19:280":{"id":"0:19:280","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:55:1742":{"id":"0:55:1742","crate_id":0,"name":"external","span":{"filename":"src/external.rs","begin":[1,0],"end":[88,1]},"visibility":"crate","docs":"Conditional trait implementations for external libraries.","links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:27:1821":{"id":"0:27:1821","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[345,0],"end":[345,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:14:1740","glob":false}},"0:36:2142":{"id":"0:36:2142","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:64","0:65","0:72","0:73","0:80","0:81","0:88","0:89","0:96","0:97"]}},"0:33:1839":{"id":"0:33:1839","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:42:2156":{"id":"0:42:2156","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:48:1749":{"id":"0:48:1749","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[472,0],"end":[543,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:15:2113":{"id":"0:15:2113","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:37:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:26:2002":{"id":"0:26:2002","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1740","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,20],"end":[351,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::external","name":"external","id":"0:55:1742","glob":true}},"0:32:1837":{"id":"0:32:1837","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:47":{"id":"0:47","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[353,4],"end":[353,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"core","name":"core","id":"1:0:483","glob":false}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1739","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2142","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:30:1832":{"id":"0:30:1832","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"paths":{"1:11847:10971":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:9133:218":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:8608:2940":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:48116:5923":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:50184:14823":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:53032:22429":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:58502:1441":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:49051:129":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:21772:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:8814:139":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:50299:14825":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:20870:32551":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:46541:31518":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"0:0:1749":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:2796:2357":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:2821:2104":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:6823:3391":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:21739:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:52642:22422":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:54150:20852":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:52766:22424":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:1636:573":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:11061:14802":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:29565:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:50512:14873":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:29543:3289":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:10090:8738":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:46555:3399":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:46920:11338":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:58293:31557":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:54016:20842":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:49916:8733":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:50324:10858":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:54036:20844":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:2784:2353":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:6763:3159":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:10200:31846":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:46294:2379":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:9329:8724":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:50590:14876":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:3161:229":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:2673:2123":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:8610:6064":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:4697:31873":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:51871:22398":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:52956:22427":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:47194:4386":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:2837:2360":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:50166:14822":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:47153:4373":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:6567:12062":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:58494:717":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:7733:7084":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:2816:2102":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:2855:2361":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:58501:1444":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:2973:2378":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:56953:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:20044:32619":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:48787:2166":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:6434:2254":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:9123:2142":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:58482:1461":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:50981:15405":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:54071:20847":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:21365:2909":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:11631:13076":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:3166:133":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:1737:3572":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:49834:8731":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:46341:2370":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:49805:8719":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:29537:3008":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:49845:8737":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:49324:14128":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:38120:179":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:54082:20848":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:58496:719":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:51787:22395":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:39293:3156":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:2762:2223":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:7425:4356":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:1825:3404":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:3374:7056":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:4:980":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:1751:9051":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:52096:22407":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:2666:216":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:21379:2906":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:46830:11342":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:58505:1088":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:50759:14799":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:10860:8740":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"0:48:1749":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:7429:4357":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:48589:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:50280:14817":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:8604:2169":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:2582:126":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:20290:2142":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:51011:15570":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:38137:3776":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:58500:1443":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:50220:14820":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:52410:22417":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:46482:2371":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:6614:4339":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:2847:2105":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:53922:22438":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:2860:2362":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:51741:22393":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:39329:2156":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:49575:8745":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:49340:14127":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:4063:3405":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:21292:3005":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:50624:14805":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:7075:119":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:46396:195":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:51841:22397":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:9563:8726":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:52796:22425":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2327:185":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:20701:29338":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:3984:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:46788:11341":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:54056:20846":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:58493:720":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:49571:14778":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:49361:31535":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:47033:11450":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:2936:2365":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:51911:22400":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:52242:22411":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:47093:4369":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:2491:146":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:2809:2108":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:10809:14828":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:49960:14811":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:50238:14821":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:22402:2903":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:2290:123":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:46416:198":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:2730:2384":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:7001:4358":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:8161:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:29637:29868":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:50819:15314":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:20442:2142":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:49974:14810":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:47264:4381":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:48285:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:50973:15404":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"3:0:2340":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:46939:11339":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:2995:2369":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:6520:4368":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:56966:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50807:15313":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:50034:8728":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:20423:29333":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:46958:11455":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:48133:7078":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:49897:8732":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:21275:3004":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:10749:14829":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:20706:29361":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:52031:22405":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:4266:3398":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:9280:1762":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:50751:14797":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:3178:2377":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:10825:14830":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:20021:32617":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:20173:29341":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:56583:29370":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:58480:909":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:53002:22428":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:4330:3401":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:58499:1442":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:9304:5923":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:46514:2374":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:49090:126":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:20966:29335":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:4130:3389":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:3088:2372":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:54135:20851":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:21673:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:11050:14804":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:49796:8721":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:52539:22420":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:2154:574":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:47300:4383":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:50735:14793":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:53564:22433":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:3151:2373":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:19989:32548":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:9577:8722":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:21805:2907":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:2678:107":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:58314:31545":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:8828:143":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:50270:14815":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:4199:3392":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:2674:3262":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:50786:120":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:48235:1762":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:3386:7060":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:49814:8720":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:49078:108":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:4676:11449":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:52142:22408":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:4373:3402":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:1643:3285":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:2921:2363":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:223:206":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:2942:2367":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:46255:2382":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:51697:22391":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:11056:14803":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:20451:29337":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:21904:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:46779:10958":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:3912:10813":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:50138:8722":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:2843:2103":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:49884:8736":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:49926:8734":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:2939:2366":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:20236:29343":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:7038:148":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:52012:22404":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:58485:306":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:21184:2933":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:21057:2916":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:48251:2229":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:49871:4360":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:10786:14831":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:46877:10858":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:48801:2168":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:50333:11332":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:46372:194":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:8606:190":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:48166:7083":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:48399:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:51942:22401":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:52562:22421":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:46906:11336":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:49379:31558":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:10590:8717":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:51893:22399":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:21240:2905":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:47315:4384":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:2449:2697":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:50120:8726":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:50433:14868":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:2757:2350":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:47532:4345":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:49164:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:50016:8724":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:20339:29337":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:49045:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:21358:3006":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:4090:3406":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:51972:22402":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:48665:3412":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:48260:179":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:58487:1349":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:14:2245":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:47238:4379":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:48794:2167":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:46548:31550":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:7732:7085":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:11889:201":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:52049:22406":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10123:8739":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:21110:2919":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:4204:3393":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:48323:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:48048:177":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:2680:224":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:20023:32621":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:29503:3288":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:7731:7086":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:21163:2977":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:2255:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:11679:188":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:4007:10955":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:21871:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:2788:2355":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:47134:4371":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:47185:4376":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:53216:22431":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:48513:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:51023:15567":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:58481:407":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:22003:2908":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:2501:232":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:20418:2142":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:47541:4347":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:56979:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:29579:29867":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:2800:2356":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:47279:4382":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:52288:22412":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:46438:197":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:54173:20853":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:8156:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:21267:2984":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:58492:627":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:57018:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:20292:29334":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:48627:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:11970:15568":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:2991:2368":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:58504:1498":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:39333:9409":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:51994:22403":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:7422:4354":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:53674:22434":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:53752:22435":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:1760:3571":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:21970:165":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:21706:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:2494:131":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:49906:8735":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:47214:4364":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:49332:31560":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:50290:14816":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:49060:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:46800:11396":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:25212:2904":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:46460:199":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:50731:14792":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:47523:4343":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:2677:221":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:4723:770":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:2826:2106":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:48243:5923":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:47560:4351":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:50743:14795":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:2485:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:2932:2364":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:2772:2351":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:54025:20843":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:48361:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:46883:11334":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:2321:178":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:46899:11335":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:58497:715":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:9522:8729":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:47205:4377":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:48551:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:3972:10864":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:52461:22418":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:50002:14812":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:58498:1445":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:2908:115":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:11618:134":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:4195:203":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:46986:11454":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:29743:29869":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:49745:14441":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:5628:12029":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:54097:20849":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:3240:2381":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:10574:8715":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:20210:29342":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:21937:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:2235:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:11704:13077":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:2685:3263":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:52508:22419":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:2676:222":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:8602:2168":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:48184:189":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:50084:14818":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:9605:8723":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:2804:2358":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:50418:14865":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:53066:22430":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:2568:114":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:1919:3574":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:7837:14801":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:8863:14125":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:46840:11343":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:20298:29336":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:47162:12027":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:47571:4353":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:48475:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:8541:6059":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:50539:14874":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:49148:6063":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:4350:3271":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:2285:184":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:3960:10863":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:5384:4374":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:52194:22410":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:0:431":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:8319:14050":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:49112:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:8551:130":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:58491:626":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:5461:4335":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:3203:2380":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:2778:2354":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:49992:14813":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:0:483":{"crate_id":1,"path":["core"],"kind":"module"},"1:11041:14801":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:4321:3400":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:11652:31267":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:46970:11545":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:8744:31526":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:50601:14877":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:1552:10813":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:47550:4349":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:20004:32548":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:49824:8730":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:58479:365":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:8596:118":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:21329:3007":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:50747:14796":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:58506:13":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:50447:14871":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:8600:2166":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:29328:2698":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:8324:14051":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:49027:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:7152:155":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:6811:11762":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:56940:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:56992:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50767:15311":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:21200:31841":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:52364:22415":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:46816:11340":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:2792:2225":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:19976:3776":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:11756:31268":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:52878:22426":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:4276:3399":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:46521:7054":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:47144:4372":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:50938:191":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:54212:20854":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:6997:4359":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:52340:22414":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:7047:2227":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:47124:4370":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:46913:11337":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:47084:4361":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:46356:196":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:11262:110":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:47063:4360":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:3172:2375":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:2497:233":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:20858:8718":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:47115:4363":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:2448:2142":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:50315:11335":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:47289:4366":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:50644:14806":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:46860:11333":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:2232:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:9372:8740":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:58495:718":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:50994:157":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:21391:2910":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:7098:2385":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:3620:2229":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:47176:4375":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:12012:3777":{"crate_id":1,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"1:50464:14872":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:58484:1014":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:51717:22392":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:48192:206":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:50066:14819":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:8868:14126":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:50308:14824":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:11858:15402":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:50611:14878":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:52172:22409":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:53814:22436":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:48808:2169":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:8591:110":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:9449:8741":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:47516:4342":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:52720:22423":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:47247:4380":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:48124:2229":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:46852:11332":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:50920:201":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:53998:22440":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:21252:2929":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:2767:2352":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:53876:22437":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:50739:14794":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:21640:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:2488:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:49986:14814":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:58486:1319":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:2851:2107":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:54045:20845":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:46773:10858":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:51809:22396":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:3323:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:57005:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:21216:2966":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:58488:1427":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:46953:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:3188:10397":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:39342:3266":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:50396:14864":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:50763:14800":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:51763:22394":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:48108:1762":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:48437:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:48175:12770":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:47043:11451":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:20261:29332":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:53960:22439":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:21313:2996":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:47330:4385":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:11107:14867":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:20449:29339":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:52386:22416":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:2831:2359":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:47228:4378":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:20042:32622":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:47106:4362":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:20964:2142":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:9591:8727":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:9484:8728":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:58503:764":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:8598:2167":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:2743:3268":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:49349:143":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:48099:2115":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:49371:31549":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:50576:14875":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:5849:4387":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:21838:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:52318:22413":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:7034:132":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:53422:22432":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:46600:10807":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:20249:2142":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:54120:20850":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:10997:2902":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:50755:14798":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:9411:8725":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:50930:207":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"}},"external_crates":{"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}