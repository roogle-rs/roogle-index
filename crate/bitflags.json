{"root":"0:0:1744","crate_version":"2.0.0-rc.1","includes_private":false,"index":{"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,33],"end":[351,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::traits","name":"traits","id":"0:5:1734","glob":true}},"0:31:1829":{"id":"0:31:1829","crate_id":0,"name":"insert","span":{"filename":"src/traits.rs","begin":[63,4],"end":[63,38]},"visibility":"default","docs":"Inserts the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:34:1887":{"id":"0:34:1887","crate_id":0,"name":"set","span":{"filename":"src/traits.rs","begin":[72,4],"end":[72,48]},"visibility":"default","docs":"Inserts or removes the specified flags depending on the passed value.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}],["value",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:20:1783":{"id":"0:20:1783","crate_id":0,"name":"bits","span":{"filename":"src/traits.rs","begin":[23,4],"end":[23,33]},"visibility":"default","docs":"Returns the raw value of the flags currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1735","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:15:2107":{"id":"0:15:2107","crate_id":0,"name":"Bits","span":{"filename":"src/traits.rs","begin":[8,4],"end":[8,20]},"visibility":"default","docs":"The underlying integer type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Bits","id":"0:37:2107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:42:2150":{"id":"0:42:2150","crate_id":0,"name":"Internal","span":{"filename":"src/traits.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"The type of the internal field on the generated flags type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:29:1822":{"id":"0:29:1822","crate_id":0,"name":"intersects","span":{"filename":"src/traits.rs","begin":[57,4],"end":[57,46]},"visibility":"default","docs":"Returns `true` if there are flags common to both `self` and `other`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:32:1832":{"id":"0:32:1832","crate_id":0,"name":"remove","span":{"filename":"src/traits.rs","begin":[66,4],"end":[66,38]},"visibility":"default","docs":"Removes the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[351,20],"end":[351,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::external","name":"external","id":"0:55:1737","glob":true}},"0:5:1734":{"id":"0:5:1734","crate_id":0,"name":"traits","span":{"filename":"src/traits.rs","begin":[1,0],"end":[148,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:14:1735","0:36:2136","0:41:1948"],"is_stripped":true}},"0:14:1735":{"id":"0:14:1735","crate_id":0,"name":"BitFlags","span":{"filename":"src/traits.rs","begin":[6,0],"end":[73,1]},"visibility":"public","docs":"A trait that is automatically implemented for all bitflags.\n\nIt should not be implemented manually.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:15:2107","0:16:1757","0:17:2111","0:18:1799","0:19:278","0:20:1783","0:21:1805","0:22:1810","0:23:1814","0:24:2000","0:25:767","0:26:1997","0:27:1816","0:28:1818","0:29:1822","0:30:1827","0:31:1829","0:32:1832","0:33:1834","0:34:1887"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ImplementedByBitFlagsMacro","id":"0:35:2105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:16:1757":{"id":"0:16:1757","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[11,4],"end":[11,37]},"visibility":"default","docs":"An iterator over enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7138:155","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u128"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:33:1834":{"id":"0:33:1834","crate_id":0,"name":"toggle","span":{"filename":"src/traits.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Toggles the specified flags in-place.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:41:1948":{"id":"0:41:1948","crate_id":0,"name":"PublicFlags","span":{"filename":"src/traits.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"A trait for referencing the `bitflags`-owned internal type\nwithout exposing it publicly.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:42:2150"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:27:1816":{"id":"0:27:1816","crate_id":0,"name":"is_empty","span":{"filename":"src/traits.rs","begin":[51,4],"end":[51,31]},"visibility":"default","docs":"Returns `true` if no flags are currently stored.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:28:1818":{"id":"0:28:1818","crate_id":0,"name":"is_all","span":{"filename":"src/traits.rs","begin":[54,4],"end":[54,29]},"visibility":"default","docs":"Returns `true` if all flags are currently set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:24:2000":{"id":"0:24:2000","crate_id":0,"name":"from_name","span":{"filename":"src/traits.rs","begin":[40,4],"end":[42,20]},"visibility":"default","docs":"Get the flag for a particular name.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2652:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:22:1810":{"id":"0:22:1810","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/traits.rs","begin":[33,4],"end":[33,52]},"visibility":"default","docs":"Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1735","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:25:767":{"id":"0:25:767","crate_id":0,"name":"iter","span":{"filename":"src/traits.rs","begin":[45,4],"end":[45,33]},"visibility":"default","docs":"Iterate over enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1735","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:47":{"id":"0:47","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[353,4],"end":[353,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"core","name":"core","id":"1:0:481","glob":false}},"0:19:278":{"id":"0:19:278","crate_id":0,"name":"all","span":{"filename":"src/traits.rs","begin":[20,4],"end":[20,21]},"visibility":"default","docs":"Returns the set containing all flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:0:1744":{"id":"0:0:1744","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[11,0],"end":[1430,1]},"visibility":"public","docs":"A typesafe bitmask flag generator useful for sets of C-style flags.\nIt can be used for creating ergonomic wrappers around C APIs.\n\nThe `bitflags!` macro generates `struct`s that manage a set of flags. The\ntype of those flags must be some primitive integer.\n\n# Examples\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nSee [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code\ngenerated by the above `bitflags!` expansion.\n\n# Visibility\n\nThe `bitflags!` macro supports visibility, just like you'd expect when writing a normal\nRust `struct`:\n\n```\nmod example {\n    use bitflags::bitflags;\n\n    bitflags! {\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n        pub struct Flags1: u32 {\n            const A = 0b00000001;\n        }\n\n        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n#       pub\n        struct Flags2: u32 {\n            const B = 0b00000010;\n        }\n    }\n}\n\nfn main() {\n    let flag1 = example::Flags1::A;\n    let flag2 = example::Flags2::B; // error: const `B` is private\n}\n```\n\n# Attributes\n\nAttributes can be attached to the generated flags types and their constants as normal.\n\n# Representation\n\nIt's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a generated flags type.\nThe generated flags type is always guaranteed to be a newtype where its only field has the same\nABI as the underlying integer type.\n\nIn this example, `Flags` has the same ABI as `u32`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[repr(transparent)]\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n```\n\n# Extending\n\nGenerated flags types belong to you, so you can add trait implementations to them outside\nof what the `bitflags!` macro gives:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```\n\n# What's implemented by `bitflags!`\n\nThe `bitflags!` trait adds some trait implementations and inherent methods\nto generated flags types, but leaves room for you to choose the semantics\nof others.\n\n## Iterators\n\nThe following iterator traits are implemented for generated flags types:\n\n- `Extend`: adds the union of the instances iterated over.\n- `FromIterator`: calculates the union.\n- `IntoIterator`: iterates over set flag values.\n\n## Formatting\n\nThe following formatting traits are implemented for generated flags types:\n\n- `Binary`.\n- `LowerHex` and `UpperHex`.\n- `Octal`.\n\n## Operators\n\nThe following operator traits are implemented for the generated `struct`s:\n\n- `BitOr` and `BitOrAssign`: union\n- `BitAnd` and `BitAndAssign`: intersection\n- `BitXor` and `BitXorAssign`: toggle\n- `Sub` and `SubAssign`: set difference\n- `Not`: set complement\n\n## Methods\n\nThe following methods are defined for the generated `struct`s:\n\n- `empty`: an empty set of flags\n- `all`: the set of all defined flags\n- `bits`: the raw value of the flags currently stored\n- `from_bits`: convert from underlying bit representation, unless that\n               representation contains bits that do not correspond to a\n               defined flag\n- `from_bits_truncate`: convert from underlying bit representation, dropping\n                        any bits that do not correspond to defined flags\n- `from_bits_retain`: convert from underlying bit representation, keeping\n                         all bits (even those not corresponding to defined\n                         flags)\n- `is_empty`: `true` if no flags are currently stored\n- `is_all`: `true` if currently set flags exactly equal all defined flags\n- `intersects`: `true` if there are flags common to both `self` and `other`\n- `contains`: `true` if all of the flags in `other` are contained within `self`\n- `insert`: inserts the specified flags in-place\n- `remove`: removes the specified flags in-place\n- `toggle`: the specified flags will be inserted if not present, and removed\n            if they are.\n- `set`: inserts or removes the specified flags depending on the passed value\n- `intersection`: returns a new set of flags, containing only the flags present\n                  in both `self` and `other` (the argument to the function).\n- `union`: returns a new set of flags, containing any flags present in\n           either `self` or `other` (the argument to the function).\n- `difference`: returns a new set of flags, containing all flags present in\n                `self` without any of the flags present in `other` (the\n                argument to the function).\n- `symmetric_difference`: returns a new set of flags, containing all flags\n                          present in either `self` or `other` (the argument\n                          to the function), but not both.\n- `complement`: returns a new set of flags, containing all flags which are\n                not set in `self`, but which are allowed for this type.\n\n# What's not implemented by `bitflags!`\n\nSome functionality is not automatically implemented for generated flags types\nby the `bitflags!` macro, even when it reasonably could be. This is so callers\nhave more freedom to decide on the semantics of their flags types.\n\n## `Clone` and `Copy`\n\nGenerated flags types are not automatically copyable, even though they can always\nderive both `Clone` and `Copy`.\n\n## `Default`\n\nThe `Default` trait is not automatically implemented for the generated structs.\n\nIf your default value is equal to `0` (which is the same value as calling `empty()`\non the generated struct), you can simply derive `Default`:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    // Results in default value with bits: 0\n    #[derive(Default, Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nfn main() {\n    let derived_default: Flags = Default::default();\n    assert_eq!(derived_default.bits(), 0);\n}\n```\n\nIf your default value is not equal to `0` you need to implement `Default` yourself:\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\n// explicit `Default` implementation\nimpl Default for Flags {\n    fn default() -> Flags {\n        Flags::A | Flags::C\n    }\n}\n\nfn main() {\n    let implemented_default: Flags = Default::default();\n    assert_eq!(implemented_default, (Flags::A | Flags::C));\n}\n```\n\n## `Debug` and `Display`\n\nThe `Debug` trait can be derived for a reasonable implementation.\n\n## `PartialEq` and `PartialOrd`\n\nEquality and ordering can be derived for a reasonable implementation, or implemented manually\nfor different semantics.\n\n# Edge cases\n\n## Zero Flags\n\nFlags with a value equal to zero will have some strange behavior that one should be aware of.\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const NONE = 0b00000000;\n        const SOME = 0b00000001;\n    }\n}\n\nfn main() {\n    let empty = Flags::empty();\n    let none = Flags::NONE;\n    let some = Flags::SOME;\n\n    // Zero flags are treated as always present\n    assert!(empty.contains(Flags::NONE));\n    assert!(none.contains(Flags::NONE));\n    assert!(some.contains(Flags::NONE));\n\n    // Zero flags will be ignored when testing for emptiness\n    assert!(none.is_empty());\n}\n```\n\nUsers should generally avoid defining a flag with a value of zero.\n\n# The `BitFlags` trait\n\nThis library defines a `BitFlags` trait that's implemented by all generated flags types.\nThe trait makes it possible to work with flags types generically:\n\n```\nfn count_unset_flags<F: bitflags::BitFlags>(flags: &F) -> usize {\n    // Find out how many flags there are in total\n    let total = F::all().iter().count();\n\n    // Find out how many flags are set\n    let set = flags.iter().count();\n\n    total - set\n}\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n    }\n}\n\nassert_eq!(2, count_unset_flags(&Flags::B));\n```","links":{},"attrs":["#![no_std]","#![doc(html_root_url = \"https://docs.rs/bitflags/2.0.0-rc.1\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:4","0:48:1744"],"is_stripped":false}},"0:17:2111":{"id":"0:17:2111","crate_id":0,"name":"IterNames","span":{"filename":"src/traits.rs","begin":[14,4],"end":[14,58]},"visibility":"default","docs":"An iterator over the raw names and bits for enabled flags in an instance of the type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:7138:155","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"generic","inner":"Self"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:18:1799":{"id":"0:18:1799","crate_id":0,"name":"empty","span":{"filename":"src/traits.rs","begin":[17,4],"end":[17,23]},"visibility":"default","docs":"Returns an empty set of flags.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4":{"id":"0:4","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[345,0],"end":[345,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(inline)]"],"deprecation":null,"kind":"import","inner":{"source":"traits::BitFlags","name":"BitFlags","id":"0:14:1735","glob":false}},"0:30:1827":{"id":"0:30:1827","crate_id":0,"name":"contains","span":{"filename":"src/traits.rs","begin":[60,4],"end":[60,44]},"visibility":"default","docs":"Returns `true` all of the flags in `other` are contained within `self`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:23:1814":{"id":"0:23:1814","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/traits.rs","begin":[37,4],"end":[37,50]},"visibility":"default","docs":"Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1735","args":null}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:21:1805":{"id":"0:21:1805","crate_id":0,"name":"from_bits","span":{"filename":"src/traits.rs","begin":[27,4],"end":[29,20]},"visibility":"default","docs":"Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1735","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2652:2117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"i32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:36:2136":{"id":"0:36:2136","crate_id":0,"name":"Sealed","span":{"filename":"src/traits.rs","begin":[83,0],"end":[83,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:64","0:65","0:72","0:73","0:80","0:81","0:88","0:89","0:96","0:97"]}},"0:48:1744":{"id":"0:48:1744","crate_id":0,"name":"bitflags","span":{"filename":"src/lib.rs","begin":[472,0],"end":[543,1]},"visibility":"public","docs":"The macro used to generate the flag structure.\n\nSee the [crate level docs](../bitflags/index.html) for complete documentation.\n\n# Example\n\n```\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n        const C = 0b00000100;\n        const ABC = Self::A.bits() | Self::B.bits() | Self::C.bits();\n    }\n}\n\nfn main() {\n    let e1 = Flags::A | Flags::C;\n    let e2 = Flags::B | Flags::C;\n    assert_eq!((e1 | e2), Flags::ABC);   // union\n    assert_eq!((e1 & e2), Flags::C);     // intersection\n    assert_eq!((e1 - e2), Flags::A);     // set difference\n    assert_eq!(!e2, Flags::A);           // set complement\n}\n```\n\nThe generated `struct`s can also be extended with type and trait\nimplementations:\n\n```\nuse std::fmt;\n\nuse bitflags::bitflags;\n\nbitflags! {\n    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n    struct Flags: u32 {\n        const A = 0b00000001;\n        const B = 0b00000010;\n    }\n}\n\nimpl Flags {\n    pub fn clear(&mut self) {\n        *self.0.bits_mut() = 0;\n    }\n}\n\nfn main() {\n    let mut flags = Flags::A | Flags::B;\n\n    flags.clear();\n    assert!(flags.is_empty());\n\n    assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"Flags(A | B)\");\n    assert_eq!(format!(\"{:?}\", Flags::B), \"Flags(B)\");\n}\n```","links":{},"attrs":["#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! bitflags {\n    (\n        $(#[$outer:meta])*\n        $vis:vis struct $BitFlags:ident: $T:ty {\n            $(\n                $(#[$inner:ident $($args:tt)*])*\n                const $Flag:ident = $value:expr;\n            )*\n        }\n\n        $($t:tt)*\n    ) => { ... };\n    () => { ... };\n}"},"0:26:1997":{"id":"0:26:1997","crate_id":0,"name":"iter_names","span":{"filename":"src/traits.rs","begin":[48,4],"end":[48,44]},"visibility":"default","docs":"Iterate over the raw names and bits for enabled flag values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterNames","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:14:1735","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:55:1737":{"id":"0:55:1737","crate_id":0,"name":"external","span":{"filename":"src/external.rs","begin":[1,0],"end":[88,1]},"visibility":"crate","docs":"Conditional trait implementations for external libraries.","links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[135,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:5:1734","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sealed","id":"0:36:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:58465:2300":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"1:7718:6922":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:2268:183":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:48770:2162":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:21236:2923":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:50135:14650":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:1736:3564":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:47154:4369":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:21756:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:7084:2379":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:10771:14659":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:47529:4344":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:2480:230":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:6596:4332":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1:58469:2304":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"1:2900:2357":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:52765:22253":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:46748:10798":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:2467:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:8813:143":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:2887:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:51756:22223":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:3130:2367":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:50153:14651":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:8729:32088":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:21224:2899":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:29534:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:49540:14606":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:48634:3406":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:50189:14648":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:47093:4363":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:49330:31978":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:51911:22229":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:11664:187":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1:56948:239":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:7411:4349":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:58450:2288":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"1:48153:188":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"1:47103:4364":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:58473:2308":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"1:2767:2349":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:7408:4347":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:5610:11868":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:48292:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:2476:231":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:47174:4370":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:48229:178":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:8583:2161":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:47163:4379":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:48444:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:8591:189":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:9507:8567":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:47540:4346":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:11996:3770":{"crate_id":1,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"1:46510:32082":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:3891:10653":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1:48756:2160":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:49293:13956":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:47053:4354":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:52508:22248":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:7822:14629":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:8526:6045":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"0:0:1744":{"crate_id":0,"path":["bitflags"],"kind":"module"},"1:47510:4340":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:50788:15142":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:49309:13955":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:50003:8566":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:4258:3393":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:58463:2298":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"1:48093:2223":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"1:50107:8560":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:46451:2365":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:58457:2294":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"1:47145:4368":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:8536:131":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:3302:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:50268:14653":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:56987:239":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:4042:3399":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:8848:13953":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:46341:193":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:11832:106":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:4679:31491":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:47032:4353":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:50992:15395":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"1:53391:22260":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:46742:10698":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:2218:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:50724:14626":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:47207:4372":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:52309:22242":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:29606:29696":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"0:48:1744":{"crate_id":0,"path":["bitflags","bitflags"],"kind":"macro"},"1:58460:2295":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"1:20026:32186":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:53533:22261":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:52065:22235":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:2645:214":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"1:47216:4373":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:6549:11901":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:2816:2354":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:58453:2290":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"1:21363:2900":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:3353:6893":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:58468:2303":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"1:49020:130":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:50433:14700":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:2826:2099":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:50259:14644":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:48406:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:51778:22224":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:4181:3386":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:22386:2897":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:10075:8576":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:21259:2998":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:10575:8555":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:9314:8562":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"1:49117:6049":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:49961:14641":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:20402:2136":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:11092:14695":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:2741:2217":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:46517:31518":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:11689:12896":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:54014:20673":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:3599:2223":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:47492:4336":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:2834:2355":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:58454:2291":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"1:46927:11293":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:47113:4365":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:48777:2163":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:48161:205":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:11741:31468":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:52163:22238":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:21375:2904":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:47485:4335":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:46829:11171":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:49059:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:58475:2310":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"1:2788:2102":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:8593:2934":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:51981:22232":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:8799:139":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:6987:4351":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:54025:20674":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:2561:127":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:9562:8560":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:47284:4377":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:4332:3265":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:29548:29695":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:8309:13879":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:56961:239":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:56935:239":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:53845:22265":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:6502:4361":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:50481:14701":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:58466:2301":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"1:11637:31467":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:54104:20679":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:50963:156":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:2656:219":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:50700:14620":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:49765:8559":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:39262:3150":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:10185:31447":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:56974:239":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:47519:4342":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:58472:2307":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"1:56909:239":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:21657:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:50277:14652":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:2547:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:11616:12895":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:8141:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:20948:2136":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:49853:8574":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:9396:8563":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:4186:3387":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:47197:4371":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:8589:2163":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:19988:32137":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:7020:133":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:50907:190":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"1:4355:3396":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:10810:14658":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:50570:14705":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:49348:31173":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:50980:15398":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:3151:2369":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:47131:11866":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:46882:11175":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:10794:14656":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:20685:29166":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:47002:11288":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:20274:2136":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:53721:22263":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:46852:11172":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:48144:12587":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:19973:32137":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:21921:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:11954:15396":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:51880:22228":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:58461:2296":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"1:20690:29189":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:3140:227":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:11041:14631":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:48254:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:54119:20680":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:2273:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:58462:2297":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"1:6809:3385":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:2473:132":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:53929:22267":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:50712:14623":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:50035:14647":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:52477:22247":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:53001:22257":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:47062:4362":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:3365:6897":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:48996:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"1:53643:22262":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:2310:184":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:20426:2136":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:46939:11383":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:52287:22241":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:2653:3256":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:20245:29160":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:39302:9249":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"1:21184:31805":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:46490:6891":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:48368:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:9469:8566":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:46769:11234":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:50416:14699":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:51710:22221":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:58470:2305":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1:46524:3393":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"1:9434:8579":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:20282:29164":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:49133:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"1:20007:32184":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:8585:2160":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:48220:2223":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:52141:22237":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:48068:2109":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"1:1750:8891":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:52531:22249":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:51862:22227":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:50387:14693":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:58464:2299":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"1:49318:143":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:52000:22233":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:21147:2971":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:29472:3282":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:52211:22239":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:48520:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:2795:2096":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:20233:2136":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:49866:8570":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:53783:22264":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:4303:3394":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:53985:20670":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:4312:3395":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:50284:11173":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:5366:4367":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"3:0:2334":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:49793:8568":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:50508:14702":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:50293:10698":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:2915:2359":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:46483:2368":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:2215:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:50302:11170":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:2830:2101":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:52847:22254":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:50950:15233":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:21723:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:56552:29198":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:51963:22231":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:20407:29161":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:4072:3400":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:3219:2375":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:29312:2692":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:20435:29165":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:2464:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:21822:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:6983:4352":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:21888:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:46325:195":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:51666:22219":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:53891:22266":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:46310:2364":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:49814:8575":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:47269:4376":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:46875:11174":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:21094:2913":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:49544:8585":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:11603:135":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:4112:3383":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:9265:1757":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:50613:14634":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:58467:2302":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"1:20854:32140":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:52971:22256":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:50053:14646":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:49885:8571":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:2974:2363":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:2970:2362":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:47075:4355":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:7024:148":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:49029:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:2805:2100":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:20433:29167":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:11035:14632":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:2304:177":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:46785:11178":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:6416:2248":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:21987:2902":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:20028:32189":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:2709:2378":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:2431:2136":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:3951:10704":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:2659:222":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:2238:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:46889:11176":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:58471:2306":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"1:49714:14269":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3939:10703":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:39298:2150":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1:50207:14649":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:52018:22234":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:50249:14645":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:47501:4338":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:52333:22243":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:49047:109":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:10559:8553":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:58283:31982":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:54089:20678":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:25196:2898":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:48085:5909":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1:2921:2361":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:47012:11289":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:54066:20677":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:47122:4366":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:39311:3260":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:20005:32188":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:47183:4357":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:49943:14638":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:47258:4359":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:46846:10698":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:50736:15139":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:4248:3392":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:49875:8573":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:54051:20676":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:48102:6915":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"1:7061:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:20276:29162":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:53994:20671":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:4177:202":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"1:52689:22251":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:46821:11170":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:46385:197":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:21041:2910":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:9576:8565":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:50708:14622":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:7033:2221":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:2911:2358":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:1635:571":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:51686:22220":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:21168:2927":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:54040:20675":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:2652:2117":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:7415:4350":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:51732:22222":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:11247:111":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:29512:3283":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:46429:198":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:50545:14703":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:2952:2372":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:20323:29165":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:29506:3002":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:46365:194":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:7717:6923":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:20194:29170":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:47248:4375":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:50239:14643":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1:3986:10795":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:21276:2999":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:48330:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:3157:2371":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:52111:22236":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:8853:13954":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:1551:10653":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:2757:2348":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:10108:8577":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:52257:22240":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:11873:200":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"1:48135:6920":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:46955:11292":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:46224:2376":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:0:481":{"crate_id":1,"path":["core"],"kind":"module"},"1:6749:3153":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:49895:8572":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:3182:2374":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:2763:2347":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:21789:2901":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:46263:2373":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:21624:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:50716:14624":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:9357:8578":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:2918:2360":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:53967:22268":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:29712:29697":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:49301:31779":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:10734:14657":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:50732:14628":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:46407:196":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:4705:767":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:48077:1757":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:11842:15230":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:46908:11177":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:48482:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:38106:3769":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:1824:3398":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:48204:1757":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"1:58456:2293":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"1:2736:2344":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:21251:2978":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:21349:2903":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:2657:108":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:56922:239":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:50089:8564":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:2783:2352":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:47233:4374":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:53035:22258":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:6797:11600":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:51840:22226":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:2775:2351":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:2722:3262":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1:21690:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:8587:2162":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:21297:2990":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:58449:2287":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"1:49340:31174":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:49774:8557":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:2779:2350":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:9590:8561":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:20220:29171":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:50720:14625":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:9108:2136":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:49971:14640":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:50755:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:9548:8564":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:52735:22252":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:49929:14639":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:48596:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:21342:3000":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:48558:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:50580:14706":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:2751:2345":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:2141:572":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:54142:20681":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:8581:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"2:223:205":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:50776:15141":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:21855:165":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:47084:4356":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:46569:10647":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:50593:14633":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:8304:13878":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:5831:4380":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:58262:31971":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:49081:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:2746:2346":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:52611:22250":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:3145:134":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:3167:10237":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:0:429":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"1:2800:2098":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:49014:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:51941:22230":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:7138:155":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:2771:2219":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:14:2239":{"crate_id":1,"path":["core","write"],"kind":"macro"},"1:52379:22245":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:58448:2286":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1:4:976":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:9118:216":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:53185:22259":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:10982:2896":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:52355:22244":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:49985:8562":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:4658:11287":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:58455:2292":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"1:48763:2161":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:19960:3769":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:11046:14630":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:49840:4353":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:11026:14629":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:52925:22255":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:8576:111":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:2655:220":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:2839:2356":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:8595:6050":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:54181:20682":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:49955:14642":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:48212:5909":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:46799:11180":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:1918:3566":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:50704:14621":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:50728:14627":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:8146:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:50889:200":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:48017:176":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1:3963:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:2822:2097":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:58451:2289":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"1:1759:3563":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:46868:11173":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:38089:178":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:21200:2960":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:46757:11179":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:50365:14692":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:21313:3001":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"1:7719:6921":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:49783:8558":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:49803:8569":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:58474:2309":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"1:5443:4328":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:20157:29169":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:54005:20672":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:20950:29163":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:3067:2366":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:2810:2353":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:47299:4378":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:2432:2691":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:9289:5909":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:1642:3279":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"1:2470:146":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:52430:22246":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:50899:12893":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:46922:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:2664:3257":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:46809:11181":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:51810:22225":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:50942:15232":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:21954:164":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:10845:8578":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:50559:14704":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:20842:8556":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:50402:14696":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"}},"external_crates":{"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":23}