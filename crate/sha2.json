{"root":"0:0:1648","crate_version":"0.10.6","includes_private":false,"index":{"1:11454:17244":{"id":"1:11454:17244","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11375:11107":{"id":"1:11375:11107","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"6:12374:1844","`None`":"1:48048:174","self::pattern":"1:11035:12108"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:7731:12151-0:132:1623":{"id":"a:1:7731:12151-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:7731:12151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[97,0],"end":[99,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["block_size"],"trait":{"name":"BlockSizeUser","id":"22:22:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:1772"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11429:63293":{"id":"1:11429:63293","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11439:62107":{"id":"1:11439:62107","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11428:63292":{"id":"1:11428:63292","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5094:63943":{"id":"5:5094:63943","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1918","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6725:12582","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1918","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6725:12582","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11383:11731":{"id":"1:11383:11731","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"1:11389:62098","self::pattern":"1:11035:12108","`DoubleEndedIterator`":"1:7075:119","prim@char":"6:12374:1844","str::split_whitespace":"1:11361:58763"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:50014:5253","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11355:63281":{"id":"1:11355:63281","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"6:12380:1849","str::slice_unchecked":"1:11354:63280","crate::ops::IndexMut":"1:2995:12094"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:71:1776":{"id":"0:71:1776","crate_id":0,"name":"OutputSize","span":{"filename":"src/core_api.rs","begin":[114,4],"end":[114,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UTerm","id":"24:6363:5198","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B1","id":"24:5724:5202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"1:11364:63282":{"id":"1:11364:63282","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:50278:12358","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11333":{"id":"1:11333","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:10598:1348","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:11334:785","1:11335:11069","1:11336:63275","1:11337:63276","1:11339:63277","1:11342:63278","1:11343:63279","1:11344:307","1:11345:5805","1:11346:5811","1:11348:17055","1:11350:17056","1:11352:17057","1:11354:63280","1:11355:63281","1:11356:62088","1:11357:62089","1:11358:12382","1:11359:12139","1:11360:12657","1:11361:58763","1:11362:58755","1:11363:13284","1:11364:63282","1:11365:58759","1:11366:58417","1:11369:62104","1:11372:62105","1:11375:11107","1:11379:11068","1:11383:11731","1:11386:58753","1:11389:62098","1:11392:63283","1:11395:63284","1:11398:62100","1:11401:62102","1:11404:63285","1:11407:63286","1:11410:1872","1:11413:63287","1:11416:63288","1:11419:63289","1:11422:11836","1:11424:63290","1:11426:63291","1:11428:63292","1:11429:63293","1:11430:63294","1:11433:63295","1:11436:62106","1:11439:62107","1:11442:63296","1:11445:63297","1:11448:63298","1:11451:12024","1:11453:12562","1:11454:17244","1:11455:17245","1:11456:17246","1:11457:63299","1:11459:12736","1:11460:63300"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:3325-0:132:1623":{"id":"b:1:3325-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:5660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:1:2517-0:127:1622":{"id":"b:1:2517-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2520:11062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:11350:17056":{"id":"1:11350:17056","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:11453:12562":{"id":"1:11453:12562","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[152,0],"end":[157,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:103:1647":{"id":"0:103:1647","crate_id":0,"name":"Sha512","span":{"filename":"src/lib.rs","begin":[95,0],"end":[95,84]},"visibility":"public","docs":"SHA-512 hasher.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoreWrapper","id":"4:492:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CtVariableCoreWrapper","id":"4:473:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"U64","id":"24:2616:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"OidSha512","id":"0:393:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:99:1639":{"id":"0:99:1639","crate_id":0,"name":"Sha256","span":{"filename":"src/lib.rs","begin":[87,0],"end":[87,84]},"visibility":"public","docs":"SHA-256 hasher.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoreWrapper","id":"4:492:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CtVariableCoreWrapper","id":"4:473:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"U32","id":"24:2520:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"OidSha256","id":"0:361:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"1:11360:12657":{"id":"1:11360:12657","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:50000:11479","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11346:5811":{"id":"1:11346:5811","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:48048:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:2666:215-0:127:1622":{"id":"a:1:2666:215-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:11416:63288":{"id":"1:11416:63288","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"1:7075:119","prim@char":"6:12374:1844","self::pattern":"1:11035:12108","str::rmatch_indices":"1:11419:63289"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:50164:12353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:671-0:127:1622":{"id":"b:5:671-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:12726","5:674:57963","5:675:57964"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:11334:785":{"id":"1:11334:785","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"6:12374:1844"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11337:63276":{"id":"1:11337:63276","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11451:12024":{"id":"1:11451:12024","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"1:10996:12013","FromStr::Err":"1:10997:125"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"1:10996:12013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:10996:12013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3327:1436":{"id":"1:3327:1436","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:46519:12057","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:24:1171-0:127:1622":{"id":"b:24:1171-0:127:1622","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.16.0/src/type_operators.rs","begin":[34,0],"end":[34,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Same","id":"24:1168:5351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:1173:181"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5095:11019":{"id":"5:5095:11019","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11410:1872":{"id":"1:11410:1872","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"1:7075:119","self::pattern":"1:11035:12108","prim@char":"6:12374:1844","str::matches":"1:11410:1872"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:50218:12356","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11404:63285":{"id":"1:11404:63285","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11336:63275":{"id":"1:11336:63275","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74:911":{"id":"0:74:911","crate_id":0,"name":"new","span":{"filename":"src/core_api.rs","begin":[121,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["output_size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidOutputSize","id":"4:522:1766","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,34],"end":[75,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"core_api::Sha512VarCore","name":"Sha512VarCore","id":"0:132:1623","glob":false}},"1:2536:1422":{"id":"1:2536:1422","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2530:126":{"id":"1:2530:126","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:136:410":{"id":"0:136:410","crate_id":0,"name":"clone","span":{"filename":"src/core_api.rs","begin":[89,9],"end":[89,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:50":{"id":"0:50","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[33,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpdateCore","id":"4:330:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:51:1774"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2241-0:127:1622":{"id":"b:1:2241-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:5660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2243:57959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:11392:63283":{"id":"1:11392:63283","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:11035:12108","str::rsplit_terminator":"1:11395:63284","prim@char":"6:12374:1844","str::split":"1:11383:11731","`DoubleEndedIterator`":"1:7075:119"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:50064:12349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:67:1773":{"id":"0:67:1773","crate_id":0,"name":"BufferKind","span":{"filename":"src/core_api.rs","begin":[102,4],"end":[102,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Eager","id":"25:77:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:127:1622":{"id":"0:127:1622","crate_id":0,"name":"Sha256VarCore","span":{"filename":"src/core_api.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"Core block-level SHA-256 hasher with variable output size.\n\nSupports initialization only for 28 and 32 byte output sizes,\ni.e. 224 and 256 bits respectively.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:2730:5661-0:127:1622","a:1:2666:215-0:127:1622","a:1:2680:223-0:127:1622","a:1:7731:12151-0:127:1622","a:1:7732:12149-0:127:1622","b:1:2532-0:127:1622","b:1:2521-0:127:1622","b:1:2241-0:127:1622","b:1:2527-0:127:1622","b:1:2517-0:127:1622","b:1:2238-0:127:1622","b:1:3325-0:127:1622","b:5:671-0:127:1622","b:24:1171-0:127:1622","0:130","0:45","0:46","0:48","0:50","0:52","0:54","0:59","0:61"]}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[101,0],"end":[103,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BufferKindUser","id":"4:332:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:1773"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:51:1774":{"id":"0:51:1774","crate_id":0,"name":"update_blocks","span":{"filename":"src/core_api.rs","begin":[35,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["blocks",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Block","id":"22:12:1754","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:53:1776":{"id":"0:53:1776","crate_id":0,"name":"OutputSize","span":{"filename":"src/core_api.rs","begin":[42,4],"end":[42,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UTerm","id":"24:6363:5198","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B1","id":"24:5724:5202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:75:1782":{"id":"0:75:1782","crate_id":0,"name":"finalize_variable_core","span":{"filename":"src/core_api.rs","begin":[134,4],"end":[142,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buffer",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Buffer","id":"4:328:1756","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}}],["out",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Output","id":"22:16:181","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11398:62100":{"id":"1:11398:62100","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844","str::rsplitn":"1:11401:62102"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:50118:5255","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11357:62089":{"id":"1:11357:62089","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:11356:62088"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11352:17057":{"id":"1:11352:17057","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:11445:63297":{"id":"1:11445:63297","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"6:12374:1844","self::pattern":"1:11035:12108"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11335:11069":{"id":"1:11335:11069","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2521-0:127:1622":{"id":"b:1:2521-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5110:63947":{"id":"5:5110:63947","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:6980:219","`Box<str>`":"5:276:1918"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1918","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6725:12582","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:673:12726":{"id":"5:673:12726","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:24:1171-0:132:1623":{"id":"b:24:1171-0:132:1623","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.16.0/src/type_operators.rs","begin":[34,0],"end":[34,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Same","id":"24:1168:5351","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["24:1173:181"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:101:1643":{"id":"0:101:1643","crate_id":0,"name":"Sha512_256","span":{"filename":"src/lib.rs","begin":[91,0],"end":[91,92]},"visibility":"public","docs":"SHA-512/256 hasher.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoreWrapper","id":"4:492:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CtVariableCoreWrapper","id":"4:473:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"U32","id":"24:2520:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"OidSha512_256","id":"0:441:1634","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"1:11379:11068":{"id":"1:11379:11068","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"1:11035:12108","`None`":"1:48048:174","prim@char":"6:12374:1844"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11362:58755":{"id":"1:11362:58755","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:11361:58763"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:50297:12360","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11389:62098":{"id":"1:11389:62098","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"1:7075:119","self::pattern":"1:11035:12108","prim@char":"6:12374:1844","str::split":"1:11383:11731"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:50032:5257","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59":{"id":"0:59","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[71,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AlgorithmName","id":"22:46:1753","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:60:1795"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11424:63290":{"id":"1:11424:63290","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11422:11836":{"id":"1:11422:11836","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56:911":{"id":"0:56:911","crate_id":0,"name":"new","span":{"filename":"src/core_api.rs","begin":[49,4],"end":[57,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["output_size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidOutputSize","id":"4:522:1766","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[23,0],"end":[23,36]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"HashMarker","id":"4:357:1765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:6":{"id":"0:6","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,23],"end":[54,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"digest::Digest","name":"Digest","id":"4:358:1603","glob":false}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[78,0],"end":[83,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:8590:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:62:651"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11361:58763":{"id":"1:11361:58763","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:11362:58755"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:50288:12359","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5":{"id":"0:5","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,17],"end":[54,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"digest","name":"digest","id":"4:0:1602","glob":false}},"0:102:1645":{"id":"0:102:1645","crate_id":0,"name":"Sha384","span":{"filename":"src/lib.rs","begin":[93,0],"end":[93,84]},"visibility":"public","docs":"SHA-384 hasher.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoreWrapper","id":"4:492:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CtVariableCoreWrapper","id":"4:473:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"U48","id":"24:2568:1611","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"OidSha384","id":"0:377:1626","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[145,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AlgorithmName","id":"22:46:1753","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:1795"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5113:17242":{"id":"5:5113:17242","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:11456:17246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11386:58753":{"id":"1:11386:58753","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:10859:5270","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2532-0:127:1622":{"id":"b:1:2532-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2535:126","1:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:131:410":{"id":"0:131:410","crate_id":0,"name":"clone","span":{"filename":"src/core_api.rs","begin":[17,9],"end":[17,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:55:1777":{"id":"0:55:1777","crate_id":0,"name":"TRUNC_SIDE","span":{"filename":"src/core_api.rs","begin":[46,4],"end":[46,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"TruncSide","id":"4:512:1759","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"TruncSide::Left"}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[17,9],"end":[17,14]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:131:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:7732:12149-0:132:1623":{"id":"a:1:7732:12149-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:7732:12149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:62:651":{"id":"0:62:651","crate_id":0,"name":"fmt","span":{"filename":"src/core_api.rs","begin":[80,4],"end":[82,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11365:58759":{"id":"1:11365:58759","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:50306:12361","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11354:63280":{"id":"1:11354:63280","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"1:2991:12095","`str`":"6:12380:1849","str::slice_mut_unchecked":"1:11355:63281"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:11401:62102":{"id":"1:11401:62102","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844","str::splitn":"1:11398:62100"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:50136:5251","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11372:62105":{"id":"1:11372:62105","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11433:63295":{"id":"1:11433:63295","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"6:12374:1844","self::pattern":"1:11035:12108"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5109:63946":{"id":"5:5109:63946","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11448:63298":{"id":"1:11448:63298","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"6:12374:1844","self::pattern":"1:11035:12108"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11456:17246":{"id":"1:11456:17246","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11342:63278":{"id":"1:11342:63278","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:10603:12531"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2532-0:132:1623":{"id":"b:1:2532-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2535:126","1:2536:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:11436:62106":{"id":"1:11436:62106","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11366:58417":{"id":"1:11366:58417","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2517-0:132:1623":{"id":"b:1:2517-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:2491:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2520:11062"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2730:5661-0:127:1622":{"id":"a:1:2730:5661-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2730:5661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2531:1423":{"id":"1:2531:1423","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:48190:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11413:63287":{"id":"1:11413:63287","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"6:12374:1844","self::pattern":"1:11035:12108","`DoubleEndedIterator`":"1:7075:119","str::matches":"1:11410:1872"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:50236:12357","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132:1623":{"id":"0:132:1623","crate_id":0,"name":"Sha512VarCore","span":{"filename":"src/core_api.rs","begin":[90,0],"end":[93,1]},"visibility":"public","docs":"Core block-level SHA-512 hasher with variable output size.\n\nSupports initialization only for 28, 32, 48, and 64 byte output sizes,\ni.e. 224, 256, 384, and 512 bits respectively.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:2730:5661-0:132:1623","a:1:2666:215-0:132:1623","a:1:2680:223-0:132:1623","a:1:7731:12151-0:132:1623","a:1:7732:12149-0:132:1623","b:1:2532-0:132:1623","b:1:2521-0:132:1623","b:1:2241-0:132:1623","b:1:2527-0:132:1623","b:1:2517-0:132:1623","b:1:2238-0:132:1623","b:1:3325-0:132:1623","b:5:671-0:132:1623","b:24:1171-0:132:1623","0:135","0:63","0:64","0:66","0:68","0:70","0:72","0:77","0:79"]}},"1:11442:63296":{"id":"1:11442:63296","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"6:12374:1844","self::pattern":"1:11035:12108"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:675:57964":{"id":"5:675:57964","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:1773":{"id":"0:49:1773","crate_id":0,"name":"BufferKind","span":{"filename":"src/core_api.rs","begin":[30,4],"end":[30,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Eager","id":"25:77:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:1:2666:215-0:132:1623":{"id":"a:1:2666:215-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:2666:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[117,0],"end":[143,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"VariableOutputCore","id":"4:341:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:73:1777","0:74:911","0:75:1782"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:47:1772":{"id":"0:47:1772","crate_id":0,"name":"BlockSize","span":{"filename":"src/core_api.rs","begin":[26,4],"end":[26,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UTerm","id":"24:6363:5198","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B1","id":"24:5724:5202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"1:11358:12382":{"id":"1:11358:12382","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"6:12374:1844"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:49984:12344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:2680:223-0:127:1622":{"id":"a:1:2680:223-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:11345:5805":{"id":"1:11345:5805","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"6:12391:1858"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[89,9],"end":[89,14]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:410"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2241-0:132:1623":{"id":"b:1:2241-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:5660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2243:57959"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5098:63944":{"id":"5:5098:63944","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80:651":{"id":"0:80:651","crate_id":0,"name":"fmt","span":{"filename":"src/core_api.rs","begin":[154,4],"end":[156,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:73:1777":{"id":"0:73:1777","crate_id":0,"name":"TRUNC_SIDE","span":{"filename":"src/core_api.rs","begin":[118,4],"end":[118,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"TruncSide","id":"4:512:1759","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"TruncSide::Left"}},"1:11343:63279":{"id":"1:11343:63279","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:11455:17245":{"id":"1:11455:17245","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11426:63291":{"id":"1:11426:63291","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[29,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BufferKindUser","id":"4:332:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:49:1773"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:60:1795":{"id":"0:60:1795","crate_id":0,"name":"write_alg_name","span":{"filename":"src/core_api.rs","begin":[73,4],"end":[75,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5093":{"id":"5:5093","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5004:1348","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5094:63943","5:5095:11019","5:5098:63944","5:5101:63945","5:5109:63946","5:5110:63947","5:5111:11504","5:5112:17241","5:5113:17242"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11430:63294":{"id":"1:11430:63294","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"6:12374:1844","self::pattern":"1:11035:12108"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:11060:12107","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11344:307":{"id":"1:11344:307","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:11345:5805","`u8`":"6:12391:1858"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2527-0:127:1622":{"id":"b:1:2527-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2530:126","1:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:100:1641":{"id":"0:100:1641","crate_id":0,"name":"Sha512_224","span":{"filename":"src/lib.rs","begin":[89,0],"end":[89,92]},"visibility":"public","docs":"SHA-512/224 hasher.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoreWrapper","id":"4:492:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CtVariableCoreWrapper","id":"4:473:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"U28","id":"24:2508:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"OidSha512_224","id":"0:425:1632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"1:11457:63299":{"id":"1:11457:63299","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:4471:63299"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:50313:12362","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11356:62088":{"id":"1:11356:62088","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:11357:62089"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5111:11504":{"id":"5:5111:11504","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[95,0],"end":[95,36]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"HashMarker","id":"4:357:1765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11363:13284":{"id":"1:11363:13284","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:50268:11481","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11339:63277":{"id":"1:11339:63277","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:11337:63276"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11407:63286":{"id":"1:11407:63286","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,19],"end":[75,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"core_api::Sha256VarCore","name":"Sha256VarCore","id":"0:127:1622","glob":false}},"b:1:2521-0:132:1623":{"id":"b:1:2521-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:2494:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2523:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:11395:63284":{"id":"1:11395:63284","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"6:12374:1844","str::split_terminator":"1:11392:63283","str::split":"1:11383:11731","self::pattern":"1:11035:12108"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:50082:12350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11369:62104":{"id":"1:11369:62104","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"6:12374:1844","self::pattern":"1:11035:12108"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11359:12139":{"id":"1:11359:12139","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"6:12374:1844"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:49990:12345","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:1637":{"id":"0:98:1637","crate_id":0,"name":"Sha224","span":{"filename":"src/lib.rs","begin":[85,0],"end":[85,84]},"visibility":"public","docs":"SHA-224 hasher.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"CoreWrapper","id":"4:492:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CtVariableCoreWrapper","id":"4:473:1615","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"U28","id":"24:2508:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"OidSha224","id":"0:409:1630","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[45,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"VariableOutputCore","id":"4:341:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:55:1777","0:56:911","0:57:1782"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:1:2238-0:132:1623":{"id":"b:1:2238-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:5660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2240:1829"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:2680:223-0:132:1623":{"id":"a:1:2680:223-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:2680:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[41,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["output_size"],"trait":{"name":"OutputSizeUser","id":"22:33:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:53:1776"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:1:2730:5661-0:132:1623":{"id":"a:1:2730:5661-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:2730:5661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[113,0],"end":[115,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["output_size"],"trait":{"name":"OutputSizeUser","id":"22:33:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:1776"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11419:63289":{"id":"1:11419:63289","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:11035:12108","prim@char":"6:12374:1844","`DoubleEndedIterator`":"1:7075:119","str::match_indices":"1:11416:63288"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:50182:12354","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:11040:12109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:11055:12112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2240:1829":{"id":"1:2240:1829","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3325-0:127:1622":{"id":"b:1:3325-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:5660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3323:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3327:1436"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:11459:12736":{"id":"1:11459:12736","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:4472:12736"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:50322:12363","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5101:63945":{"id":"5:5101:63945","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6980:219"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:65:1772":{"id":"0:65:1772","crate_id":0,"name":"BlockSize","span":{"filename":"src/core_api.rs","begin":[98,4],"end":[98,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UInt","id":"24:6316:5197","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"UTerm","id":"24:6363:5198","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B1","id":"24:5724:5202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"B0","id":"24:5702:5201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:57:1782":{"id":"0:57:1782","crate_id":0,"name":"finalize_variable_core","span":{"filename":"src/core_api.rs","begin":[60,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buffer",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Buffer","id":"4:328:1756","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}}],["out",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Output","id":"22:16:181","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:7732:12149-0:127:1622":{"id":"a:1:7732:12149-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:7732:12149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:2520:11062":{"id":"1:2520:11062","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:2494:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2523:669":{"id":"1:2523:669","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:11460:63300":{"id":"1:11460:63300","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:4469:63300"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:50331:12364","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:674:57963":{"id":"5:674:57963","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2243:57959":{"id":"1:2243:57959","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:78:1795":{"id":"0:78:1795","crate_id":0,"name":"write_alg_name","span":{"filename":"src/core_api.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:8550:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:8539:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:1173:181":{"id":"24:1173:181","crate_id":24,"name":"Output","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.16.0/src/type_operators.rs","begin":[35,4],"end":[35,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:5:671-0:132:1623":{"id":"b:5:671-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:12726","5:674:57963","5:675:57964"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:69:1774":{"id":"0:69:1774","crate_id":0,"name":"update_blocks","span":{"filename":"src/core_api.rs","begin":[107,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["blocks",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Block","id":"22:12:1754","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1648":{"id":"0:0:1648","crate_id":0,"name":"sha2","span":{"filename":"src/lib.rs","begin":[1,0],"end":[95,84]},"visibility":"public","docs":"An implementation of the [SHA-2][1] cryptographic hash algorithms.\n\nThere are 6 standard algorithms specified in the SHA-2 standard: [`Sha224`],\n[`Sha256`], [`Sha512_224`], [`Sha512_256`], [`Sha384`], and [`Sha512`].\n\nAlgorithmically, there are only 2 core algorithms: SHA-256 and SHA-512.\nAll other algorithms are just applications of these with different initial\nhash values, and truncated to different digest bit lengths. The first two\nalgorithms in the list are based on SHA-256, while the last three on SHA-512.\n\n# Usage\n\n```rust\nuse hex_literal::hex;\nuse sha2::{Sha256, Sha512, Digest};\n\n// create a Sha256 object\nlet mut hasher = Sha256::new();\n\n// write input message\nhasher.update(b\"hello world\");\n\n// read hash digest and consume hasher\nlet result = hasher.finalize();\n\nassert_eq!(result[..], hex!(\"\n    b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9\n\")[..]);\n\n// same for Sha512\nlet mut hasher = Sha512::new();\nhasher.update(b\"hello world\");\nlet result = hasher.finalize();\n\nassert_eq!(result[..], hex!(\"\n    309ecc489c12d6eb4cc40f50c902f2b4d0ed77ee511a7c7a9bcd3ca86d4cd86f\n    989dd35bc5ff499670da34255b45b0cfd830e81f605dcf7dc5542e93ae9cd76f\n\")[..]);\n```\n\nAlso see [RustCrypto/hashes][2] readme.\n\n[1]: https://en.wikipedia.org/wiki/SHA-2\n[2]: https://github.com/RustCrypto/hashes","links":{"`Sha512`":"0:103:1647","`Sha256`":"0:99:1639","`Sha512_224`":"0:100:1641","`Sha384`":"0:102:1645","`Sha224`":"0:98:1637","`Sha512_256`":"0:101:1643"},"attrs":["#![no_std]","#![doc(html_logo_url =\n\"https://raw.githubusercontent.com/RustCrypto/media/6ee8e381/logo.svg\",\nhtml_favicon_url =\n\"https://raw.githubusercontent.com/RustCrypto/media/6ee8e381/logo.svg\")]","#![warn(missing_docs, rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:5","0:6","0:96","0:97","0:98:1637","0:99:1639","0:100:1641","0:101:1643","0:102:1645","0:103:1647"],"is_stripped":false}},"1:2535:126":{"id":"1:2535:126","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:39291:5972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:1:2238-0:127:1622":{"id":"b:1:2238-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:2673:5660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2240:1829"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:11348:17055":{"id":"1:11348:17055","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:48048:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:48046:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:9132:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[105,0],"end":[111,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpdateCore","id":"4:330:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:1774"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5112:17241":{"id":"5:5112:17241","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:11455:17245"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6980:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2527-0:132:1623":{"id":"b:1:2527-0:132:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:2501:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha512VarCore","id":"0:132:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2530:126","1:2531:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:1:7731:12151-0:127:1622":{"id":"a:1:7731:12151-0:127:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:7731:12151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/core_api.rs","begin":[25,0],"end":[27,1]},"visibility":{"restricted":{"parent":"0:17:1613","path":"::core_api"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["block_size"],"trait":{"name":"BlockSizeUser","id":"22:22:1755","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Sha256VarCore","id":"0:127:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:47:1772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:1825:12153":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"18:12349:14559":{"crate_id":18,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:2383:12951":{"crate_id":6,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:48663:10974":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:9590:5256":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:8717:13010":{"crate_id":6,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"18:9764:16486":{"crate_id":18,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:29635:12431":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"5:1376:12647":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:9913:12946":{"crate_id":6,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:46394:194":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:1604:5249":{"crate_id":6,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:6007:13015":{"crate_id":6,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:20416:11770":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"5:1971:12674":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"18:12307:14552":{"crate_id":18,"path":["object","macho","Nlist32"],"kind":"struct"},"24:1198:5312":{"crate_id":24,"path":["typenum","type_operators","PartialDiv"],"kind":"trait"},"1:53874:12255":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:5009:12761":{"crate_id":6,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:4740:14998":{"crate_id":17,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:7907:13445":{"crate_id":17,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:8420:11478":{"crate_id":6,"path":["std","io","Take"],"kind":"struct"},"5:620:16787":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:20868:60786":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:39340:11030":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:2762:13623":{"crate_id":17,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:6869:12583":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:4452:13054":{"crate_id":6,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"18:11684:14442":{"crate_id":18,"path":["object","macho","Section64"],"kind":"struct"},"6:11900:12989":{"crate_id":6,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"18:13536:14944":{"crate_id":18,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:50182:12354":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:3845:14980":{"crate_id":17,"path":["gimli","constants","DwTag"],"kind":"struct"},"7:554:15349":{"crate_id":7,"path":["libc","unix","iovec"],"kind":"struct"},"18:8110:51353":{"crate_id":18,"path":["object","common","AddressSize"],"kind":"enum"},"18:13024:14790":{"crate_id":18,"path":["object","pe","ImageImportByName"],"kind":"struct"},"15:221:15192":{"crate_id":15,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:12390:1857":{"crate_id":6,"path":["std","i128"],"kind":"primitive"},"7:6524:16188":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:3269:11498":{"crate_id":6,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"21:79:11573":{"crate_id":21,"path":["blobby","Blob3Iterator"],"kind":"struct"},"18:10466:16490":{"crate_id":18,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:9597:162":{"crate_id":6,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"18:8418:13746":{"crate_id":18,"path":["object","common","SectionFlags"],"kind":"enum"},"1:51869:12283":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"7:560:15352":{"crate_id":7,"path":["libc","unix","pollfd"],"kind":"struct"},"17:7825:13444":{"crate_id":17,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"18:386:16677":{"crate_id":18,"path":["object","read","any","Segment"],"kind":"struct"},"1:48806:11139":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:6779:11074":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:6476:14004":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"13:810:12666":{"crate_id":13,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:1301:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"5:276:1918":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:6139:13413":{"crate_id":17,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:21:661":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"1:2800:12053":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"18:12884:14753":{"crate_id":18,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:4094:13990":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"18:12756:14724":{"crate_id":18,"path":["object","pe","Guid"],"kind":"struct"},"1:50642:12452":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"7:1580:15425":{"crate_id":7,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:56977:240":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:20171:12082":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:51839:12295":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:9384:12891":{"crate_id":6,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:5085:12752":{"crate_id":6,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:46828:12555":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:50064:12349":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:2244:12677":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:8145:11492":{"crate_id":6,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:52794:12292":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"18:10270:16712":{"crate_id":18,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"18:10283:16713":{"crate_id":18,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:11659:13985":{"crate_id":6,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"24:924:11812":{"crate_id":24,"path":["typenum","private","PrivateCmp"],"kind":"trait"},"6:5315:16757":{"crate_id":6,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:49058:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:6881:13430":{"crate_id":17,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:7868:12914":{"crate_id":6,"path":["std","thread","Builder"],"kind":"struct"},"6:3951:12771":{"crate_id":6,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"18:9350:13817":{"crate_id":18,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"24:1091:11831":{"crate_id":24,"path":["typenum","private","IsLessOrEqualPrivate"],"kind":"trait"},"18:13557:14947":{"crate_id":18,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:2424:13612":{"crate_id":17,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:46339:12158":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:3179:14972":{"crate_id":17,"path":["gimli","arch","AArch64"],"kind":"struct"},"4:334:5211":{"crate_id":4,"path":["digest","core_api","FixedOutputCore"],"kind":"trait"},"7:4778:15821":{"crate_id":7,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:9576:5251":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"24:642:5338":{"crate_id":24,"path":["typenum","marker_traits","Integer"],"kind":"trait"},"6:1864:16754":{"crate_id":6,"path":["std","env","SplitPaths"],"kind":"struct"},"18:10625:13705":{"crate_id":18,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:628:12734":{"crate_id":6,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:2311:13319":{"crate_id":17,"path":["gimli","common","Register"],"kind":"struct"},"1:49924:5263":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:50431:12116":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:774:139":{"crate_id":6,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:4836:12876":{"crate_id":6,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:1348:5250":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:51715:16438":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:4503:12998":{"crate_id":6,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:29741:12432":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"7:6352:16112":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:6734:11074":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:46838:12556":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:7615:13349":{"crate_id":17,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:50765:12462":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:3152:12974":{"crate_id":6,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:2726:12726":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"6:1626:12640":{"crate_id":6,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"5:3004:12645":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:3912:11461":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"7:6953:16212":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"24:654:5306":{"crate_id":24,"path":["typenum","marker_traits","PowerOfTwo"],"kind":"trait"},"7:6269:16061":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"25:77:1752":{"crate_id":25,"path":["block_buffer","Eager"],"kind":"struct"},"11:0:1897":{"crate_id":11,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:3017:14116":{"crate_id":17,"path":["gimli","arch","Arm"],"kind":"struct"},"6:1637:12645":{"crate_id":6,"path":["std","collections","hash","set","Union"],"kind":"struct"},"23:163:5378":{"crate_id":23,"path":["generic_array","functional","FunctionalSequence"],"kind":"trait"},"18:12550:14619":{"crate_id":18,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:1385:12665":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:2843:11988":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"23:123:11691":{"crate_id":23,"path":["generic_array","arr","AddLength"],"kind":"trait"},"1:8595:118":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"17:7307:13441":{"crate_id":17,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"18:10546:51360":{"crate_id":18,"path":["object","read","FileKind"],"kind":"enum"},"1:9279:5249":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:3620:11074":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:2908:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:9452:13023":{"crate_id":6,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:7366:13358":{"crate_id":17,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"19:96:57760":{"crate_id":19,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:21265:16343":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:2332:13633":{"crate_id":17,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"18:13518:14938":{"crate_id":18,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:996:12868":{"crate_id":6,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:954:12585":{"crate_id":6,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"7:4737:15806":{"crate_id":7,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:2026:180":{"crate_id":6,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:20290:12085":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"18:8631:14197":{"crate_id":18,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:50082:12350":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:6679:13028":{"crate_id":6,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:49359:5927":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"13:646:5250":{"crate_id":13,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:8074:12750":{"crate_id":6,"path":["std","fs","OpenOptions"],"kind":"struct"},"10:977:13074":{"crate_id":10,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:50331:12364":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:53996:12258":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:53812:12290":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"18:10374:13776":{"crate_id":18,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"18:9458:13685":{"crate_id":18,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"18:12198:14541":{"crate_id":18,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:1123:12681":{"crate_id":6,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:52192:12291":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"7:4605:15748":{"crate_id":7,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"7:62:43729":{"crate_id":7,"path":["libc","unix","DIR"],"kind":"enum"},"1:50757:12371":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:1889:16756":{"crate_id":6,"path":["std","env","ArgsOs"],"kind":"struct"},"7:4698:15788":{"crate_id":7,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:21198:16571":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"7:4437:15688":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:51891:12287":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:49984:12344":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1:46798:12241":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"7:6375:16113":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:6638:16759":{"crate_id":6,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:3158:12976":{"crate_id":6,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"22:0:1907":{"crate_id":22,"path":["crypto_common"],"kind":"module"},"6:3155:12975":{"crate_id":6,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:9567:16318":{"crate_id":6,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"18:10332:13841":{"crate_id":18,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:5707:12836":{"crate_id":6,"path":["std","process","Command"],"kind":"struct"},"6:10750:64984":{"crate_id":6,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"13:320:13240":{"crate_id":13,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"7:4329:15659":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:2732:64087":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:5793:13405":{"crate_id":17,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:2885:13631":{"crate_id":17,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"7:5749:16009":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"19:0:1905":{"crate_id":19,"path":["memchr"],"kind":"module"},"13:387:65716":{"crate_id":13,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"18:9577:13716":{"crate_id":18,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"18:12934:14770":{"crate_id":18,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"18:11853:14463":{"crate_id":18,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:19974:11034":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"13:1065:13235":{"crate_id":13,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:7074:12586":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:7152:154":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:49832:5260":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"7:6479:16164":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:8446:150":{"crate_id":6,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"17:0:1903":{"crate_id":17,"path":["gimli"],"kind":"module"},"1:50761:12372":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:8607:11140":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"13:2178:15223":{"crate_id":13,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:9918:13981":{"crate_id":6,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"7:4354:15671":{"crate_id":7,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:6725:12582":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"18:11841:14462":{"crate_id":18,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:11060:12107":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:9562:5255":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:681:16747":{"crate_id":6,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"23:300:5382":{"crate_id":23,"path":["generic_array","sequence","Shorten"],"kind":"trait"},"18:12060:14511":{"crate_id":18,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:7784:13977":{"crate_id":6,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:50306:12361":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"7:4379:15684":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:8812:12808":{"crate_id":6,"path":["std","path","Prefix"],"kind":"enum"},"1:2939:5242":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"18:10949:14281":{"crate_id":18,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:4244:12738":{"crate_id":6,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:4597:14993":{"crate_id":17,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:54095:10967":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"18:8526:13780":{"crate_id":18,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:5644:12832":{"crate_id":6,"path":["std","process","Child"],"kind":"struct"},"18:13031:14791":{"crate_id":18,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:4764:12899":{"crate_id":6,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:2991:12095":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"23:422:5368":{"crate_id":23,"path":["generic_array","ArrayBuilder"],"kind":"struct"},"18:10385:13777":{"crate_id":18,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"21:105:11575":{"crate_id":21,"path":["blobby","Blob5Iterator"],"kind":"struct"},"17:4135:14981":{"crate_id":17,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:3088:5244":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:8297:651":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"5:1415:12668":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:20337:12086":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"24:615:5318":{"crate_id":24,"path":["typenum","marker_traits","Bit"],"kind":"trait"},"17:7404:13360":{"crate_id":17,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"24:1151:11834":{"crate_id":24,"path":["typenum","private","PrivateSquareRoot"],"kind":"trait"},"7:5861:16043":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:6101:13333":{"crate_id":17,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:9351:12887":{"crate_id":6,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:50236:12357":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:50510:12121":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4655:13007":{"crate_id":6,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:47142:12200":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"18:10796:13798":{"crate_id":18,"path":["object","read","CodeView"],"kind":"struct"},"1:20704:35694":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:21055:12402":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:11228:11472":{"crate_id":6,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"18:8441:13802":{"crate_id":18,"path":["object","common","SymbolFlags"],"kind":"enum"},"18:10350:13698":{"crate_id":18,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:47530:16595":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"13:1138:12681":{"crate_id":13,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"13:738:12665":{"crate_id":13,"path":["hashbrown","map","Values"],"kind":"struct"},"1:46918:12554":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:7545:13364":{"crate_id":17,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:4902:16105":{"crate_id":6,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:2648:13629":{"crate_id":17,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"24:5746:5199":{"crate_id":24,"path":["typenum","int","PInt"],"kind":"struct"},"6:6919:16759":{"crate_id":6,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:2485:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"19:681:13855":{"crate_id":19,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:8328:11510":{"crate_id":6,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"7:4673:15777":{"crate_id":7,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:48283:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:3084:11509":{"crate_id":6,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:2273:13598":{"crate_id":17,"path":["gimli","common","Encoding"],"kind":"struct"},"1:11703:16800":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:3972:12001":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:6836:12984":{"crate_id":6,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"18:12630:14681":{"crate_id":18,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:8611:12774":{"crate_id":6,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"19:707:12111":{"crate_id":19,"path":["memchr","memmem","Searcher"],"kind":"struct"},"4:358:1603":{"crate_id":4,"path":["digest","digest","Digest"],"kind":"trait"},"6:7873:12932":{"crate_id":6,"path":["std","thread","ThreadId"],"kind":"struct"},"19:481:13864":{"crate_id":19,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:6571:13424":{"crate_id":17,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:5678:12834":{"crate_id":6,"path":["std","process","ChildStdout"],"kind":"struct"},"1:9303:5250":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"18:10121:13742":{"crate_id":18,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"22:12:1754":{"crate_id":22,"path":["crypto_common","Block"],"kind":"typedef"},"18:11288:14355":{"crate_id":18,"path":["object","elf","Verdaux"],"kind":"struct"},"6:12389:1856":{"crate_id":6,"path":["std","i64"],"kind":"primitive"},"18:11070:14314":{"crate_id":18,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"7:4761:15813":{"crate_id":7,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"18:9539:13712":{"crate_id":18,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"7:1707:13002":{"crate_id":7,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"18:10875:13744":{"crate_id":18,"path":["object","read","CompressedFileRange"],"kind":"struct"},"7:5727:16002":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"7:1525:15392":{"crate_id":7,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"7:5720:16001":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:20040:11922":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"18:8814:127":{"crate_id":18,"path":["object","read","any","File"],"kind":"struct"},"17:4536:14991":{"crate_id":17,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:887:5249":{"crate_id":6,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:50733:12373":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:53562:12266":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"18:12695:14717":{"crate_id":18,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"24:6192:5304":{"crate_id":24,"path":["typenum","array","TArr"],"kind":"struct"},"7:513:15320":{"crate_id":7,"path":["libc","unix","rlimit"],"kind":"struct"},"6:11570:12768":{"crate_id":6,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:2674:13619":{"crate_id":17,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"18:13527:14942":{"crate_id":18,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:3393:14974":{"crate_id":17,"path":["gimli","arch","X86"],"kind":"struct"},"7:4449:15689":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:11458:13983":{"crate_id":6,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"24:1276:5314":{"crate_id":24,"path":["typenum","type_operators","Gcd"],"kind":"trait"},"18:12964:14775":{"crate_id":18,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:49803:5246":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:50014:5253":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:47298:11478":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:7868:13350":{"crate_id":17,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"24:611:5217":{"crate_id":24,"path":["typenum","marker_traits","NonZero"],"kind":"trait"},"1:21377:12421":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:1476:141":{"crate_id":6,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:2847:11990":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"18:11761:14451":{"crate_id":18,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:339:160":{"crate_id":6,"path":["std","thread","local","LocalKey"],"kind":"struct"},"24:1231:5354":{"crate_id":24,"path":["typenum","type_operators","IsGreater"],"kind":"trait"},"1:46956:12437":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:8867:11358":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:5959:13594":{"crate_id":17,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:2826:11738":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:10748:12348":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:47082:12213":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:2983:12644":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:1760:12490":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:973:12865":{"crate_id":6,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"18:11235:14342":{"crate_id":18,"path":["object","elf","Dyn32"],"kind":"struct"},"1:48587:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:7803:13443":{"crate_id":17,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:3254:14973":{"crate_id":17,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:5424:13389":{"crate_id":17,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:8703:13001":{"crate_id":6,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:7836:12109":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:1615:12585":{"crate_id":6,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:2448:11770":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"5:4031:13990":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"7:600:15373":{"crate_id":7,"path":["libc","unix","servent"],"kind":"struct"},"18:10642:13807":{"crate_id":18,"path":["object","read","SymbolSection"],"kind":"enum"},"6:3592:12780":{"crate_id":6,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"18:8295:51358":{"crate_id":18,"path":["object","common","RelocationKind"],"kind":"enum"},"18:13436:14921":{"crate_id":18,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"18:8162:13747":{"crate_id":18,"path":["object","common","SectionKind"],"kind":"enum"},"7:5625:15953":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:48625:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:2650:11491":{"crate_id":6,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:7894:12916":{"crate_id":6,"path":["std","thread","Thread"],"kind":"struct"},"24:942:11816":{"crate_id":24,"path":["typenum","private","PrivateDiv"],"kind":"trait"},"5:2944:12640":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"7:5876:16054":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:38118:178":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"6:2381:12489":{"crate_id":6,"path":["std","fs","metadata"],"kind":"function"},"18:10921:14277":{"crate_id":18,"path":["object","archive","Header"],"kind":"struct"},"17:7637:13332":{"crate_id":17,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"10:956:13069":{"crate_id":10,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"7:646:44131":{"crate_id":7,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:5167:12904":{"crate_id":6,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"5:7002:12654":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:49110:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"7:4367:15675":{"crate_id":7,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:8121:117":{"crate_id":6,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:9122:11770":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"18:13413:14908":{"crate_id":18,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:9512:16769":{"crate_id":6,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:49743:12343":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"13:861:12869":{"crate_id":13,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:22400:12163":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"7:6981:16215":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:3151:5243":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:8440:11481":{"crate_id":6,"path":["std","io","Lines"],"kind":"struct"},"6:11977:16325":{"crate_id":6,"path":["std","alloc","System"],"kind":"struct"},"18:8991:65729":{"crate_id":18,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"18:9274:16690":{"crate_id":18,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:10663:12846":{"crate_id":6,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"13:119:13242":{"crate_id":13,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"18:0:1904":{"crate_id":18,"path":["object"],"kind":"module"},"1:50805:12464":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"5:1394:12666":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:10881:13982":{"crate_id":6,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"18:8941:16682":{"crate_id":18,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:1632:12642":{"crate_id":6,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:5941:189":{"crate_id":17,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:7581:13361":{"crate_id":17,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:6602:161":{"crate_id":6,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:6262:13346":{"crate_id":17,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"18:967:16679":{"crate_id":18,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:5438:13390":{"crate_id":17,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"18:11217:14341":{"crate_id":18,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"13:60:65715":{"crate_id":13,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:4723:769":{"crate_id":1,"path":["core","iter"],"kind":"module"},"1:9371:5270":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:6783:12853":{"crate_id":6,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"4:383:1921":{"crate_id":4,"path":["digest","digest","DynDigest"],"kind":"trait"},"1:21968:164":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:4318:14985":{"crate_id":17,"path":["gimli","constants","DwDs"],"kind":"struct"},"18:12046:14510":{"crate_id":18,"path":["object","macho","UuidCommand"],"kind":"struct"},"18:9303:13722":{"crate_id":18,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"7:519:15323":{"crate_id":7,"path":["libc","unix","rusage"],"kind":"struct"},"6:8697:13052":{"crate_id":6,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"24:785:11788":{"crate_id":24,"path":["typenum","private","Trim"],"kind":"trait"},"1:2327:184":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"4:418:1909":{"crate_id":4,"path":["digest","Update"],"kind":"trait"},"6:4260:12740":{"crate_id":6,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"7:5443:15847":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"18:8596:14196":{"crate_id":18,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:6768:13428":{"crate_id":17,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"18:9475:13675":{"crate_id":18,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"19:538:13868":{"crate_id":19,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:11137:14325":{"crate_id":18,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:47041:16806":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"4:328:1756":{"crate_id":4,"path":["digest","core_api","Buffer"],"kind":"typedef"},"1:2762:11699":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:53000:12269":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"18:13221:14840":{"crate_id":18,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:2501:231":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"1:47091:11477":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:7321:13343":{"crate_id":17,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"18:12739:14722":{"crate_id":18,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"18:8666:14198":{"crate_id":18,"path":["object","endian","I32Bytes"],"kind":"struct"},"13:1029:12682":{"crate_id":13,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:11106:12115":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:7037:12442":{"crate_id":17,"path":["gimli","read","op","Location"],"kind":"enum"},"1:2730:5661":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"7:4102:15527":{"crate_id":7,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:6794:13650":{"crate_id":17,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:8137:11490":{"crate_id":6,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"18:11828:14461":{"crate_id":18,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:46414:197":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:48106:5249":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"7:4335:15662":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:1067:12672":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:7227:13434":{"crate_id":17,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"7:6538:16197":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"18:12816:14738":{"crate_id":18,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:10838:12837":{"crate_id":6,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"18:1021:13819":{"crate_id":18,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:11055:12112":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"18:13382:14901":{"crate_id":18,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"7:4239:15615":{"crate_id":7,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:5817:13406":{"crate_id":17,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"7:7243:16234":{"crate_id":7,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"23:382:5367":{"crate_id":23,"path":["generic_array","GenericArrayImplOdd"],"kind":"struct"},"1:52140:12284":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:574:12933":{"crate_id":6,"path":["std","thread","Packet"],"kind":"struct"},"1:50749:12376":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:47203:12205":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:21869:165":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"7:5523:15891":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:4521:199":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:48359:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:49569:12560":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:4016:239":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:50118:5255":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"7:545:15343":{"crate_id":7,"path":["libc","unix","hostent"],"kind":"struct"},"6:8368:11508":{"crate_id":6,"path":["std","io","util","Sink"],"kind":"struct"},"5:215:12637":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"7:4706:15793":{"crate_id":7,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:4288:14984":{"crate_id":17,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:8601:11138":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"0:98:1637":{"crate_id":0,"path":["sha2","Sha224"],"kind":"typedef"},"7:4346:15666":{"crate_id":7,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:5176:12764":{"crate_id":6,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"5:3096:12585":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"24:1261:5323":{"crate_id":24,"path":["typenum","type_operators","IsGreaterOrEqual"],"kind":"trait"},"1:2778:11769":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:153:13323":{"crate_id":17,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:8129:12968":{"crate_id":6,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"7:1722:15515":{"crate_id":7,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"18:9778:13766":{"crate_id":18,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:7489:13316":{"crate_id":17,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:12396:1863":{"crate_id":6,"path":["std","isize"],"kind":"primitive"},"18:10608:13703":{"crate_id":18,"path":["object","read","SectionIndex"],"kind":"struct"},"7:4810:15840":{"crate_id":7,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"7:6302:16084":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:9365:12890":{"crate_id":6,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:9489:64248":{"crate_id":6,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"18:9601:13714":{"crate_id":18,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"18:13082:14804":{"crate_id":18,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:3707:14979":{"crate_id":17,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:6897:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:4321:12327":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:5503:13394":{"crate_id":17,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:8603:11139":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"18:10394:13778":{"crate_id":18,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"18:11161:14329":{"crate_id":18,"path":["object","elf","Rela32"],"kind":"struct"},"7:5684:15986":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"18:9031:65727":{"crate_id":18,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"24:828:11802":{"crate_id":24,"path":["typenum","private","PrivateSub"],"kind":"trait"},"23:295:5381":{"crate_id":23,"path":["generic_array","sequence","Lengthen"],"kind":"trait"},"1:57003:240":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:1943:12648":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"7:4212:15600":{"crate_id":7,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"23:346:5383":{"crate_id":23,"path":["generic_array","sequence","Concat"],"kind":"trait"},"1:1751:16334":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:768:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:5346:16757":{"crate_id":6,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"23:362:5294":{"crate_id":23,"path":["generic_array","ArrayLength"],"kind":"trait"},"18:1931:13711":{"crate_id":18,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:11531:12840":{"crate_id":6,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:8692:13049":{"crate_id":6,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"7:6998:16224":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"18:10207:16704":{"crate_id":18,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"18:10670:13804":{"crate_id":18,"path":["object","read","SymbolMap"],"kind":"struct"},"1:51761:12282":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:12395:1862":{"crate_id":6,"path":["std","u128"],"kind":"primitive"},"1:48190:205":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"7:4126:15544":{"crate_id":7,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"18:13039:14792":{"crate_id":18,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"7:1678:15498":{"crate_id":7,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:9429:12894":{"crate_id":6,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:2250:12947":{"crate_id":6,"path":["std","fs","DirEntry"],"kind":"struct"},"6:5693:12835":{"crate_id":6,"path":["std","process","ChildStderr"],"kind":"struct"},"1:2936:5663":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:20288:11770":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"12:44:13224":{"crate_id":12,"path":["adler","Adler32"],"kind":"struct"},"1:21737:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:2449:5973":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"18:8272:13806":{"crate_id":18,"path":["object","common","SymbolScope"],"kind":"enum"},"5:1359:11074":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:11519:12839":{"crate_id":6,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:11995:16326":{"crate_id":6,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"7:1550:15406":{"crate_id":7,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:8827:142":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"4:502:5220":{"crate_id":4,"path":["digest","core_api","xof_reader","XofReaderCoreWrapper"],"kind":"struct"},"5:4061:11461":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:9613:214":{"crate_id":6,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"15:40:14296":{"crate_id":15,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"18:9844:13825":{"crate_id":18,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:9521:5258":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"7:1574:15423":{"crate_id":7,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:6012:13411":{"crate_id":17,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:8711:12990":{"crate_id":6,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"7:4565:15726":{"crate_id":7,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:47521:12861":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"18:9223:51405":{"crate_id":18,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:4808:15000":{"crate_id":17,"path":["gimli","constants","DwLne"],"kind":"struct"},"18:13374:14900":{"crate_id":18,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:9289:12837":{"crate_id":6,"path":["std","process","CommandArgs"],"kind":"struct"},"1:2809:11739":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"6:12340:65164":{"crate_id":6,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"22:54:11389":{"crate_id":22,"path":["crypto_common","InnerInit"],"kind":"trait"},"6:5821:12842":{"crate_id":6,"path":["std","process","exit"],"kind":"function"},"17:5606:13398":{"crate_id":17,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"18:9897:16701":{"crate_id":18,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"18:8510:14195":{"crate_id":18,"path":["object","endian","BigEndian"],"kind":"struct"},"18:10182:14248":{"crate_id":18,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"18:11617:14430":{"crate_id":18,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"18:11547:14421":{"crate_id":18,"path":["object","macho","FatArch64"],"kind":"struct"},"6:5011:12759":{"crate_id":6,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:4431:13051":{"crate_id":6,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:6697:13646":{"crate_id":17,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:7038:147":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"5:6928:12438":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:1584:13988":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"18:10245:16710":{"crate_id":18,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"4:473:1615":{"crate_id":4,"path":["digest","core_api","ct_variable","CtVariableCoreWrapper"],"kind":"struct"},"18:9263:16689":{"crate_id":18,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"18:9446:16695":{"crate_id":18,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:49338:11359":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:50622:12451":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"18:11528:14416":{"crate_id":18,"path":["object","macho","FatHeader"],"kind":"struct"},"4:430:1913":{"crate_id":4,"path":["digest","ExtendableOutput"],"kind":"trait"},"18:12033:14508":{"crate_id":18,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"7:4716:15799":{"crate_id":7,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:52286:12264":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:4938:12628":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:1636:572":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"1:52560:16445":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:2677:220":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"13:834:12867":{"crate_id":13,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:7422:11698":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"15:31:16740":{"crate_id":15,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:6850:12985":{"crate_id":6,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:6407:13974":{"crate_id":6,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:1338:5249":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"7:6293:16078":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"22:33:1758":{"crate_id":22,"path":["crypto_common","OutputSizeUser"],"kind":"trait"},"1:46968:12438":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"7:586:15365":{"crate_id":7,"path":["libc","unix","itimerval"],"kind":"struct"},"18:11054:14310":{"crate_id":18,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:11551:12462":{"crate_id":6,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:38135:11034":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"17:7266:13437":{"crate_id":17,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"7:4152:15564":{"crate_id":7,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:2666:215":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"6:8648:12992":{"crate_id":6,"path":["std","net","Shutdown"],"kind":"enum"},"18:12874:14752":{"crate_id":18,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:8486:12778":{"crate_id":6,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"4:492:1614":{"crate_id":4,"path":["digest","core_api","wrapper","CoreWrapper"],"kind":"struct"},"18:10528:13797":{"crate_id":18,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:21671:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:54034:10963":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:5472:13392":{"crate_id":17,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:990:12867":{"crate_id":6,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"18:12337:13801":{"crate_id":18,"path":["object","macho","Relocation"],"kind":"struct"},"18:12609:14671":{"crate_id":18,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"19:699:13857":{"crate_id":19,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:3794:5250":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:1611:12587":{"crate_id":6,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:2784:13625":{"crate_id":17,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"7:4635:15758":{"crate_id":7,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:6980:219":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:49076:108":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:48792:11136":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"7:6329:16094":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:2717:11029":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"6:11168:16547":{"crate_id":6,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"24:0:1762":{"crate_id":24,"path":["typenum"],"kind":"module"},"6:11152:12885":{"crate_id":6,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"18:13148:14823":{"crate_id":18,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:3468:64952":{"crate_id":6,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:1811:593":{"crate_id":6,"path":["std","env"],"kind":"module"},"4:160:1616":{"crate_id":4,"path":["digest","impl_oid_carrier"],"kind":"macro"},"5:5810:38260":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"18:10973:14295":{"crate_id":18,"path":["object","elf","FileHeader64"],"kind":"struct"},"18:8494:14194":{"crate_id":18,"path":["object","endian","LittleEndian"],"kind":"struct"},"4:512:1759":{"crate_id":4,"path":["digest","core_api","TruncSide"],"kind":"enum"},"1:54171:10971":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"18:12768:14729":{"crate_id":18,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"7:4300:15643":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"18:8055:13696":{"crate_id":18,"path":["object","common","Architecture"],"kind":"enum"},"10:111:13130":{"crate_id":10,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"21:11:11565":{"crate_id":21,"path":["blobby","BlobIterator"],"kind":"struct"},"19:636:14114":{"crate_id":19,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:49377:16601":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"18:11014:14299":{"crate_id":18,"path":["object","elf","SectionHeader32"],"kind":"struct"},"7:4575:15732":{"crate_id":7,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"13:853:12868":{"crate_id":13,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:21803:5240":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:910:11074":{"crate_id":6,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:2409:12961":{"crate_id":6,"path":["std","fs","read_dir"],"kind":"function"},"1:46553:11151":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"18:1903:51443":{"crate_id":18,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:2610:11482":{"crate_id":6,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:21935:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:29326:12480":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"18:11909:14472":{"crate_id":18,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:2232:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"6:11351:12838":{"crate_id":6,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:7937:39423":{"crate_id":6,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:21638:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"18:11893:14467":{"crate_id":18,"path":["object","macho","SymtabCommand"],"kind":"struct"},"7:1608:15444":{"crate_id":7,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"10:586:13111":{"crate_id":10,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"6:6214:12888":{"crate_id":6,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:2932:5662":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"18:9671:13687":{"crate_id":18,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"4:531:1917":{"crate_id":4,"path":["digest","InvalidBufferSize"],"kind":"struct"},"6:6884:212":{"crate_id":6,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:2358:13615":{"crate_id":17,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:2816:11736":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:12381:1850":{"crate_id":6,"path":["std","tuple"],"kind":"primitive"},"18:13478:14927":{"crate_id":18,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"18:11500:14409":{"crate_id":18,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"18:10708:13800":{"crate_id":18,"path":["object","read","ObjectMap"],"kind":"struct"},"1:47113:12217":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"24:1031:11828":{"crate_id":24,"path":["typenum","private","IsLessPrivate"],"kind":"trait"},"6:2513:11488":{"crate_id":6,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"24:998:11765":{"crate_id":24,"path":["typenum","private","PrivateRem"],"kind":"trait"},"17:4404:14988":{"crate_id":17,"path":["gimli","constants","DwVis"],"kind":"struct"},"18:8561:13760":{"crate_id":18,"path":["object","endian","U32Bytes"],"kind":"struct"},"18:11951:14493":{"crate_id":18,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:12398:1865":{"crate_id":6,"path":["std","reference"],"kind":"primitive"},"6:12386:1853":{"crate_id":6,"path":["std","i8"],"kind":"primitive"},"6:4214:12875":{"crate_id":6,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"7:6554:16203":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"19:491:16481":{"crate_id":19,"path":["memchr","cow","Imp"],"kind":"struct"},"1:49958:12447":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:3323:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"16:214:13261":{"crate_id":16,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:21836:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"12:0:1898":{"crate_id":12,"path":["adler"],"kind":"module"},"10:920:13070":{"crate_id":10,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:54080:10966":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:11729:16557":{"crate_id":6,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:3557:14975":{"crate_id":17,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:3900:5249":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:2984:13627":{"crate_id":17,"path":["gimli","common","DwoId"],"kind":"struct"},"1:46875:12363":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:2253:11636":{"crate_id":6,"path":["std","fs","read"],"kind":"function"},"6:8885:12818":{"crate_id":6,"path":["std","path","PrefixComponent"],"kind":"struct"},"22:51:11620":{"crate_id":22,"path":["crypto_common","KeyIvInit"],"kind":"trait"},"24:6294:124":{"crate_id":24,"path":["typenum","Equal"],"kind":"struct"},"4:332:1757":{"crate_id":4,"path":["digest","core_api","BufferKindUser"],"kind":"trait"},"5:1201:12682":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:6780:13024":{"crate_id":6,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:8593:110":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:12387:1854":{"crate_id":6,"path":["std","i16"],"kind":"primitive"},"17:2622:13630":{"crate_id":17,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:2851:11992":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"18:12617:14674":{"crate_id":18,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"18:11734:14218":{"crate_id":18,"path":["object","macho","Dylib"],"kind":"struct"},"24:1071:11830":{"crate_id":24,"path":["typenum","private","IsGreaterPrivate"],"kind":"trait"},"6:8971:12823":{"crate_id":6,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:12377:1846":{"crate_id":6,"path":["std","pointer"],"kind":"primitive"},"6:4300:12742":{"crate_id":6,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:46937:12245":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"10:827:13068":{"crate_id":10,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:6087:13359":{"crate_id":17,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:21311:58149":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:6474:13422":{"crate_id":17,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:48785:11137":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"7:608:15378":{"crate_id":7,"path":["libc","unix","protoent"],"kind":"struct"},"17:7535:13338":{"crate_id":17,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:3203:12105":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"18:12980:14779":{"crate_id":18,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"13:697:12668":{"crate_id":13,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"13:1859:12640":{"crate_id":13,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:7958:13380":{"crate_id":17,"path":["gimli","read","value","ValueType"],"kind":"enum"},"18:12926:14767":{"crate_id":18,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:8215:12804":{"crate_id":6,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:8064:12903":{"crate_id":6,"path":["std","fs","Metadata"],"kind":"struct"},"17:5210:14195":{"crate_id":17,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"18:12211:14542":{"crate_id":18,"path":["object","macho","SymsegCommand"],"kind":"struct"},"22:48:11388":{"crate_id":22,"path":["crypto_common","KeyInit"],"kind":"trait"},"24:6363:5198":{"crate_id":24,"path":["typenum","uint","UTerm"],"kind":"struct"},"1:48241:5250":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:11913:137":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:2792:12038":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:20259:12088":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"5:4990:13996":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"6:12391:1858":{"crate_id":6,"path":["std","u8"],"kind":"primitive"},"18:13091:14807":{"crate_id":18,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"5:5896:13998":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"18:12118:14521":{"crate_id":18,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:8427:11479":{"crate_id":6,"path":["std","io","Bytes"],"kind":"struct"},"22:16:181":{"crate_id":22,"path":["crypto_common","Output"],"kind":"typedef"},"17:4879:15002":{"crate_id":17,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:1887:16755":{"crate_id":6,"path":["std","env","Args"],"kind":"struct"},"6:7846:11770":{"crate_id":6,"path":["std","sealed","Sealed"],"kind":"trait"},"1:29501:5372":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"4:484:5218":{"crate_id":4,"path":["digest","core_api","rt_variable","RtVariableCoreWrapper"],"kind":"struct"},"1:4350:11006":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"0:103:1647":{"crate_id":0,"path":["sha2","Sha512"],"kind":"typedef"},"4:341:1761":{"crate_id":4,"path":["digest","core_api","VariableOutputCore"],"kind":"trait"},"6:7746:16784":{"crate_id":6,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"19:521:13863":{"crate_id":19,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:686:39424":{"crate_id":6,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"7:6311:16085":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"7:1600:15439":{"crate_id":7,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"18:12164:14528":{"crate_id":18,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:9466:16766":{"crate_id":6,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"13:632:5249":{"crate_id":13,"path":["hashbrown","map","Iter"],"kind":"struct"},"10:649:13115":{"crate_id":10,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:4373:11153":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:6115:13331":{"crate_id":17,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"24:821:11800":{"crate_id":24,"path":["typenum","private","PrivateXor"],"kind":"trait"},"6:4906:16109":{"crate_id":6,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"7:7255:16236":{"crate_id":7,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"18:10476:51620":{"crate_id":18,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"13:98:13238":{"crate_id":13,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:6843:13653":{"crate_id":17,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:12345:39426":{"crate_id":6,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:12397:1864":{"crate_id":6,"path":["std","usize"],"kind":"primitive"},"24:1007:11824":{"crate_id":24,"path":["typenum","private","PrivateMin"],"kind":"trait"},"6:8532:16297":{"crate_id":6,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"1:48473:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:545:12929":{"crate_id":6,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:9546:64250":{"crate_id":6,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:6451:13998":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"10:863:13071":{"crate_id":10,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"7:1595:15437":{"crate_id":7,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"25:85:5289":{"crate_id":25,"path":["block_buffer","Lazy"],"kind":"struct"},"7:4611:15751":{"crate_id":7,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"18:10159:14247":{"crate_id":18,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:5878:201":{"crate_id":6,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"18:11639:14437":{"crate_id":18,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:51021:12304":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"0:102:1645":{"crate_id":0,"path":["sha2","Sha384"],"kind":"typedef"},"1:2784:11768":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:2491:145":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1:7047:5666":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:6248:13336":{"crate_id":17,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:6149:13384":{"crate_id":17,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:2290:123":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"17:7113:13610":{"crate_id":17,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"13:274:16534":{"crate_id":13,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:2718:13621":{"crate_id":17,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"23:317:5253":{"crate_id":23,"path":["generic_array","sequence","Split"],"kind":"trait"},"7:7166:16225":{"crate_id":7,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"7:507:15318":{"crate_id":7,"path":["libc","unix","timespec"],"kind":"struct"},"17:5488:13393":{"crate_id":17,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"13:2069:12680":{"crate_id":13,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:50745:12378":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"18:10321:13833":{"crate_id":18,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"7:4559:15724":{"crate_id":7,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"10:676:13159":{"crate_id":10,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:46598:12184":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:6391:12387":{"crate_id":6,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:11163:16545":{"crate_id":6,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"18:11087:14316":{"crate_id":18,"path":["object","elf","Sym32"],"kind":"struct"},"18:9317:13814":{"crate_id":18,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:46354:195":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"5:5549:12609":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"18:10583:13702":{"crate_id":18,"path":["object","read","ObjectKind"],"kind":"enum"},"1:52954:12265":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"24:1206:5309":{"crate_id":24,"path":["typenum","type_operators","Max"],"kind":"trait"},"6:6494:12888":{"crate_id":6,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"21:46:126":{"crate_id":21,"path":["blobby","Error"],"kind":"enum"},"3:0:1893":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"7:4797:15835":{"crate_id":7,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"24:621:1763":{"crate_id":24,"path":["typenum","marker_traits","Unsigned"],"kind":"trait"},"19:599:65738":{"crate_id":19,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:46984:12439":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"7:5772:16015":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:12372:1842":{"crate_id":6,"path":["std","bool"],"kind":"primitive"},"6:7976:16765":{"crate_id":6,"path":["std","env","JoinPathsError"],"kind":"struct"},"7:6545:16200":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"18:10822:51361":{"crate_id":18,"path":["object","read","RelocationTarget"],"kind":"enum"},"9:0:1649":{"crate_id":9,"path":["cfg_if"],"kind":"module"},"1:47061:5265":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:2833:13596":{"crate_id":17,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:2235:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"7:4665:15772":{"crate_id":7,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"19:660:13853":{"crate_id":19,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:46539:13379":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"1:7098:5665":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:12216:13987":{"crate_id":6,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"7:581:15363":{"crate_id":7,"path":["libc","unix","sigval"],"kind":"struct"},"24:933:11814":{"crate_id":24,"path":["typenum","private","PrivateSetBit"],"kind":"trait"},"1:9604:5252":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"18:9722:14210":{"crate_id":18,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:4199:12320":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:49162:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"17:6682:13355":{"crate_id":17,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"18:12103:14517":{"crate_id":18,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:54054:10964":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:47212:12220":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"5:4616:11461":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"7:5498:15886":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:175:13256":{"crate_id":16,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:3484:11476":{"crate_id":6,"path":["std","io","BufRead"],"kind":"trait"},"1:46786:12240":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:8588:12773":{"crate_id":6,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"6:7858:64242":{"crate_id":6,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"1:50753:12377":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"24:1221:5353":{"crate_id":24,"path":["typenum","type_operators","IsEqual"],"kind":"trait"},"1:52876:12277":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:1680:12585":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"13:1872:12645":{"crate_id":13,"path":["hashbrown","set","Union"],"kind":"struct"},"7:4417:15686":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:7887:13352":{"crate_id":17,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"13:1003:12680":{"crate_id":13,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:52537:16444":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:50313:12362":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"7:4540:15715":{"crate_id":7,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:1938:12941":{"crate_id":6,"path":["std","error","Report"],"kind":"struct"},"6:11588:16323":{"crate_id":6,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:6763:11506":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:7732:12149":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"7:5782:16017":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:2736:64089":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:6158:13988":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:20296:12090":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:12394:1861":{"crate_id":6,"path":["std","u64"],"kind":"primitive"},"6:7735:14275":{"crate_id":6,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"18:8241:13803":{"crate_id":18,"path":["object","common","SymbolKind"],"kind":"enum"},"18:8212:13799":{"crate_id":18,"path":["object","common","ComdatKind"],"kind":"enum"},"17:3448:14120":{"crate_id":17,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:10733:12836":{"crate_id":6,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"18:12860:14751":{"crate_id":18,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"18:9193:65733":{"crate_id":18,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"18:9751:13765":{"crate_id":18,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:5365:13334":{"crate_id":17,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:11464:13984":{"crate_id":6,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:51940:12275":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:50297:12360":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"12:36:15228":{"crate_id":12,"path":["adler","algo","U32X4"],"kind":"struct"},"17:6668:13342":{"crate_id":17,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"15:187:49669":{"crate_id":15,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"24:1202:5308":{"crate_id":24,"path":["typenum","type_operators","Min"],"kind":"trait"},"6:11363:64245":{"crate_id":6,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:10573:5233":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:20019:60876":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"13:2080:12682":{"crate_id":13,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:1826:16752":{"crate_id":6,"path":["std","env","Vars"],"kind":"struct"},"1:51739:12294":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:7374:13442":{"crate_id":17,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:8590:110":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"5:6881:12700":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"7:4185:15588":{"crate_id":7,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:21238:12026":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"7:5587:15925":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:9339:13816":{"crate_id":18,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:21327:58142":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"24:6172:5303":{"crate_id":24,"path":["typenum","array","ATerm"],"kind":"struct"},"1:10859:5270":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:46519:12057":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"18:10752:13700":{"crate_id":18,"path":["object","read","Import"],"kind":"struct"},"19:736:13860":{"crate_id":19,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:2804:12055":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"19:590:14105":{"crate_id":19,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"18:9526:13713":{"crate_id":18,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"10:382:13066":{"crate_id":10,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"7:5554:15912":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:47569:16597":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"24:1051:11829":{"crate_id":24,"path":["typenum","private","IsEqualPrivate"],"kind":"trait"},"1:50609:12126":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:9448:5271":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"7:6409:16120":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:6759:13354":{"crate_id":17,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"13:2053:12679":{"crate_id":13,"path":["hashbrown","set","Entry"],"kind":"enum"},"7:7214:16227":{"crate_id":7,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"7:567:15355":{"crate_id":7,"path":["libc","unix","winsize"],"kind":"struct"},"1:47174:12203":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:8410:11477":{"crate_id":6,"path":["std","io","Chain"],"kind":"struct"},"7:592:15368":{"crate_id":7,"path":["libc","unix","tms"],"kind":"struct"},"1:53064:12254":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"18:10088:14245":{"crate_id":18,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:7847:12906":{"crate_id":6,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:10089:5268":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:2466:12676":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"13:2190:65714":{"crate_id":13,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:7733:12152":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"18:11997:14503":{"crate_id":18,"path":["object","macho","DylibReference"],"kind":"struct"},"15:7:16740":{"crate_id":15,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:2248:127":{"crate_id":6,"path":["std","fs","File"],"kind":"struct"},"5:6816:11074":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:8735:12883":{"crate_id":6,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:5849:12219":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:50394:12110":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"13:1555:13249":{"crate_id":13,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:3312:11485":{"crate_id":6,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:4348:14986":{"crate_id":17,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:6740:12710":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"18:13071:14800":{"crate_id":18,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"18:10845:13801":{"crate_id":18,"path":["object","read","Relocation"],"kind":"struct"},"1:46904:12552":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"4:339:5213":{"crate_id":4,"path":["digest","core_api","XofReaderCore"],"kind":"trait"},"1:51807:12262":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"18:8475:13679":{"crate_id":18,"path":["object","endian","Endianness"],"kind":"enum"},"1:2973:12160":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:3345:11507":{"crate_id":6,"path":["std","io","util","Repeat"],"kind":"struct"},"1:21704:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"13:669:12667":{"crate_id":13,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:8318:12329":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8160:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"24:2808:1764":{"crate_id":24,"path":["typenum","generated","consts","U128"],"kind":"typedef"},"6:3375:11461":{"crate_id":6,"path":["std","io","Guard"],"kind":"struct"},"7:1654:15481":{"crate_id":7,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:11186:16552":{"crate_id":6,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"19:574:14103":{"crate_id":19,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:8643:12991":{"crate_id":6,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:11617:134":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"18:9712:14209":{"crate_id":18,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:10603:12531":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:8599:11137":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"24:814:11798":{"crate_id":24,"path":["typenum","private","PrivateAnd"],"kind":"trait"},"1:48114:5250":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"6:11543:64980":{"crate_id":6,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:56581:12392":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"24:1131:11833":{"crate_id":24,"path":["typenum","private","IsGreaterOrEqualPrivate"],"kind":"trait"},"6:10527:64986":{"crate_id":6,"path":["std","sys","unix","os","Env"],"kind":"struct"},"5:1230:12681":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"18:13134:14821":{"crate_id":18,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:8609:11141":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:4376:14987":{"crate_id":17,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:47226:12206":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"18:10774:13698":{"crate_id":18,"path":["object","read","Export"],"kind":"struct"},"18:1771:13715":{"crate_id":18,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:21273:16344":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:9471:12097":{"crate_id":6,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"8:32:48933":{"crate_id":8,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:48397:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"18:11774:14453":{"crate_id":18,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:771:12708":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:50928:206":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"6:8960:12822":{"crate_id":6,"path":["std","path","Ancestors"],"kind":"struct"},"6:8433:5253":{"crate_id":6,"path":["std","io","Split"],"kind":"struct"},"1:2796:12051":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:900:5250":{"crate_id":6,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:6713:13357":{"crate_id":17,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:3590:14976":{"crate_id":17,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"18:13459:14922":{"crate_id":18,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:4653:14995":{"crate_id":17,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:10589:5235":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:5758:13403":{"crate_id":17,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:52764:12289":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:11714:16324":{"crate_id":6,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:3001:13626":{"crate_id":17,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:4007:12096":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:2855:11994":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"7:4629:15757":{"crate_id":7,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"18:13184:14832":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"19:113:57761":{"crate_id":19,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:12392:1859":{"crate_id":6,"path":["std","u16"],"kind":"primitive"},"18:10682:13805":{"crate_id":18,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:3240:12106":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"7:4267:15627":{"crate_id":7,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:50979:12386":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"13:985:12679":{"crate_id":13,"path":["hashbrown","map","Entry"],"kind":"enum"},"18:9658:16696":{"crate_id":18,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:918:12647":{"crate_id":6,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"18:12087:14515":{"crate_id":18,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:5201:12591":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:8862:11357":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"18:13176:14830":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"14:220:15222":{"crate_id":14,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"7:5733:16005":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:1643:11021":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"6:5824:12844":{"crate_id":6,"path":["std","process","Termination"],"kind":"trait"},"1:49146:11135":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:56938:240":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:5424:12587":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:56964:240":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10199:14012":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"24:1274:5327":{"crate_id":24,"path":["typenum","type_operators","Logarithm2"],"kind":"trait"},"21:66:11572":{"crate_id":21,"path":["blobby","Blob2Iterator"],"kind":"struct"},"17:7920:13446":{"crate_id":17,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:10169:1750":{"crate_id":1,"path":["core","slice","raw","from_ref"],"kind":"function"},"1:20440:11770":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"13:1832:5249":{"crate_id":13,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:12380:1849":{"crate_id":6,"path":["std","str"],"kind":"primitive"},"18:12361:14566":{"crate_id":18,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:6134:13967":{"crate_id":6,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"7:5541:15903":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:2586:13964":{"crate_id":6,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:2740:13622":{"crate_id":17,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"7:0:790":{"crate_id":7,"path":["libc"],"kind":"module"},"1:2154:573":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:53920:12273":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:9359:11074":{"crate_id":6,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:7934:13347":{"crate_id":17,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:12379:1848":{"crate_id":6,"path":["std","slice"],"kind":"primitive"},"6:12388:1855":{"crate_id":6,"path":["std","i32"],"kind":"primitive"},"6:2903:126":{"crate_id":6,"path":["std","io","error","Error"],"kind":"struct"},"18:11606:14429":{"crate_id":18,"path":["object","macho","LcStr"],"kind":"struct"},"7:5472:15871":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"7:6572:16206":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"7:5835:16028":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:2676:221":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:6795:12649":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"18:11515:14414":{"crate_id":18,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:965:12667":{"crate_id":6,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:50971:12385":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:12382:5841":{"crate_id":1,"path":["core","core_arch","x86","cpuid","__cpuid_count"],"kind":"function"},"6:5885:12888":{"crate_id":6,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"18:9071:65735":{"crate_id":18,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"18:9644:13709":{"crate_id":18,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:2921:5373":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"13:1840:12587":{"crate_id":13,"path":["hashbrown","set","Drain"],"kind":"struct"},"23:260:5379":{"crate_id":23,"path":["generic_array","sequence","GenericSequence"],"kind":"trait"},"1:52240:12276":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"7:5504:15889":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:21363:12485":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"7:6424:16126":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"18:12781:14734":{"crate_id":18,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:7430:193":{"crate_id":17,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"18:2916:13738":{"crate_id":18,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:10785:12351":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:46292:12161":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:6076:13027":{"crate_id":6,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:598:12879":{"crate_id":6,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:54133:10969":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:6230:201":{"crate_id":6,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:6914:12658":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:10945:11497":{"crate_id":6,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"13:1044:13234":{"crate_id":13,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:6820:16531":{"crate_id":17,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"22:42:11619":{"crate_id":22,"path":["crypto_common","InnerUser"],"kind":"trait"},"6:7148:64566":{"crate_id":6,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:5450:13391":{"crate_id":17,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"7:4496:15692":{"crate_id":7,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:6010:13988":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"26:0:1649":{"crate_id":26,"path":["cfg_if"],"kind":"module"},"7:1562:15415":{"crate_id":7,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:2380:13611":{"crate_id":17,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"22:39:11618":{"crate_id":22,"path":["crypto_common","IvSizeUser"],"kind":"trait"},"18:11721:14446":{"crate_id":18,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:8550:130":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"18:562:14275":{"crate_id":18,"path":["object","read","any","Symbol"],"kind":"struct"},"1:49869:5265":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"0:101:1643":{"crate_id":0,"path":["sha2","Sha512_256"],"kind":"typedef"},"18:13100:14808":{"crate_id":18,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"18:9283:16691":{"crate_id":18,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:49330:16599":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:6707:12860":{"crate_id":6,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:4534:12547":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"23:143:5376":{"crate_id":23,"path":["generic_array","functional","MappedGenericSequence"],"kind":"trait"},"1:1919:12154":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"19:755:13861":{"crate_id":19,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"18:11149:14326":{"crate_id":18,"path":["object","elf","Rel32"],"kind":"struct"},"18:12225:14543":{"crate_id":18,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:1049:12671":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5761:12838":{"crate_id":6,"path":["std","process","Stdio"],"kind":"struct"},"1:4697:58824":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"19:531:13867":{"crate_id":19,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:4432:14989":{"crate_id":17,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"7:6975:16213":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:223:205":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:2526:13617":{"crate_id":17,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:49904:5264":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:11837:12779":{"crate_id":6,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:5194:14194":{"crate_id":17,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"7:4139:15554":{"crate_id":7,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:678:16745":{"crate_id":6,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:8503:12858":{"crate_id":6,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:7537:65160":{"crate_id":6,"path":["std","panicking","Hook"],"kind":"enum"},"1:50445:12119":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"18:12948:14772":{"crate_id":18,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"7:4551:15720":{"crate_id":7,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:6276:13362":{"crate_id":17,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"25:0:1751":{"crate_id":25,"path":["block_buffer"],"kind":"module"},"6:979:12866":{"crate_id":6,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:3477:11473":{"crate_id":6,"path":["std","io","Seek"],"kind":"trait"},"18:12896:14756":{"crate_id":18,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:11208:128":{"crate_id":6,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"18:11939:14491":{"crate_id":18,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"18:10233:16709":{"crate_id":18,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:8597:11136":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"6:12393:1860":{"crate_id":6,"path":["std","u32"],"kind":"primitive"},"1:2757:11694":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"6:11338:16765":{"crate_id":6,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"6:11342:12800":{"crate_id":6,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:3984:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"6:4401:13048":{"crate_id":6,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:9343:5249":{"crate_id":6,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:2901:205":{"crate_id":6,"path":["std","io","error","Result"],"kind":"typedef"},"17:6450:13254":{"crate_id":17,"path":["gimli","read","line","LineRow"],"kind":"struct"},"18:9909:14211":{"crate_id":18,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:2970:12642":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"18:12972:14777":{"crate_id":18,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:4565:14992":{"crate_id":17,"path":["gimli","constants","DwId"],"kind":"struct"},"0:99:1639":{"crate_id":0,"path":["sha2","Sha256"],"kind":"typedef"},"1:8323:12330":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:11921:12996":{"crate_id":6,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"4:294:11770":{"crate_id":4,"path":["digest","core_api","wrapper","sealed","Sealed"],"kind":"trait"},"18:9691:13764":{"crate_id":18,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"19:515:13866":{"crate_id":19,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:10508:16754":{"crate_id":6,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"13:2184:15224":{"crate_id":13,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:8469:12777":{"crate_id":6,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"18:12730:14718":{"crate_id":18,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:4712:14997":{"crate_id":17,"path":["gimli","constants","DwIdx"],"kind":"struct"},"18:13572:14948":{"crate_id":18,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:10996:12013":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:9608:213":{"crate_id":6,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:2696:13620":{"crate_id":17,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:7521:13337":{"crate_id":17,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:39331:12307":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"25:22:11770":{"crate_id":25,"path":["block_buffer","sealed","Sealed"],"kind":"trait"},"6:8220:12805":{"crate_id":6,"path":["std","io","error","Custom"],"kind":"struct"},"13:393:65717":{"crate_id":13,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"18:9165:65730":{"crate_id":18,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:47160:16590":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:8361:11506":{"crate_id":6,"path":["std","io","util","Empty"],"kind":"struct"},"23:0:1808":{"crate_id":23,"path":["generic_array"],"kind":"module"},"1:21108:12405":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:4330:11152":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:54210:5842":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"19:507:14103":{"crate_id":19,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:5536:13396":{"crate_id":17,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:53214:12278":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:11681:12848":{"crate_id":6,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"4:522:1766":{"crate_id":4,"path":["digest","InvalidOutputSize"],"kind":"struct"},"17:6230:13417":{"crate_id":17,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:10122:5269":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"6:6675:12861":{"crate_id":6,"path":["std","sync","once","Once"],"kind":"struct"},"7:4231:15613":{"crate_id":7,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"24:5724:5202":{"crate_id":24,"path":["typenum","bit","B1"],"kind":"struct"},"18:10257:16711":{"crate_id":18,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:47277:12210":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"18:1962:13762":{"crate_id":18,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"7:4804:15838":{"crate_id":7,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:2568:114":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"7:6500:16178":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:2995:12094":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"18:3249:13750":{"crate_id":18,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:49043:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:8954:5249":{"crate_id":6,"path":["std","path","Iter"],"kind":"struct"},"1:29535:5371":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"24:5814:5203":{"crate_id":24,"path":["typenum","int","Z0"],"kind":"struct"},"1:47151:12201":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"19:644:14103":{"crate_id":19,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"18:9250:16688":{"crate_id":18,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"10:800:15279":{"crate_id":10,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"7:1643:15473":{"crate_id":7,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"13:1852:12643":{"crate_id":13,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:8081:12948":{"crate_id":6,"path":["std","fs","FileTimes"],"kind":"struct"},"18:11186:14332":{"crate_id":18,"path":["object","elf","Rela64"],"kind":"struct"},"22:75:11622":{"crate_id":22,"path":["crypto_common","InvalidLength"],"kind":"struct"},"6:5007:12753":{"crate_id":6,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:29541:11024":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:2867:12807":{"crate_id":6,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"18:242:16675":{"crate_id":18,"path":["object","read","util","DebugByte"],"kind":"struct"},"13:300:13241":{"crate_id":13,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:1672:1051":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"10:0:1896":{"crate_id":10,"path":["miniz_oxide"],"kind":"module"},"7:4515:15704":{"crate_id":7,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:2837:11787":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:8377:11472":{"crate_id":6,"path":["std","io","IoSlice"],"kind":"struct"},"1:4276:11151":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"6:8623:12775":{"crate_id":6,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"6:9307:12839":{"crate_id":6,"path":["std","process","ExitStatus"],"kind":"struct"},"19:609:16673":{"crate_id":19,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"7:5582:15924":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:5681:13400":{"crate_id":17,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"13:1085:13236":{"crate_id":13,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:5739:13402":{"crate_id":17,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:47539:11507":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"7:1532:15395":{"crate_id":7,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"18:11315:14364":{"crate_id":18,"path":["object","elf","Vernaux"],"kind":"struct"},"1:46911:12553":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"5:7057:12585":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:47328:12212":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"18:8137:51357":{"crate_id":18,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:9719:16755":{"crate_id":6,"path":["std","sys","unix","args","Args"],"kind":"struct"},"24:1211:5215":{"crate_id":24,"path":["typenum","type_operators","IsLess"],"kind":"trait"},"4:436:1914":{"crate_id":4,"path":["digest","ExtendableOutputReset"],"kind":"trait"},"6:661:12943":{"crate_id":6,"path":["std","backtrace","Backtrace"],"kind":"struct"},"18:9873:16699":{"crate_id":18,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"7:1500:15382":{"crate_id":7,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"19:652:14103":{"crate_id":19,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"18:10310:16715":{"crate_id":18,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"19:614:65736":{"crate_id":19,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"22:56:11621":{"crate_id":22,"path":["crypto_common","InnerIvInit"],"kind":"trait"},"7:4286:15635":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:54148:10970":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:25210:12237":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"7:7237:16233":{"crate_id":7,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:47287:12215":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"13:659:11074":{"crate_id":13,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"7:4206:15597":{"crate_id":7,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"5:6290:12591":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:4583:13006":{"crate_id":6,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:1606:1314":{"crate_id":1,"path":["core","mem","size_of"],"kind":"function"},"5:6991:12653":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"7:7249:16235":{"crate_id":7,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:5621:11461":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"7:4581:15735":{"crate_id":7,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:4253:14983":{"crate_id":17,"path":["gimli","constants","DwAte"],"kind":"struct"},"7:4489:13009":{"crate_id":7,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"18:12008:14505":{"crate_id":18,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:6309:12592":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"18:11330:14370":{"crate_id":18,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:46897:12362":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:7034:132":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:3680:14978":{"crate_id":17,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:3352:5250":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:4890:13988":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"18:13126:14818":{"crate_id":18,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:4310:12743":{"crate_id":6,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"18:11661:14438":{"crate_id":18,"path":["object","macho","Section32"],"kind":"struct"},"1:58291:16446":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:11035:12108":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"1:20234:12309":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:47104:12214":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"7:6430:16127":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:11756:16559":{"crate_id":6,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"18:9362:13724":{"crate_id":18,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"13:815:12865":{"crate_id":13,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:8034:13317":{"crate_id":17,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"18:13506:14936":{"crate_id":18,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"18:13594:14954":{"crate_id":18,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:960:12666":{"crate_id":6,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:6807:13651":{"crate_id":17,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"18:9433:16694":{"crate_id":18,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"7:539:15340":{"crate_id":7,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:2831:11786":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:8739:16094":{"crate_id":6,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:53672:12286":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:9906:127":{"crate_id":6,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:7731:12151":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:12373:1843":{"crate_id":6,"path":["std","never"],"kind":"primitive"},"5:3550:13988":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:4912:15003":{"crate_id":17,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:11651:58731":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:52640:12297":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"18:11356:14375":{"crate_id":18,"path":["object","elf","HashHeader"],"kind":"struct"},"1:6520:12222":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"5:6944:12659":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:4742:12882":{"crate_id":6,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:7948:13348":{"crate_id":17,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"18:12291:14550":{"crate_id":18,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:3474:12720":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:3267:11497":{"crate_id":6,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:6219:13416":{"crate_id":17,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:46253:12009":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"18:12836:14746":{"crate_id":18,"path":["object","pe","ImageSymbol"],"kind":"struct"},"24:6250:5236":{"crate_id":24,"path":["typenum","Greater"],"kind":"struct"},"1:5628:58967":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:11887:200":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"6:4967:12884":{"crate_id":6,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"18:11708:14443":{"crate_id":18,"path":["object","macho","Fvmlib"],"kind":"struct"},"10:896:13073":{"crate_id":10,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:7256:13436":{"crate_id":17,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:5062:12762":{"crate_id":6,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:56951:240":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:2816:13624":{"crate_id":17,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"7:5713:15999":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"18:10894:13743":{"crate_id":18,"path":["object","read","CompressedData"],"kind":"struct"},"18:11300:14358":{"crate_id":18,"path":["object","elf","Verneed"],"kind":"struct"},"18:10490:14256":{"crate_id":18,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:2949:12641":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:3374:12059":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"1:8605:189":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1:2255:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"17:5995:13410":{"crate_id":17,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"18:9857:13749":{"crate_id":18,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:21182:12031":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:46512:12104":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:6542:201":{"crate_id":6,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"13:2205:12583":{"crate_id":13,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:29577:12430":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"18:9831:13824":{"crate_id":18,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:54043:5918":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"7:1636:15469":{"crate_id":7,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:8902:12819":{"crate_id":6,"path":["std","path","Component"],"kind":"enum"},"18:11559:14423":{"crate_id":18,"path":["object","macho","MachHeader32"],"kind":"struct"},"18:11106:14321":{"crate_id":18,"path":["object","elf","Sym64"],"kind":"struct"},"7:4527:15711":{"crate_id":7,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:9410:5254":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:6178:13414":{"crate_id":17,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:56990:240":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"7:4506:15699":{"crate_id":7,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"18:8796:13704":{"crate_id":18,"path":["object","read","util","StringTable"],"kind":"struct"},"18:12748:14723":{"crate_id":18,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"4:440:1915":{"crate_id":4,"path":["digest","VariableOutput"],"kind":"trait"},"6:11744:16761":{"crate_id":6,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"18:9553:13724":{"crate_id":18,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:52170:12288":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"24:5702:5201":{"crate_id":24,"path":["typenum","bit","B0"],"kind":"struct"},"1:7075:119":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"18:12955:14774":{"crate_id":18,"path":["object","pe","ImageRelocation"],"kind":"struct"},"18:9681:14151":{"crate_id":18,"path":["object","read","elf","note","Note"],"kind":"struct"},"18:8774:13697":{"crate_id":18,"path":["object","read","util","ByteString"],"kind":"struct"},"7:1505:15384":{"crate_id":7,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"24:1111:11832":{"crate_id":24,"path":["typenum","private","IsNotEqualPrivate"],"kind":"trait"},"19:80:57759":{"crate_id":19,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:1828:16753":{"crate_id":6,"path":["std","env","VarsOs"],"kind":"struct"},"6:11860:12988":{"crate_id":6,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:19987:60788":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"7:4274:15630":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:50729:12370":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"7:6415:16122":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:51009:12306":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:20042:11923":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:7245:13435":{"crate_id":17,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"18:9501:13722":{"crate_id":18,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:2570:13669":{"crate_id":17,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"18:12322:14556":{"crate_id":18,"path":["object","macho","Nlist64"],"kind":"struct"},"18:9401:14208":{"crate_id":18,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:1967:12942":{"crate_id":6,"path":["std","error","Indented"],"kind":"struct"},"5:3753:13988":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:53750:12270":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"18:13393:14905":{"crate_id":18,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"18:11343:14374":{"crate_id":18,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:7425:12008":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"18:11536:14418":{"crate_id":18,"path":["object","macho","FatArch32"],"kind":"struct"},"17:6323:13339":{"crate_id":17,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:3166:133":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"18:9738:13767":{"crate_id":18,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"18:9155:16686":{"crate_id":18,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:0:482":{"crate_id":1,"path":["core"],"kind":"module"},"18:8339:51359":{"crate_id":18,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:4626:14994":{"crate_id":17,"path":["gimli","constants","DwInl"],"kind":"struct"},"7:7226:16229":{"crate_id":7,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"7:501:15315":{"crate_id":7,"path":["libc","unix","timeval"],"kind":"struct"},"18:9382:14206":{"crate_id":18,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:2488:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"18:13007:14783":{"crate_id":18,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:2582:126":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"18:10139:13724":{"crate_id":18,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:4970:12882":{"crate_id":6,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:8091:12751":{"crate_id":6,"path":["std","fs","Permissions"],"kind":"struct"},"7:4475:15691":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:8685:12773":{"crate_id":6,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:8637:12990":{"crate_id":6,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:2772:11766":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"1:48182:188":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"17:524:13590":{"crate_id":17,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"8:0:1487":{"crate_id":8,"path":["unwind"],"kind":"module"},"1:3161:228":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"7:575:15360":{"crate_id":7,"path":["libc","unix","linger"],"kind":"struct"},"1:52029:12252":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"24:2520:1610":{"crate_id":24,"path":["typenum","generated","consts","U32"],"kind":"typedef"},"18:13492:14929":{"crate_id":18,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:719:39425":{"crate_id":6,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:11049:12111":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:49882:5266":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"5:6407:238":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:12374:1844":{"crate_id":6,"path":["std","char"],"kind":"primitive"},"6:5572:118":{"crate_id":6,"path":["std","path","Display"],"kind":"struct"},"18:13279:14882":{"crate_id":18,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:9618:12767":{"crate_id":6,"path":["std","time","Instant"],"kind":"struct"},"4:427:1912":{"crate_id":4,"path":["digest","XofReader"],"kind":"trait"},"7:4644:15761":{"crate_id":7,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:9295:181":{"crate_id":6,"path":["std","process","Output"],"kind":"struct"},"17:4208:14982":{"crate_id":17,"path":["gimli","constants","DwForm"],"kind":"struct"},"7:1668:15492":{"crate_id":7,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:6441:13421":{"crate_id":17,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"7:1541:15400":{"crate_id":7,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"7:4361:15673":{"crate_id":7,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"18:12638:14682":{"crate_id":18,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:6319:12593":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:6030:13412":{"crate_id":17,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"24:1251:5356":{"crate_id":24,"path":["typenum","type_operators","IsNotEqual"],"kind":"trait"},"14:0:1900":{"crate_id":14,"path":["std_detect"],"kind":"module"},"5:3328:158":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:5533:12608":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"18:13340:14889":{"crate_id":18,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"18:8951:65731":{"crate_id":18,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"7:4096:15526":{"crate_id":7,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:47236:12207":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"18:12176:14530":{"crate_id":18,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"19:727:13859":{"crate_id":19,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:49088:126":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:2860:11997":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:2678:107":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1:11678:187":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"6:6014:13017":{"crate_id":6,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:48097:11073":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"7:4726:15800":{"crate_id":7,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:1608:11074":{"crate_id":6,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:9519:16770":{"crate_id":6,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"7:4690:969":{"crate_id":7,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:5513:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"5:3531:12585":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:3419:13988":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:2500:13628":{"crate_id":17,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:5360:227":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:9328:5253":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"6:1114:12682":{"crate_id":6,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:4976:13994":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"6:4208:12874":{"crate_id":6,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"18:9422:16693":{"crate_id":18,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:7001:12234":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:2674:11028":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"18:10062:16702":{"crate_id":18,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:54069:10965":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:11381:12841":{"crate_id":6,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:50918:200":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"7:7279:16241":{"crate_id":7,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:6188:13415":{"crate_id":17,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"7:4745:15808":{"crate_id":7,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:4934:5383":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:859:5249":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:1552:11461":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:5642:13399":{"crate_id":17,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:2576:11489":{"crate_id":6,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:20002:60788":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:22001:12407":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:10808:12352":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"18:9791:16487":{"crate_id":18,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:3172:12099":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"19:671:13854":{"crate_id":19,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:6765:64101":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:944:12587":{"crate_id":6,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:4:979":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"1:20962:11770":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"24:2616:1612":{"crate_id":24,"path":["typenum","generated","consts","U64"],"kind":"typedef"},"1:4090:12318":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:20247:11770":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"7:4294:15640":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"21:92:11574":{"crate_id":21,"path":["blobby","Blob4Iterator"],"kind":"struct"},"18:8911:65732":{"crate_id":18,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"7:5692:15987":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"7:4280:15632":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:50416:12113":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"7:1887:45106":{"crate_id":7,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"18:10997:14296":{"crate_id":18,"path":["object","elf","Ident"],"kind":"struct"},"17:5715:13401":{"crate_id":17,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"18:10854:13761":{"crate_id":18,"path":["object","read","CompressionFormat"],"kind":"enum"},"7:1701:15508":{"crate_id":7,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:12378:1847":{"crate_id":6,"path":["std","array"],"kind":"primitive"},"18:13047:14793":{"crate_id":18,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"18:12278:14549":{"crate_id":18,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:6439:16758":{"crate_id":6,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"18:10075:16703":{"crate_id":18,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:49347:142":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"25:93:126":{"crate_id":25,"path":["block_buffer","Error"],"kind":"struct"},"6:11238:64982":{"crate_id":6,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"18:9371:16685":{"crate_id":18,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"24:989:11763":{"crate_id":24,"path":["typenum","private","PrivateDivInt"],"kind":"trait"},"6:10939:11499":{"crate_id":6,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"7:1518:15390":{"crate_id":7,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"22:44:1922":{"crate_id":22,"path":["crypto_common","Reset"],"kind":"trait"},"17:5402:13388":{"crate_id":17,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"0:0:1648":{"crate_id":0,"path":["sha2"],"kind":"module"},"1:50462:12120":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"7:4398:15685":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:52384:12256":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:49025:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"6:9397:12892":{"crate_id":6,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:20964:12087":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"7:5660:15974":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:2743:11031":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"15:160:16740":{"crate_id":15,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:11675:16553":{"crate_id":6,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:3230:11502":{"crate_id":6,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"7:4592:15743":{"crate_id":7,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:2029:179":{"crate_id":6,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:6811:60700":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"5:2039:12673":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:4266:12326":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:52094:12296":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"10:19:13161":{"crate_id":10,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"15:202:12656":{"crate_id":15,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:46436:196":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:7803:13979":{"crate_id":6,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:48046:176":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"6:1620:12643":{"crate_id":6,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:457:12910":{"crate_id":6,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:50784:120":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:48799:11138":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"7:4179:15587":{"crate_id":7,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"13:1836:11074":{"crate_id":13,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"13:353:13239":{"crate_id":13,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"7:131:43795":{"crate_id":7,"path":["libc","unix","FILE"],"kind":"enum"},"17:5379:13387":{"crate_id":17,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"4:330:1760":{"crate_id":4,"path":["digest","core_api","UpdateCore"],"kind":"trait"},"7:6509:16181":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"18:12251:14545":{"crate_id":18,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:46850:12364":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"7:5534:15899":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"7:1738:15520":{"crate_id":7,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"22:36:11617":{"crate_id":22,"path":["crypto_common","KeySizeUser"],"kind":"trait"},"1:20449:12086":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:50218:12356":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"6:7055:12881":{"crate_id":6,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:47132:12199":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:6632:13426":{"crate_id":17,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"24:6316:5197":{"crate_id":24,"path":["typenum","uint","UInt"],"kind":"struct"},"18:11259:14346":{"crate_id":18,"path":["object","elf","Versym"],"kind":"struct"},"6:7943:12790":{"crate_id":6,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:53420:12298":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:8552:13044":{"crate_id":6,"path":["std","net","parser","AddrKind"],"kind":"enum"},"6:3402:11469":{"crate_id":6,"path":["std","io","Read"],"kind":"trait"},"6:10984:12916":{"crate_id":6,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:4423:13050":{"crate_id":6,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"18:10296:16714":{"crate_id":18,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"7:4200:15595":{"crate_id":7,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:676:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:524:13962":{"crate_id":6,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"10:622:13114":{"crate_id":10,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"13:1120:13237":{"crate_id":13,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:7144:13432":{"crate_id":17,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:49049:129":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"24:783:11735":{"crate_id":24,"path":["typenum","private","InternalMarker"],"kind":"trait"},"17:7447:13344":{"crate_id":17,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:6164:13335":{"crate_id":17,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:29563:67":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:4195:202":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"17:6294:13363":{"crate_id":17,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"7:5841:16029":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"7:4659:15769":{"crate_id":7,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:2937:5249":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:49369:16600":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:52338:12271":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"18:12514:14588":{"crate_id":18,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:8047:126":{"crate_id":17,"path":["gimli","read","Error"],"kind":"enum"},"5:6787:193":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:48131:12442":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"7:4257:15624":{"crate_id":7,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:10108:13741":{"crate_id":18,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"24:1195:5324":{"crate_id":24,"path":["typenum","type_operators","Len"],"kind":"trait"},"7:4307:15646":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"18:9885:16700":{"crate_id":18,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"10:709:5927":{"crate_id":10,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:2921:13320":{"crate_id":17,"path":["gimli","common","SectionId"],"kind":"enum"},"18:11800:14456":{"crate_id":18,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:6567:12196":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:6313:13967":{"crate_id":6,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"18:9700:13763":{"crate_id":18,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"24:2568:1611":{"crate_id":24,"path":["typenum","generated","consts","U48"],"kind":"typedef"},"1:48249:11074":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:50000:11479":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"23:369:5366":{"crate_id":23,"path":["generic_array","GenericArrayImplEven"],"kind":"struct"},"18:10455:13836":{"crate_id":18,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:8761:12794":{"crate_id":6,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:58312:16447":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:2291:13640":{"crate_id":17,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:2285:183":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"18:10497:51621":{"crate_id":18,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"7:5699:15988":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:47031:14005":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:46951:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:8575:13045":{"crate_id":6,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:48321:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"23:437:5369":{"crate_id":23,"path":["generic_array","ArrayConsumer"],"kind":"struct"},"18:10506:14257":{"crate_id":18,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:47122:12198":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"18:13141:14822":{"crate_id":18,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:53030:12272":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:6721:13427":{"crate_id":17,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"24:2392:11770":{"crate_id":24,"path":["typenum","sealed","Sealed"],"kind":"trait"},"23:403:1809":{"crate_id":23,"path":["generic_array","GenericArray"],"kind":"struct"},"18:13366:14897":{"crate_id":18,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:6308:13418":{"crate_id":17,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"18:11271:14347":{"crate_id":18,"path":["object","elf","Verdef"],"kind":"struct"},"21:0:1906":{"crate_id":21,"path":["blobby"],"kind":"module"},"4:424:1911":{"crate_id":4,"path":["digest","FixedOutputReset"],"kind":"trait"},"1:50322:12363":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:2399:12956":{"crate_id":6,"path":["std","fs","canonicalize"],"kind":"function"},"17:5974:13409":{"crate_id":17,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:7189:13326":{"crate_id":17,"path":["gimli","read","op","Expression"],"kind":"struct"},"18:11485:14405":{"crate_id":18,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:21902:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:2680:223":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"6:3459:11131":{"crate_id":6,"path":["std","io","Write"],"kind":"trait"},"1:3188:12103":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:1185:12679":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:39327:11762":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"7:135:43796":{"crate_id":7,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:7350:13657":{"crate_id":17,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:1216:12680":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:54014:5769":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"7:4191:15590":{"crate_id":7,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"18:9947:51548":{"crate_id":18,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"10:592:13113":{"crate_id":10,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"18:11974:14502":{"crate_id":18,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:21389:12420":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"19:690:13856":{"crate_id":19,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:11755:58732":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"18:11199:14333":{"crate_id":18,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:412:11614":{"crate_id":6,"path":["std","thread","local","fast","Key"],"kind":"struct"},"20:0:995":{"crate_id":20,"path":["panic_unwind"],"kind":"module"},"15:0:1901":{"crate_id":15,"path":["rustc_demangle"],"kind":"module"},"1:52408:12257":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:21356:16575":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:6040:13018":{"crate_id":6,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"13:822:12866":{"crate_id":13,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:46480:5241":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"1:20021:60874":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:3228:11501":{"crate_id":6,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:4130:11150":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"18:11247:14345":{"crate_id":18,"path":["object","elf","Dyn64"],"kind":"struct"},"24:2508:1609":{"crate_id":24,"path":["typenum","generated","consts","U28"],"kind":"typedef"},"7:4247:15618":{"crate_id":7,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"19:548:138":{"crate_id":19,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"18:13114:14815":{"crate_id":18,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"18:10420:13835":{"crate_id":18,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:5461:12216":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"7:6448:16138":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:20421:35676":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:6646:13648":{"crate_id":17,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"18:9820:13822":{"crate_id":18,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:1105:12680":{"crate_id":6,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:54118:10968":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:939:13988":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"25:36:1773":{"crate_id":25,"path":["block_buffer","BufferKind"],"kind":"trait"},"24:613:177":{"crate_id":24,"path":["typenum","marker_traits","Ord"],"kind":"trait"},"1:48511:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:7850:13351":{"crate_id":17,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:4510:14990":{"crate_id":17,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:11040:12109":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:51695:16437":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"18:247:16676":{"crate_id":18,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:51909:16439":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:0:430":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"18:11436:14380":{"crate_id":18,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:50737:12375":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"6:12021:13265":{"crate_id":6,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:12384:1851":{"crate_id":6,"path":["std","f32"],"kind":"primitive"},"17:5175:49736":{"crate_id":17,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:11778:11614":{"crate_id":6,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:57016:240":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:9021:16684":{"crate_id":18,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:193:13257":{"crate_id":16,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"18:10445:13801":{"crate_id":18,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"7:1511:15387":{"crate_id":7,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:5226:15005":{"crate_id":17,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"18:12073:14512":{"crate_id":18,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:52010:16440":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:7276:13438":{"crate_id":17,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"7:4653:15767":{"crate_id":7,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:51992:12267":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"18:13214:14838":{"crate_id":18,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:6997:5336":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:9483:5257":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"8:79:48940":{"crate_id":8,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:3386:12063":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"1:21214:16339":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"18:11125:14322":{"crate_id":18,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:6749:12587":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:0:1902":{"crate_id":16,"path":["addr2line"],"kind":"module"},"17:6124:13383":{"crate_id":17,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"18:10434:16488":{"crate_id":18,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:11261:110":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:4063:12317":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"6:8944:12820":{"crate_id":6,"path":["std","path","Components"],"kind":"struct"},"1:11630:26953":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:48173:25059":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"4:357:1765":{"crate_id":4,"path":["digest","digest","HashMarker"],"kind":"trait"},"18:11174:14331":{"crate_id":18,"path":["object","elf","Rel64"],"kind":"struct"},"1:49812:5247":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:667:226":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"7:5510:15890":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"18:8981:16683":{"crate_id":18,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"24:1184:5310":{"crate_id":24,"path":["typenum","type_operators","Pow"],"kind":"trait"},"1:47548:14011":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:49822:5259":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"7:4683:15783":{"crate_id":7,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:14:1873":{"crate_id":1,"path":["core","write"],"kind":"macro"},"6:969:12668":{"crate_id":6,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"13:1518:13247":{"crate_id":13,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:50278:12358":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:3462:11492":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"7:4534:15712":{"crate_id":7,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"4:457:11625":{"crate_id":4,"path":["digest","core_api","ct_variable","NoOid"],"kind":"struct"},"4:448:1916":{"crate_id":4,"path":["digest","VariableOutputReset"],"kind":"trait"},"18:8752:11479":{"crate_id":18,"path":["object","read","util","Bytes"],"kind":"struct"},"1:2908:115":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"18:11368:14378":{"crate_id":18,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:8794:41946":{"crate_id":6,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:50164:12353":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:6855:13429":{"crate_id":17,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:46546:16805":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:11607:12767":{"crate_id":6,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:6506:13423":{"crate_id":17,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:12399:1866":{"crate_id":6,"path":["std","fn"],"kind":"primitive"},"7:5568:15923":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:47262:12209":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"18:13203:14837":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"24:1905:11926":{"crate_id":24,"path":["typenum","uint","SetBit"],"kind":"trait"},"6:8389:11474":{"crate_id":6,"path":["std","io","SeekFrom"],"kind":"enum"},"1:8813:138":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"18:9293:13818":{"crate_id":18,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:2252:13599":{"crate_id":17,"path":["gimli","common","Format"],"kind":"enum"},"6:8069:12946":{"crate_id":6,"path":["std","fs","ReadDir"],"kind":"struct"},"6:4015:12989":{"crate_id":6,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:7960:39946":{"crate_id":6,"path":["std","env","VarError"],"kind":"enum"},"1:12073:1560":{"crate_id":1,"path":["core","core_arch","arch","x86_64"],"kind":"module"},"1:49895:5261":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:6037:13614":{"crate_id":17,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:7413:13376":{"crate_id":17,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:46881:12551":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:46777:16581":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:9321:12840":{"crate_id":6,"path":["std","process","ExitStatusError"],"kind":"struct"},"18:13158:14826":{"crate_id":18,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:8539:205":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"6:9656:12769":{"crate_id":6,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:7297:13440":{"crate_id":17,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:2256:11470":{"crate_id":6,"path":["std","fs","read_to_string"],"kind":"function"},"24:1168:5351":{"crate_id":24,"path":["typenum","type_operators","Same"],"kind":"trait"},"1:49990:12345":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:51970:12263":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"18:8393:13684":{"crate_id":18,"path":["object","common","SegmentFlags"],"kind":"enum"},"18:11594:14427":{"crate_id":18,"path":["object","macho","LoadCommand"],"kind":"struct"},"19:564:13869":{"crate_id":19,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"24:844:11805":{"crate_id":24,"path":["typenum","private","PrivatePow"],"kind":"trait"},"18:8881:65734":{"crate_id":18,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:9335:12841":{"crate_id":6,"path":["std","process","ExitCode"],"kind":"struct"},"6:11173:12750":{"crate_id":6,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"7:5480:15873":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:6083:11074":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:48233:5249":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"17:7071:13431":{"crate_id":17,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:52362:12253":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:12010:11041":{"crate_id":1,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"1:2788:12048":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:47192:12218":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"18:11576:14426":{"crate_id":18,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:52718:12285":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"18:8871:16681":{"crate_id":18,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:6957:12660":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"18:8701:14199":{"crate_id":18,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:6614:12157":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"18:13192:14833":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"13:1534:13248":{"crate_id":13,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:7980:11762":{"crate_id":6,"path":["std","error","private","Internal"],"kind":"struct"},"18:9108:16685":{"crate_id":18,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"19:766:13862":{"crate_id":19,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"13:2198:15226":{"crate_id":13,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"7:4816:15843":{"crate_id":7,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:2821:11737":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"24:1279:5311":{"crate_id":24,"path":["typenum","type_operators","ToInt"],"kind":"trait"},"18:12237:14544":{"crate_id":18,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:4840:15001":{"crate_id":17,"path":["gimli","constants","DwLnct"],"kind":"struct"},"18:487:16678":{"crate_id":18,"path":["object","read","any","Comdat"],"kind":"struct"},"10:33:13162":{"crate_id":10,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"13:1866:12642":{"crate_id":13,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"18:3125:16680":{"crate_id":18,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:2478:13616":{"crate_id":17,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:49972:12015":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:48258:178":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:47245:12208":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:3623:14977":{"crate_id":17,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:0:1340":{"crate_id":6,"path":["std"],"kind":"module"},"13:1681:141":{"crate_id":13,"path":["hashbrown","set","HashSet"],"kind":"struct"},"18:13580:14951":{"crate_id":18,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"10:188:13138":{"crate_id":10,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"5:6822:11074":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:5658:12833":{"crate_id":6,"path":["std","process","ChildStdin"],"kind":"struct"},"7:1714:15511":{"crate_id":7,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:1737:12491":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:2494:131":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"7:4461:15690":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4115:12996":{"crate_id":6,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"18:12134:14522":{"crate_id":18,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:2728:16331":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"18:13354:14895":{"crate_id":18,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:52047:16441":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"13:777:13226":{"crate_id":13,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:6597:13425":{"crate_id":17,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"15:165:49665":{"crate_id":15,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:5519:13395":{"crate_id":17,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:4680:14996":{"crate_id":17,"path":["gimli","constants","DwDsc"],"kind":"struct"},"19:719:13858":{"crate_id":19,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:50936:190":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"6:3420:11471":{"crate_id":6,"path":["std","io","IoSliceMut"],"kind":"struct"},"18:11034:14309":{"crate_id":18,"path":["object","elf","SectionHeader64"],"kind":"struct"},"7:6322:16090":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"27:0:1650":{"crate_id":27,"path":["cpufeatures"],"kind":"module"},"6:5504:185":{"crate_id":6,"path":["std","path","Path"],"kind":"struct"},"6:10942:11501":{"crate_id":6,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"6:12375:1845":{"crate_id":6,"path":["std","unit"],"kind":"primitive"},"7:495:15312":{"crate_id":7,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:5592:13588":{"crate_id":17,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"4:291:5219":{"crate_id":4,"path":["digest","core_api","wrapper","CoreProxy"],"kind":"trait"},"1:47313:12211":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:12356:64251":{"crate_id":6,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:3178:12102":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:46814:12243":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:5892:12889":{"crate_id":6,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:11218:117":{"crate_id":6,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:46370:193":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"1:50268:11481":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"13:0:1899":{"crate_id":13,"path":["hashbrown"],"kind":"module"},"1:8540:11131":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1:48164:12444":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"18:10532:126":{"crate_id":18,"path":["object","read","Error"],"kind":"struct"},"24:1174:5352":{"crate_id":24,"path":["typenum","type_operators","Abs"],"kind":"trait"},"24:1241:5355":{"crate_id":24,"path":["typenum","type_operators","IsLessOrEqual"],"kind":"trait"},"17:5927:13408":{"crate_id":17,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"22:46:1753":{"crate_id":22,"path":["crypto_common","AlgorithmName"],"kind":"trait"},"1:2497:232":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"17:2859:13597":{"crate_id":17,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:20699:12089":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:9637:12768":{"crate_id":6,"path":["std","time","SystemTime"],"kind":"struct"},"1:49843:5267":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:8155:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:11968:12301":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"17:4777:14999":{"crate_id":17,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:20447:12250":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"7:7289:16243":{"crate_id":7,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"15:215:16532":{"crate_id":15,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"18:12850:14750":{"crate_id":18,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:13404:14906":{"crate_id":18,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:11846:12097":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"6:4322:12737":{"crate_id":6,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:36:12584":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:7429:12156":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"18:13059:14799":{"crate_id":18,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:2767:11767":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"24:1272:5334":{"crate_id":24,"path":["typenum","type_operators","SquareRoot"],"kind":"trait"},"18:420:13305":{"crate_id":18,"path":["object","read","any","Section"],"kind":"struct"},"1:3960:12000":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:6823:12319":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:4676:23812":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:50288:12359":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:2942:5664":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"24:653:5339":{"crate_id":24,"path":["typenum","marker_traits","TypeArray"],"kind":"trait"},"6:2397:12955":{"crate_id":6,"path":["std","fs","read_link"],"kind":"function"},"17:7287:13439":{"crate_id":17,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"7:7220:16228":{"crate_id":7,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4904:16107":{"crate_id":6,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:1426:193":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"7:4621:15754":{"crate_id":7,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:2019:64096":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"24:1190:5305":{"crate_id":24,"path":["typenum","type_operators","Cmp"],"kind":"trait"},"25:106:5214":{"crate_id":25,"path":["block_buffer","BlockBuffer"],"kind":"struct"},"17:5154:13600":{"crate_id":17,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:7475:13340":{"crate_id":17,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:7298:65482":{"crate_id":6,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:2727:64088":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:5964:12587":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:5771:13404":{"crate_id":17,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:4737:12608":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:3190:11499":{"crate_id":6,"path":["std","io","stdio","Stdin"],"kind":"struct"},"18:10520:14260":{"crate_id":18,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"18:9930:14213":{"crate_id":18,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"7:4598:15746":{"crate_id":7,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:12383:5840":{"crate_id":1,"path":["core","core_arch","x86","cpuid","__cpuid"],"kind":"function"},"13:444:139":{"crate_id":13,"path":["hashbrown","map","HashMap"],"kind":"struct"},"18:10403:13700":{"crate_id":18,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:6654:13341":{"crate_id":17,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"18:9488:13678":{"crate_id":18,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:20856:5245":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"7:7208:16226":{"crate_id":7,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:2673:5660":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"18:13327:14883":{"crate_id":18,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"4:0:1602":{"crate_id":4,"path":["digest"],"kind":"module"},"7:6392:16115":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"24:1153:11835":{"crate_id":24,"path":["typenum","private","PrivateLogarithm2"],"kind":"trait"},"1:49914:5262":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:50032:5257":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:46458:198":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:11762:16560":{"crate_id":6,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:8743:16799":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:54023:10962":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:9631:13710":{"crate_id":18,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"7:4427:15687":{"crate_id":7,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:12385:1852":{"crate_id":6,"path":["std","f64"],"kind":"primitive"},"18:9183:16687":{"crate_id":18,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:1435:12669":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"19:582:11034":{"crate_id":19,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:1002:12869":{"crate_id":6,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"24:1016:11826":{"crate_id":24,"path":["typenum","private","PrivateMax"],"kind":"trait"},"6:8104:128":{"crate_id":6,"path":["std","fs","FileType"],"kind":"struct"},"1:48259:203":{"crate_id":1,"path":["core","sync","atomic","Ordering","Relaxed"],"kind":"foreign_type"},"6:4012:12988":{"crate_id":6,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"18:10360:13834":{"crate_id":18,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"7:1686:15499":{"crate_id":7,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:50574:12123":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"18:9627:13720":{"crate_id":18,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:4252:12739":{"crate_id":6,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"7:4768:15816":{"crate_id":7,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:21290:58152":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"24:612:5307":{"crate_id":24,"path":["typenum","marker_traits","Zero"],"kind":"trait"},"6:9524:16771":{"crate_id":6,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"18:9118:65728":{"crate_id":18,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:5856:13407":{"crate_id":17,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:49794:5248":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"18:13231:14845":{"crate_id":18,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"14:108:65720":{"crate_id":14,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:7022:13606":{"crate_id":17,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"18:11748:14450":{"crate_id":18,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:8225:11493":{"crate_id":6,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:4439:13053":{"crate_id":6,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:6048:13325":{"crate_id":17,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:7922:39421":{"crate_id":6,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:451:12909":{"crate_id":6,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4892:12741":{"crate_id":6,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:2978:12643":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:46858:12550":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"0:100:1641":{"crate_id":0,"path":["sha2","Sha512_224"],"kind":"typedef"},"5:6974:16332":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"6:1091:12679":{"crate_id":6,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:2321:177":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"1:47514:16594":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"18:12022:14507":{"crate_id":18,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:9132:217":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"7:5672:15979":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"18:10221:16708":{"crate_id":18,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:9477:11965":{"crate_id":6,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:7215:13433":{"crate_id":17,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"18:11813:14458":{"crate_id":18,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:7992:13379":{"crate_id":17,"path":["gimli","read","value","Value"],"kind":"enum"},"6:7953:12870":{"crate_id":6,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:2596:13670":{"crate_id":17,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"18:8368:13699":{"crate_id":18,"path":["object","common","FileFlags"],"kind":"enum"},"5:3723:12587":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"7:4224:15609":{"crate_id":7,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:50588:12124":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:6354:13420":{"crate_id":17,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"18:12148:14524":{"crate_id":18,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"18:12265:14548":{"crate_id":18,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:842:12709":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"13:1628:13960":{"crate_id":13,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:7095:13609":{"crate_id":17,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:5113:15004":{"crate_id":17,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:7335:13356":{"crate_id":17,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:1033:64181":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"18:12797:14737":{"crate_id":18,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"24:5780:5200":{"crate_id":24,"path":["typenum","int","NInt"],"kind":"struct"},"6:5225:41945":{"crate_id":6,"path":["std","panic","always_abort"],"kind":"function"},"7:6277:16066":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"18:9805:13821":{"crate_id":18,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:6434:1792":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:11198:12948":{"crate_id":6,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"6:8862:5927":{"crate_id":6,"path":["std","path","State"],"kind":"enum"},"18:8822:65726":{"crate_id":18,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:11447:1922":{"crate_id":6,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:7190:13976":{"crate_id":6,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:49573:5278":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:52459:16442":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:21161:16337":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:47183:12204":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:4266:12741":{"crate_id":6,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:2456:13639":{"crate_id":17,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"18:11787:14454":{"crate_id":18,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:39291:5972":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:50817:12465":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:21770:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:7461:13345":{"crate_id":17,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:4204:12321":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"18:11873:14466":{"crate_id":18,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:21250:12027":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"4:421:1910":{"crate_id":4,"path":["digest","FixedOutput"],"kind":"trait"},"7:4115:15536":{"crate_id":7,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:50599:12125":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"13:751:12587":{"crate_id":13,"path":["hashbrown","map","Drain"],"kind":"struct"},"7:5595:15930":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:53958:12293":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"21:118:11576":{"crate_id":21,"path":["blobby","Blob6Iterator"],"kind":"struct"},"17:6545:13353":{"crate_id":17,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:2548:13618":{"crate_id":17,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:46771:12363":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:931:12665":{"crate_id":6,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:20208:12249":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"7:1695:15505":{"crate_id":7,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:5574:13397":{"crate_id":17,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:50741:12374":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:6495:13253":{"crate_id":17,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:10824:12355":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:52506:16443":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:10577:12801":{"crate_id":6,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:48435:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:11856:12387":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"18:12674:14712":{"crate_id":18,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:1404:12667":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:2402:13634":{"crate_id":17,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:50136:5251":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"7:7266:16240":{"crate_id":7,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"18:12485:14568":{"crate_id":18,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"13:725:12647":{"crate_id":13,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:5384:12202":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:48549:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:9532:13430":{"crate_id":6,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"4:336:5212":{"crate_id":4,"path":["digest","core_api","ExtendableOutputCore"],"kind":"trait"},"13:1845:12585":{"crate_id":13,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"5:3339:5249":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:49322:11360":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:47558:16426":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"24:6272:5237":{"crate_id":24,"path":["typenum","Less"],"kind":"struct"},"6:12028:13265":{"crate_id":6,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:52316:12268":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:9413:12893":{"crate_id":6,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"18:13168:14829":{"crate_id":18,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:50537:12122":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:3192:11500":{"crate_id":6,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:4314:12744":{"crate_id":6,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"18:9328:13815":{"crate_id":18,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"23:195:5375":{"crate_id":23,"path":["generic_array","iter","GenericArrayIter"],"kind":"struct"},"1:50992:156":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"6:5392:186":{"crate_id":6,"path":["std","path","PathBuf"],"kind":"struct"},"7:4317:15653":{"crate_id":7,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"10:505:13061":{"crate_id":10,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:6757:12711":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"7:5605:15937":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:2685:5293":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"5:0:280":{"crate_id":5,"path":["alloc"],"kind":"module"},"7:5741:16007":{"crate_id":7,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:6337:13419":{"crate_id":17,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:10404:13003":{"crate_id":6,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"18:9061:13724":{"crate_id":18,"path":["object","read","any","SymbolTable"],"kind":"struct"},"18:10721:14274":{"crate_id":18,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"18:12909:14762":{"crate_id":18,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"7:487:15307":{"crate_id":7,"path":["libc","unix","group"],"kind":"struct"},"13:762:12585":{"crate_id":13,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"5:1933:12929":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"24:835:11764":{"crate_id":24,"path":["typenum","private","PrivateIntegerAdd"],"kind":"trait"},"1:48122:11074":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"24:1878:11924":{"crate_id":24,"path":["typenum","uint","GetBit"],"kind":"trait"},"1:51785:12274":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"22:22:1755":{"crate_id":22,"path":["crypto_common","BlockSizeUser"],"kind":"trait"},"19:624:65737":{"crate_id":19,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"}},"external_crates":{"26":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"7":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"digest","html_root_url":null},"25":{"name":"block_buffer","html_root_url":null},"20":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"27":{"name":"cpufeatures","html_root_url":null},"16":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"crypto_common","html_root_url":null},"19":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"generic_array","html_root_url":null},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"typenum","html_root_url":"https://docs.rs/typenum/1.16.0/"},"10":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"blobby","html_root_url":"https://docs.rs/blobby/0.3.1/"},"15":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"6":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"}},"format_version":23}