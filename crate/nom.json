{"root":"0:0:1856","crate_version":"7.1.1","includes_private":false,"index":{"0:4852":{"id":"0:4852","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"}]},"items":["0:4861:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[437,0],"end":[437,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::traits","name":"traits","id":"0:660:1844","glob":true}},"0:783:2577":{"id":"0:783:2577","crate_id":0,"name":"is_alpha","span":{"filename":"src/traits.rs","begin":[245,2],"end":[247,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:876:2644":{"id":"0:876:2644","crate_id":0,"name":"split_at_position1","span":{"filename":"src/traits.rs","begin":[575,2],"end":[588,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5518:17127":{"id":"1:5518:17127","crate_id":1,"name":"custom_flags","span":null,"visibility":"default","docs":"Pass custom flags to the `flags` argument of `open`.\n\nThe bits that define the access mode are masked out with `O_ACCMODE`, to\nensure they do not interfere with the access mode set by Rusts options.\n\nCustom flags can only set flags, not remove flags set by Rusts options.\nThis options overwrites any previously set custom flags.\n\n# Examples\n\n```no_run\n# #![feature(rustc_private)]\nextern crate libc;\nuse std::fs::OpenOptions;\nuse std::os::unix::fs::OpenOptionsExt;\n\n# fn main() {\nlet mut options = OpenOptions::new();\noptions.write(true);\nif cfg!(unix) {\n    options.custom_flags(libc::O_NOFOLLOW);\n}\nlet file = options.open(\"foo.txt\");\n# }\n```","links":{},"attrs":["#[stable(feature = \"open_options_ext\", since = \"1.10.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["flags",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3899":{"id":"0:3899","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3903:2657","0:3905:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4465:2663":{"id":"0:4465:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9032:3009":{"id":"2:9032:3009","crate_id":2,"name":"fold","span":null,"visibility":"default","docs":"Folds every element into an accumulator by applying an operation,\nreturning the final result.\n\n`fold()` takes two arguments: an initial value, and a closure with two\narguments: an 'accumulator', and an element. The closure returns the value that\nthe accumulator should have for the next iteration.\n\nThe initial value is the value the accumulator will have on the first\ncall.\n\nAfter applying this closure to every element of the iterator, `fold()`\nreturns the accumulator.\n\nThis operation is sometimes called 'reduce' or 'inject'.\n\nFolding is useful whenever you have a collection of something, and want\nto produce a single value from it.\n\nNote: `fold()`, and similar methods that traverse the entire iterator,\nmight not terminate for infinite iterators, even on traits for which a\nresult is determinable in finite time.\n\nNote: [`reduce()`] can be used to use the first element as the initial\nvalue, if the accumulator type and item type is the same.\n\nNote: `fold()` combines elements in a *left-associative* fashion. For associative\noperators like `+`, the order the elements are combined in is not important, but for non-associative\noperators like `-` the order will affect the final result.\nFor a *right-associative* version of `fold()`, see [`DoubleEndedIterator::rfold()`].\n\n# Note to Implementors\n\nSeveral of the other (forward) methods have default implementations in\nterms of this one, so try to implement this explicitly if it can\ndo something better than the default `for` loop implementation.\n\nIn particular, try to have this call `fold()` on the internal parts\nfrom which this iterator is composed.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\n// the sum of all of the elements of the array\nlet sum = a.iter().fold(0, |acc, x| acc + x);\n\nassert_eq!(sum, 6);\n```\n\nLet's walk through each step of the iteration here:\n\n| element | acc | x | result |\n|---------|-----|---|--------|\n|         | 0   |   |        |\n| 1       | 0   | 1 | 1      |\n| 2       | 1   | 2 | 3      |\n| 3       | 3   | 3 | 6      |\n\nAnd so, our final result, `6`.\n\nThis example demonstrates the left-associative nature of `fold()`:\nit builds a string, starting with an initial value\nand continuing with each element from the front until the back:\n\n```\nlet numbers = [1, 2, 3, 4, 5];\n\nlet zero = \"0\".to_string();\n\nlet result = numbers.iter().fold(zero, |acc, &x| {\n    format!(\"({acc} + {x})\")\n});\n\nassert_eq!(result, \"(((((0 + 1) + 2) + 3) + 4) + 5)\");\n```\nIt's common for people who haven't used iterators a lot to\nuse a `for` loop with a list of things to build up a result. Those\ncan be turned into `fold()`s:\n\n[`for`]: ../../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n\n```\nlet numbers = [1, 2, 3, 4, 5];\n\nlet mut result = 0;\n\n// for loop:\nfor i in &numbers {\n    result = result + i;\n}\n\n// fold:\nlet result2 = numbers.iter().fold(0, |acc, &x| acc + x);\n\n// they're the same\nassert_eq!(result, result2);\n```\n\n[`reduce()`]: Iterator::reduce","links":{"`DoubleEndedIterator::rfold()`":"2:8776:5385","Iterator::reduce":"2:9035:5414"},"attrs":["#[doc(alias = \"inject\", alias = \"foldl\")]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5537:60816":{"id":"1:5537:60816","crate_id":1,"name":"blksize","span":null,"visibility":"default","docs":"Returns the block size for filesystem I/O.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let block_size = meta.blksize();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3767:2610":{"id":"0:3767:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3401":{"id":"0:3401","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}},"items":["0:3404:2425","0:3405:2548","0:3406:2608","0:3407:2610","0:3408:2612","0:3409:1026","0:3411:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4097:2663":{"id":"0:4097:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2730:2013":{"id":"b:2:3213-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2866:2122":{"id":"0:2866:2122","crate_id":0,"name":"Fail","span":{"filename":"src/error.rs","begin":[419,2],"end":[419,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:9035:5414":{"id":"2:9035:5414","crate_id":2,"name":"reduce","span":null,"visibility":"default","docs":"Reduces the elements to a single one, by repeatedly applying a reducing\noperation.\n\nIf the iterator is empty, returns [`None`]; otherwise, returns the\nresult of the reduction.\n\nThe reducing function is a closure with two arguments: an 'accumulator', and an element.\nFor iterators with at least one element, this is the same as [`fold()`]\nwith the first element of the iterator as the initial accumulator value, folding\nevery subsequent element into it.\n\n[`fold()`]: Iterator::fold\n\n# Example\n\nFind the maximum value:\n\n```\nfn find_max<I>(iter: I) -> Option<I::Item>\n    where I: Iterator,\n          I::Item: Ord,\n{\n    iter.reduce(|accum, item| {\n        if accum >= item { accum } else { item }\n    })\n}\nlet a = [10, 20, 5, -23, 0];\nlet b: [u32; 0] = [];\n\nassert_eq!(find_max(a.iter()), Some(&20));\nassert_eq!(find_max(b.iter()), None);\n```","links":{"Iterator::fold":"2:9032:3009","`None`":"2:47911:178"},"attrs":["#[stable(feature = \"iterator_fold_self\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4247:2610":{"id":"0:4247:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[65,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:88:931"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4004:2425":{"id":"0:4004:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:1214:2936":{"id":"0:1214:2936","crate_id":0,"name":"many_m_n","span":{"filename":"src/multi/mod.rs","begin":[350,0],"end":[393,1]},"visibility":"public","docs":"Repeats the embedded parser `n` times or until it fails\nand returns the results in a `Vec`. Fails if the\nembedded parser does not succeed at least `m` times.\n# Arguments\n* `m` The minimum number of iterations.\n* `n` The maximum number of iterations.\n* `f` The parser to apply.\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::multi::many_m_n;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  many_m_n(0, 2, tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));\nassert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));\nassert_eq!(parser(\"\"), Ok((\"\", vec![])));\nassert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["min",{"kind":"primitive","inner":"usize"}],["max",{"kind":"primitive","inner":"usize"}],["parse",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3150:2051":{"id":"0:3150:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:597:2521":{"id":"0:597:2521","crate_id":0,"name":"AndThen","span":{"filename":"src/internal.rs","begin":[375,0],"end":[379,1]},"visibility":"public","docs":"Implementation of `Parser::and_then`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:3793:2673":{"id":"0:3793:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8251:9383":{"id":"2:8251:9383","crate_id":2,"name":"forward","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *successor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`,\nthis function is allowed to panic, wrap, or saturate.\nThe suggested behavior is to panic when debug assertions are enabled,\nand to wrap or saturate otherwise.\n\nUnsafe code should not rely on the correctness of behavior after overflow.\n\n# Invariants\n\nFor any `a`, `n`, and `m`, where no overflow occurs:\n\n* `Step::forward(Step::forward(a, n), m) == Step::forward(a, n + m)`\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::forward_checked(a, n) == Some(Step::forward(a, n))`\n* `Step::forward(a, n) == (0..n).fold(a, |x, _| Step::forward(x, 1))`\n  * Corollary: `Step::forward(a, 0) == a`\n* `Step::forward(a, n) >= a`\n* `Step::backward(Step::forward(a, n), n) == a`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4277":{"id":"0:4277","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}},"items":["0:4280:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3754":{"id":"0:3754","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}},"items":["0:3756:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3910":{"id":"0:3910","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}},"items":["0:3913:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:351:2352":{"id":"0:351:2352","crate_id":0,"name":"value","span":{"filename":"src/combinator/mod.rs","begin":[451,0],"end":[459,1]},"visibility":"public","docs":"Returns the provided value if the child parser succeeds.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::value;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nlet mut parser = value(1234, alpha1);\n\nassert_eq!(parser(\"abcd\"), Ok((\"\", 1234)));\nassert_eq!(parser(\"123abcd;\"), Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"O1"}],["parser",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23264:14720":{"id":"2:23264:14720","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23265:14651","2:23266:1267","2:23267:1294"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:6093":{"id":"0:6093","crate_id":0,"name":null,"span":{"filename":"src/number/mod.rs","begin":[7,9],"end":[7,14]},"visibility":{"restricted":{"parent":"0:2234:1851","path":"::number"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:6094:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9615:5288-0:3154:2228":{"id":"a:2:9615:5288-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:922":{"id":"0:922","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[826,0],"end":[835,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:925:2657","0:926:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3011":{"id":"0:3011","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}},"items":["0:3013:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2581:3995":{"id":"0:2581:3995","crate_id":0,"name":"be_i8","span":{"filename":"src/number/streaming.rs","begin":[241,0],"end":[246,1]},"visibility":"public","docs":"Recognizes a signed 1 byte integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_i8;\n\nlet parser = be_i8::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10884:723":{"id":"2:10884:723","crate_id":2,"name":"hash","span":null,"visibility":"default","docs":"Feeds this value into the given [`Hasher`].\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::{Hash, Hasher};\n\nlet mut hasher = DefaultHasher::new();\n7920.hash(&mut hasher);\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```","links":{"`Hasher`":"2:10893:147"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10893:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2718:128":{"id":"0:2718:128","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[58,0],"end":[63,1]},"visibility":"public","docs":"default error type, only contains the error' location and code","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2720:1971","0:2721:2001"],"fields_stripped":false}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:86","a:2:3370:217-0:2718:128","a:2:9616:5287-0:2718:128","a:2:3382:225-0:2718:128","a:2:3411:4730-0:2718:128","a:2:9615:5288-0:2718:128","b:2:3285-0:2718:128","b:2:4145-0:2718:128","b:2:3203-0:2718:128","b:2:2865-0:2718:128","b:2:2868-0:2718:128","b:2:3207-0:2718:128","b:2:3213-0:2718:128","b:2:3218-0:2718:128","b:5:6506-0:2718:128","0:2722","0:2725","0:2727","0:89","0:93","0:95","0:99","0:102","0:1059","0:1062"]}},"0:6086:3949":{"id":"0:6086:3949","crate_id":0,"name":"Endianness","span":{"filename":"src/number/mod.rs","begin":[8,0],"end":[15,1]},"visibility":"public","docs":"Configurable endianness","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:6087:3951","0:6089:3953","0:6091:3955"],"impls":["a:2:3370:217-0:6086:3949","a:2:9616:5287-0:6086:3949","a:2:3382:225-0:6086:3949","a:2:3411:4730-0:6086:3949","a:2:9615:5288-0:6086:3949","b:2:4145-0:6086:3949","b:2:3203-0:6086:3949","b:2:2865-0:6086:3949","b:2:2868-0:6086:3949","b:2:3207-0:6086:3949","b:2:3213-0:6086:3949","b:2:3218-0:6086:3949","b:5:848-0:6086:3949","0:6093","0:6095","0:6096","0:6098","0:6099","0:6101","0:6103"]}},"0:2943:2051":{"id":"0:2943:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5436:2051":{"id":"1:5436:2051","crate_id":1,"name":"as_bytes","span":null,"visibility":"default","docs":"Gets the underlying byte view of the [`OsStr`] slice.\n\nSee the module documentation for an example.","links":{"`OsStr`":"1:2654:183"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3521":{"id":"0:3521","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}},"items":["0:3524:2425","0:3525:2548","0:3526:2608","0:3527:2610","0:3528:2612","0:3529:1026","0:3531:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3882:4807":{"id":"2:3882:4807","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3884:56962"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3062:2051":{"id":"0:3062:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5041:2786":{"id":"0:5041:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2961:2051":{"id":"0:2961:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4019":{"id":"0:4019","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4023:2657","0:4025:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1963:3516":{"id":"0:1963:3516","crate_id":0,"name":"crlf","span":{"filename":"src/character/complete.rs","begin":[141,0],"end":[155,1]},"visibility":"public","docs":"Recognizes the string \"\\r\\n\".\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult};\n# use nom::character::complete::crlf;\nfn parser(input: &str) -> IResult<&str, &str> {\n    crlf(input)\n}\n\nassert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));\nassert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3417:2663":{"id":"0:3417:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4498:60858":{"id":"1:4498:60858","crate_id":1,"name":"read_line","span":null,"visibility":"default","docs":"Read all bytes until a newline (the `0xA` byte) is reached, and append\nthem to the provided buffer. You do not need to clear the buffer before\nappending.\n\nThis function will read bytes from the underlying stream until the\nnewline delimiter (the `0xA` byte) or EOF is found. Once found, all bytes\nup to, and including, the delimiter (if found) will be appended to\n`buf`.\n\nIf successful, this function will return the total number of bytes read.\n\nIf this function returns [`Ok(0)`], the stream has reached EOF.\n\nThis function is blocking and should be used carefully: it is possible for\nan attacker to continuously send bytes without ever sending a newline\nor EOF.\n\n[`Ok(0)`]: Ok\n\n# Errors\n\nThis function has the same error semantics as [`read_until`] and will\nalso return an error if the read bytes are not valid UTF-8. If an I/O\nerror is encountered then `buf` may contain some bytes already read in\nthe event that all data read so far was valid UTF-8.\n\n[`read_until`]: BufRead::read_until\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to read all the lines in a byte slice:\n\n```\nuse std::io::{self, BufRead};\n\nlet mut cursor = io::Cursor::new(b\"foo\\nbar\");\nlet mut buf = String::new();\n\n// cursor is at 'f'\nlet num_bytes = cursor.read_line(&mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 4);\nassert_eq!(buf, \"foo\\n\");\nbuf.clear();\n\n// cursor is at 'b'\nlet num_bytes = cursor.read_line(&mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 3);\nassert_eq!(buf, \"bar\");\nbuf.clear();\n\n// cursor is at EOF\nlet num_bytes = cursor.read_line(&mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 0);\nassert_eq!(buf, \"\");\n```","links":{"BufRead::read_until":"1:4497:5606","`Cursor`":"1:10705:5616","Ok":"2:48037:179"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4303:2657":{"id":"0:4303:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:959":{"id":"0:959","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[911,0],"end":[915,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:961:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4405:2548":{"id":"0:4405:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"2:3222:1439":{"id":"2:3222:1439","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3561":{"id":"0:3561","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}},"items":["0:3564:2425","0:3565:2548","0:3566:2608","0:3567:2610","0:3568:2612","0:3569:1026","0:3571:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4276:2236":{"id":"0:4276:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4033:2673":{"id":"0:4033:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:800:2548":{"id":"0:800:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[310,2],"end":[310,50]},"visibility":"default","docs":"An iterator over the input type, producing the item and its position\nfor use with [Slice]. If we're iterating over `&str`, the position\ncorresponds to the byte index of the character","links":{"Slice":"0:998:2229"},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"1:6332:14346":{"id":"1:6332:14346","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6333:60608","1:6334:60609"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3284:2425":{"id":"0:3284:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3449:1026":{"id":"0:3449:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3529:4795":{"id":"2:3529:4795","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3531:362"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6239:60441":{"id":"1:6239:60441","crate_id":1,"name":"continued","span":null,"visibility":"default","docs":"Whether the process was continued from a stopped status.\n\nIe, `WIFCONTINUED`.  This is only possible if the status came from a `wait` system call\nwhich was passed `WCONTINUED`, and was then converted into an `ExitStatus`.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13905:62656":{"id":"2:13905:62656","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13419:3185","prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3627:133":{"id":"2:3627:133","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3629:185","2:3630:386"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4397":{"id":"0:4397","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}},"items":["0:4400:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:823:2423":{"id":"0:823:2423","crate_id":0,"name":"take","span":{"filename":"src/traits.rs","begin":[367,2],"end":[369,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:766:2577":{"id":"0:766:2577","crate_id":0,"name":"is_alpha","span":{"filename":"src/traits.rs","begin":[180,2],"end":[182,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5212":{"id":"0:5212","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"}]},"items":["0:5251:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3439:4749":{"id":"2:3439:4749","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3441:185","2:3442:271"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3572":{"id":"0:3572","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3575:2657","0:3577:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5556:14283":{"id":"1:5556:14283","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5557:60262","1:5558:60263","1:5559:60264","1:5560:60265"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4584":{"id":"0:4584","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]},"items":["0:4597:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:127:2009":{"id":"0:127:2009","crate_id":0,"name":"append_error","span":{"filename":"src/error.rs","begin":[141,0],"end":[143,1]},"visibility":"public","docs":"Combines an existing error with a new one created from the input\nposition and an [ErrorKind]. This is useful when backtracking\nthrough a parse tree, accumulating error context on the way","links":{"ErrorKind":"0:2761:1972"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["other",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"E"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3956:2236":{"id":"0:3956:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:3154:2228":{"id":"b:2:2865-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4495:2657":{"id":"0:4495:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4175:2657":{"id":"0:4175:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2356:4018":{"id":"0:2356:4018","crate_id":0,"name":"be_i128","span":{"filename":"src/number/complete.rs","begin":[367,0],"end":[372,1]},"visibility":"public","docs":"Recognizes a big endian signed 16 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_i128;\n\nlet parser = |s| {\n  be_i128(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2871":{"id":"0:2871","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,15],"end":[364,24]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2872:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:3154:2228":{"id":"b:2:3207-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8959:5398":{"id":"2:8959:5398","crate_id":2,"name":"filter_map","span":null,"visibility":"default","docs":"Creates an iterator that both filters and maps.\n\nThe returned iterator yields only the `value`s for which the supplied\nclosure returns `Some(value)`.\n\n`filter_map` can be used to make chains of [`filter`] and [`map`] more\nconcise. The example below shows how a `map().filter().map()` can be\nshortened to a single call to `filter_map`.\n\n[`filter`]: Iterator::filter\n[`map`]: Iterator::map\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [\"1\", \"two\", \"NaN\", \"four\", \"5\"];\n\nlet mut iter = a.iter().filter_map(|s| s.parse().ok());\n\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(5));\nassert_eq!(iter.next(), None);\n```\n\nHere's the same example, but with [`filter`] and [`map`]:\n\n```\nlet a = [\"1\", \"two\", \"NaN\", \"four\", \"5\"];\nlet mut iter = a.iter().map(|s| s.parse()).filter(|s| s.is_ok()).map(|s| s.unwrap());\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(5));\nassert_eq!(iter.next(), None);\n```","links":{"Iterator::filter":"2:8957:2053","Iterator::map":"2:8947:852"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FilterMap","id":"2:47064:4942","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141:1997":{"id":"0:141:1997","crate_id":0,"name":"from_external_error","span":{"filename":"src/error.rs","begin":[204,2],"end":[206,3]},"visibility":"default","docs":"Create a new error from an input position and an external error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_e",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23192:14651":{"id":"2:23192:14651","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"Mask type used for manipulating this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4440:2236":{"id":"0:4440:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3088":{"id":"0:3088","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}},"items":["0:3090:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5998:734":{"id":"0:5998:734","crate_id":0,"name":"i128","span":{"filename":"src/character/streaming.rs","begin":[692,0],"end":[692,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4168:2612":{"id":"0:4168:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2590:4010":{"id":"0:2590:4010","crate_id":0,"name":"be_i32","span":{"filename":"src/number/streaming.rs","begin":[306,0],"end":[311,1]},"visibility":"public","docs":"Recognizes a big endian signed 4 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_i32;\n\nlet parser = be_i32::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(4))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4127:2610":{"id":"0:4127:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:2744:2017":{"id":"a:2:3382:225-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:743:2561":{"id":"0:743:2561","crate_id":0,"name":"AsBytes","span":{"filename":"src/traits.rs","begin":[90,0],"end":[93,1]},"visibility":"public","docs":"Helper trait for types that can be viewed as a byte slice","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:744:2051"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:745","0:748","0:750","0:753","0:2923","0:2927","0:2930","0:2934","0:2937","0:2941","0:2944","0:2948","0:2951","0:2955","0:2958","0:2962","0:2965","0:2969","0:2972","0:2976","0:2979","0:2983","0:2986","0:2990","0:2993","0:2997","0:3000","0:3004","0:3007","0:3011","0:3014","0:3018","0:3021","0:3025","0:3028","0:3032","0:3035","0:3039","0:3042","0:3046","0:3049","0:3053","0:3056","0:3060","0:3063","0:3067","0:3070","0:3074","0:3077","0:3081","0:3084","0:3088","0:3091","0:3095","0:3098","0:3102","0:3105","0:3109","0:3112","0:3116","0:3119","0:3123","0:3126","0:3130","0:3133","0:3137","0:3140","0:3144","0:3147","0:3151"]}},"0:1657:3287":{"id":"0:1657:3287","crate_id":0,"name":"take_till","span":{"filename":"src/bytes/complete.rs","begin":[330,0],"end":[338,1]},"visibility":"public","docs":"Returns the longest input slice (if any) till a predicate is met.\n\nThe parser will return the longest slice till the given predicate *(a function that\ntakes the input and returns a bool)*.\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::complete::take_till;\n\nfn till_colon(s: &str) -> IResult<&str, &str> {\n  take_till(|c| c == ':')(s)\n}\n\nassert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));\nassert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed\nassert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));\nassert_eq!(till_colon(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8779:5386":{"id":"2:8779:5386","crate_id":2,"name":"rfind","span":null,"visibility":"default","docs":"Searches for an element of an iterator from the back that satisfies a predicate.\n\n`rfind()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, starting at the end, and if any\nof them return `true`, then `rfind()` returns [`Some(element)`]. If they all return\n`false`, it returns [`None`].\n\n`rfind()` is short-circuiting; in other words, it will stop processing\nas soon as the closure returns `true`.\n\nBecause `rfind()` takes a reference, and many iterators iterate over\nreferences, this leads to a possibly confusing situation where the\nargument is a double reference. You can see this effect in the\nexamples below, with `&&x`.\n\n[`Some(element)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().rfind(|&&x| x == 2), Some(&2));\n\nassert_eq!(a.iter().rfind(|&&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.rfind(|&&x| x == 2), Some(&2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next_back(), Some(&1));\n```","links":{"Some":"2:47913:220","`None`":"2:47911:178"},"attrs":["#[stable(feature = \"iter_rfind\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2786:2083":{"id":"0:2786:2083","crate_id":0,"name":"TakeUntil","span":{"filename":"src/error.rs","begin":[379,2],"end":[379,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2944":{"id":"0:2944","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}},"items":["0:2947:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[108,0],"end":[137,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:480:2493","0:481:852","0:484:490"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8947:852":{"id":"2:8947:852","crate_id":2,"name":"map","span":null,"visibility":"default","docs":"Takes a closure and creates an iterator which calls that closure on each\nelement.\n\n`map()` transforms one iterator into another, by means of its argument:\nsomething that implements [`FnMut`]. It produces a new iterator which\ncalls this closure on each element of the original iterator.\n\nIf you are good at thinking in types, you can think of `map()` like this:\nIf you have an iterator that gives you elements of some type `A`, and\nyou want an iterator of some other type `B`, you can use `map()`,\npassing a closure that takes an `A` and returns a `B`.\n\n`map()` is conceptually similar to a [`for`] loop. However, as `map()` is\nlazy, it is best used when you're already working with other iterators.\nIf you're doing some sort of looping for a side effect, it's considered\nmore idiomatic to use [`for`] than `map()`.\n\n[`for`]: ../../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n[`FnMut`]: crate::ops::FnMut\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().map(|x| 2 * x);\n\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), Some(6));\nassert_eq!(iter.next(), None);\n```\n\nIf you're doing some sort of side effect, prefer [`for`] to `map()`:\n\n```\n# #![allow(unused_must_use)]\n// don't do this:\n(0..5).map(|x| println!(\"{x}\"));\n\n// it won't even execute, as it is lazy. Rust will warn you about this.\n\n// Instead, use for:\nfor x in 0..5 {\n    println!(\"{x}\");\n}\n```","links":{"crate::ops::FnMut":"2:3624:132"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Map","id":"2:47116:2515","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4204:2425":{"id":"0:4204:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[210,0],"end":[223,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:144:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3215:2657":{"id":"0:3215:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2744:2017":{"id":"b:2:3213-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1045":{"id":"0:1045","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1269,0],"end":[1274,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":["#[cfg(target_pointer_width = \"64\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u64"},"items":["0:1046:2725"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:738":{"id":"0:738","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[71,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:739:968"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4724":{"id":"0:4724","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"}]},"items":["0:4745:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:185:1846":{"id":"0:185:1846","crate_id":0,"name":"combinator","span":{"filename":"src/combinator/mod.rs","begin":[1,0],"end":[768,1]},"visibility":"public","docs":"General purpose combinators","links":{},"attrs":["#![allow(unused_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:251:2235","0:254:2241","0:257:852","0:266:2265","0:276:2272","0:285:2280","0:294:2288","0:304:2297","0:311:2307","0:318:2313","0:325:2323","0:328:2216","0:335:2336","0:342:2344","0:351:2352","0:360:963","0:367:2365","0:374:2384","0:381:2391","0:388:2404","0:397:2417","0:402:2418","0:434:2438","0:440:2443"],"is_stripped":false}},"0:2729:612":{"id":"0:2729:612","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[57,16],"end":[57,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2922:612":{"id":"0:2922:612","crate_id":0,"name":"eq","span":{"filename":"src/internal.rs","begin":[95,23],"end":[95,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3480:2236":{"id":"0:3480:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3463:1115":{"id":"2:3463:1115","crate_id":2,"name":"rem","span":null,"visibility":"default","docs":"Performs the `%` operation.\n\n# Example\n\n```\nassert_eq!(12 % 10, 2);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Rem","id":"2:3460:4785","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2854:2116":{"id":"0:2854:2116","crate_id":0,"name":"TakeWhileMN","span":{"filename":"src/error.rs","begin":[413,2],"end":[413,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[99,0],"end":[99,68]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["description","source","type_id","cause","provide"],"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3878:695":{"id":"2:3878:695","crate_id":2,"name":"from_residual","span":null,"visibility":"default","docs":"Constructs the type from a compatible `Residual` type.\n\nThis should be implemented consistently with the `branch` method such\nthat applying the `?` operator will get back an equivalent residual:\n`FromResidual::from_residual(r).branch() --> ControlFlow::Break(r)`.\n(It must not be an *identical* residual when interconversion is involved.)\n\n# Examples\n\n```\n#![feature(try_trait_v2)]\nuse std::ops::{ControlFlow, FromResidual};\n\nassert_eq!(Result::<String, i64>::from_residual(Err(3_u8)), Err(3));\nassert_eq!(Option::<String>::from_residual(None), None);\nassert_eq!(\n    ControlFlow::<_, String>::from_residual(ControlFlow::Break(5)),\n    ControlFlow::Break(5),\n);\n```","links":{},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["residual",{"kind":"generic","inner":"R"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3470:3162":{"id":"2:3470:3162","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3472:272"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3183:234":{"id":"2:3183:234","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3185:128","2:3186:1440"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3186":{"id":"0:3186","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"items":["0:3189:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23233:61111":{"id":"2:23233:61111","crate_id":2,"name":"reduce_max","span":null,"visibility":"default","docs":"Returns the maximum lane in the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23227:14721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:2761:1972":{"id":"b:5:848-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:4751","5:851:2503","5:852:5430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4219":{"id":"0:4219","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4223:2657","0:4225:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2908:1568":{"id":"0:2908:1568","crate_id":0,"name":"0","span":{"filename":"src/internal.rs","begin":[101,8],"end":[101,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"E"}},"0:2362:4026":{"id":"0:2362:4026","crate_id":0,"name":"le_u16","span":{"filename":"src/number/complete.rs","begin":[420,0],"end":[435,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 2 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_u16;\n\nlet parser = |s| {\n  le_u16(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:14144:139":{"id":"2:14144:139","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14145:185","2:14146:1025"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3880:2236":{"id":"0:3880:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:79:1984":{"id":"0:79:1984","crate_id":0,"name":"ContextError","span":{"filename":"src/error.rs","begin":[39,0],"end":[46,1]},"visibility":"public","docs":"This trait is required by the `context` combinator to add a static string\nto an existing error","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:81:1988"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:93","0:108","0:118","0:135"]}},"2:3533:4796":{"id":"2:3533:4796","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3535:365"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3440:2236":{"id":"0:3440:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3404:2425":{"id":"0:3404:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3372":{"id":"0:3372","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3375:2657","0:3377:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3768:2612":{"id":"0:3768:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3827":{"id":"0:3827","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}},"items":["0:3829:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4612:2763":{"id":"0:4612:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/combinator/mod.rs","begin":[689,0],"end":[723,1]},"visibility":{"restricted":{"parent":"0:185:1846","path":"::combinator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["max","max_by","eq_by","unzip","try_for_each","try_collect","map_while","intersperse","next_chunk","max_by_key","skip","is_sorted","cycle","reduce","collect_into","scan","intersperse_with","gt","size_hint","lt","position","copied","take_while","is_sorted_by","flat_map","any","array_chunks","try_reduce","cmp","partition","sum","flatten","all","for_each","find","last","cloned","rev","eq","ge","enumerate","count","take","partial_cmp","product","is_sorted_by_key","find_map","partition_in_place","le","fuse","filter_map","ne","advance_by","fold","min_by","__iterator_get_unchecked","cmp_by","zip","collect","try_find","is_partitioned","inspect","peekable","map","step_by","nth","filter","min","min_by_key","partial_cmp_by","rposition","try_fold","by_ref","skip_while","chain"],"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}}},"items":["0:420:2425","0:421:933"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5069:59477":{"id":"1:5069:59477","crate_id":1,"name":"to_socket_addrs","span":null,"visibility":"default","docs":"Converts this object to an iterator of resolved [`SocketAddr`]s.\n\nThe returned iterator might not actually yield any values depending on the\noutcome of any resolution performed.\n\nNote that this function may block the current thread while resolution is\nperformed.","links":{"`SocketAddr`":"1:11127:14318"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToSocketAddrs","id":"1:5067:14316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4190":{"id":"0:4190","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}},"items":["0:4193:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:476:852":{"id":"0:476:852","crate_id":0,"name":"map","span":{"filename":"src/internal.rs","begin":[73,2],"end":[78,3]},"visibility":"public","docs":"Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"NonZeroUsize","id":"2:25042:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"primitive","inner":"usize"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14145:185":{"id":"2:14145:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The type of value produced on completion.","links":{},"attrs":["#[stable(feature = \"futures_api\", since = \"1.36.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3909:2673":{"id":"0:3909:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2918":{"id":"0:2918","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[95,23],"end":[95,32]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:266:2265":{"id":"0:266:2265","crate_id":0,"name":"map_res","span":{"filename":"src/combinator/mod.rs","begin":[104,0],"end":[120,1]},"visibility":"public","docs":"Applies a function returning a `Result` over the result of a parser.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::character::complete::digit1;\nuse nom::combinator::map_res;\n# fn main() {\n\nlet mut parse = map_res(digit1, |s: &str| s.parse::<u8>());\n\n// the parser will convert the result of digit1 to a number\nassert_eq!(parse(\"123\"), Ok((\"\", 123)));\n\n// this will fail if digit1 fails\nassert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));\n\n// this will fail if the mapped function fails (a `u8` is too small to hold `123456`)\nassert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapRes))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FromExternalError","id":"0:82:1993","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"O1"}],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23231:61109":{"id":"2:23231:61109","crate_id":2,"name":"reduce_sum","span":null,"visibility":"default","docs":"Returns the sum of the lanes of the vector, with wrapping addition.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23227:14721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:14546:287":{"id":"2:14546:287","crate_id":2,"name":"alloc_zeroed","span":null,"visibility":"default","docs":"Behaves like `alloc`, but also ensures that the contents\nare set to zero before being returned.\n\n# Safety\n\nThis function is unsafe for the same reasons that `alloc` is.\nHowever the allocated block of memory is guaranteed to be initialized.\n\n# Errors\n\nReturning a null pointer indicates that either memory is exhausted\nor `layout` does not meet allocator's size or alignment constraints,\njust as in `alloc`.\n\nClients wishing to abort computation in response to an\nallocation error are encouraged to call the [`handle_alloc_error`] function,\nrather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:6174:63293":{"id":"5:6174:63293","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8478:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3080:2051":{"id":"0:3080:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5402":{"id":"0:5402","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"}]},"items":["0:5413:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2930":{"id":"0:2930","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}},"items":["0:2933:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3370:217":{"id":"2:3370:217","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13913:12589":{"id":"2:13913:12589","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8255:9387":{"id":"2:8255:9387","crate_id":2,"name":"backward_unchecked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *predecessor*\nof `self` `count` times.\n\n# Safety\n\nIt is undefined behavior for this operation to overflow the\nrange of values supported by `Self`. If you cannot guarantee that this\nwill not overflow, use `backward` or `backward_checked` instead.\n\n# Invariants\n\nFor any `a`:\n\n* if there exists `b` such that `b < a`, it is safe to call `Step::backward_unchecked(a, 1)`\n* if there exists `b`, `n` such that `steps_between(&b, &a) == Some(n)`,\n  it is safe to call `Step::backward_unchecked(a, m)` for any `m <= n`.\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::backward_unchecked(a, n)` is equivalent to `Step::backward(a, n)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:4091:2617":{"id":"0:4091:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:957:2673":{"id":"0:957:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[906,2],"end":[908,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"char"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175:2208":{"id":"0:175:2208","crate_id":0,"name":"dbg_dmp","span":{"filename":"src/error.rs","begin":[590,0],"end":[605,1]},"visibility":"public","docs":"Prints a message and the input if the parser fails.\n\nThe message prints the `Error` or `Incomplete`\nand the parser's calling code.\n\nIt also displays the input in hexdump format\n\n```rust\nuse nom::{IResult, error::dbg_dmp, bytes::complete::tag};\n\nfn f(i: &[u8]) -> IResult<&[u8], &[u8]> {\n  dbg_dmp(tag(\"abcd\"), \"tag\")(i)\n}\n\n  let a = &b\"efghijkl\"[..];\n\n// Will print the following message:\n// Error(Position(0, [101, 102, 103, 104, 105, 106, 107, 108])) at l.5 by ' tag ! ( \"abcd\" ) '\n// 00000000        65 66 67 68 69 6a 6b 6c         efghijkl\nf(a);\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["context",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"std::fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2677:4217":{"id":"0:2677:4217","crate_id":0,"name":"le_f32","span":{"filename":"src/number/streaming.rs","begin":[1197,0],"end":[1205,1]},"visibility":"public","docs":"Recognizes a little endian 4 bytes floating point number.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_f32;\n\nlet parser = |s| {\n  le_f32::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:14547:1092":{"id":"2:14547:1092","crate_id":2,"name":"realloc","span":null,"visibility":"default","docs":"Shrink or grow a block of memory to the given `new_size`.\nThe block is described by the given `ptr` pointer and `layout`.\n\nIf this returns a non-null pointer, then ownership of the memory block\nreferenced by `ptr` has been transferred to this allocator.\nThe memory may or may not have been deallocated, and should be\nconsidered unusable. The new memory block is allocated with `layout`,\nbut with the `size` updated to `new_size`. This new layout should be\nused when deallocating the new memory block with `dealloc`. The range\n`0..min(layout.size(), new_size)` of the new memory block is\nguaranteed to have the same values as the original block.\n\nIf this method returns null, then ownership of the memory\nblock has not been transferred to this allocator, and the\ncontents of the memory block are unaltered.\n\n# Safety\n\nThis function is unsafe because undefined behavior can result\nif the caller does not ensure all of the following:\n\n* `ptr` must be currently allocated via this allocator,\n\n* `layout` must be the same layout that was used\n  to allocate that block of memory,\n\n* `new_size` must be greater than zero.\n\n* `new_size`, when rounded up to the nearest multiple of `layout.align()`,\n  must not overflow (i.e., the rounded value must be less than `usize::MAX`).\n\n(Extension subtraits might provide more specific bounds on\nbehavior, e.g., guarantee a sentinel address or a null pointer\nin response to a zero-size allocation request.)\n\n# Errors\n\nReturns null if the new layout does not meet the size\nand alignment constraints of the allocator, or if reallocation\notherwise fails.\n\nImplementations are encouraged to return null on memory\nexhaustion rather than panicking or aborting, but this is not\na strict requirement. (Specifically: it is *legal* to\nimplement this trait atop an underlying native allocation\nlibrary that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to a\nreallocation error are encouraged to call the [`handle_alloc_error`] function,\nrather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[435,0],"end":[435,22]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::bits","name":"bits","id":"0:1391:1842","glob":true}},"0:3263:2657":{"id":"0:3263:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3990":{"id":"0:3990","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}},"items":["0:3993:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3218-0:2718:128":{"id":"b:2:3218-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4459":{"id":"0:4459","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4463:2657","0:4465:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3846:2608":{"id":"0:3846:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:9200:5427":{"id":"2:9200:5427","crate_id":2,"name":"is_sorted_by","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are sorted using the given comparator function.\n\nInstead of using `PartialOrd::partial_cmp`, this function uses the given `compare`\nfunction to determine the ordering of two elements. Apart from that, it's equivalent to\n[`is_sorted`]; see its documentation for more information.\n\n# Examples\n\n```\n#![feature(is_sorted)]\n\nassert!([1, 2, 2, 9].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!(![1, 3, 2, 4].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!([0].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!(std::iter::empty::<i32>().is_sorted_by(|a, b| a.partial_cmp(b)));\nassert!(![0.0, 1.0, f32::NAN].iter().is_sorted_by(|a, b| a.partial_cmp(b)));\n```\n\n[`is_sorted`]: Iterator::is_sorted","links":{"Iterator::is_sorted":"2:9199:5426"},"attrs":["#[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2892":{"id":"0:2892","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[48,16],"end":[48,25]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1505:3184":{"id":"0:1505:3184","crate_id":0,"name":"tag","span":{"filename":"src/bits/streaming.rs","begin":[59,0],"end":[80,1]},"visibility":"public","docs":"Generates a parser taking `count` bits and comparing them to `pattern`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["pattern",{"kind":"generic","inner":"O"}],["count",{"kind":"generic","inner":"C"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AddAssign","id":"2:3470:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shl","id":"2:3513:3164","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shr","id":"2:3519:3165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4001":{"id":"0:4001","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}},"items":["0:4004:2425","0:4005:2548","0:4006:2608","0:4007:2610","0:4008:2612","0:4009:1026","0:4011:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:860:2644":{"id":"0:860:2644","crate_id":0,"name":"split_at_position1","span":{"filename":"src/traits.rs","begin":[513,2],"end":[526,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23149:61100":{"id":"2:23149:61100","crate_id":2,"name":"is_sign_negative","span":null,"visibility":"default","docs":"Returns true for each lane if it has a negative sign, including\n`-0.0`, `NaN`s with negative sign bit and negative infinity.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4415:60105":{"id":"1:4415:60105","crate_id":1,"name":"read_to_end","span":null,"visibility":"default","docs":"Read all bytes until EOF in this source, placing them into `buf`.\n\nAll bytes read from this source will be appended to the specified buffer\n`buf`. This function will continuously call [`read()`] to append more data to\n`buf` until [`read()`] returns either [`Ok(0)`] or an error of\nnon-[`ErrorKind::Interrupted`] kind.\n\nIf successful, this function will return the total number of bytes read.\n\n# Errors\n\nIf this function encounters an error of the kind\n[`ErrorKind::Interrupted`] then the error is ignored and the operation\nwill continue.\n\nIf any other read error is encountered then this function immediately\nreturns. Any bytes which have already been read will be appended to\n`buf`.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`read()`]: Read::read\n[`Ok(0)`]: Ok\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = Vec::new();\n\n    // read the whole file\n    f.read_to_end(&mut buffer)?;\n    Ok(())\n}\n```\n\n(See also the [`std::fs::read`] convenience function for reading from a\nfile.)\n\n[`std::fs::read`]: crate::fs::read","links":{"crate::fs::read":"1:2914:6361","crate::fs::File":"1:2909:129","Ok":"2:48037:179","`ErrorKind::Interrupted`":"1:10856:17082","Read::read":"1:4411:6361"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8223:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4484:2425":{"id":"0:4484:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3769:1026":{"id":"0:3769:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8735:2714":{"id":"2:8735:2714","crate_id":2,"name":"extend","span":null,"visibility":"default","docs":"Extends a collection with the contents of an iterator.\n\nAs this is the only required method for this trait, the [trait-level] docs\ncontain more details.\n\n[trait-level]: Extend\n\n# Examples\n\nBasic usage:\n\n```\n// You can extend a String with some chars:\nlet mut message = String::from(\"abc\");\n\nmessage.extend(['d', 'e', 'f'].iter());\n\nassert_eq!(\"abcdef\", &message);\n```","links":{"Extend":"2:8733:4927"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3155:179":{"id":"0:3155:179","crate_id":0,"name":"Ok","span":{"filename":"src/traits.rs","begin":[709,2],"end":[709,4]},"visibility":"default","docs":"Comparison was successful","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:5554":{"id":"0:5554","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"}]},"items":["0:5581:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3255:2657":{"id":"0:3255:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3554":{"id":"0:3554","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}},"items":["0:3556:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5509:15883":{"id":"1:5509:15883","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Returns the underlying raw `st_mode` bits that contain the standard\nUnix permissions for this file.\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::os::unix::fs::PermissionsExt;\n\nfn main() -> std::io::Result<()> {\n    let f = File::create(\"foo.txt\")?;\n    let metadata = f.metadata()?;\n    let permissions = metadata.permissions();\n\n    println!(\"permissions: {:o}\", permissions.mode());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5293:2786":{"id":"0:5293:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2761:1972":{"id":"b:2:2868-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10909:1559":{"id":"2:10909:1559","crate_id":2,"name":"write_str","span":null,"visibility":"default","docs":"Writes a single `str` into this hasher.\n\nIf you're implementing [`Hash`], you generally do not need to call this,\nas the `impl Hash for str` does, so you should prefer that instead.\n\nThis includes the domain separator for prefix-freedom, so you should\n**not** call `Self::write_length_prefix` before calling this.\n\n# Note to Implementers\n\nThere are at least two reasonable default ways to implement this.\nWhich one will be the default is not yet decided, so for now\nyou probably want to override it specifically.\n\n## The general answer\n\nIt's always correct to implement this with a length prefix:\n\n```\n# #![feature(hasher_prefixfree_extras)]\n# struct Foo;\n# impl std::hash::Hasher for Foo {\n# fn finish(&self) -> u64 { unimplemented!() }\n# fn write(&mut self, _bytes: &[u8]) { unimplemented!() }\nfn write_str(&mut self, s: &str) {\n    self.write_length_prefix(s.len());\n    self.write(s.as_bytes());\n}\n# }\n```\n\nAnd, if your `Hasher` works in `usize` chunks, this is likely a very\nefficient way to do it, as anything more complicated may well end up\nslower than just running the round with the length.\n\n## If your `Hasher` works byte-wise\n\nOne nice thing about `str` being UTF-8 is that the `b'\\xFF'` byte\nnever happens.  That means that you can append that to the byte stream\nbeing hashed and maintain prefix-freedom:\n\n```\n# #![feature(hasher_prefixfree_extras)]\n# struct Foo;\n# impl std::hash::Hasher for Foo {\n# fn finish(&self) -> u64 { unimplemented!() }\n# fn write(&mut self, _bytes: &[u8]) { unimplemented!() }\nfn write_str(&mut self, s: &str) {\n    self.write(s.as_bytes());\n    self.write_u8(0xff);\n}\n# }\n```\n\nThis does require that your implementation not add extra padding, and\nthus generally requires that you maintain a buffer, running a round\nonly once that buffer is full (or `finish` is called).\n\nThat's because if `write` pads data out to a fixed chunk size, it's\nlikely that it does it in such a way that `\"a\"` and `\"a\\x00\"` would\nend up hashing the same sequence of things, introducing conflicts.","links":{"`Hash`":"2:10883:143"},"attrs":["#[unstable(feature = \"hasher_prefixfree_extras\", issue = \"96762\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2206:3654":{"id":"0:2206:3654","crate_id":0,"name":"multispace0","span":{"filename":"src/character/streaming.rs","begin":[577,0],"end":[586,1]},"visibility":"public","docs":"Recognizes zero or more spaces, tabs, carriage returns and line feeds.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non space character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::multispace0;\nassert_eq!(multispace0::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));\nassert_eq!(multispace0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(multispace0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13440:2685":{"id":"2:13440:2685","crate_id":2,"name":"haystack","span":null,"visibility":"default","docs":"Getter for the underlying string to be searched in\n\nWill always return the same [`&str`][str].","links":{"str":"1:15863:4612"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:768:2581":{"id":"0:768:2581","crate_id":0,"name":"is_dec_digit","span":{"filename":"src/traits.rs","begin":[188,2],"end":[190,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1064:490":{"id":"0:1064:490","crate_id":0,"name":"convert","span":{"filename":"src/traits.rs","begin":[1305,2],"end":[1310,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5504":{"id":"0:5504","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"}]},"items":["0:5527:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3489:1026":{"id":"0:3489:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2869:668":{"id":"0:2869:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[364,9],"end":[364,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2656:736":{"id":"0:2656:736","crate_id":0,"name":"i16","span":{"filename":"src/number/streaming.rs","begin":[962,0],"end":[974,1]},"visibility":"public","docs":"Recognizes a signed 2 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::i16;\n\nlet be_i16 = |s| {\n  i16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));\nassert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));\n\nlet le_i16 = |s| {\n  i16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));\nassert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2862:2120":{"id":"0:2862:2120","crate_id":0,"name":"Float","span":{"filename":"src/error.rs","begin":[417,2],"end":[417,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:4430":{"id":"0:4430","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}},"items":["0:4433:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3379:222":{"id":"2:3379:222","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3206:2608":{"id":"0:3206:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:4476:2236":{"id":"0:4476:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:513:2503":{"id":"0:513:2503","crate_id":0,"name":"to_owned","span":{"filename":"src/internal.rs","begin":[206,2],"end":[208,3]},"visibility":"public","docs":"Obtaining ownership","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3146:2051":{"id":"0:3146:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:724:2236":{"id":"0:724:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[26,2],"end":[28,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3140":{"id":"0:3140","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}},"items":["0:3143:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8776:5385":{"id":"2:8776:5385","crate_id":2,"name":"rfold","span":null,"visibility":"default","docs":"An iterator method that reduces the iterator's elements to a single,\nfinal value, starting from the back.\n\nThis is the reverse version of [`Iterator::fold()`]: it takes elements\nstarting from the back of the iterator.\n\n`rfold()` takes two arguments: an initial value, and a closure with two\narguments: an 'accumulator', and an element. The closure returns the value that\nthe accumulator should have for the next iteration.\n\nThe initial value is the value the accumulator will have on the first\ncall.\n\nAfter applying this closure to every element of the iterator, `rfold()`\nreturns the accumulator.\n\nThis operation is sometimes called 'reduce' or 'inject'.\n\nFolding is useful whenever you have a collection of something, and want\nto produce a single value from it.\n\nNote: `rfold()` combines elements in a *right-associative* fashion. For associative\noperators like `+`, the order the elements are combined in is not important, but for non-associative\noperators like `-` the order will affect the final result.\nFor a *left-associative* version of `rfold()`, see [`Iterator::fold()`].\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\n// the sum of all of the elements of a\nlet sum = a.iter()\n           .rfold(0, |acc, &x| acc + x);\n\nassert_eq!(sum, 6);\n```\n\nThis example demonstrates the right-associative nature of `rfold()`:\nit builds a string, starting with an initial value\nand continuing with each element from the back until the front:\n\n```\nlet numbers = [1, 2, 3, 4, 5];\n\nlet zero = \"0\".to_string();\n\nlet result = numbers.iter().rfold(zero, |acc, &x| {\n    format!(\"({x} + {acc})\")\n});\n\nassert_eq!(result, \"(1 + (2 + (3 + (4 + (5 + 0)))))\");\n```","links":{"`Iterator::fold()`":"2:9032:3009"},"attrs":["#[doc(alias = \"foldr\")]","#[stable(feature = \"iter_rfold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4469:2673":{"id":"0:4469:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4267":{"id":"0:4267","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}},"items":["0:4269:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2371:4041":{"id":"0:2371:4041","crate_id":0,"name":"le_u64","span":{"filename":"src/number/complete.rs","begin":[519,0],"end":[534,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 8 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_u64;\n\nlet parser = |s| {\n  le_u64(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3218-0:2730:2013":{"id":"b:2:3218-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3095":{"id":"0:3095","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}},"items":["0:3097:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13914:57695":{"id":"2:13914:57695","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3876:2236":{"id":"0:3876:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4887:2786":{"id":"0:4887:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3476:1378":{"id":"2:3476:1378","crate_id":2,"name":"sub_assign","span":null,"visibility":"default","docs":"Performs the `-=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx -= 1;\nassert_eq!(x, 11);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3411:2617":{"id":"0:3411:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1180:2897":{"id":"0:1180:2897","crate_id":0,"name":"many1","span":{"filename":"src/multi/mod.rs","begin":[95,0],"end":[127,1]},"visibility":"public","docs":"Runs the embedded parser until it fails and\nreturns the results in a `Vec`. Fails if\nthe embedded parser does not produce at least\none result.\n\n# Arguments\n* `f` The parser to apply.\n\n*Note*: If the parser passed to `many1` accepts empty inputs\n(like `alpha0` or `digit0`), `many1` will return an error,\nto prevent going into an infinite loop.\n\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::multi::many1;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  many1(tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));\nassert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3406:2608":{"id":"0:3406:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:4366:2608":{"id":"0:4366:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2653:739":{"id":"0:2653:739","crate_id":0,"name":"i8","span":{"filename":"src/number/streaming.rs","begin":[930,0],"end":[935,1]},"visibility":"public","docs":"Recognizes a signed 1 byte integer\n\nNote that endianness does not apply to 1 byte numbers.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::i8;\n\nlet parser = |s| {\n  i8::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3985:2663":{"id":"0:3985:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4367:2610":{"id":"0:4367:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13814:14382":{"id":"2:13814:14382","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:13815:62646","`str`":"1:15863:4612","crate::ops::Index":"2:3679:4800"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:4285:2548":{"id":"0:4285:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4305:2663":{"id":"0:4305:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3383:2657":{"id":"0:3383:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:742:968":{"id":"0:742:968","crate_id":0,"name":"offset","span":{"filename":"src/traits.rs","begin":[81,2],"end":[86,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["second",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:978":{"id":"0:978","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[969,0],"end":[973,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindSubstring","id":"0:971:2677","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:981:2679"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4843:2763":{"id":"0:4843:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3287:2610":{"id":"0:3287:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2014:3627":{"id":"0:2014:3627","crate_id":0,"name":"alphanumeric0","span":{"filename":"src/character/complete.rs","begin":[558,0],"end":[564,1]},"visibility":"public","docs":"Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z\n\n*Complete version*: Will return the whole input if no terminating token is found (a non\nalphanumerical character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::complete::alphanumeric0;\nfn parser(input: &str) -> IResult<&str, &str> {\n    alphanumeric0(input)\n}\n\nassert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));\nassert_eq!(parser(\"&Z21c\"), Ok((\"&Z21c\", \"\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5384":{"id":"0:5384","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"}]},"items":["0:5391:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:76:1976":{"id":"0:76:1976","crate_id":0,"name":"append","span":{"filename":"src/error.rs","begin":[23,2],"end":[23,60]},"visibility":"default","docs":"Combines an existing error with a new one created from the input\nposition and an [ErrorKind]. This is useful when backtracking\nthrough a parse tree, accumulating error context on the way","links":{"ErrorKind":"0:2761:1972"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3905:2663":{"id":"0:3905:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2587:4003":{"id":"0:2587:4003","crate_id":0,"name":"be_i24","span":{"filename":"src/number/streaming.rs","begin":[281,0],"end":[291,1]},"visibility":"public","docs":"Recognizes a big endian signed 3 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_i24;\n\nlet parser = be_i24::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23859:61106":{"id":"2:23859:61106","crate_id":2,"name":"simd_min","span":null,"visibility":"default","docs":"Returns the lane-wise minimum with `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3575:2657":{"id":"0:3575:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3996:2236":{"id":"0:3996:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:548":{"id":"0:548","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[320,0],"end":[327,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"generic_params":[]}}]},"provided_trait_methods":["flat_map","and","or","map","into","and_then"],"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"for":{"kind":"generic","inner":"F"},"items":["0:554:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3681":{"id":"0:3681","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}},"items":["0:3684:2425","0:3685:2548","0:3686:2608","0:3687:2610","0:3688:2612","0:3689:1026","0:3691:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2006:3613":{"id":"0:2006:3613","crate_id":0,"name":"oct_digit0","span":{"filename":"src/character/complete.rs","begin":[508,0],"end":[514,1]},"visibility":"public","docs":"Recognizes zero or more octal characters: 0-7\n\n*Complete version*: Will return the whole input if no terminating token is found (a non octal\ndigit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::complete::oct_digit0;\nfn parser(input: &str) -> IResult<&str, &str> {\n    oct_digit0(input)\n}\n\nassert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));\nassert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23477:17243":{"id":"2:23477:17243","crate_id":2,"name":"BitMask","span":null,"visibility":"default","docs":"The integer bitmask type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3240:2236":{"id":"0:3240:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:2761:1972":{"id":"b:2:3203-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3177:1331":{"id":"0:3177:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"RangeFull","id":"2:46272:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:852":{"id":"0:257:852","crate_id":0,"name":"map","span":{"filename":"src/combinator/mod.rs","begin":[73,0],"end":[82,1]},"visibility":"public","docs":"Maps a function on the result of a parser.\n\n```rust\nuse nom::{Err,error::ErrorKind, IResult,Parser};\nuse nom::character::complete::digit1;\nuse nom::combinator::map;\n# fn main() {\n\nlet mut parser = map(digit1, |s: &str| s.len());\n\n// the parser will count how many characters were returned by digit1\nassert_eq!(parser.parse(\"123456\"), Ok((\"\", 6)));\n\n// this will fail if digit1 fails\nassert_eq!(parser.parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"O1"}],"output":{"kind":"generic","inner":"O2"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4417:60106":{"id":"1:4417:60106","crate_id":1,"name":"read_exact","span":null,"visibility":"default","docs":"Read the exact number of bytes required to fill `buf`.\n\nThis function reads as many bytes as necessary to completely fill the\nspecified buffer `buf`.\n\nNo guarantees are provided about the contents of `buf` when this\nfunction is called, implementations cannot rely on any property of the\ncontents of `buf` being true. It is recommended that implementations\nonly write data to `buf` instead of reading its contents. The\ndocumentation on [`read`] has a more detailed explanation on this\nsubject.\n\n# Errors\n\nIf this function encounters an error of the kind\n[`ErrorKind::Interrupted`] then the error is ignored and the operation\nwill continue.\n\nIf this function encounters an \"end of file\" before completely filling\nthe buffer, it returns an error of the kind [`ErrorKind::UnexpectedEof`].\nThe contents of `buf` are unspecified in this case.\n\nIf any other read error is encountered then this function immediately\nreturns. The contents of `buf` are unspecified in this case.\n\nIf this function returns an error, it is unspecified how many bytes it\nhas read, but it will never read more than would be necessary to\ncompletely fill the buffer.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`read`]: Read::read\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = [0; 10];\n\n    // read exactly 10 bytes\n    f.read_exact(&mut buffer)?;\n    Ok(())\n}\n```","links":{"`ErrorKind::UnexpectedEof`":"1:10860:16790","`ErrorKind::Interrupted`":"1:10856:17082","Read::read":"1:4411:6361","crate::fs::File":"1:2909:129"},"attrs":["#[stable(feature = \"read_exact\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13819:2626":{"id":"2:13819:2626","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49874:2550","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3281":{"id":"0:3281","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}},"items":["0:3284:2425","0:3285:2548","0:3286:2608","0:3287:2610","0:3288:2612","0:3289:1026","0:3291:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4682:2763":{"id":"0:4682:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9115:5369":{"id":"2:9115:5369","crate_id":2,"name":"min_by_key","span":null,"visibility":"default","docs":"Returns the element that gives the minimum value from the\nspecified function.\n\nIf several elements are equally minimum, the first element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().min_by_key(|x| x.abs()).unwrap(), 0);\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"iter_cmp_by_key\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1973:3541":{"id":"0:1973:3541","crate_id":0,"name":"newline","span":{"filename":"src/character/complete.rs","begin":[262,0],"end":[268,1]},"visibility":"public","docs":"Matches a newline character '\\n'.\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::newline;\nfn parser(input: &str) -> IResult<&str, char> {\n    newline(input)\n}\n\nassert_eq!(parser(\"\\nc\"), Ok((\"c\", '\\n')));\nassert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1173:2883":{"id":"0:1173:2883","crate_id":0,"name":"many0","span":{"filename":"src/multi/mod.rs","begin":[40,0],"end":[65,1]},"visibility":"public","docs":"Repeats the embedded parser until it fails\nand returns the results in a `Vec`.\n\n# Arguments\n* `f` The parser to apply.\n\n*Note*: if the parser passed to `many0` accepts empty inputs\n(like `alpha0` or `digit0`), `many0` will return an error,\nto prevent going into an infinite loop\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::multi::many0;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  many0(tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));\nassert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));\nassert_eq!(parser(\"\"), Ok((\"\", vec![])));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3053":{"id":"0:3053","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}},"items":["0:3055:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3017:2051":{"id":"0:3017:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6642:14308":{"id":"1:6642:14308","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6643:60399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2925:125":{"id":"2:2925:125","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4745:2763":{"id":"0:4745:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5751:2036":{"id":"0:5751:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4205:2548":{"id":"0:4205:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:2822:2100":{"id":"0:2822:2100","crate_id":0,"name":"RegexpMatch","span":{"filename":"src/error.rs","begin":[397,2],"end":[397,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"1:6238:60440":{"id":"1:6238:60440","crate_id":1,"name":"stopped_signal","span":null,"visibility":"default","docs":"If the process was stopped by a signal, returns that signal.\n\nIn other words, if `WIFSTOPPED`, this returns `WSTOPSIG`.  This is only possible if the status came from\na `wait` system call which was passed `WUNTRACED`, and was then converted into an `ExitStatus`.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3608:553":{"id":"2:3608:553","crate_id":2,"name":"deref_mut","span":null,"visibility":"default","docs":"Mutably dereferences the value.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Deref","id":"2:3594:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5791:2036":{"id":"0:5791:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2395:1461":{"id":"0:2395:1461","crate_id":0,"name":"u8","span":{"filename":"src/number/complete.rs","begin":[729,0],"end":[741,1]},"visibility":"public","docs":"Recognizes an unsigned 1 byte integer\n\nNote that endianness does not apply to 1 byte numbers.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::u8;\n\nlet parser = |s| {\n  u8(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5752":{"id":"0:5752","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"}]},"items":["0:5791:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3436:2236":{"id":"0:3436:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2146:3534":{"id":"0:2146:3534","crate_id":0,"name":"line_ending","span":{"filename":"src/character/streaming.rs","begin":[218,0],"end":[236,1]},"visibility":"public","docs":"Recognizes an end of line (both '\\n' and '\\r\\n').\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::line_ending;\nassert_eq!(line_ending::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));\nassert_eq!(line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));\nassert_eq!(line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3669:2673":{"id":"0:3669:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3466:4784":{"id":"2:3466:4784","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3467:185","2:3468:924"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4147":{"id":"0:4147","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}},"items":["0:4149:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:6020:1457":{"id":"0:6020:1457","crate_id":0,"name":"u128","span":{"filename":"src/character/streaming.rs","begin":[735,0],"end":[735,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1391:1842":{"id":"0:1391:1842","crate_id":0,"name":"bits","span":{"filename":"src/bits/mod.rs","begin":[1,0],"end":[179,1]},"visibility":"public","docs":"Bit level parsers\n","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1392:2216","0:1451:3108","0:1540:1842","0:1549:1849"],"is_stripped":false}},"b:2:2868-0:2730:2013":{"id":"b:2:2868-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3841":{"id":"0:3841","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}},"items":["0:3844:2425","0:3845:2548","0:3846:2608","0:3847:2610","0:3848:2612","0:3849:1026","0:3851:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4415:2657":{"id":"0:4415:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13437:61180":{"id":"2:13437:61180","crate_id":2,"name":"strip_suffix_of","span":null,"visibility":"default","docs":"Removes the pattern from the back of haystack, if it matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4007:2610":{"id":"0:4007:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9096:5371":{"id":"2:9096:5371","crate_id":2,"name":"max_by_key","span":null,"visibility":"default","docs":"Returns the element that gives the maximum value from the\nspecified function.\n\nIf several elements are equally maximum, the last element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().max_by_key(|x| x.abs()).unwrap(), -10);\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"iter_cmp_by_key\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"generic","inner":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4185:2663":{"id":"0:4185:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5954:1461":{"id":"0:5954:1461","crate_id":0,"name":"u8","span":{"filename":"src/character/complete.rs","begin":[829,0],"end":[829,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2960:5379":{"id":"2:2960:5379","crate_id":2,"name":"clamp","span":null,"visibility":"default","docs":"Restrict a value to a certain interval.\n\nReturns `max` if `self` is greater than `max`, and `min` if `self` is\nless than `min`. Otherwise this returns `self`.\n\n# Panics\n\nPanics if `min > max`.\n\n# Examples\n\n```\nassert!((-3).clamp(-2, 1) == -2);\nassert!(0.clamp(-2, 1) == 0);\nassert!(2.clamp(-2, 1) == 1);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"clamp\", since = \"1.50.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["min",{"kind":"generic","inner":"Self"}],["max",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4145-0:6086:3949":{"id":"b:2:4145-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3175":{"id":"0:3175","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFull","id":"2:46272:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:3177:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3929:1026":{"id":"0:3929:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5958:1458":{"id":"0:5958:1458","crate_id":0,"name":"u16","span":{"filename":"src/character/complete.rs","begin":[829,0],"end":[829,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:814:2608":{"id":"0:814:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[338,2],"end":[338,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:1877:2216":{"id":"0:1877:2216","crate_id":0,"name":"complete","span":{"filename":"src/character/complete.rs","begin":[1,0],"end":[1227,1]},"visibility":"public","docs":"Character specific parsers and combinators, complete input version.\n\nFunctions recognizing specific characters.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1936:412","0:1942:3498","0:1949:3368","0:1956:3374","0:1963:3516","0:1966:3526","0:1970:3534","0:1973:3541","0:1976:3546","0:1979:3553","0:1982:3367","0:1986:3570","0:1990:3578","0:1994:3592","0:1998:3599","0:2002:3606","0:2006:3613","0:2010:3620","0:2014:3627","0:2018:3634","0:2022:3641","0:2026:3648","0:2030:3654","0:2034:3661","0:5924:739","0:5930:736","0:5936:737","0:5942:738","0:5948:734","0:5954:1461","0:5958:1458","0:5962:1459","0:5966:1460","0:5970:1457"],"is_stripped":false}},"0:6097:612":{"id":"0:6097:612","crate_id":0,"name":"eq","span":{"filename":"src/number/mod.rs","begin":[7,16],"end":[7,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4328:2612":{"id":"0:4328:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13431:5016":{"id":"2:13431:5016","crate_id":2,"name":"Searcher","span":null,"visibility":"default","docs":"Associated searcher for this pattern","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13438:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:2166:3578":{"id":"0:2166:3578","crate_id":0,"name":"digit0","span":{"filename":"src/character/streaming.rs","begin":[359,0],"end":[365,1]},"visibility":"public","docs":"Recognizes zero or more ASCII numerical characters: 0-9\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::digit0;\nassert_eq!(digit0::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));\nassert_eq!(digit0::<_, (_, ErrorKind)>(\"a21c\"), Ok((\"a21c\", \"\")));\nassert_eq!(digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4280:2236":{"id":"0:4280:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3059:2051":{"id":"0:3059:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23140:61093":{"id":"2:23140:61093","crate_id":2,"name":"Scalar","span":null,"visibility":"default","docs":"Scalar type contained by this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3018":{"id":"0:3018","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}},"items":["0:3020:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:816:2612":{"id":"0:816:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[345,2],"end":[347,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3937:2663":{"id":"0:3937:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3169":{"id":"0:3169","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:3171:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4295:2657":{"id":"0:4295:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2896":{"id":"0:2896","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[48,27],"end":[48,29]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:982":{"id":"0:982","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[975,0],"end":[980,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindSubstring","id":"0:971:2677","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:985:2679"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:943:2673":{"id":"0:943:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[882,2],"end":[884,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4263:2657":{"id":"0:4263:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:3154:2228":{"id":"b:2:3203-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4320:2236":{"id":"0:4320:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3687:2610":{"id":"0:3687:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2735:416":{"id":"0:2735:416","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[150,9],"end":[150,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3797":{"id":"0:3797","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}},"items":["0:3800:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5834":{"id":"0:5834","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnS","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"},{"kind":"generic","inner":"FnS"},{"kind":"generic","inner":"FnT"}]},"items":["0:5877:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5914:185":{"id":"5:5914:185","crate_id":5,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after concatenation","links":{},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:946:2673":{"id":"0:946:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[888,2],"end":[890,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:530:852":{"id":"0:530:852","crate_id":0,"name":"map","span":{"filename":"src/internal.rs","begin":[247,2],"end":[257,3]},"visibility":"default","docs":"Maps a function over the result of a parser","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"Map","id":"0:564:2515","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"O"}],"output":{"kind":"generic","inner":"O2"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"core::marker::Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:6086:3949":{"id":"b:2:2865-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3623:2657":{"id":"0:3623:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23145:61096":{"id":"2:23145:61096","crate_id":2,"name":"recip","span":null,"visibility":"default","docs":"Takes the reciprocal (inverse) of each lane, `1/x`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3445:2548":{"id":"0:3445:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:3349:2673":{"id":"0:3349:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[211,0],"end":[211,28]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3596:2236":{"id":"0:3596:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4347":{"id":"0:4347","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}},"items":["0:4349:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3153:2051":{"id":"0:3153:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8972:2423":{"id":"2:8972:2423","crate_id":2,"name":"take","span":null,"visibility":"default","docs":"Creates an iterator that yields the first `n` elements, or fewer\nif the underlying iterator ends sooner.\n\n`take(n)` yields elements until `n` elements are yielded or the end of\nthe iterator is reached (whichever happens first).\nThe returned iterator is a prefix of length `n` if the original iterator\ncontains at least `n` elements, otherwise it contains all of the\n(fewer than `n`) elements of the original iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().take(2);\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\n`take()` is often used with an infinite iterator, to make it finite:\n\n```\nlet mut iter = (0..).take(3);\n\nassert_eq!(iter.next(), Some(0));\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), None);\n```\n\nIf less than `n` elements are available,\n`take` will limit itself to the size of the underlying iterator:\n\n```\nlet v = [1, 2];\nlet mut iter = v.into_iter().take(5);\nassert_eq!(iter.next(), Some(1));\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Take","id":"2:47196:4950","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13810:2649":{"id":"2:13810:2649","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3154:2228":{"id":"0:3154:2228","crate_id":0,"name":"CompareResult","span":{"filename":"src/traits.rs","begin":[707,0],"end":[714,1]},"visibility":"public","docs":"Indicates whether a comparison was successful, an error, or\nif more data was needed","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:3155:179","0:3157:2038","0:3159:128"],"impls":["a:2:3370:217-0:3154:2228","a:2:9616:5287-0:3154:2228","a:2:3382:225-0:3154:2228","a:2:3411:4730-0:3154:2228","a:2:9615:5288-0:3154:2228","b:2:4145-0:3154:2228","b:2:3203-0:3154:2228","b:2:2865-0:3154:2228","b:2:2868-0:3154:2228","b:2:3207-0:3154:2228","b:2:3213-0:3154:2228","b:2:3218-0:3154:2228","0:3161","0:3163","0:3164"]}},"2:8252:9384":{"id":"2:8252:9384","crate_id":2,"name":"forward_unchecked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *successor*\nof `self` `count` times.\n\n# Safety\n\nIt is undefined behavior for this operation to overflow the\nrange of values supported by `Self`. If you cannot guarantee that this\nwill not overflow, use `forward` or `forward_checked` instead.\n\n# Invariants\n\nFor any `a`:\n\n* if there exists `b` such that `b > a`, it is safe to call `Step::forward_unchecked(a, 1)`\n* if there exists `b`, `n` such that `steps_between(&a, &b) == Some(n)`,\n  it is safe to call `Step::forward_unchecked(a, m)` for any `m <= n`.\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::forward_unchecked(a, n)` is equivalent to `Step::forward(a, n)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:5137:2786":{"id":"0:5137:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:884:2647":{"id":"0:884:2647","crate_id":0,"name":"split_at_position1_complete","span":{"filename":"src/traits.rs","begin":[603,2],"end":[622,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9139:60744":{"id":"1:9139:60744","crate_id":1,"name":"ceil","span":null,"visibility":"default","docs":"Returns the smallest integer greater than or equal to each lane.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3847:2610":{"id":"0:3847:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3385:2663":{"id":"0:3385:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6098":{"id":"0:6098","crate_id":0,"name":null,"span":{"filename":"src/number/mod.rs","begin":[7,27],"end":[7,29]},"visibility":{"restricted":{"parent":"0:2234:1851","path":"::number"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3379:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4371:2617":{"id":"0:4371:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1629:3245":{"id":"0:1629:3245","crate_id":0,"name":"is_a","span":{"filename":"src/bytes/complete.rs","begin":[151,0],"end":[162,1]},"visibility":"public","docs":"Returns the longest slice of the matches the pattern.\n\nThe parser will return the longest slice consisting of the characters in provided in the\ncombinator's argument.\n\nIt will return a `Err(Err::Error((_, ErrorKind::IsA)))` if the pattern wasn't met.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::is_a;\n\nfn hex(s: &str) -> IResult<&str, &str> {\n  is_a(\"1234567890ABCDEF\")(s)\n}\n\nassert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));\nassert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));\nassert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));\nassert_eq!(hex(\"D15EA5E\"), Ok((\"\", \"D15EA5E\")));\nassert_eq!(hex(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsA))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arr",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23234:61112":{"id":"2:23234:61112","crate_id":2,"name":"reduce_min","span":null,"visibility":"default","docs":"Returns the minimum lane in the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23227:14721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10883:143":{"id":"2:10883:143","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10884:723","2:10886:5585"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8985:2729":{"id":"2:8985:2729","crate_id":2,"name":"collect","span":null,"visibility":"default","docs":"Transforms an iterator into a collection.\n\n`collect()` can take anything iterable, and turn it into a relevant\ncollection. This is one of the more powerful methods in the standard\nlibrary, used in a variety of contexts.\n\nThe most basic pattern in which `collect()` is used is to turn one\ncollection into another. You take a collection, call [`iter`] on it,\ndo a bunch of transformations, and then `collect()` at the end.\n\n`collect()` can also create instances of types that are not typical\ncollections. For example, a [`String`] can be built from [`char`]s,\nand an iterator of [`Result<T, E>`][`Result`] items can be collected\ninto `Result<Collection<T>, E>`. See the examples below for more.\n\nBecause `collect()` is so general, it can cause problems with type\ninference. As such, `collect()` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which collection\nyou're trying to collect into.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet doubled: Vec<i32> = a.iter()\n                         .map(|&x| x * 2)\n                         .collect();\n\nassert_eq!(vec![2, 4, 6], doubled);\n```\n\nNote that we needed the `: Vec<i32>` on the left-hand side. This is because\nwe could collect into, for example, a [`VecDeque<T>`] instead:\n\n[`VecDeque<T>`]: ../../std/collections/struct.VecDeque.html\n\n```\nuse std::collections::VecDeque;\n\nlet a = [1, 2, 3];\n\nlet doubled: VecDeque<i32> = a.iter().map(|&x| x * 2).collect();\n\nassert_eq!(2, doubled[0]);\nassert_eq!(4, doubled[1]);\nassert_eq!(6, doubled[2]);\n```\n\nUsing the 'turbofish' instead of annotating `doubled`:\n\n```\nlet a = [1, 2, 3];\n\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<i32>>();\n\nassert_eq!(vec![2, 4, 6], doubled);\n```\n\nBecause `collect()` only cares about what you're collecting into, you can\nstill use a partial type hint, `_`, with the turbofish:\n\n```\nlet a = [1, 2, 3];\n\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<_>>();\n\nassert_eq!(vec![2, 4, 6], doubled);\n```\n\nUsing `collect()` to make a [`String`]:\n\n```\nlet chars = ['g', 'd', 'k', 'k', 'n'];\n\nlet hello: String = chars.iter()\n    .map(|&x| x as u8)\n    .map(|x| (x + 1) as char)\n    .collect();\n\nassert_eq!(\"hello\", hello);\n```\n\nIf you have a list of [`Result<T, E>`][`Result`]s, you can use `collect()` to\nsee if any of them failed:\n\n```\nlet results = [Ok(1), Err(\"nope\"), Ok(3), Err(\"bad\")];\n\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\n\n// gives us the first error\nassert_eq!(Err(\"nope\"), result);\n\nlet results = [Ok(1), Ok(3)];\n\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\n\n// gives us the list of answers\nassert_eq!(Ok(vec![1, 3]), result);\n```\n\n[`iter`]: Iterator::next\n[`String`]: ../../std/string/struct.String.html\n[`char`]: type@char","links":{"Iterator::next":"2:8927:933","type@char":"1:15857:4607","`Result`":"2:48034:209"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"if you really need to exhaust the iterator, consider `.for_each(drop)` instead\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8720:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8968:5401":{"id":"2:8968:5401","crate_id":2,"name":"map_while","span":null,"visibility":"default","docs":"Creates an iterator that both yields elements based on a predicate and maps.\n\n`map_while()` takes a closure as an argument. It will call this\nclosure on each element of the iterator, and yield elements\nwhile it returns [`Some(_)`][`Some`].\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [-1i32, 4, 0, 1];\n\nlet mut iter = a.iter().map_while(|x| 16i32.checked_div(*x));\n\nassert_eq!(iter.next(), Some(-16));\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), None);\n```\n\nHere's the same example, but with [`take_while`] and [`map`]:\n\n[`take_while`]: Iterator::take_while\n[`map`]: Iterator::map\n\n```\nlet a = [-1i32, 4, 0, 1];\n\nlet mut iter = a.iter()\n                .map(|x| 16i32.checked_div(*x))\n                .take_while(|x| x.is_some())\n                .map(|x| x.unwrap());\n\nassert_eq!(iter.next(), Some(-16));\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), None);\n```\n\nStopping after an initial [`None`]:\n\n```\nlet a = [0, 1, 2, -3, 4, 5, -6];\n\nlet iter = a.iter().map_while(|x| u32::try_from(*x).ok());\nlet vec = iter.collect::<Vec<_>>();\n\n// We have more elements which could fit in u32 (4, 5), but `map_while` returned `None` for `-3`\n// (as the `predicate` returned `None`) and `collect` stops at the first `None` encountered.\nassert_eq!(vec, vec![0, 1, 2]);\n```\n\nBecause `map_while()` needs to look at the value in order to see if it\nshould be included or not, consuming iterators will see that it is\nremoved:\n\n```\nlet a = [1, 2, -3, 4];\nlet mut iter = a.iter();\n\nlet result: Vec<u32> = iter.by_ref()\n                           .map_while(|n| u32::try_from(*n).ok())\n                           .collect();\n\nassert_eq!(result, &[1, 2]);\n\nlet result: Vec<i32> = iter.cloned().collect();\n\nassert_eq!(result, &[4]);\n```\n\nThe `-3` is no longer there, because it was consumed in order to see if\nthe iteration should stop, but wasn't placed back into the iterator.\n\nNote that unlike [`take_while`] this iterator is **not** fused.\nIt is also not specified what this iterator returns after the first [`None`] is returned.\nIf you need fused iterator, use [`fuse`].\n\n[`fuse`]: Iterator::fuse","links":{"`Some`":"2:47913:220","Iterator::take_while":"2:8966:3257","`None`":"2:47911:178","Iterator::map":"2:8947:852","Iterator::fuse":"2:8981:5404"},"attrs":["#[stable(feature = \"iter_map_while\", since = \"1.57.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MapWhile","id":"2:47125:4934","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:525:1960":{"id":"0:525:1960","crate_id":0,"name":"Parser","span":{"filename":"src/internal.rs","begin":[241,0],"end":[318,1]},"visibility":"public","docs":"All nom parsers implement this trait","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:529:2036","0:530:852","0:533:2288","0:537:299","0:540:298","0:543:983","0:545:2404"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:548","0:558"]}},"0:3960:2236":{"id":"0:3960:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3365:2548":{"id":"0:3365:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:3024:2051":{"id":"0:3024:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3187:233":{"id":"2:3187:233","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3189:128","2:3190:1439"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4327:2610":{"id":"0:4327:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6469:15925":{"id":"1:6469:15925","crate_id":1,"name":"st_size","span":null,"visibility":"default","docs":"Returns the size of the file (if it is a regular file or a symbolic link) in bytes.\n\nThe size of a symbolic link is the length of the pathname it contains,\nwithout a terminating null byte.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_size());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4251:2617":{"id":"0:4251:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3285-0:2730:2013":{"id":"b:2:3285-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4194:14603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3287:5654"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:2890":{"id":"0:2890","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[48,9],"end":[48,14]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2891:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:6086:3949":{"id":"a:2:3382:225-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13890:62653":{"id":"2:13890:62653","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13449:5014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4571":{"id":"0:4571","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]},"items":["0:4583:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:772":{"id":"0:772","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[206,0],"end":[237,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"items":["0:774:2573","0:775:2577","0:776:2579","0:777:2581","0:778:2583","0:779:2585","0:780:803"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5612":{"id":"0:5612","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"}]},"items":["0:5643:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2975:2051":{"id":"0:2975:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3081":{"id":"0:3081","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}},"items":["0:3083:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4477":{"id":"0:4477","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}},"items":["0:4480:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4558:2763":{"id":"0:4558:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:940:2673":{"id":"0:940:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[878,2],"end":[878,41]},"visibility":"default","docs":"Returns true if self contains the token","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3223:2657":{"id":"0:3223:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9616:5287-0:2744:2017":{"id":"a:2:9616:5287-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3031:2051":{"id":"0:3031:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3766:2608":{"id":"0:3766:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:3531:2617":{"id":"0:3531:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3447:2610":{"id":"0:3447:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3626:385":{"id":"2:3626:385","crate_id":2,"name":"call_mut","span":null,"visibility":"default","docs":"Performs the call operation.","links":{},"attrs":["#[unstable(feature = \"fn_traits\", issue = \"29625\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"generic","inner":"Args"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":{"Other":"\"rust-call\""}},"has_body":false}},"2:23139:14651":{"id":"2:23139:14651","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"Mask type used for manipulating this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:872:2641":{"id":"0:872:2641","crate_id":0,"name":"split_at_position","span":{"filename":"src/traits.rs","begin":[565,2],"end":[573,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9165:1009":{"id":"2:9165:1009","crate_id":2,"name":"partial_cmp","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nassert_eq!([1.].iter().partial_cmp([1.].iter()), Some(Ordering::Equal));\nassert_eq!([1.].iter().partial_cmp([1., 2.].iter()), Some(Ordering::Less));\nassert_eq!([1., 2.].iter().partial_cmp([1.].iter()), Some(Ordering::Greater));\n\nassert_eq!([f64::NAN].iter().partial_cmp([1.].iter()), None);\n```","links":{"`Iterator`":"2:8925:160","Ord#lexicographical-comparison":"2:2956:181"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3527:360":{"id":"2:3527:360","crate_id":2,"name":"bitand_assign","span":null,"visibility":"default","docs":"Performs the `&=` operation.\n\n# Examples\n\n```\nlet mut x = true;\nx &= false;\nassert_eq!(x, false);\n\nlet mut x = true;\nx &= true;\nassert_eq!(x, true);\n\nlet mut x: u8 = 5;\nx &= 1;\nassert_eq!(x, 1);\n\nlet mut x: u8 = 5;\nx &= 2;\nassert_eq!(x, 0);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13822:13050":{"id":"2:13822:13050","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"2:13821:13062"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50181:5019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2761:1972":{"id":"b:2:2865-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3287:5654":{"id":"2:3287:5654","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4209:14609","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3109":{"id":"0:3109","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}},"items":["0:3111:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2816:2098":{"id":"0:2816:2098","crate_id":0,"name":"NoneOf","span":{"filename":"src/error.rs","begin":[394,2],"end":[394,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2614:4046":{"id":"0:2614:4046","crate_id":0,"name":"le_u128","span":{"filename":"src/number/streaming.rs","begin":[529,0],"end":[544,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 16 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_u128;\n\nlet parser = |s| {\n  le_u128::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2665:738":{"id":"0:2665:738","crate_id":0,"name":"i64","span":{"filename":"src/number/streaming.rs","begin":[1079,0],"end":[1091,1]},"visibility":"public","docs":"Recognizes a signed 8 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::i64;\n\nlet be_i64 = |s| {\n  i64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));\nassert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n\nlet le_i64 = |s| {\n  i64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));\nassert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5504:59529":{"id":"1:5504:59529","crate_id":1,"name":"write_all_at","span":null,"visibility":"default","docs":"Attempts to write an entire buffer starting from a given offset.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nThis method will continuously call [`write_at`] until there is no more data\nto be written or an error of non-[`io::ErrorKind::Interrupted`] kind is\nreturned. This method will not return until the entire buffer has been\nsuccessfully written or such an error occurs. The first error that is\nnot of [`io::ErrorKind::Interrupted`] kind generated from this method will be\nreturned.\n\n# Errors\n\nThis function will return the first error of\nnon-[`io::ErrorKind::Interrupted`] kind that [`write_at`] returns.\n\n[`write_at`]: FileExt::write_at\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::io;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let file = File::open(\"foo.txt\")?;\n\n    // We now write at the offset 10.\n    file.write_all_at(b\"sushi\", 10)?;\n    Ok(())\n}\n```","links":{"FileExt::write_at":"1:5503:59527","`io::ErrorKind::Interrupted`":"1:10856:17082"},"attrs":["#[stable(feature = \"rw_exact_all_at\", since = \"1.33.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3161":{"id":"0:3161","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[706,9],"end":[706,14]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3162:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2830:2104":{"id":"0:2830:2104","crate_id":0,"name":"RegexpCaptures","span":{"filename":"src/error.rs","begin":[401,2],"end":[401,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:8726:4885":{"id":"2:8726:4885","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":"Which kind of iterator are we turning this into?","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:3345:2663":{"id":"0:3345:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4291:2617":{"id":"0:4291:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4486:60460":{"id":"1:4486:60460","crate_id":1,"name":"seek","span":null,"visibility":"default","docs":"Seek to an offset, in bytes, in a stream.\n\nA seek beyond the end of a stream is allowed, but behavior is defined\nby the implementation.\n\nIf the seek operation completed successfully,\nthis method returns the new position from the start of the stream.\nThat position can be used later with [`SeekFrom::Start`].\n\n# Errors\n\nSeeking can fail, for example because it might involve flushing a buffer.\n\nSeeking to a negative offset is considered an error.","links":{"`SeekFrom::Start`":"1:10929:16707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["pos",{"kind":"resolved_path","inner":{"name":"SeekFrom","id":"1:10928:5605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3182":{"id":"0:3182","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"items":["0:3185:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2638:1458":{"id":"0:2638:1458","crate_id":0,"name":"u16","span":{"filename":"src/number/streaming.rs","begin":[743,0],"end":[755,1]},"visibility":"public","docs":"Recognizes an unsigned 2 bytes integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::u16;\n\nlet be_u16 = |s| {\n  u16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));\nassert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));\n\nlet le_u16 = |s| {\n  u16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));\nassert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8689:5422":{"id":"2:8689:5422","crate_id":2,"name":"product","span":null,"visibility":"default","docs":"Method which takes an iterator and generates `Self` from the elements by\nmultiplying the items.","links":{},"attrs":["#[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2477:4291":{"id":"0:2477:4291","crate_id":0,"name":"double","span":{"filename":"src/number/complete.rs","begin":[1623,0],"end":[1657,1]},"visibility":"public","docs":"Recognizes floating point number in text format and returns a f64.\n\n*Complete version*: Can parse until the end of input.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::double;\n\nlet parser = |s| {\n  double(s)\n};\n\nassert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));\nassert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));\nassert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));\nassert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ParseTo","id":"0:986:2226","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"f64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:798:2223":{"id":"0:798:2223","crate_id":0,"name":"InputIter","span":{"filename":"src/traits.rs","begin":[302,0],"end":[325,1]},"visibility":"public","docs":"Abstracts common iteration operations on the input type","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:799:2425","0:800:2548","0:801:2608","0:802:2610","0:803:2612","0:804:1026","0:806:2617"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:810","0:825","0:3201","0:3241","0:3281","0:3321","0:3361","0:3401","0:3441","0:3481","0:3521","0:3561","0:3601","0:3641","0:3681","0:3721","0:3761","0:3801","0:3841","0:3881","0:3921","0:3961","0:4001","0:4041","0:4081","0:4121","0:4161","0:4201","0:4241","0:4281","0:4321","0:4361","0:4401","0:4441","0:4481"]}},"a:2:3382:225-0:2884:2426":{"id":"a:2:3382:225-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1044:2725":{"id":"0:1044:2725","crate_id":0,"name":"to_usize","span":{"filename":"src/traits.rs","begin":[1263,2],"end":[1265,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8984:5406":{"id":"2:8984:5406","crate_id":2,"name":"by_ref","span":null,"visibility":"default","docs":"Borrows an iterator, rather than consuming it.\n\nThis is useful to allow applying iterator adapters while still\nretaining ownership of the original iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut words = [\"hello\", \"world\", \"of\", \"Rust\"].into_iter();\n\n// Take the first two words.\nlet hello_world: Vec<_> = words.by_ref().take(2).collect();\nassert_eq!(hello_world, vec![\"hello\", \"world\"]);\n\n// Collect the rest of the words.\n// We can only do this because we used `by_ref` earlier.\nlet of_rust: Vec<_> = words.collect();\nassert_eq!(of_rust, vec![\"of\", \"Rust\"]);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2864:2121":{"id":"0:2864:2121","crate_id":0,"name":"Satisfy","span":{"filename":"src/error.rs","begin":[418,2],"end":[418,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2796:2088":{"id":"0:2796:2088","crate_id":0,"name":"HexDigit","span":{"filename":"src/error.rs","begin":[384,2],"end":[384,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:4145-0:3154:2228":{"id":"b:2:4145-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3332":{"id":"0:3332","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3335:2657","0:3337:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3724:2425":{"id":"0:3724:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:9147:5421":{"id":"2:9147:5421","crate_id":2,"name":"array_chunks","span":null,"visibility":"default","docs":"Returns an iterator over `N` elements of the iterator at a time.\n\nThe chunks do not overlap. If `N` does not divide the length of the\niterator, then the last up to `N-1` elements will be omitted and can be\nretrieved from the [`.into_remainder()`][ArrayChunks::into_remainder]\nfunction of the iterator.\n\n# Panics\n\nPanics if `N` is 0.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_array_chunks)]\n\nlet mut iter = \"lorem\".chars().array_chunks();\nassert_eq!(iter.next(), Some(['l', 'o']));\nassert_eq!(iter.next(), Some(['r', 'e']));\nassert_eq!(iter.next(), None);\nassert_eq!(iter.into_remainder().unwrap().as_slice(), &['m']);\n```\n\n```\n#![feature(iter_array_chunks)]\n\nlet data = [1, 1, 2, -2, 6, 0, 3, 1];\n//          ^-----^  ^------^\nfor [x, y, z] in data.iter().array_chunks() {\n    assert_eq!(x + y + z, 4);\n}\n```","links":{"ArrayChunks::into_remainder":"2:6043:12709"},"attrs":["#[track_caller]","#[unstable(feature = \"iter_array_chunks\", reason = \"recently added\", issue =\n\"100450\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ArrayChunks","id":"2:46979:4930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"N","value":null,"is_literal":false}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3993:2673":{"id":"0:3993:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3281:2168":{"id":"2:3281:2168","crate_id":2,"name":"description","span":null,"visibility":"default","docs":"```\nif let Err(e) = \"xc\".parse::<u32>() {\n    // Print `e` itself, no need for description().\n    eprintln!(\"Error: {e}\");\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.42.0\", note = \"use the Display impl or to_string()\")]"],"deprecation":{"since":"1.42.0","note":"use the Display impl or to_string()"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6094:668":{"id":"0:6094:668","crate_id":0,"name":"fmt","span":{"filename":"src/number/mod.rs","begin":[7,9],"end":[7,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:770:2585":{"id":"0:770:2585","crate_id":0,"name":"is_oct_digit","span":{"filename":"src/traits.rs","begin":[198,2],"end":[200,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3705:2663":{"id":"0:3705:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6235:6341":{"id":"1:6235:6341","crate_id":1,"name":"from_raw","span":null,"visibility":"default","docs":"Creates a new `ExitStatus` or `ExitStatusError` from the raw underlying integer status\nvalue from `wait`\n\nThe value should be a **wait status, not an exit status**.\n\n# Panics\n\nPanics on an attempt to make an `ExitStatusError` from a wait status of `0`.\n\nMaking an `ExitStatus` always succeeds and never panics.","links":{},"attrs":["#[stable(feature = \"exit_status_from\", since = \"1.12.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["raw",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4433:2673":{"id":"0:4433:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3888:2612":{"id":"0:3888:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6169":{"id":"5:6169","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5982:1362","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6170:63292","5:6171:4767","5:6174:63293","5:6177:2669","5:6189:63294","5:6190:63295","5:6191:4917","5:6192:57693","5:6193:57694"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23227:14721":{"id":"2:23227:14721","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23228:61093","2:23229:1244","2:23230:1245","2:23231:61109","2:23232:61110","2:23233:61111","2:23234:61112","2:23235:61904","2:23236:61905","2:23237:61906"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23240:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4154":{"id":"0:4154","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}},"items":["0:4156:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2620:4053":{"id":"0:2620:4053","crate_id":0,"name":"le_i16","span":{"filename":"src/number/streaming.rs","begin":[582,0],"end":[587,1]},"visibility":"public","docs":"Recognizes a little endian signed 2 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_i16;\n\nlet parser = |s| {\n  le_i16::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1942:3498":{"id":"0:1942:3498","crate_id":0,"name":"satisfy","span":{"filename":"src/character/complete.rs","begin":[61,0],"end":[75,1]},"visibility":"public","docs":"Recognizes one character and checks that it satisfies a predicate\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};\n# use nom::character::complete::satisfy;\nfn parser(i: &str) -> IResult<&str, char> {\n    satisfy(|c| c == 'a' || c == 'b')(i)\n}\nassert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));\nassert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Satisfy))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"char"}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3667":{"id":"0:3667","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}},"items":["0:3669:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4664":{"id":"0:4664","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"}]},"items":["0:4682:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10660:4718":{"id":"2:10660:4718","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10661:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6640:14306":{"id":"1:6640:14306","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6641:59607"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1242:659":{"id":"0:1242:659","crate_id":0,"name":"fill","span":{"filename":"src/multi/mod.rs","begin":[576,0],"end":[603,1]},"visibility":"public","docs":"Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if\nthe input runs out before the given slice is full.\n# Arguments\n* `f` The parser to apply.\n* `buf` The slice to fill\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::multi::fill;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, [&str; 2]> {\n  let mut buf = [\"\", \"\"];\n  let (rest, ()) = fill(tag(\"abc\"), &mut buf)(s)?;\n  Ok((rest, buf))\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", [\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));\nassert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", [\"abc\", \"abc\"])));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"O"}}}}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10654:4711":{"id":"2:10654:4711","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10655:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3171:1331":{"id":"0:3171:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2971:1009":{"id":"2:2971:1009","crate_id":2,"name":"partial_cmp","span":null,"visibility":"default","docs":"This method returns an ordering between `self` and `other` values if one exists.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nlet result = 1.0.partial_cmp(&2.0);\nassert_eq!(result, Some(Ordering::Less));\n\nlet result = 1.0.partial_cmp(&1.0);\nassert_eq!(result, Some(Ordering::Equal));\n\nlet result = 2.0.partial_cmp(&1.0);\nassert_eq!(result, Some(Ordering::Greater));\n```\n\nWhen comparison is impossible:\n\n```\nlet result = f64::NAN.partial_cmp(&1.0);\nassert_eq!(result, None);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8944:5395":{"id":"2:8944:5395","crate_id":2,"name":"intersperse","span":null,"visibility":"default","docs":"Creates a new iterator which places a copy of `separator` between adjacent\nitems of the original iterator.\n\nIn case `separator` does not implement [`Clone`] or needs to be\ncomputed every time, use [`intersperse_with`].\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_intersperse)]\n\nlet mut a = [0, 1, 2].iter().intersperse(&100);\nassert_eq!(a.next(), Some(&0));   // The first element from `a`.\nassert_eq!(a.next(), Some(&100)); // The separator.\nassert_eq!(a.next(), Some(&1));   // The next element from `a`.\nassert_eq!(a.next(), Some(&100)); // The separator.\nassert_eq!(a.next(), Some(&2));   // The last element from `a`.\nassert_eq!(a.next(), None);       // The iterator is finished.\n```\n\n`intersperse` can be very useful to join an iterator's items using a common element:\n```\n#![feature(iter_intersperse)]\n\nlet hello = [\"Hello\", \"World\", \"!\"].iter().copied().intersperse(\" \").collect::<String>();\nassert_eq!(hello, \"Hello World !\");\n```\n\n[`Clone`]: crate::clone::Clone\n[`intersperse_with`]: Iterator::intersperse_with","links":{"Iterator::intersperse_with":"2:8945:5396","crate::clone::Clone":"2:2884:105"},"attrs":["#[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue =\n\"79524\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["separator",{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Intersperse","id":"2:47105:4953","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1643:3263":{"id":"0:1643:3263","crate_id":0,"name":"take_while1","span":{"filename":"src/bytes/complete.rs","begin":[213,0],"end":[224,1]},"visibility":"public","docs":"Returns the longest (at least 1) input slice that matches the predicate.\n\nThe parser will return the longest slice that matches the given predicate *(a function that\ntakes the input and returns a bool)*.\n\nIt will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::take_while1;\nuse nom::character::is_alphabetic;\n\nfn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  take_while1(is_alphabetic)(s)\n}\n\nassert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));\nassert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));\nassert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2968:2051":{"id":"0:2968:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:580:2519":{"id":"0:580:2519","crate_id":0,"name":"FlatMap","span":{"filename":"src/internal.rs","begin":[358,0],"end":[362,1]},"visibility":"public","docs":"Implementation of `Parser::flat_map`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"2:3174:74":{"id":"2:3174:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3176:5380"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:133:1976":{"id":"0:133:1976","crate_id":0,"name":"append","span":{"filename":"src/error.rs","begin":[179,2],"end":[182,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4055:2657":{"id":"0:4055:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4281":{"id":"0:4281","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}},"items":["0:4284:2425","0:4285:2548","0:4286:2608","0:4287:2610","0:4288:2612","0:4289:1026","0:4291:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2233:1362":{"id":"0:2233:1362","crate_id":0,"name":"str","span":{"filename":"src/str.rs","begin":[1,0],"end":[536,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"2:3444:4786":{"id":"2:3444:4786","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3446:185","2:3447:1377"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3488:1116":{"id":"2:3488:1116","crate_id":2,"name":"rem_assign","span":null,"visibility":"default","docs":"Performs the `%=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx %= 10;\nassert_eq!(x, 2);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8926:2425":{"id":"2:8926:2425","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The type of the elements being iterated over.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2873":{"id":"0:2873","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,25],"end":[364,27]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3379:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2449:4254":{"id":"0:2449:4254","crate_id":0,"name":"hex_u32","span":{"filename":"src/number/complete.rs","begin":[1357,0],"end":[1377,1]},"visibility":"public","docs":"Recognizes a hex-encoded integer.\n\n*Complete version*: Will parse until the end of input if it has less than 8 bytes.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::hex_u32;\n\nlet parser = |s| {\n  hex_u32(s)\n};\n\nassert_eq!(parser(&b\"01AE\"[..]), Ok((&b\"\"[..], 0x01AE)));\nassert_eq!(parser(&b\"abc\"[..]), Ok((&b\"\"[..], 0x0ABC)));\nassert_eq!(parser(&b\"ggg\"[..]), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23266:1267":{"id":"2:23266:1267","crate_id":2,"name":"simd_eq","span":null,"visibility":"default","docs":"Test if each lane is equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23264:14720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3556:2236":{"id":"0:3556:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3583:2657":{"id":"0:3583:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3510:185":{"id":"2:3510:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `^` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:3382:225-0:2901:127":{"id":"a:2:3382:225-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3463:2657":{"id":"0:3463:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2917:416":{"id":"0:2917:416","crate_id":0,"name":"clone","span":{"filename":"src/internal.rs","begin":[95,16],"end":[95,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2858:2118":{"id":"0:2858:2118","crate_id":0,"name":"Many0Count","span":{"filename":"src/error.rs","begin":[415,2],"end":[415,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[82,0],"end":[82,39]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["add_context"],"trait":{"name":"ContextError","id":"0:79:1984","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2915":{"id":"0:2915","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[95,16],"end":[95,21]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:2917:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4394":{"id":"0:4394","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}},"items":["0:4396:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4948:5390":{"id":"2:4948:5390","crate_id":2,"name":"size_hint","span":null,"visibility":"default","docs":"Returns the bounds on the remaining length of the async iterator.\n\nSpecifically, `size_hint()` returns a tuple where the first element\nis the lower bound, and the second element is the upper bound.\n\nThe second half of the tuple that is returned is an <code>[Option]<[usize]></code>.\nA [`None`] here means that either there is no known upper bound, or the\nupper bound is larger than [`usize`].\n\n# Implementation notes\n\nIt is not enforced that an async iterator implementation yields the declared\nnumber of elements. A buggy async iterator may yield less than the lower bound\nor more than the upper bound of elements.\n\n`size_hint()` is primarily intended to be used for optimizations such as\nreserving space for the elements of the async iterator, but must not be\ntrusted to e.g., omit bounds checks in unsafe code. An incorrect\nimplementation of `size_hint()` should not lead to memory safety\nviolations.\n\nThat said, the implementation should provide a correct estimation,\nbecause otherwise it would be a violation of the trait's protocol.\n\nThe default implementation returns <code>(0, [None])</code> which is correct for any\nasync iterator.","links":{"`usize`":"1:15880:4627","usize":"1:15880:4627","`None`":"2:47911:178","None":"2:47911:178","Option":"2:47909:180"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5915:441":{"id":"5:5915:441","crate_id":5,"name":"concat","span":null,"visibility":"default","docs":"Implementation of [`[T]::concat`](slice::concat)","links":{"slice::concat":"5:5903:441"},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Concat","id":"5:5912:4971","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Item"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4215:2657":{"id":"0:4215:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:1976":{"id":"0:107:1976","crate_id":0,"name":"append","span":{"filename":"src/error.rs","begin":[108,2],"end":[110,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}],["_",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3714":{"id":"0:3714","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}},"items":["0:3716:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3517":{"id":"0:3517","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}},"items":["0:3520:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2626:4061":{"id":"0:2626:4061","crate_id":0,"name":"le_i32","span":{"filename":"src/number/streaming.rs","begin":[633,0],"end":[638,1]},"visibility":"public","docs":"Recognizes a little endian signed 4 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_i32;\n\nlet parser = |s| {\n  le_i32::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:788:803":{"id":"0:788:803","crate_id":0,"name":"len","span":{"filename":"src/traits.rs","begin":[265,2],"end":[267,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5528:14548":{"id":"1:5528:14548","crate_id":1,"name":"gid","span":null,"visibility":"default","docs":"Returns the group ID of the owner of this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let group_id = meta.gid();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3623:384":{"id":"2:3623:384","crate_id":2,"name":"call","span":null,"visibility":"default","docs":"Performs the call operation.","links":{},"attrs":["#[unstable(feature = \"fn_traits\", issue = \"29625\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"generic","inner":"Args"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":{"Other":"\"rust-call\""}},"has_body":false}},"2:10653:668":{"id":"2:10653:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.\n\n# Examples\n\n```\nuse std::fmt;\n\nstruct Position {\n    longitude: f32,\n    latitude: f32,\n}\n\nimpl fmt::Display for Position {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"({}, {})\", self.longitude, self.latitude)\n    }\n}\n\nassert_eq!(\"(1.987, 2.983)\",\n           format!(\"{}\", Position { longitude: 1.987, latitude: 2.983, }));\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:4195:5654":{"id":"2:4195:5654","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":"Data providers should implement this method to provide *all* values they are able to\nprovide by using `demand`.\n\nNote that the `provide_*` methods on `Demand` have short-circuit semantics: if an earlier\nmethod has successfully provided a value, then later methods will not get an opportunity to\nprovide.\n\n# Examples\n\nProvides a reference to a field with type `String` as a `&str`, and a value of\ntype `i32`.\n\n```rust\n# #![feature(provide_any)]\nuse std::any::{Provider, Demand};\n# struct SomeConcreteType { field: String, num_field: i32 }\n\nimpl Provider for SomeConcreteType {\n    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {\n        demand.provide_ref::<str>(&self.field)\n            .provide_value::<i32>(self.num_field);\n    }\n}\n```","links":{},"attrs":["#[unstable(feature = \"provide_any\", issue = \"96024\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4209:14609","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13359:127":{"id":"2:13359:127","crate_id":2,"name":"Err","span":null,"visibility":"default","docs":"The associated error which can be returned from parsing.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:12861:61526":{"id":"2:12861:61526","crate_id":2,"name":"as_slice","span":null,"visibility":"default","docs":"Currently, the consumers of `SlicePattern` need a slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SlicePattern","id":"2:12859:11437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3514":{"id":"0:3514","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}},"items":["0:3516:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2178:3606":{"id":"0:2178:3606","crate_id":0,"name":"hex_digit1","span":{"filename":"src/character/streaming.rs","begin":[422,0],"end":[428,1]},"visibility":"public","docs":"Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non hexadecimal digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::hex_digit1;\nassert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));\nassert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::HexDigit))));\nassert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3204:2425":{"id":"0:3204:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"b:2:2865-0:2718:128":{"id":"b:2:2865-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13449:5014":{"id":"2:13449:5014","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3408:2612":{"id":"0:3408:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6192:57693":{"id":"5:6192:57693","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13915:57696"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3350":{"id":"0:3350","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}},"items":["0:3353:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5429:60280":{"id":"1:5429:60280","crate_id":1,"name":"from_vec","span":null,"visibility":"default","docs":"Creates an [`OsString`] from a byte vector.\n\nSee the module documentation for an example.","links":{"`OsString`":"1:2651:184"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["vec",{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8223:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2868-0:2884:2426":{"id":"b:2:2868-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4006:2608":{"id":"0:4006:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:3796:2236":{"id":"0:3796:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2895":{"id":"0:2895","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[48,27],"end":[48,29]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3379:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23524:14666":{"id":"2:23524:14666","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24161:14652","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23515:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:808:2423":{"id":"0:808:2423","crate_id":0,"name":"take","span":{"filename":"src/traits.rs","begin":[330,2],"end":[330,39]},"visibility":"default","docs":"Returns a slice of `count` bytes. panics if count > length","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3216:128":{"id":"2:3216:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:735":{"id":"0:735","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[62,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:737:968"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2575:3986":{"id":"0:2575:3986","crate_id":0,"name":"be_u64","span":{"filename":"src/number/streaming.rs","begin":[179,0],"end":[194,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 8 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_u64;\n\nlet parser = |s| {\n  be_u64::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2973:802":{"id":"2:2973:802","crate_id":2,"name":"le","span":null,"visibility":"default","docs":"This method tests less than or equal to (for `self` and `other`) and is used by the `<=`\noperator.\n\n# Examples\n\n```\nlet result = 1.0 <= 2.0;\nassert_eq!(result, true);\n\nlet result = 2.0 <= 2.0;\nassert_eq!(result, true);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1838:3319":{"id":"0:1838:3319","crate_id":0,"name":"take_until","span":{"filename":"src/bytes/streaming.rs","begin":[446,0],"end":[462,1]},"visibility":"public","docs":"Returns the input slice up to the first occurrence of the pattern.\n\nIt doesn't consume the pattern.\n\n# Streaming Specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't\ncontain the pattern or if the input is smaller than the pattern.\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::streaming::take_until;\n\nfn until_eof(s: &str) -> IResult<&str, &str> {\n  take_until(\"eof\")(s)\n}\n\nassert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));\nassert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));\nassert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));\nassert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"FindSubstring","id":"0:971:2677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2864:57555":{"id":"2:2864:57555","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":"Mutably borrows from an owned value.\n\n# Examples\n\n```\nuse std::borrow::BorrowMut;\n\nfn check<T: BorrowMut<[i32]>>(mut v: T) {\n    assert_eq!(&mut [1, 2, 3], v.borrow_mut());\n}\n\nlet v = vec![1, 2, 3];\n\ncheck(v);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Borrowed"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4169:1026":{"id":"0:4169:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1260:2999":{"id":"0:1260:2999","crate_id":0,"name":"fold_many1","span":{"filename":"src/multi/mod.rs","begin":[703,0],"end":[749,1]},"visibility":"public","docs":"Applies a parser until it fails and accumulates\nthe results using a given function and initial value.\nFails if the embedded parser does not succeed at least\nonce.\n# Arguments\n* `f` The parser to apply.\n* `init` A function returning the initial value.\n* `g` The function that combines a result of `f` with\n      the current accumulator.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::multi::fold_many1;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  fold_many1(\n    tag(\"abc\"),\n    Vec::new,\n    |mut acc: Vec<_>, item| {\n      acc.push(item);\n      acc\n    }\n  )(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));\nassert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["init",{"kind":"generic","inner":"H"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"},{"kind":"generic","inner":"O"}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:5:6506-0:2730:2013":{"id":"b:5:6506-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6504:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:6508:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3875:377":{"id":"2:3875:377","crate_id":2,"name":"branch","span":null,"visibility":"default","docs":"Used in `?` to decide whether the operator should produce a value\n(because this returned [`ControlFlow::Continue`])\nor propagate a value back to the caller\n(because this returned [`ControlFlow::Break`]).\n\n# Examples\n\n```\n#![feature(try_trait_v2)]\nuse std::ops::{ControlFlow, Try};\n\nassert_eq!(Ok::<_, String>(3).branch(), ControlFlow::Continue(3));\nassert_eq!(Err::<String, _>(3).branch(), ControlFlow::Break(Err(3)));\n\nassert_eq!(Some(3).branch(), ControlFlow::Continue(3));\nassert_eq!(None::<String>.branch(), ControlFlow::Break(None));\n\nassert_eq!(ControlFlow::<String, _>::Continue(3).branch(), ControlFlow::Continue(3));\nassert_eq!(\n    ControlFlow::<_, String>::Break(3).branch(),\n    ControlFlow::Break(ControlFlow::Break(3)),\n);\n```","links":{"`ControlFlow::Continue`":"2:46186:106","`ControlFlow::Break`":"2:46189:99"},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ControlFlow","id":"2:46183:4810","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4491:2617":{"id":"0:4491:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3721":{"id":"0:3721","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}},"items":["0:3724:2425","0:3725:2548","0:3726:2608","0:3727:2610","0:3728:2612","0:3729:1026","0:3731:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13864:62647":{"id":"2:13864:62647","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3454:3163":{"id":"2:3454:3163","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3456:185","2:3457:566"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3532":{"id":"0:3532","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3535:2657","0:3537:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2018:3634":{"id":"0:2018:3634","crate_id":0,"name":"alphanumeric1","span":{"filename":"src/character/complete.rs","begin":[583,0],"end":[589,1]},"visibility":"public","docs":"Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z\n\n*Complete version*: Will return an error if there's not enough input data,\nor the whole input if no terminating token is found (a non alphanumerical character).\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::alphanumeric1;\nfn parser(input: &str) -> IResult<&str, &str> {\n    alphanumeric1(input)\n}\n\nassert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));\nassert_eq!(parser(\"&H2\"), Err(Err::Error(Error::new(\"&H2\", ErrorKind::AlphaNumeric))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::AlphaNumeric))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2428:734":{"id":"0:2428:734","crate_id":0,"name":"i128","span":{"filename":"src/number/complete.rs","begin":[1144,0],"end":[1156,1]},"visibility":"public","docs":"Recognizes a signed 16 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::i128;\n\nlet be_i128 = |s| {\n  i128(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));\nassert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_i128 = |s| {\n  i128(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));\nassert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8794:803":{"id":"2:8794:803","crate_id":2,"name":"len","span":null,"visibility":"default","docs":"Returns the exact remaining length of the iterator.\n\nThe implementation ensures that the iterator will return exactly `len()`\nmore times a [`Some(T)`] value, before returning [`None`].\nThis method has a default implementation, so you usually should not\nimplement it directly. However, if you can provide a more efficient\nimplementation, you can do so. See the [trait-level] docs for an\nexample.\n\nThis function has the same safety guarantees as the\n[`Iterator::size_hint`] function.\n\n[trait-level]: ExactSizeIterator\n[`Some(T)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\n// a finite range knows exactly how many times it will iterate\nlet mut range = 0..5;\n\nassert_eq!(5, range.len());\nlet _ = range.next();\nassert_eq!(4, range.len());\n```","links":{"Some":"2:47913:220","`None`":"2:47911:178","ExactSizeIterator":"2:8793:4926","`Iterator::size_hint`":"2:8931:5390"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:420:2425":{"id":"0:420:2425","crate_id":0,"name":"Item","span":{"filename":"src/combinator/mod.rs","begin":[694,2],"end":[694,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"Output"}}},"0:4793":{"id":"0:4793","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"}]},"items":["0:4817:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5974:739":{"id":"0:5974:739","crate_id":0,"name":"i8","span":{"filename":"src/character/streaming.rs","begin":[692,0],"end":[692,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1006:2425":{"id":"0:1006:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1142,2],"end":[1142,12]},"visibility":"default","docs":"The current input type is a sequence of that `Item` type.\n\nExample: `u8` for `&[u8]` or `char` for `&str`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:13817:57989":{"id":"2:13817:57989","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13816:2625"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:123:1997":{"id":"0:123:1997","crate_id":0,"name":"from_external_error","span":{"filename":"src/error.rs","begin":[130,2],"end":[130,71]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_input",{"kind":"generic","inner":"I"}],["_kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_e",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3884:2425":{"id":"0:3884:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:5462":{"id":"0:5462","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"}]},"items":["0:5481:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13806:3126":{"id":"2:13806:3126","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5560:60265":{"id":"1:5560:60265","crate_id":1,"name":"is_socket","span":null,"visibility":"default","docs":"Returns `true` if this file type is a socket.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"unix.socket\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_socket());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5948:734":{"id":"0:5948:734","crate_id":0,"name":"i128","span":{"filename":"src/character/complete.rs","begin":[786,0],"end":[786,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1061:490":{"id":"0:1061:490","crate_id":0,"name":"convert","span":{"filename":"src/traits.rs","begin":[1296,2],"end":[1301,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3476:2236":{"id":"0:3476:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3972":{"id":"0:3972","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3975:2657","0:3977:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5294":{"id":"0:5294","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnS","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"},{"kind":"generic","inner":"FnS"},{"kind":"generic","inner":"FnT"}]},"items":["0:5337:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:750":{"id":"0:750","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[109,0],"end":[114,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:752:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:335:2336":{"id":"0:335:2336","crate_id":0,"name":"all_consuming","span":{"filename":"src/combinator/mod.rs","begin":[382,0],"end":[395,1]},"visibility":"public","docs":"Succeeds if all the input has been consumed by its child parser.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::all_consuming;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nlet mut parser = all_consuming(alpha1);\n\nassert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));\nassert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Eof))));\nassert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3405:2548":{"id":"0:3405:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:3607:2610":{"id":"0:3607:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8683:4929":{"id":"2:8683:4929","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8685:4257"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3069:2051":{"id":"0:3069:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:764":{"id":"0:764","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[174,0],"end":[205,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":["0:765:2573","0:766:2577","0:767:2579","0:768:2581","0:769:2583","0:770:2585","0:771:803"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3593:2673":{"id":"0:3593:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3412":{"id":"0:3412","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3415:2657","0:3417:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:474:931":{"id":"0:474:931","crate_id":0,"name":"new","span":{"filename":"src/internal.rs","begin":[59,2],"end":[64,3]},"visibility":"public","docs":"Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13876:13189":{"id":"2:13876:13189","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"2:13879:13193","prim@char":"1:15857:4607","self::pattern":"2:13419:3185","`DoubleEndedIterator`":"2:8768:121"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50048:5031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4559":{"id":"0:4559","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]},"items":["0:4570:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4903:2786":{"id":"0:4903:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:440:2443":{"id":"0:440:2443","crate_id":0,"name":"fail","span":{"filename":"src/combinator/mod.rs","begin":[766,0],"end":[768,1]},"visibility":"public","docs":"A parser which always fails.\n\n```rust\n# use nom::{Err, error::ErrorKind, IResult};\nuse nom::combinator::fail;\n\nlet s = \"string\";\nassert_eq!(fail::<_, &str, _>(s), Err(Err::Error((s, ErrorKind::Fail))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4325:2548":{"id":"0:4325:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:3108:2051":{"id":"0:3108:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9146:5420":{"id":"2:9146:5420","crate_id":2,"name":"cycle","span":null,"visibility":"default","docs":"Repeats an iterator endlessly.\n\nInstead of stopping at [`None`], the iterator will instead start again,\nfrom the beginning. After iterating again, it will start at the\nbeginning again. And again. And again. Forever. Note that in case the\noriginal iterator is empty, the resulting iterator will also be empty.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut it = a.iter().cycle();\n\nassert_eq!(it.next(), Some(&1));\nassert_eq!(it.next(), Some(&2));\nassert_eq!(it.next(), Some(&3));\nassert_eq!(it.next(), Some(&1));\nassert_eq!(it.next(), Some(&2));\nassert_eq!(it.next(), Some(&3));\nassert_eq!(it.next(), Some(&1));\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Cycle","id":"2:47035:4940","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3731:2617":{"id":"0:3731:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4730-0:2761:1972":{"id":"a:2:3411:4730-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2401:4100":{"id":"0:2401:4100","crate_id":0,"name":"u24","span":{"filename":"src/number/complete.rs","begin":[808,0],"end":[820,1]},"visibility":"public","docs":"Recognizes an unsigned 3 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::u24;\n\nlet be_u24 = |s| {\n  u24(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));\nassert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_u24 = |s| {\n  u24(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));\nassert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3852":{"id":"0:3852","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3855:2657","0:3857:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11285:219":{"id":"2:11285:219","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11287:185","2:11288:3126","2:11289:57980","2:11290:2649","2:11291:12538","2:11292:762","2:11293:763"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11275:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1000:1331":{"id":"0:1000:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1008,2],"end":[1008,36]},"visibility":"default","docs":"Slices self according to the range argument","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"generic","inner":"R"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3648:2612":{"id":"0:3648:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3952:4734":{"id":"2:3952:4734","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3757":{"id":"0:3757","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}},"items":["0:3760:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3104:2051":{"id":"0:3104:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3368:2612":{"id":"0:3368:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4406:2608":{"id":"0:4406:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:5:6506-0:2901:127":{"id":"b:5:6506-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6504:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["5:6508:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3400:2236":{"id":"0:3400:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6464:18007":{"id":"1:6464:18007","crate_id":1,"name":"st_mode","span":null,"visibility":"default","docs":"Returns the file type and mode.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_mode());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3227":{"id":"0:3227","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}},"items":["0:3229:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3590":{"id":"0:3590","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}},"items":["0:3593:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:217-0:2761:1972":{"id":"a:2:3370:217-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3618:4799":{"id":"2:3618:4799","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3619:586"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2844:2111":{"id":"0:2844:2111","crate_id":0,"name":"ManyMN","span":{"filename":"src/error.rs","begin":[408,2],"end":[408,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:719:2224":{"id":"0:719:2224","crate_id":0,"name":"InputLength","span":{"filename":"src/traits.rs","begin":[18,0],"end":[22,1]},"visibility":"public","docs":"Abstract method to calculate the input length","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:720:2236"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:721","0:725","0:728","0:3194","0:3197","0:3234","0:3237","0:3274","0:3277","0:3314","0:3317","0:3354","0:3357","0:3394","0:3397","0:3434","0:3437","0:3474","0:3477","0:3514","0:3517","0:3554","0:3557","0:3594","0:3597","0:3634","0:3637","0:3674","0:3677","0:3714","0:3717","0:3754","0:3757","0:3794","0:3797","0:3834","0:3837","0:3874","0:3877","0:3914","0:3917","0:3954","0:3957","0:3994","0:3997","0:4034","0:4037","0:4074","0:4077","0:4114","0:4117","0:4154","0:4157","0:4194","0:4197","0:4234","0:4237","0:4274","0:4277","0:4314","0:4317","0:4354","0:4357","0:4394","0:4397","0:4434","0:4437","0:4474","0:4477"]}},"0:754:2051":{"id":"0:754:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[118,2],"end":[120,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1970:3534":{"id":"0:1970:3534","crate_id":0,"name":"line_ending","span":{"filename":"src/character/complete.rs","begin":[227,0],"end":[244,1]},"visibility":"public","docs":"Recognizes an end of line (both '\\n' and '\\r\\n').\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::line_ending;\nfn parser(input: &str) -> IResult<&str, &str> {\n    line_ending(input)\n}\n\nassert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));\nassert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1117:2786":{"id":"0:1117:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[82,2],"end":[82,58]},"visibility":"default","docs":"Tries to apply all parsers in the tuple in various orders until all of them succeed","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3361":{"id":"0:3361","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}},"items":["0:3364:2425","0:3365:2548","0:3366:2608","0:3367:2610","0:3368:2612","0:3369:1026","0:3371:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1009:2712":{"id":"0:1009:2712","crate_id":0,"name":"extend_into","span":{"filename":"src/traits.rs","begin":[1150,2],"end":[1150,50]},"visibility":"default","docs":"Accumulate the input into an accumulator","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["acc",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1005:2706","args":null}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4027":{"id":"0:4027","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}},"items":["0:4029:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2959:2937":{"id":"2:2959:2937","crate_id":2,"name":"min","span":null,"visibility":"default","docs":"Compares and returns the minimum of two values.\n\nReturns the first argument if the comparison determines them to be equal.\n\n# Examples\n\n```\nassert_eq!(1, 1.min(2));\nassert_eq!(2, 2.min(2));\n```","links":{},"attrs":["#[stable(feature = \"ord_max_min\", since = \"1.21.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4730-0:2718:128":{"id":"a:2:3411:4730-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3327:2610":{"id":"0:3327:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4469:60624":{"id":"1:4469:60624","crate_id":1,"name":"write_vectored","span":null,"visibility":"default","docs":"Like [`write`], except that it writes from a slice of buffers.\n\nData is copied from each buffer in order, with the final buffer\nread from possibly being only partially consumed. This method must\nbehave as a call to [`write`] with the buffers concatenated would.\n\nThe default implementation calls [`write`] with either the first nonempty\nbuffer provided, or an empty one if none exists.\n\n# Examples\n\n```no_run\nuse std::io::IoSlice;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let data1 = [1; 8];\n    let data2 = [15; 8];\n    let io_slice1 = IoSlice::new(&data1);\n    let io_slice2 = IoSlice::new(&data2);\n\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    // Writes some prefix of the byte string, not necessarily all of it.\n    buffer.write_vectored(&[io_slice1, io_slice2])?;\n    Ok(())\n}\n```\n\n[`write`]: Write::write","links":{"Write::write":"1:4468:2005"},"attrs":["#[stable(feature = \"iovec\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"1:10916:5603","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4132":{"id":"0:4132","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4135:2657","0:4137:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10896:8861":{"id":"2:10896:8861","crate_id":2,"name":"write_u8","span":null,"visibility":"default","docs":"Writes a single `u8` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:304:2297":{"id":"0:304:2297","crate_id":0,"name":"opt","span":{"filename":"src/combinator/mod.rs","begin":[237,0],"end":[249,1]},"visibility":"public","docs":"Optional parser: Will return `None` if not successful.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::opt;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nfn parser(i: &str) -> IResult<&str, Option<&str>> {\n  opt(alpha1)(i)\n}\n\nassert_eq!(parser(\"abcd;\"), Ok((\";\", Some(\"abcd\"))));\nassert_eq!(parser(\"123;\"), Ok((\"123;\", None)));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5067:14316":{"id":"1:5067:14316","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5068:2548","1:5069:59477"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3041:2051":{"id":"0:3041:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1059":{"id":"0:1059","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1295,0],"end":[1302,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"items":["0:1061:490"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4230":{"id":"0:4230","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}},"items":["0:4233:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3055:2051":{"id":"0:3055:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:780:803":{"id":"0:780:803","crate_id":0,"name":"len","span":{"filename":"src/traits.rs","begin":[234,2],"end":[236,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2852:2115":{"id":"0:2852:2115","crate_id":0,"name":"TakeTill1","span":{"filename":"src/error.rs","begin":[412,2],"end":[412,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2617:4049":{"id":"0:2617:4049","crate_id":0,"name":"le_i8","span":{"filename":"src/number/streaming.rs","begin":[559,0],"end":[564,1]},"visibility":"public","docs":"Recognizes a signed 1 byte integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_i8;\n\nlet parser = le_i8::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3579":{"id":"0:3579","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3583:2657","0:3585:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2806:2093":{"id":"0:2806:2093","crate_id":0,"name":"LengthValueFn","span":{"filename":"src/error.rs","begin":[389,2],"end":[389,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"1:6739:59822":{"id":"1:6739:59822","crate_id":1,"name":"as_fd","span":null,"visibility":"default","docs":"Borrows the file descriptor.\n\n# Example\n\n```rust,no_run\nuse std::fs::File;\n# use std::io;\n# #[cfg(target_os = \"wasi\")]\n# use std::os::wasi::io::{AsFd, BorrowedFd};\n# #[cfg(unix)]\n# use std::os::unix::io::{AsFd, BorrowedFd};\n\nlet mut f = File::open(\"foo.txt\")?;\n# #[cfg(any(unix, target_os = \"wasi\"))]\nlet borrowed_fd: BorrowedFd<'_> = f.as_fd();\n# Ok::<(), io::Error>(())\n```","links":{},"attrs":["#[stable(feature = \"io_safety\", since = \"1.63.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BorrowedFd","id":"1:11300:14310","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3004":{"id":"0:3004","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}},"items":["0:3006:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3460:4785":{"id":"2:3460:4785","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3462:185","2:3463:1115"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5511:60379":{"id":"1:5511:60379","crate_id":1,"name":"from_mode","span":null,"visibility":"default","docs":"Creates a new instance of `Permissions` from the given set of Unix\npermission bits.\n\n# Examples\n\n```\nuse std::fs::Permissions;\nuse std::os::unix::fs::PermissionsExt;\n\n// Read/write for owner and read for others.\nlet permissions = Permissions::from_mode(0o644);\nassert_eq!(permissions.mode(), 0o644);\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["mode",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4269:2673":{"id":"0:4269:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3126":{"id":"0:3126","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}},"items":["0:3129:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:75:1970":{"id":"0:75:1970","crate_id":0,"name":"from_error_kind","span":{"filename":"src/error.rs","begin":[18,2],"end":[18,56]},"visibility":"default","docs":"Creates an error from the input position and an [ErrorKind]","links":{"ErrorKind":"0:2761:1972"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2810:2095":{"id":"0:2810:2095","crate_id":0,"name":"Switch","span":{"filename":"src/error.rs","begin":[391,2],"end":[391,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:1287:3033":{"id":"0:1287:3033","crate_id":0,"name":"length_value","span":{"filename":"src/multi/mod.rs","begin":[898,0],"end":[925,1]},"visibility":"public","docs":"Gets a number from the first parser,\ntakes a subslice of the input of that size,\nthen applies the second parser on that subslice.\nIf the second parser returns `Incomplete`,\n`length_value` will return an error.\n# Arguments\n* `f` The parser to apply.\n* `g` The parser to apply on the subslice.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::number::complete::be_u16;\nuse nom::multi::length_value;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  length_value(be_u16, tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));\nassert_eq!(parser(b\"\\x00\\x03123123\"), Err(Err::Error(Error::new(&b\"123\"[..], ErrorKind::Tag))));\nassert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"N"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5930:736":{"id":"0:5930:736","crate_id":0,"name":"i16","span":{"filename":"src/character/complete.rs","begin":[786,0],"end":[786,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13815:62646":{"id":"2:13815:62646","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3683:4801","`str`":"1:15863:4612","str::slice_unchecked":"2:13814:14382"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2231:3472":{"id":"0:2231:3472","crate_id":0,"name":"is_space","span":{"filename":"src/character/mod.rs","begin":[98,0],"end":[100,1]},"visibility":"public","docs":"Tests if byte is ASCII space or tab\n\n# Example\n\n```\n# use nom::character::is_space;\nassert_eq!(is_space(b'\\n'), false);\nassert_eq!(is_space(b'\\r'), false);\nassert_eq!(is_space(b' '), true);\nassert_eq!(is_space(b'\\t'), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["chr",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:845:2644":{"id":"0:845:2644","crate_id":0,"name":"split_at_position1","span":{"filename":"src/traits.rs","begin":[464,2],"end":[470,30]},"visibility":"default","docs":"Looks for the first element of the input type for which the condition returns true\nand returns the input up to this position.\n\nFails if the produced slice is empty.\n\n*streaming version*: If no element is found matching the condition, this will return `Incomplete`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3291:2617":{"id":"0:3291:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1558:2216":{"id":"0:1558:2216","crate_id":0,"name":"complete","span":{"filename":"src/bytes/complete.rs","begin":[1,0],"end":[756,1]},"visibility":"public","docs":"Parsers recognizing bytes streams, complete input version","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1610:3184","0:1616:3219","0:1622:3231","0:1629:3245","0:1636:3257","0:1643:3263","0:1650:3275","0:1657:3287","0:1664:3295","0:1671:2423","0:1677:3319","0:1683:3324","0:1689:3336","0:1702:3357"],"is_stripped":false}},"0:3537:2663":{"id":"0:3537:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3664:210":{"id":"2:3664:210","crate_id":2,"name":"Return","span":null,"visibility":"default","docs":"The type of value this generator returns.\n\nThis corresponds to the type returned from a generator either with a\n`return` statement or implicitly as the last expression of a generator\nliteral. For example futures would use this as `Result<T, E>` as it\nrepresents a completed future.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3873:2673":{"id":"0:3873:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3028":{"id":"0:3028","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}},"items":["0:3031:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:803:2612":{"id":"0:803:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[318,2],"end":[318,44]},"visibility":"default","docs":"Returns an iterator over the elements","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3975:2657":{"id":"0:3975:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:767:2579":{"id":"0:767:2579","crate_id":0,"name":"is_alphanum","span":{"filename":"src/traits.rs","begin":[184,2],"end":[186,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3646:2608":{"id":"0:3646:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:1074:2213":{"id":"0:1074:2213","crate_id":0,"name":"to_hex","span":{"filename":"src/traits.rs","begin":[1339,2],"end":[1339,48]},"visibility":"default","docs":"Converts the value of `self` to a hex dump, returning the owned\n`String`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["chunk_size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3601":{"id":"0:3601","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}},"items":["0:3604:2425","0:3605:2548","0:3606:2608","0:3607:2610","0:3608:2612","0:3609:1026","0:3611:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3255:59":{"id":"2:3255:59","crate_id":2,"name":"default","span":null,"visibility":"default","docs":"Returns the \"default value\" for a type.\n\nDefault values are often some kind of initial value, identity value, or anything else that\nmay make sense as a default.\n\n# Examples\n\nUsing built-in default values:\n\n```\nlet i: i8 = Default::default();\nlet (x, y): (Option<String>, f64) = Default::default();\nlet (a, b, (c, d)): (i32, u32, (bool, bool)) = Default::default();\n```\n\nMaking your own:\n\n```\n# #[allow(dead_code)]\nenum Kind {\n    A,\n    B,\n    C,\n}\n\nimpl Default for Kind {\n    fn default() -> Self { Kind::A }\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:954:2673":{"id":"0:954:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[900,2],"end":[902,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2927":{"id":"0:2927","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}},"items":["0:2929:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3419":{"id":"0:3419","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3423:2657","0:3425:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4945:4727":{"id":"2:4945:4727","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4946:2425","2:4947:61227","2:4948:5390"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3252":{"id":"0:3252","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3255:2657","0:3257:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:1038:57697":{"id":"1:1038:57697","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"default","docs":"Converts this type to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`to_ascii_lowercase`]: AsciiExt::to_ascii_lowercase","links":{"AsciiExt::to_ascii_lowercase":"1:1035:57694"},"attrs":["#[stable(feature = \"ascii\", since = \"1.9.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3259":{"id":"0:3259","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3263:2657","0:3265:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10652:120":{"id":"2:10652:120","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10653:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:863:2646":{"id":"0:863:2646","crate_id":0,"name":"split_at_position_complete","span":{"filename":"src/traits.rs","begin":[528,2],"end":[539,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13893:62654":{"id":"2:13893:62654","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23853:1292":{"id":"2:23853:1292","crate_id":2,"name":"simd_lt","span":null,"visibility":"default","docs":"Test if each lane is less than the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23264:14720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:1036:57695":{"id":"1:1036:57695","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"default","docs":"Checks that two values are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1008:2710":{"id":"0:1008:2710","crate_id":0,"name":"new_builder","span":{"filename":"src/traits.rs","begin":[1148,2],"end":[1148,42]},"visibility":"default","docs":"Create a new `Extend` of the correct type","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1005:2706","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2727":{"id":"0:2727","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[57,16],"end":[57,25]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2729:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8250:9382":{"id":"2:8250:9382","crate_id":2,"name":"forward_checked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *successor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`, returns `None`.\n\n# Invariants\n\nFor any `a`, `n`, and `m`:\n\n* `Step::forward_checked(a, n).and_then(|x| Step::forward_checked(x, m)) == Step::forward_checked(a, m).and_then(|x| Step::forward_checked(x, n))`\n\nFor any `a`, `n`, and `m` where `n + m` does not overflow:\n\n* `Step::forward_checked(a, n).and_then(|x| Step::forward_checked(x, m)) == Step::forward_checked(a, n + m)`\n\nFor any `a` and `n`:\n\n* `Step::forward_checked(a, n) == (0..n).try_fold(a, |x, _| Step::forward_checked(&x, 1))`\n  * Corollary: `Step::forward_checked(&a, 0) == Some(a)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3097:2051":{"id":"0:3097:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1235:503":{"id":"0:1235:503","crate_id":0,"name":"count","span":{"filename":"src/multi/mod.rs","begin":[524,0],"end":[552,1]},"visibility":"public","docs":"Runs the embedded parser a specified number\nof times. Returns the results in a `Vec`.\n# Arguments\n* `f` The parser to apply.\n* `count` How often to apply the parser.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::multi::count;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  count(tag(\"abc\"), 2)(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));\nassert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3230":{"id":"0:3230","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}},"items":["0:3233:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3615:2657":{"id":"0:3615:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3278:128":{"id":"2:3278:128","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3279:2509","2:3281:2168","2:3282:5653","2:3283:5654"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3219":{"id":"0:3219","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3223:2657","0:3225:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5644":{"id":"0:5644","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"}]},"items":["0:5677:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5482":{"id":"0:5482","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"}]},"items":["0:5503:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3185:128":{"id":"2:3185:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":"The type returned in the event of a conversion error.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"1:6566:14314":{"id":"1:6566:14314","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6567:18120","1:6568:57877"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2978:2051":{"id":"0:2978:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1031:14336":{"id":"1:1031:14336","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1032:4751","1:1033:12589","1:1034:57693","1:1035:57694","1:1036:57695","1:1037:57696","1:1038:57697"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3968:2612":{"id":"0:3968:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4073:2673":{"id":"0:4073:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8966:3257":{"id":"2:8966:3257","crate_id":2,"name":"take_while","span":null,"visibility":"default","docs":"Creates an iterator that yields elements based on a predicate.\n\n`take_while()` takes a closure as an argument. It will call this\nclosure on each element of the iterator, and yield elements\nwhile it returns `true`.\n\nAfter `false` is returned, `take_while()`'s job is over, and the\nrest of the elements are ignored.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [-1i32, 0, 1];\n\nlet mut iter = a.iter().take_while(|x| x.is_negative());\n\nassert_eq!(iter.next(), Some(&-1));\nassert_eq!(iter.next(), None);\n```\n\nBecause the closure passed to `take_while()` takes a reference, and many\niterators iterate over references, this leads to a possibly confusing\nsituation, where the type of the closure is a double reference:\n\n```\nlet a = [-1, 0, 1];\n\nlet mut iter = a.iter().take_while(|x| **x < 0); // need two *s!\n\nassert_eq!(iter.next(), Some(&-1));\nassert_eq!(iter.next(), None);\n```\n\nStopping after an initial `false`:\n\n```\nlet a = [-1, 0, 1, -2];\n\nlet mut iter = a.iter().take_while(|x| **x < 0);\n\nassert_eq!(iter.next(), Some(&-1));\n\n// We have more elements that are less than zero, but since we already\n// got a false, take_while() isn't used any more\nassert_eq!(iter.next(), None);\n```\n\nBecause `take_while()` needs to look at the value in order to see if it\nshould be included or not, consuming iterators will see that it is\nremoved:\n\n```\nlet a = [1, 2, 3, 4];\nlet mut iter = a.iter();\n\nlet result: Vec<i32> = iter.by_ref()\n                           .take_while(|n| **n != 3)\n                           .cloned()\n                           .collect();\n\nassert_eq!(result, &[1, 2]);\n\nlet result: Vec<i32> = iter.cloned().collect();\n\nassert_eq!(result, &[4]);\n```\n\nThe `3` is no longer there, because it was consumed in order to see if\nthe iteration should stop, but wasn't placed back into the iterator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"TakeWhile","id":"2:47206:4951","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2957:423":{"id":"2:2957:423","crate_id":2,"name":"cmp","span":null,"visibility":"default","docs":"This method returns an [`Ordering`] between `self` and `other`.\n\nBy convention, `self.cmp(&other)` returns the ordering matching the expression\n`self <operator> other` if true.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nassert_eq!(5.cmp(&10), Ordering::Less);\nassert_eq!(10.cmp(&5), Ordering::Greater);\nassert_eq!(5.cmp(&5), Ordering::Equal);\n```","links":{"`Ordering`":"2:38017:182"},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3979":{"id":"0:3979","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3983:2657","0:3985:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23267:1294":{"id":"2:23267:1294","crate_id":2,"name":"simd_ne","span":null,"visibility":"default","docs":"Test if each lane is equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23264:14720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3869:2673":{"id":"0:3869:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3977:2663":{"id":"0:3977:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4448:2612":{"id":"0:4448:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3282:5653":{"id":"2:3282:5653","crate_id":2,"name":"cause","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note =\n\"replaced by Error::source, which can support downcasting\")]","#[allow(missing_docs)]"],"deprecation":{"since":"1.33.0","note":"replaced by Error::source, which can support downcasting"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:318:2313":{"id":"0:318:2313","crate_id":0,"name":"peek","span":{"filename":"src/combinator/mod.rs","begin":[302,0],"end":[313,1]},"visibility":"public","docs":"Tries to apply its parser without consuming the input.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::peek;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nlet mut parser = peek(alpha1);\n\nassert_eq!(parser(\"abcd;\"), Ok((\"abcd;\", \"abcd\")));\nassert_eq!(parser(\"123;\"), Err(Err::Error((\"123;\", ErrorKind::Alpha))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:810":{"id":"0:810","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[335,0],"end":[363,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:812:2425","0:813:2548","0:814:2608","0:815:2610","0:816:2612","0:817:1026","0:820:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5461:2036":{"id":"0:5461:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5558:60263":{"id":"1:5558:60263","crate_id":1,"name":"is_char_device","span":null,"visibility":"default","docs":"Returns `true` if this file type is a char device.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"char_device_file\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_char_device());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3182:689":{"id":"2:3182:689","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Converts to this type from the input type.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1616:3219":{"id":"0:1616:3219","crate_id":0,"name":"tag_no_case","span":{"filename":"src/bytes/complete.rs","begin":[74,0],"end":[94,1]},"visibility":"public","docs":"Recognizes a case insensitive pattern.\n\nThe input data will be compared to the tag combinator's argument and will return the part of\nthe input that matches the argument with no regard to case.\n\nIt will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::tag_no_case;\n\nfn parser(s: &str) -> IResult<&str, &str> {\n  tag_no_case(\"hello\")(s)\n}\n\nassert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));\nassert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));\nassert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));\nassert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:9138:60743":{"id":"1:9138:60743","crate_id":1,"name":"sqrt","span":null,"visibility":"default","docs":"Produces a vector where every lane has the square root value\nof the equivalently-indexed lane in `self`","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:848:2646":{"id":"0:848:2646","crate_id":0,"name":"split_at_position_complete","span":{"filename":"src/traits.rs","begin":[476,2],"end":[481,30]},"visibility":"default","docs":"Looks for the first element of the input type for which the condition returns true,\nand returns the input up to this position.\n\n*complete version*: If no element is found matching the condition, this will return the whole input","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4288:2612":{"id":"0:4288:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4429:2673":{"id":"0:4429:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2901:127":{"id":"b:2:2868-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1384:1443":{"id":"0:1384:1443","crate_id":0,"name":"tuple","span":{"filename":"src/sequence/mod.rs","begin":[266,0],"end":[270,1]},"visibility":"public","docs":"Applies a tuple of parsers one by one and returns their results as a tuple.\nThere is a maximum of 21 parsers\n ```rust\n # use nom::{Err, error::ErrorKind};\n use nom::sequence::tuple;\n use nom::character::complete::{alpha1, digit1};\n let mut parser = tuple((alpha1, digit1, alpha1));\n\n assert_eq!(parser(\"abc123def\"), Ok((\"\", (\"abc\", \"123\", \"def\"))));\n assert_eq!(parser(\"123def\"), Err(Err::Error((\"123def\", ErrorKind::Alpha))));\n ```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["l",{"kind":"generic","inner":"List"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"List","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8973:5402":{"id":"2:8973:5402","crate_id":2,"name":"scan","span":null,"visibility":"default","docs":"An iterator adapter similar to [`fold`] that holds internal state and\nproduces a new iterator.\n\n[`fold`]: Iterator::fold\n\n`scan()` takes two arguments: an initial value which seeds the internal\nstate, and a closure with two arguments, the first being a mutable\nreference to the internal state and the second an iterator element.\nThe closure can assign to the internal state to share state between\niterations.\n\nOn iteration, the closure will be applied to each element of the\niterator and the return value from the closure, an [`Option`], is\nyielded by the iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().scan(1, |state, &x| {\n    // each iteration, we'll multiply the state by the element\n    *state = *state * x;\n\n    // then, we'll yield the negation of the state\n    Some(-*state)\n});\n\nassert_eq!(iter.next(), Some(-1));\nassert_eq!(iter.next(), Some(-2));\nassert_eq!(iter.next(), Some(-6));\nassert_eq!(iter.next(), None);\n```","links":{"`Option`":"2:47909:180","Iterator::fold":"2:9032:3009"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["initial_state",{"kind":"generic","inner":"St"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Scan","id":"2:47153:4947","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"St"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"St","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"St"}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23478:61824":{"id":"2:23478:61824","crate_id":2,"name":"to_bitmask","span":null,"visibility":"default","docs":"Converts a mask to a bitmask.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"BitMask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToBitMask","id":"2:23476:23765","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3629:185":{"id":"2:3629:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The returned type after the call operator is used.","links":{},"attrs":["#[stable(feature = \"fn_once_output\", since = \"1.12.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:9615:5288-0:6086:3949":{"id":"a:2:9615:5288-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3452":{"id":"0:3452","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3455:2657","0:3457:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8990:5408":{"id":"2:8990:5408","crate_id":2,"name":"collect_into","span":null,"visibility":"default","docs":"Collects all the items from an iterator into a collection.\n\nThis method consumes the iterator and adds all its items to the\npassed collection. The collection is then returned, so the call chain\ncan be continued.\n\nThis is useful when you already have a collection and wants to add\nthe iterator items to it.\n\nThis method is a convenience method to call [Extend::extend](trait.Extend.html),\nbut instead of being called on a collection, it's called on an iterator.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_collect_into)]\n\nlet a = [1, 2, 3];\nlet mut vec: Vec::<i32> = vec![0, 1];\n\na.iter().map(|&x| x * 2).collect_into(&mut vec);\na.iter().map(|&x| x * 10).collect_into(&mut vec);\n\nassert_eq!(vec![0, 1, 2, 4, 6, 10, 20, 30], vec);\n```\n\n`Vec` can have a manual set capacity to avoid reallocating it:\n\n```\n#![feature(iter_collect_into)]\n\nlet a = [1, 2, 3];\nlet mut vec: Vec::<i32> = Vec::with_capacity(6);\n\na.iter().map(|&x| x * 2).collect_into(&mut vec);\na.iter().map(|&x| x * 10).collect_into(&mut vec);\n\nassert_eq!(6, vec.capacity());\nprintln!(\"{:?}\", vec);\n```\n\nThe returned mutable reference can be used to continue the call chain:\n\n```\n#![feature(iter_collect_into)]\n\nlet a = [1, 2, 3];\nlet mut vec: Vec::<i32> = Vec::with_capacity(6);\n\nlet count = a.iter().collect_into(&mut vec).iter().count();\n\nassert_eq!(count, vec.len());\nprintln!(\"Vec len is {}\", count);\n\nlet count = a.iter().collect_into(&mut vec).iter().count();\n\nassert_eq!(count, vec.len());\nprintln!(\"Vec len now is {}\", count);\n```","links":{},"attrs":["#[unstable(feature = \"iter_collect_into\", reason = \"new API\", issue =\n\"94780\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["collection",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"E"}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Extend","id":"2:8733:4927","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3932":{"id":"0:3932","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3935:2657","0:3937:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9197:704":{"id":"2:9197:704","crate_id":2,"name":"ge","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\ngreater than or equal to those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().ge([1].iter()), true);\nassert_eq!([1].iter().ge([1, 2].iter()), false);\nassert_eq!([1, 2].iter().ge([1].iter()), true);\nassert_eq!([1, 2].iter().ge([1, 2].iter()), true);\n```","links":{"Ord#lexicographical-comparison":"2:2956:181","`Iterator`":"2:8925:160"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3920:2236":{"id":"0:3920:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9134:2057":{"id":"2:9134:2057","crate_id":2,"name":"rev","span":null,"visibility":"default","docs":"Reverses an iterator's direction.\n\nUsually, iterators iterate from left to right. After using `rev()`,\nan iterator will instead iterate from right to left.\n\nThis is only possible if the iterator has an end, so `rev()` only\nworks on [`DoubleEndedIterator`]s.\n\n# Examples\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().rev();\n\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&1));\n\nassert_eq!(iter.next(), None);\n```","links":{"`DoubleEndedIterator`":"2:8768:121"},"attrs":["#[doc(alias = \"reverse\")]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Rev","id":"2:47144:4946","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8768:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:791:2573":{"id":"0:791:2573","crate_id":0,"name":"as_char","span":{"filename":"src/traits.rs","begin":[272,2],"end":[274,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8771:5383":{"id":"2:8771:5383","crate_id":2,"name":"nth_back","span":null,"visibility":"default","docs":"Returns the `n`th element from the end of the iterator.\n\nThis is essentially the reversed version of [`Iterator::nth()`].\nAlthough like most indexing operations, the count starts from zero, so\n`nth_back(0)` returns the first value from the end, `nth_back(1)` the\nsecond, and so on.\n\nNote that all elements between the end and the returned element will be\nconsumed, including the returned element. This also means that calling\n`nth_back(0)` multiple times on the same iterator will return different\nelements.\n\n`nth_back()` will return [`None`] if `n` is greater than or equal to the\nlength of the iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth_back(2), Some(&1));\n```\n\nCalling `nth_back()` multiple times doesn't rewind the iterator:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.nth_back(1), Some(&2));\nassert_eq!(iter.nth_back(1), None);\n```\n\nReturning `None` if there are less than `n + 1` elements:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth_back(10), None);\n```","links":{"`Iterator::nth()`":"2:8938:3528","`None`":"2:47911:178"},"attrs":["#[stable(feature = \"iter_nth_back\", since = \"1.37.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:799:2425":{"id":"0:799:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[306,2],"end":[306,12]},"visibility":"default","docs":"The current input type is a sequence of that `Item` type.\n\nExample: `u8` for `&[u8]` or `char` for `&str`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3789:2673":{"id":"0:3789:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3688:2612":{"id":"0:3688:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:402:2418":{"id":"a:2:3382:225-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3473:2673":{"id":"0:3473:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4233:2673":{"id":"0:4233:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4339":{"id":"0:4339","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4343:2657","0:4345:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3726:2608":{"id":"0:3726:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:1036:2725":{"id":"0:1036:2725","crate_id":0,"name":"to_usize","span":{"filename":"src/traits.rs","begin":[1236,2],"end":[1236,30]},"visibility":"default","docs":"converts self to usize","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9615:5288-0:2901:127":{"id":"a:2:9615:5288-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5924:739":{"id":"0:5924:739","crate_id":0,"name":"i8","span":{"filename":"src/character/complete.rs","begin":[786,0],"end":[786,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2901:127":{"id":"0:2901:127","crate_id":0,"name":"Err","span":{"filename":"src/internal.rs","begin":[97,0],"end":[106,1]},"visibility":"public","docs":"The `Err` enum indicates the parser was not successful\n\nIt has three cases:\n\n* `Incomplete` indicates that more data is needed to decide. The `Needed` enum\ncan contain how many additional bytes are necessary. If you are sure your parser\nis working on full data, you can wrap your parser with the `complete` combinator\nto transform that case in `Error`\n* `Error` means some parser did not succeed, but another one might (as an example,\nwhen testing different branches of an `alt` combinator)\n* `Failure` indicates an unrecoverable error. As an example, if you recognize a prefix\nto decide on the next parser to apply, and that parser fails, you know there's no need\nto try other parsers, you were already in the right branch, so the data is invalid\n","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2903:2038","0:2906:128","0:2909:2039"],"impls":["0:478","0:486","0:491","0:506","0:508","0:510","0:512","a:2:3370:217-0:2901:127","a:2:9616:5287-0:2901:127","a:2:3382:225-0:2901:127","a:2:3411:4730-0:2901:127","a:2:9615:5288-0:2901:127","b:2:3285-0:2901:127","b:2:4145-0:2901:127","b:2:3203-0:2901:127","b:2:2865-0:2901:127","b:2:2868-0:2901:127","b:2:3207-0:2901:127","b:2:3213-0:2901:127","b:2:3218-0:2901:127","b:5:6506-0:2901:127","b:5:848-0:2901:127","0:2912","0:2915","0:2918","0:2920","0:514","0:516","0:522"]}},"2:23476:23765":{"id":"2:23476:23765","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23477:17243","2:23478:61824","2:23479:61825"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23469:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6508:1419":{"id":"5:6508:1419","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4488:60461":{"id":"1:4488:60461","crate_id":1,"name":"stream_len","span":null,"visibility":"default","docs":"Returns the length of this stream (in bytes).\n\nThis method is implemented using up to three seek operations. If this\nmethod returns successfully, the seek position is unchanged (i.e. the\nposition before calling this method is the same as afterwards).\nHowever, if this method returns an error, the seek position is\nunspecified.\n\nIf you need to obtain the length of *many* streams and you don't care\nabout the seek position afterwards, you can reduce the number of seek\noperations by simply calling `seek(SeekFrom::End(0))` and using its\nreturn value (it is also the stream length).\n\nNote that length of a stream can change over time (for example, when\ndata is appended to a file). So calling this method multiple times does\nnot necessarily return the same length each time.\n\n# Example\n\n```no_run\n#![feature(seek_stream_len)]\nuse std::{\n    io::{self, Seek},\n    fs::File,\n};\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n\n    let len = f.stream_len()?;\n    println!(\"The file is currently {len} bytes long\");\n    Ok(())\n}\n```","links":{},"attrs":["#[unstable(feature = \"seek_stream_len\", issue = \"59359\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13849:12801":{"id":"2:13849:12801","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185","str::split":"2:13843:2684","`DoubleEndedIterator`":"2:8768:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49916:5000","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23203:61110":{"id":"2:23203:61110","crate_id":2,"name":"reduce_product","span":null,"visibility":"default","docs":"Returns the product of the lanes of the vector, with wrapping multiplication.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_product(), 24);\n\n// SIMD integer multiplication is always wrapping\nlet v = i32x4::from_array([i32::MAX, 2, 1, 1]);\nassert!(v.reduce_product() < i32::MAX);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:14633:5904":{"id":"2:14633:5904","crate_id":2,"name":"shrink","span":null,"visibility":"default","docs":"Attempts to shrink the memory block.\n\nReturns a new [`NonNull<[u8]>`][NonNull] containing a pointer and the actual size of the allocated\nmemory. The pointer is suitable for holding data described by `new_layout`. To accomplish\nthis, the allocator may shrink the allocation referenced by `ptr` to fit the new layout.\n\nIf this returns `Ok`, then ownership of the memory block referenced by `ptr` has been\ntransferred to this allocator. The memory may or may not have been freed, and should be\nconsidered unusable.\n\nIf this method returns `Err`, then ownership of the memory block has not been transferred to\nthis allocator, and the contents of the memory block are unaltered.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator.\n* `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n* `new_layout.size()` must be smaller than or equal to `old_layout.size()`.\n\nNote that `new_layout.align()` need not be the same as `old_layout.align()`.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting\n\n# Errors\n\nReturns `Err` if the new layout does not meet the allocator's size and alignment\nconstraints of the allocator, or if shrinking otherwise fails.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{"NonNull":"2:2391:4881"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["old_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50886:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:998:2229":{"id":"0:998:2229","crate_id":0,"name":"Slice","span":{"filename":"src/traits.rs","begin":[1006,0],"end":[1009,1]},"visibility":"public","docs":"Slicing operations using ranges.\n\nThis trait is loosely based on\n`Index`, but can actually return\nsomething else than a `&[T]` or `&str`","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1000:1331"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:3166","0:3169","0:3172","0:3175","0:3178","0:3182","0:3186","0:3190"]}},"0:4372":{"id":"0:4372","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4375:2657","0:4377:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:888":{"id":"0:888","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[625,0],"end":[702,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:890:2425","0:891:2641","0:894:2644","0:897:2646","0:900:2647"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3665:61840":{"id":"2:3665:61840","crate_id":2,"name":"resume","span":null,"visibility":"default","docs":"Resumes the execution of this generator.\n\nThis function will resume execution of the generator or start execution\nif it hasn't already. This call will return back into the generator's\nlast suspension point, resuming execution from the latest `yield`. The\ngenerator will continue executing until it either yields or returns, at\nwhich point this function will return.\n\n# Return value\n\nThe `GeneratorState` enum returned from this function indicates what\nstate the generator is in upon returning. If the `Yielded` variant is\nreturned then the generator has reached a suspension point and a value\nhas been yielded out. Generators in this state are available for\nresumption at a later point.\n\nIf `Complete` is returned then the generator has completely finished\nwith the value provided. It is invalid for the generator to be resumed\nagain.\n\n# Panics\n\nThis function may panic if it is called after the `Complete` variant has\nbeen returned previously. While generator literals in the language are\nguaranteed to panic on resuming after `Complete`, this is not guaranteed\nfor all implementations of the `Generator` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:48026:192","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}],["arg",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"GeneratorState","id":"2:46210:4736","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Yield","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Generator","id":"2:3661:4735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}},{"type":{"kind":"qualified_path","inner":{"name":"Return","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Generator","id":"2:3661:4735","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2611:4041":{"id":"0:2611:4041","crate_id":0,"name":"le_u64","span":{"filename":"src/number/streaming.rs","begin":[496,0],"end":[511,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 8 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_u64;\n\nlet parser = |s| {\n  le_u64::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3125:2051":{"id":"0:3125:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5527:2036":{"id":"0:5527:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4076:2236":{"id":"0:4076:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2884:2426":{"id":"b:2:3213-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3425:2663":{"id":"0:3425:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2365:4031":{"id":"0:2365:4031","crate_id":0,"name":"le_u24","span":{"filename":"src/number/complete.rs","begin":[453,0],"end":[468,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 3 byte integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_u24;\n\nlet parser = |s| {\n  le_u24(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10902:8867":{"id":"2:10902:8867","crate_id":2,"name":"write_i8","span":null,"visibility":"default","docs":"Writes a single `i8` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i8"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3605:2548":{"id":"0:3605:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:762:2585":{"id":"0:762:2585","crate_id":0,"name":"is_oct_digit","span":{"filename":"src/traits.rs","begin":[169,2],"end":[169,32]},"visibility":"default","docs":"Tests that self is an octal digit","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2868-0:3154:2228":{"id":"b:2:2868-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3289:1026":{"id":"0:3289:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4187":{"id":"0:4187","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}},"items":["0:4189:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9168:5424":{"id":"2:9168:5424","crate_id":2,"name":"partial_cmp_by","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another with respect to the specified comparison function.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_order_by)]\n\nuse std::cmp::Ordering;\n\nlet xs = [1.0, 2.0, 3.0, 4.0];\nlet ys = [1.0, 4.0, 9.0, 16.0];\n\nassert_eq!(\n    xs.iter().partial_cmp_by(&ys, |&x, &y| x.partial_cmp(&y)),\n    Some(Ordering::Less)\n);\nassert_eq!(\n    xs.iter().partial_cmp_by(&ys, |&x, &y| (x * x).partial_cmp(&y)),\n    Some(Ordering::Equal)\n);\nassert_eq!(\n    xs.iter().partial_cmp_by(&ys, |&x, &y| (2.0 * x).partial_cmp(&y)),\n    Some(Ordering::Greater)\n);\n```","links":{"`Iterator`":"2:8925:160","Ord#lexicographical-comparison":"2:2956:181"},"attrs":["#[unstable(feature = \"iter_order_by\", issue = \"64295\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}],["partial_cmp",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:85:1997":{"id":"0:85:1997","crate_id":0,"name":"from_external_error","span":{"filename":"src/error.rs","begin":[53,2],"end":[53,66]},"visibility":"default","docs":"Creates a new error from an input position, an [ErrorKind] indicating the\nwrapping parser, and an external error","links":{"ErrorKind":"0:2761:1972"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["e",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6223:57738":{"id":"1:6223:57738","crate_id":1,"name":"process_group","span":null,"visibility":"default","docs":"Sets the process group ID (PGID) of the child process. Equivalent to a\n`setpgid` call in the child process, but may be more efficient.\n\nProcess groups determine which processes receive signals.\n\n# Examples\n\nPressing Ctrl-C in a terminal will send SIGINT to all processes in\nthe current foreground process group. By spawning the `sleep`\nsubprocess in a new process group, it will not receive SIGINT from the\nterminal.\n\nThe parent process could install a signal handler and manage the\nsubprocess on its own terms.\n\nA process group ID of 0 will use the process ID as the PGID.\n\n```no_run\nuse std::process::Command;\nuse std::os::unix::process::CommandExt;\n\nCommand::new(\"sleep\")\n    .arg(\"10\")\n    .process_group(0)\n    .spawn()?\n    .wait()?;\n#\n# Ok::<_, Box<dyn std::error::Error>>(())\n```","links":{},"attrs":["#[stable(feature = \"process_set_process_group\", since = \"1.64.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["pgroup",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3634":{"id":"0:3634","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}},"items":["0:3636:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13812:12538":{"id":"2:13812:12538","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:3407:2610":{"id":"0:3407:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9094:2938":{"id":"2:9094:2938","crate_id":2,"name":"max","span":null,"visibility":"default","docs":"Returns the maximum element of an iterator.\n\nIf several elements are equally maximum, the last element is\nreturned. If the iterator is empty, [`None`] is returned.\n\nNote that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\nincomparable. You can work around this by using [`Iterator::reduce`]:\n```\nassert_eq!(\n    [2.4, f32::NAN, 1.3]\n        .into_iter()\n        .reduce(f32::max)\n        .unwrap(),\n    2.4\n);\n```\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet b: Vec<u32> = Vec::new();\n\nassert_eq!(a.iter().max(), Some(&3));\nassert_eq!(b.iter().max(), None);\n```","links":{"`f64`":"1:15868:4615","`None`":"2:47911:178","`f32`":"1:15867:4614","`Ord`":"2:2956:181","`Iterator::reduce`":"2:9035:5414"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9180:5425":{"id":"2:9180:5425","crate_id":2,"name":"eq_by","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are equal to those of\nanother with respect to the specified equality function.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_order_by)]\n\nlet xs = [1, 2, 3, 4];\nlet ys = [1, 4, 9, 16];\n\nassert!(xs.iter().eq_by(&ys, |&x, &y| x * x == y));\n```","links":{"`Iterator`":"2:8925:160"},"attrs":["#[unstable(feature = \"iter_order_by\", issue = \"64295\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}],["eq",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9135:5419":{"id":"2:9135:5419","crate_id":2,"name":"unzip","span":null,"visibility":"default","docs":"Converts an iterator of pairs into a pair of containers.\n\n`unzip()` consumes an entire iterator of pairs, producing two\ncollections: one from the left elements of the pairs, and one\nfrom the right elements.\n\nThis function is, in some sense, the opposite of [`zip`].\n\n[`zip`]: Iterator::zip\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [(1, 2), (3, 4), (5, 6)];\n\nlet (left, right): (Vec<_>, Vec<_>) = a.iter().cloned().unzip();\n\nassert_eq!(left, [1, 3, 5]);\nassert_eq!(right, [2, 4, 6]);\n\n// you can also unzip multiple nested tuples at once\nlet a = [(1, (2, 3)), (4, (5, 6))];\n\nlet (x, (y, z)): (Vec<_>, (Vec<_>, Vec<_>)) = a.iter().cloned().unzip();\nassert_eq!(x, [1, 4]);\nassert_eq!(y, [2, 5]);\nassert_eq!(z, [3, 6]);\n```","links":{"Iterator::zip":"2:8942:2668"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"FromA"},{"kind":"generic","inner":"FromB"}]},"c_variadic":false},"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromA","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"FromB","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"FromA"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8733:4927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"FromB"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8733:4927","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4400:2236":{"id":"0:4400:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2744:2017":{"id":"b:2:2868-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3367:2610":{"id":"0:3367:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1979:3553":{"id":"0:1979:3553","crate_id":0,"name":"anychar","span":{"filename":"src/character/complete.rs","begin":[309,0],"end":[322,1]},"visibility":"public","docs":"Matches one byte as a character. Note that the input type will\naccept a `str`, but not a `&[u8]`, unlike many other nom parsers.\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{character::complete::anychar, Err, error::{Error, ErrorKind}, IResult};\nfn parser(input: &str) -> IResult<&str, char> {\n    anychar(input)\n}\n\nassert_eq!(parser(\"abc\"), Ok((\"bc\",'a')));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2132:3374":{"id":"0:2132:3374","crate_id":0,"name":"none_of","span":{"filename":"src/character/streaming.rs","begin":[115,0],"end":[126,1]},"visibility":"public","docs":"Recognizes a character that is not in the provided characters.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::character::streaming::none_of;\nassert_eq!(none_of::<_, _, (_, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));\nassert_eq!(none_of::<_, _, (_, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));\nassert_eq!(none_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["list",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:6008:1458":{"id":"0:6008:1458","crate_id":0,"name":"u16","span":{"filename":"src/character/streaming.rs","begin":[735,0],"end":[735,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3218-0:2744:2017":{"id":"b:2:3218-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2002:3606":{"id":"0:2002:3606","crate_id":0,"name":"hex_digit1","span":{"filename":"src/character/complete.rs","begin":[483,0],"end":[489,1]},"visibility":"public","docs":"Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f\n\n*Complete version*: Will return an error if there's not enough input data,\nor the whole input if no terminating token is found (a non hexadecimal digit character).\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::hex_digit1;\nfn parser(input: &str) -> IResult<&str, &str> {\n    hex_digit1(input)\n}\n\nassert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));\nassert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::HexDigit))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::HexDigit))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3379":{"id":"0:3379","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3383:2657","0:3385:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2759":{"id":"0:2759","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[159,23],"end":[159,32]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2760:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6214:14548":{"id":"1:6214:14548","crate_id":1,"name":"gid","span":null,"visibility":"default","docs":"Similar to `uid`, but sets the group ID of the child process. This has\nthe same semantics as the `uid` field.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2979":{"id":"0:2979","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}},"items":["0:2982:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4321":{"id":"0:4321","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}},"items":["0:4324:2425","0:4325:2548","0:4326:2608","0:4327:2610","0:4328:2612","0:4329:1026","0:4331:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1818:3287":{"id":"0:1818:3287","crate_id":0,"name":"take_till","span":{"filename":"src/bytes/streaming.rs","begin":[343,0],"end":[351,1]},"visibility":"public","docs":"Returns the longest input slice (if any) till a predicate is met.\n\nThe parser will return the longest slice till the given predicate *(a function that\ntakes the input and returns a bool)*.\n\n# Streaming Specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the\nend of input or if there was not match.\n\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::streaming::take_till;\n\nfn till_colon(s: &str) -> IResult<&str, &str> {\n  take_till(|c| c == ':')(s)\n}\n\nassert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));\nassert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed\nassert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8737:5387":{"id":"2:8737:5387","crate_id":2,"name":"extend_one","span":null,"visibility":"default","docs":"Extends a collection with exactly one element.","links":{},"attrs":["#[unstable(feature = \"extend_one\", issue = \"72631\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["item",{"kind":"generic","inner":"A"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14162:777":{"id":"2:14162:777","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":"Creates a future from a value.\n\n# Examples\n\nBasic usage:\n\n```no_run\nuse std::future::IntoFuture;\n\n# async fn foo() {\nlet v = async { \"meow\" };\nlet mut fut = v.into_future();\nassert_eq!(\"meow\", fut.await);\n# }\n```","links":{},"attrs":["#[stable(feature = \"into_future\", since = \"1.64.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoFuture","id":"2:14159:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2762:2072":{"id":"0:2762:2072","crate_id":0,"name":"Tag","span":{"filename":"src/error.rs","begin":[367,2],"end":[367,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3692":{"id":"0:3692","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3695:2657","0:3697:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4598":{"id":"0:4598","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]},"items":["0:4612:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3550":{"id":"0:3550","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}},"items":["0:3553:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3465:2663":{"id":"0:3465:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4197":{"id":"0:4197","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}},"items":["0:4200:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2235:2216":{"id":"0:2235:2216","crate_id":0,"name":"complete","span":{"filename":"src/number/complete.rs","begin":[1,0],"end":[2138,1]},"visibility":"public","docs":"Parsers recognizing numbers, complete input version","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2323:3965","0:2326:3971","0:2329:3976","0:2332:3981","0:2335:3986","0:2338:3991","0:2341:3995","0:2344:3999","0:2347:4003","0:2350:4010","0:2353:4014","0:2356:4018","0:2359:4021","0:2362:4026","0:2365:4031","0:2368:4036","0:2371:4041","0:2374:4046","0:2377:4049","0:2380:4053","0:2383:4057","0:2386:4061","0:2389:4065","0:2392:4069","0:2395:1461","0:2398:1458","0:2401:4100","0:2404:1459","0:2407:1460","0:2410:1457","0:2413:739","0:2416:736","0:2419:4164","0:2422:737","0:2425:738","0:2428:734","0:2431:4206","0:2434:4212","0:2437:4217","0:2440:4222","0:2443:640","0:2446:641","0:2449:4254","0:6050:4266","0:2464:4275","0:2473:662","0:2477:4291"],"is_stripped":false}},"0:2750:1568":{"id":"0:2750:1568","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[165,7],"end":[165,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"char"}},"0:2112:412":{"id":"0:2112:412","crate_id":0,"name":"char","span":{"filename":"src/character/streaming.rs","begin":[31,0],"end":[44,1]},"visibility":"public","docs":"Recognizes one character.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};\n# use nom::character::streaming::char;\nfn parser(i: &str) -> IResult<&str, char> {\n    char('a')(i)\n}\nassert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));\nassert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));\nassert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2229:2585":{"id":"0:2229:2585","crate_id":0,"name":"is_oct_digit","span":{"filename":"src/character/mod.rs","begin":[66,0],"end":[68,1]},"visibility":"public","docs":"Tests if byte is ASCII octal digit: 0-7\n\n# Example\n\n```\n# use nom::character::is_oct_digit;\nassert_eq!(is_oct_digit(b'a'), false);\nassert_eq!(is_oct_digit(b'9'), false);\nassert_eq!(is_oct_digit(b'6'), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["chr",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3285-0:2901:127":{"id":"b:2:3285-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4194:14603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3287:5654"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:937:2663":{"id":"0:937:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[870,2],"end":[872,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3509:2673":{"id":"0:3509:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:328:2216":{"id":"0:328:2216","crate_id":0,"name":"complete","span":{"filename":"src/combinator/mod.rs","begin":[354,0],"end":[365,1]},"visibility":"public","docs":"Transforms Incomplete into `Error`.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::bytes::streaming::take;\nuse nom::combinator::complete;\n# fn main() {\n\nlet mut parser = complete(take(5u8));\n\nassert_eq!(parser(\"abcdefg\"), Ok((\"fg\", \"abcde\")));\nassert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Complete))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8938:3528":{"id":"2:8938:3528","crate_id":2,"name":"nth","span":null,"visibility":"default","docs":"Returns the `n`th element of the iterator.\n\nLike most indexing operations, the count starts from zero, so `nth(0)`\nreturns the first value, `nth(1)` the second, and so on.\n\nNote that all preceding elements, as well as the returned element, will be\nconsumed from the iterator. That means that the preceding elements will be\ndiscarded, and also that calling `nth(0)` multiple times on the same iterator\nwill return different elements.\n\n`nth()` will return [`None`] if `n` is greater than or equal to the length of the\niterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth(1), Some(&2));\n```\n\nCalling `nth()` multiple times doesn't rewind the iterator:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.nth(1), Some(&2));\nassert_eq!(iter.nth(1), None);\n```\n\nReturning `None` if there are less than `n + 1` elements:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().nth(10), None);\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3229:2673":{"id":"0:3229:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4396:2236":{"id":"0:4396:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6569:14312":{"id":"1:6569:14312","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6570:17122"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:14544:284":{"id":"2:14544:284","crate_id":2,"name":"alloc","span":null,"visibility":"default","docs":"Allocate memory as described by the given `layout`.\n\nReturns a pointer to newly-allocated memory,\nor null to indicate allocation failure.\n\n# Safety\n\nThis function is unsafe because undefined behavior can result\nif the caller does not ensure that `layout` has non-zero size.\n\n(Extension subtraits might provide more specific bounds on\nbehavior, e.g., guarantee a sentinel address or a null pointer\nin response to a zero-size allocation request.)\n\nThe allocated block of memory may or may not be initialized.\n\n# Errors\n\nReturning a null pointer indicates that either memory is exhausted\nor `layout` does not meet this allocator's size or alignment constraints.\n\nImplementations are encouraged to return null on memory\nexhaustion rather than aborting, but this is not\na strict requirement. (Specifically: it is *legal* to\nimplement this trait atop an underlying native allocation\nlibrary that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an\nallocation error are encouraged to call the [`handle_alloc_error`] function,\nrather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:3677":{"id":"0:3677","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}},"items":["0:3680:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:731:2043":{"id":"0:731:2043","crate_id":0,"name":"Offset","span":{"filename":"src/traits.rs","begin":[48,0],"end":[51,1]},"visibility":"public","docs":"Useful functions to calculate the offset between slices and show a hexdump of a slice","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:732:968"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:733","0:735","0:738","0:740"]}},"2:11288:3126":{"id":"2:11288:3126","crate_id":2,"name":"get","span":null,"visibility":"default","docs":"Returns a shared reference to the output at this location, if in\nbounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10900:8865":{"id":"2:10900:8865","crate_id":2,"name":"write_u128","span":null,"visibility":"default","docs":"Writes a single `u128` into this hasher.","links":{},"attrs":["#[stable(feature = \"i128\", since = \"1.26.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:752:2051":{"id":"0:752:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[111,2],"end":[113,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2383:4057":{"id":"0:2383:4057","crate_id":0,"name":"le_i24","span":{"filename":"src/number/complete.rs","begin":[631,0],"end":[641,1]},"visibility":"public","docs":"Recognizes a little endian signed 3 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_i24;\n\nlet parser = |s| {\n  le_i24(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4109:2673":{"id":"0:4109:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8928:5389":{"id":"2:8928:5389","crate_id":2,"name":"next_chunk","span":null,"visibility":"default","docs":"Advances the iterator and returns an array containing the next `N` values.\n\nIf there are not enough elements to fill the array then `Err` is returned\ncontaining an iterator over the remaining elements.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_next_chunk)]\n\nlet mut iter = \"lorem\".chars();\n\nassert_eq!(iter.next_chunk().unwrap(), ['l', 'o']);              // N is inferred as 2\nassert_eq!(iter.next_chunk().unwrap(), ['r', 'e', 'm']);         // N is inferred as 3\nassert_eq!(iter.next_chunk::<4>().unwrap_err().as_slice(), &[]); // N is explicitly 4\n```\n\nSplit a string and get the first three items.\n\n```\n#![feature(iter_next_chunk)]\n\nlet quote = \"not all those who wander are lost\";\nlet [first, second, third] = quote.split_whitespace().next_chunk().unwrap();\nassert_eq!(first, \"not\");\nassert_eq!(second, \"all\");\nassert_eq!(third, \"those\");\n```","links":{},"attrs":["#[unstable(feature = \"iter_next_chunk\", reason = \"recently added\", issue =\n\"98326\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"len":"N"}}},{"type":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"2:4538:4885","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"const":{"type":{"kind":"primitive","inner":"usize"},"expr":"N","value":null,"is_literal":false}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"kind":"primitive","inner":"usize"},"default":null}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4089:1026":{"id":"0:4089:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3624:132":{"id":"2:3624:132","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3626:385"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:66:1845":{"id":"0:66:1845","crate_id":0,"name":"error","span":{"filename":"src/error.rs","begin":[1,0],"end":[619,1]},"visibility":"public","docs":"Error management\n\nParsers are generic over their error type, requiring that it implements\nthe `error::ParseError<Input>` trait.","links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:73:1966","0:79:1984","0:82:1993","0:2718:128","0:124:2008","0:127:2009","0:2730:2013","0:2744:2017","0:154:489","0:161:2041","0:2761:1972","0:2882:2124","0:175:2208"],"is_stripped":false}},"1:6836:57836":{"id":"1:6836:57836","crate_id":1,"name":"quickack","span":null,"visibility":"default","docs":"Gets the value of the `TCP_QUICKACK` option on this socket.\n\nFor more information about this option, see [`TcpStreamExt::set_quickack`].\n\n# Examples\n\n```no_run\n#![feature(tcp_quickack)]\nuse std::net::TcpStream;\nuse std::os::linux::net::TcpStreamExt;\n\nlet stream = TcpStream::connect(\"127.0.0.1:8080\")\n        .expect(\"Couldn't connect to the server...\");\nstream.set_quickack(true).expect(\"set_quickack call failed\");\nassert_eq!(stream.quickack().unwrap_or(false), true);\n```","links":{"`TcpStreamExt::set_quickack`":"1:6835:57835"},"attrs":["#[unstable(feature = \"tcp_quickack\", issue = \"96256\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"bool"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13808:57980":{"id":"2:13808:57980","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3867":{"id":"0:3867","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}},"items":["0:3869:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3681:185":{"id":"2:3681:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The returned type after indexing.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null}},"0:2578:3991":{"id":"0:2578:3991","crate_id":0,"name":"be_u128","span":{"filename":"src/number/streaming.rs","begin":[211,0],"end":[226,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 16 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_u128;\n\nlet parser = |s| {\n  be_u128::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4401":{"id":"0:4401","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}},"items":["0:4404:2425","0:4405:2548","0:4406:2608","0:4407:2610","0:4408:2612","0:4409:1026","0:4411:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4377:2663":{"id":"0:4377:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:906:2663":{"id":"0:906:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[727,2],"end":[727,51]},"visibility":"default","docs":"Compares self to another value for equality\nindependently of the case.\n\nWarning: for `&str`, the comparison is done\nby lowercasing both strings and comparing\nthe result. This is a temporary solution until\na better one appears","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3498:4791":{"id":"2:3498:4791","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3500:185","2:3501:359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3382:225-0:3154:2228":{"id":"a:2:3382:225-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4161":{"id":"0:4161","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}},"items":["0:4164:2425","0:4165:2548","0:4166:2608","0:4167:2610","0:4168:2612","0:4169:1026","0:4171:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1062":{"id":"0:1062","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1304,0],"end":[1311,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1064:490"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:217-0:402:2418":{"id":"a:2:3370:217-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10595:2042":{"id":"2:10595:2042","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10596:1559","2:10597:5578","2:10599:5105"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4387":{"id":"0:4387","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}},"items":["0:4389:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3625:2663":{"id":"0:3625:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4663:2763":{"id":"0:4663:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2668:734":{"id":"0:2668:734","crate_id":0,"name":"i128","span":{"filename":"src/number/streaming.rs","begin":[1118,0],"end":[1130,1]},"visibility":"public","docs":"Recognizes a signed 16 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::i128;\n\nlet be_i128 = |s| {\n  i128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));\nassert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n\nlet le_i128 = |s| {\n  i128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));\nassert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13825:13040":{"id":"2:13825:13040","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50190:5018","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13435:61179":{"id":"2:13435:61179","crate_id":2,"name":"is_suffix_of","span":null,"visibility":"default","docs":"Checks whether the pattern matches at the back of the haystack","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3608:2612":{"id":"0:3608:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:481:852":{"id":"0:481:852","crate_id":0,"name":"map","span":{"filename":"src/internal.rs","begin":[119,2],"end":[128,3]},"visibility":"public","docs":"Applies the given function to the inner error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"E"}],"output":{"kind":"generic","inner":"E2"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:2884:2426":{"id":"b:2:3218-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3411:4730-0:2884:2426":{"id":"a:2:3411:4730-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3659":{"id":"0:3659","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3663:2657","0:3665:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4446:2608":{"id":"0:4446:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:5611:2036":{"id":"0:5611:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4246:2608":{"id":"0:4246:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:276:2272":{"id":"0:276:2272","crate_id":0,"name":"map_opt","span":{"filename":"src/combinator/mod.rs","begin":[142,0],"end":[158,1]},"visibility":"public","docs":"Applies a function returning an `Option` over the result of a parser.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::character::complete::digit1;\nuse nom::combinator::map_opt;\n# fn main() {\n\nlet mut parse = map_opt(digit1, |s: &str| s.parse::<u8>().ok());\n\n// the parser will convert the result of digit1 to a number\nassert_eq!(parse(\"123\"), Ok((\"\", 123)));\n\n// this will fail if digit1 fails\nassert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));\n\n// this will fail if the mapped function fails (a `u8` is too small to hold `123456`)\nassert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapOpt))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"O1"}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O2"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:955":{"id":"0:955","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[905,0],"end":[909,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:957:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3676:2236":{"id":"0:3676:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3321":{"id":"0:3321","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}},"items":["0:3324:2425","0:3325:2548","0:3326:2608","0:3327:2610","0:3328:2612","0:3329:1026","0:3331:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3356:2236":{"id":"0:3356:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4412":{"id":"0:4412","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4415:2657","0:4417:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5532:60811":{"id":"1:5532:60811","crate_id":1,"name":"atime_nsec","span":null,"visibility":"default","docs":"Returns the last access time of the file, in nanoseconds since [`atime`].\n\n[`atime`]: MetadataExt::atime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nano_last_access_time = meta.atime_nsec();\n    Ok(())\n}\n```","links":{"MetadataExt::atime":"1:5531:60810"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13444:5015":{"id":"2:13444:5015","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13446:5381","2:13447:12983","2:13448:12984"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13438:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8957:2053":{"id":"2:8957:2053","crate_id":2,"name":"filter","span":null,"visibility":"default","docs":"Creates an iterator which uses a closure to determine if an element\nshould be yielded.\n\nGiven an element the closure must return `true` or `false`. The returned\niterator will yield only the elements for which the closure returns\ntrue.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [0i32, 1, 2];\n\nlet mut iter = a.iter().filter(|x| x.is_positive());\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nBecause the closure passed to `filter()` takes a reference, and many\niterators iterate over references, this leads to a possibly confusing\nsituation, where the type of the closure is a double reference:\n\n```\nlet a = [0, 1, 2];\n\nlet mut iter = a.iter().filter(|x| **x > 1); // need two *s!\n\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nIt's common to instead use destructuring on the argument to strip away\none:\n\n```\nlet a = [0, 1, 2];\n\nlet mut iter = a.iter().filter(|&x| *x > 1); // both & and *\n\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nor both:\n\n```\nlet a = [0, 1, 2];\n\nlet mut iter = a.iter().filter(|&&x| x > 1); // two &s\n\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), None);\n```\n\nof these layers.\n\nNote that `iter.filter(f).next()` is equivalent to `iter.find(f)`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Filter","id":"2:47055:4941","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:806:2617":{"id":"0:806:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[324,2],"end":[324,63]},"visibility":"default","docs":"Get the byte offset from the element's position in the stream","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9616:5287-0:2884:2426":{"id":"a:2:9616:5287-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3162:668":{"id":"0:3162:668","crate_id":0,"name":"fmt","span":{"filename":"src/traits.rs","begin":[706,9],"end":[706,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:981:2679":{"id":"0:981:2679","crate_id":0,"name":"find_substring","span":{"filename":"src/traits.rs","begin":[970,2],"end":[972,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["substr",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:926:2663":{"id":"0:926:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[832,2],"end":[834,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14159:152":{"id":"2:14159:152","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14160:185","2:14161:152","2:14162:777"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3221:128":{"id":"2:3221:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39194:4754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:3389:2673":{"id":"0:3389:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3566:2608":{"id":"0:3566:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:23235:61904":{"id":"2:23235:61904","crate_id":2,"name":"reduce_and","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"and\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23227:14721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4299":{"id":"0:4299","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4303:2657","0:4305:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:217-0:2718:128":{"id":"a:2:3370:217-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3467":{"id":"0:3467","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}},"items":["0:3469:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1065":{"id":"0:1065","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1315,0],"end":[1321,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"error::VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"items":["0:1067:490"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:2884:2426":{"id":"b:2:3207-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:721":{"id":"0:721","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[24,0],"end":[29,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"items":["0:724:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2940:2051":{"id":"0:2940:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3244:2425":{"id":"0:3244:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:2818:1979":{"id":"0:2818:1979","crate_id":0,"name":"Char","span":{"filename":"src/error.rs","begin":[395,2],"end":[395,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:161:2041":{"id":"0:161:2041","crate_id":0,"name":"convert_error","span":{"filename":"src/error.rs","begin":[251,0],"end":[360,1]},"visibility":"public","docs":"Transforms a `VerboseError` into a trace with input position information","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["e",{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"crate::lib::std::string::String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"core::ops::Deref","id":"2:3594:117","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"str"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6738:14294":{"id":"1:6738:14294","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6739:59822"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:747:2051":{"id":"0:747:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[97,2],"end":[99,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6461:60559":{"id":"1:6461:60559","crate_id":1,"name":"as_raw_stat","span":null,"visibility":"default","docs":"Gain a reference to the underlying `stat` structure which contains\nthe raw information returned by the OS.\n\nThe contents of the returned [`stat`] are **not** consistent across\nUnix platforms. The `os::unix::fs::MetadataExt` trait contains the\ncross-Unix abstractions contained within the raw stat.\n\n[`stat`]: struct@crate::os::linux::raw::stat\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let stat = meta.as_raw_stat();\n    Ok(())\n}\n```","links":{"struct@crate::os::linux::raw::stat":"1:11278:18003"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]","#[deprecated(since = \"1.8.0\", note =\n\"other methods of this trait are now preferred\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.8.0","note":"other methods of this trait are now preferred"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"stat","id":"1:11278:18003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2230:3465":{"id":"0:2230:3465","crate_id":0,"name":"is_alphanumeric","span":{"filename":"src/character/mod.rs","begin":[82,0],"end":[84,1]},"visibility":"public","docs":"Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9\n\n# Example\n\n```\n# use nom::character::is_alphanumeric;\nassert_eq!(is_alphanumeric(b'-'), false);\nassert_eq!(is_alphanumeric(b'a'), true);\nassert_eq!(is_alphanumeric(b'9'), true);\nassert_eq!(is_alphanumeric(b'A'), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["chr",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3553:2673":{"id":"0:3553:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4029:2673":{"id":"0:4029:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:463:2455":{"id":"0:463:2455","crate_id":0,"name":"Finish","span":{"filename":"src/internal.rs","begin":[21,0],"end":[33,1]},"visibility":"public","docs":"Helper trait to convert a parser's result to a more manageable type","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:467:660"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2989:2051":{"id":"0:2989:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2761:1972":{"id":"b:2:3207-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1986:3570":{"id":"0:1986:3570","crate_id":0,"name":"alpha1","span":{"filename":"src/character/complete.rs","begin":[366,0],"end":[372,1]},"visibility":"public","docs":"Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z\n\n*Complete version*: Will return an error if there's not enough input data,\nor the whole input if no terminating token is found  (a non alphabetic character).\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::alpha1;\nfn parser(input: &str) -> IResult<&str, &str> {\n    alpha1(input)\n}\n\nassert_eq!(parser(\"aB1c\"), Ok((\"1c\", \"aB\")));\nassert_eq!(parser(\"1c\"), Err(Err::Error(Error::new(\"1c\", ErrorKind::Alpha))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Alpha))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4324:2425":{"id":"0:4324:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3077":{"id":"0:3077","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}},"items":["0:3080:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13358:2552":{"id":"2:13358:2552","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13359:127","2:13360:5655"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3247:2610":{"id":"0:3247:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4746":{"id":"0:4746","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"}]},"items":["0:4768:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3679:4800":{"id":"2:3679:4800","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3681:185","2:3682:762"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:3565:2548":{"id":"0:3565:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:3437":{"id":"0:3437","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}},"items":["0:3440:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4265:2663":{"id":"0:4265:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4467:2042":{"id":"1:4467:2042","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4468:2005","1:4469:60624","1:4471:60625","1:4472:15000","1:4473:60626","1:4474:60627","1:4475:5105","1:4484:5406"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3370:217-0:2744:2017":{"id":"a:2:3370:217-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3378:223":{"id":"2:3378:223","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4249:1026":{"id":"0:4249:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3006:2051":{"id":"0:3006:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1113:2113":{"id":"0:1113:2113","crate_id":0,"name":"Permutation","span":{"filename":"src/branch/mod.rs","begin":[80,0],"end":[83,1]},"visibility":"public","docs":"Helper trait for the [permutation()] combinator.\n\nThis trait is implemented for tuples of up to 21 elements","links":{"permutation()":"0:1118:2786"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1117:2786"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:4844","0:4852","0:4862","0:4874","0:4888","0:4904","0:4922","0:4942","0:4964","0:4988","0:5014","0:5042","0:5072","0:5104","0:5138","0:5174","0:5212","0:5252","0:5294","0:5338"]}},"0:787:2585":{"id":"0:787:2585","crate_id":0,"name":"is_oct_digit","span":{"filename":"src/traits.rs","begin":[261,2],"end":[263,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488:2498":{"id":"0:488:2498","crate_id":0,"name":"map_input","span":{"filename":"src/internal.rs","begin":[141,2],"end":[150,3]},"visibility":"public","docs":"Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"U"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3444:2425":{"id":"0:3444:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:2410:1457":{"id":"0:2410:1457","crate_id":0,"name":"u128","span":{"filename":"src/number/complete.rs","begin":[925,0],"end":[937,1]},"visibility":"public","docs":"Recognizes an unsigned 16 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::u128;\n\nlet be_u128 = |s| {\n  u128(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));\nassert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_u128 = |s| {\n  u128(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));\nassert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23858:61107":{"id":"2:23858:61107","crate_id":2,"name":"simd_max","span":null,"visibility":"default","docs":"Returns the lane-wise maximum with `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3171:75":{"id":"2:3171:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173:312"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1716:3108":{"id":"0:1716:3108","crate_id":0,"name":"streaming","span":{"filename":"src/bytes/streaming.rs","begin":[1,0],"end":[700,1]},"visibility":"public","docs":"Parsers recognizing bytes streams, streaming version","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1771:3184","0:1777:3219","0:1783:3231","0:1790:3245","0:1797:3257","0:1804:3263","0:1811:3275","0:1818:3287","0:1825:3295","0:1832:2423","0:1838:3319","0:1844:3324","0:1850:3336","0:1862:3357"],"is_stripped":false}},"0:4963:2786":{"id":"0:4963:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23158:61107":{"id":"2:23158:61107","crate_id":2,"name":"simd_max","span":null,"visibility":"default","docs":"Returns the maximum of each lane.\n\nIf one of the values is `NAN`, then the other value is returned.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3433:2673":{"id":"0:3433:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3644:2425":{"id":"0:3644:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:933":{"id":"0:933","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[864,0],"end":[873,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:936:2657","0:937:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3111:2051":{"id":"0:3111:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2901:127":{"id":"b:5:848-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["5:850:4751","5:851:2503","5:852:5430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1005:2706":{"id":"0:1005:2706","crate_id":0,"name":"ExtendInto","span":{"filename":"src/traits.rs","begin":[1138,0],"end":[1151,1]},"visibility":"public","docs":"Abstracts something which can extend an `Extend`.\nUsed to build modified input slices in `escaped_transform`","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1006:2425","0:1007:2708","0:1008:2710","0:1009:2712"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5502:59528":{"id":"1:5502:59528","crate_id":1,"name":"read_exact_at","span":null,"visibility":"default","docs":"Reads the exact number of byte required to fill `buf` from the given offset.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nSimilar to [`io::Read::read_exact`] but uses [`read_at`] instead of `read`.\n\n[`read_at`]: FileExt::read_at\n\n# Errors\n\nIf this function encounters an error of the kind\n[`io::ErrorKind::Interrupted`] then the error is ignored and the operation\nwill continue.\n\nIf this function encounters an \"end of file\" before completely filling\nthe buffer, it returns an error of the kind [`io::ErrorKind::UnexpectedEof`].\nThe contents of `buf` are unspecified in this case.\n\nIf any other read error is encountered then this function immediately\nreturns. The contents of `buf` are unspecified in this case.\n\nIf this function returns an error, it is unspecified how many bytes it\nhas read, but it will never read more than would be necessary to\ncompletely fill the buffer.\n\n# Examples\n\n```no_run\nuse std::io;\nuse std::fs::File;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let mut buf = [0u8; 8];\n    let file = File::open(\"foo.txt\")?;\n\n    // We now read exactly 8 bytes from the offset 10.\n    file.read_exact_at(&mut buf, 10)?;\n    println!(\"read {} bytes: {:?}\", buf.len(), buf);\n    Ok(())\n}\n```","links":{"`io::Read::read_exact`":"1:4417:60106","FileExt::read_at":"1:5501:59526","`io::ErrorKind::UnexpectedEof`":"1:10860:16790","`io::ErrorKind::Interrupted`":"1:10856:17082"},"attrs":["#[stable(feature = \"rw_exact_all_at\", since = \"1.33.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3241":{"id":"0:3241","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}},"items":["0:3244:2425","0:3245:2548","0:3246:2608","0:3247:2610","0:3248:2612","0:3249:1026","0:3251:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4236:2236":{"id":"0:4236:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5526:60808":{"id":"1:5526:60808","crate_id":1,"name":"nlink","span":null,"visibility":"default","docs":"Returns the number of hard links pointing to this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nb_hard_links = meta.nlink();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8963:5399":{"id":"2:8963:5399","crate_id":2,"name":"peekable","span":null,"visibility":"default","docs":"Creates an iterator which can use the [`peek`] and [`peek_mut`] methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information.\n\nNote that the underlying iterator is still advanced when [`peek`] or\n[`peek_mut`] are called for the first time: In order to retrieve the\nnext element, [`next`] is called on the underlying iterator, hence any\nside effects (i.e. anything other than fetching the next value) of\nthe [`next`] method will occur.\n\n\n# Examples\n\nBasic usage:\n\n```\nlet xs = [1, 2, 3];\n\nlet mut iter = xs.iter().peekable();\n\n// peek() lets us see into the future\nassert_eq!(iter.peek(), Some(&&1));\nassert_eq!(iter.next(), Some(&1));\n\nassert_eq!(iter.next(), Some(&2));\n\n// we can peek() multiple times, the iterator won't advance\nassert_eq!(iter.peek(), Some(&&3));\nassert_eq!(iter.peek(), Some(&&3));\n\nassert_eq!(iter.next(), Some(&3));\n\n// after the iterator is finished, so is peek()\nassert_eq!(iter.peek(), None);\nassert_eq!(iter.next(), None);\n```\n\nUsing [`peek_mut`] to mutate the next item without advancing the\niterator:\n\n```\nlet xs = [1, 2, 3];\n\nlet mut iter = xs.iter().peekable();\n\n// `peek_mut()` lets us see into the future\nassert_eq!(iter.peek_mut(), Some(&mut &1));\nassert_eq!(iter.peek_mut(), Some(&mut &1));\nassert_eq!(iter.next(), Some(&1));\n\nif let Some(mut p) = iter.peek_mut() {\n    assert_eq!(*p, &2);\n    // put a value into the iterator\n    *p = &1000;\n}\n\n// The value reappears as the iterator continues\nassert_eq!(iter.collect::<Vec<_>>(), vec![&1000, &3]);\n```\n[`peek`]: Peekable::peek\n[`peek_mut`]: Peekable::peek_mut\n[`next`]: Iterator::next","links":{"Peekable::peek":"2:7468:2313","Peekable::peek_mut":"2:7470:7516","Iterator::next":"2:8927:933"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Peekable","id":"2:47134:4945","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1042:2725":{"id":"0:1042:2725","crate_id":0,"name":"to_usize","span":{"filename":"src/traits.rs","begin":[1255,2],"end":[1257,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3200:2236":{"id":"0:3200:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1055:490":{"id":"0:1055:490","crate_id":0,"name":"convert","span":{"filename":"src/traits.rs","begin":[1289,2],"end":[1291,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4408:2612":{"id":"0:4408:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9140:2623":{"id":"2:9140:2623","crate_id":2,"name":"copied","span":null,"visibility":"default","docs":"Creates an iterator which copies all of its elements.\n\nThis is useful when you have an iterator over `&T`, but you need an\niterator over `T`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet v_copied: Vec<_> = a.iter().copied().collect();\n\n// copied is the same as .map(|&x| x)\nlet v_map: Vec<_> = a.iter().map(|&x| x).collect();\n\nassert_eq!(v_copied, vec![1, 2, 3]);\nassert_eq!(v_map, vec![1, 2, 3]);\n```","links":{},"attrs":["#[stable(feature = \"iter_copied\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5713:2036":{"id":"0:5713:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:756:2222":{"id":"0:756:2222","crate_id":0,"name":"AsChar","span":{"filename":"src/traits.rs","begin":[151,0],"end":[172,1]},"visibility":"public","docs":"Transforms common types to a char for basic token parsing","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:757:2573","0:758:2577","0:759:2579","0:760:2581","0:761:2583","0:762:2585","0:763:803"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:764","0:772","0:781","0:789"]}},"2:3468:924":{"id":"2:3468:924","crate_id":2,"name":"neg","span":null,"visibility":"default","docs":"Performs the unary `-` operation.\n\n# Example\n\n```\nlet x: i32 = 12;\nassert_eq!(-x, -12);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Neg","id":"2:3466:4784","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4449:1026":{"id":"0:4449:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4287:2610":{"id":"0:4287:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:793:2579":{"id":"0:793:2579","crate_id":0,"name":"is_alphanum","span":{"filename":"src/traits.rs","begin":[280,2],"end":[282,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1133:2763":{"id":"0:1133:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[189,2],"end":[191,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2982:2051":{"id":"0:2982:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2957:2051":{"id":"0:2957:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3179:2404":{"id":"2:3179:2404","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Converts this type into the (usually inferred) input type.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3056":{"id":"0:3056","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}},"items":["0:3059:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2481:3108":{"id":"0:2481:3108","crate_id":0,"name":"streaming","span":{"filename":"src/number/streaming.rs","begin":[1,0],"end":[2218,1]},"visibility":"public","docs":"Parsers recognizing numbers, streaming version","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2563:3965","0:2566:3971","0:2569:3976","0:2572:3981","0:2575:3986","0:2578:3991","0:2581:3995","0:2584:3999","0:2587:4003","0:2590:4010","0:2593:4014","0:2596:4018","0:2599:4021","0:2602:4026","0:2605:4031","0:2608:4036","0:2611:4041","0:2614:4046","0:2617:4049","0:2620:4053","0:2623:4057","0:2626:4061","0:2629:4065","0:2632:4069","0:2635:1461","0:2638:1458","0:2641:4100","0:2644:1459","0:2647:1460","0:2650:1457","0:2653:739","0:2656:736","0:2659:4164","0:2662:737","0:2665:738","0:2668:734","0:2671:4206","0:2674:4212","0:2677:4217","0:2680:4222","0:2683:640","0:2686:641","0:2689:4254","0:6081:4266","0:2704:4275","0:2710:662","0:2714:4291"],"is_stripped":false}},"0:2879":{"id":"0:2879","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,33],"end":[364,38]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2880:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:775:2577":{"id":"0:775:2577","crate_id":0,"name":"is_alpha","span":{"filename":"src/traits.rs","begin":[212,2],"end":[214,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3164":{"id":"0:3164","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[706,16],"end":[706,25]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3165:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4349:2673":{"id":"0:4349:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3710":{"id":"0:3710","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}},"items":["0:3713:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3217:1440":{"id":"2:3217:1440","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14632:5903":{"id":"2:14632:5903","crate_id":2,"name":"grow_zeroed","span":null,"visibility":"default","docs":"Behaves like `grow`, but also ensures that the new contents are set to zero before being\nreturned.\n\nThe memory block will contain the following contents after a successful call to\n`grow_zeroed`:\n  * Bytes `0..old_layout.size()` are preserved from the original allocation.\n  * Bytes `old_layout.size()..old_size` will either be preserved or zeroed, depending on\n    the allocator implementation. `old_size` refers to the size of the memory block prior\n    to the `grow_zeroed` call, which may be larger than the size that was originally\n    requested when it was allocated.\n  * Bytes `old_size..new_size` are zeroed. `new_size` refers to the size of the memory\n    block returned by the `grow_zeroed` call.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator.\n* `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n* `new_layout.size()` must be greater than or equal to `old_layout.size()`.\n\nNote that `new_layout.align()` need not be the same as `old_layout.align()`.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting\n\n# Errors\n\nReturns `Err` if the new layout does not meet the allocator's size and alignment\nconstraints of the allocator, or if growing otherwise fails.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["old_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50886:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2914:668":{"id":"0:2914:668","crate_id":0,"name":"fmt","span":{"filename":"src/internal.rs","begin":[95,9],"end":[95,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3783:2657":{"id":"0:3783:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10659:668":{"id":"2:10659:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4493:60855":{"id":"1:4493:60855","crate_id":1,"name":"fill_buf","span":null,"visibility":"default","docs":"Returns the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty.\n\nThis function is a lower-level call. It needs to be paired with the\n[`consume`] method to function properly. When calling this\nmethod, none of the contents will be \"read\" in the sense that later\ncalling `read` may return the same contents. As such, [`consume`] must\nbe called with the number of bytes that are consumed from this buffer to\nensure that the bytes are never returned twice.\n\n[`consume`]: BufRead::consume\n\nAn empty buffer returned indicates that the stream has reached EOF.\n\n# Errors\n\nThis function will return an I/O error if the underlying reader was\nread, but returned an error.\n\n# Examples\n\nA locked standard input implements `BufRead`:\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\n\nlet stdin = io::stdin();\nlet mut stdin = stdin.lock();\n\nlet buffer = stdin.fill_buf().unwrap();\n\n// work with buffer\nprintln!(\"{buffer:?}\");\n\n// ensure the bytes we worked with aren't returned again later\nlet length = buffer.len();\nstdin.consume(length);\n```","links":{"BufRead::consume":"1:4494:60856"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:911:2657":{"id":"0:911:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[739,2],"end":[768,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2761:1972":{"id":"0:2761:1972","crate_id":0,"name":"ErrorKind","span":{"filename":"src/error.rs","begin":[366,0],"end":[420,1]},"visibility":"public","docs":"Indicates which parser returned an error","links":{},"attrs":["#[rustfmt::skip]","#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2762:2072","0:2764:2073","0:2766:2074","0:2768:2075","0:2770:2076","0:2772:2077","0:2774:2078","0:2776:2079","0:2778:2080","0:2780:2081","0:2782:2082","0:2784:108","0:2786:2083","0:2788:2084","0:2790:2085","0:2792:2086","0:2794:2087","0:2796:2088","0:2798:2089","0:2800:2090","0:2802:2091","0:2804:2092","0:2806:2093","0:2808:2094","0:2810:2095","0:2812:2096","0:2814:2097","0:2816:2098","0:2818:1979","0:2820:2099","0:2822:2100","0:2824:2101","0:2826:2102","0:2828:2103","0:2830:2104","0:2832:2105","0:2834:2106","0:2836:2107","0:2838:2108","0:2840:2109","0:2842:2110","0:2844:2111","0:2846:2112","0:2848:2113","0:2850:2114","0:2852:2115","0:2854:2116","0:2856:2117","0:2858:2118","0:2860:2119","0:2862:2120","0:2864:2121","0:2866:2122"],"impls":["0:172","a:2:3370:217-0:2761:1972","a:2:9616:5287-0:2761:1972","a:2:3382:225-0:2761:1972","a:2:3411:4730-0:2761:1972","a:2:9615:5288-0:2761:1972","b:2:4145-0:2761:1972","b:2:3203-0:2761:1972","b:2:2865-0:2761:1972","b:2:2868-0:2761:1972","b:2:3207-0:2761:1972","b:2:3213-0:2761:1972","b:2:3218-0:2761:1972","b:5:848-0:2761:1972","0:2868","0:2870","0:2871","0:2873","0:2874","0:2876","0:2879","0:2881"]}},"a:2:9615:5288-0:402:2418":{"id":"a:2:9615:5288-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4499":{"id":"0:4499","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4503:2657","0:4505:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:839:2635":{"id":"0:839:2635","crate_id":0,"name":"UnspecializedInput","span":{"filename":"src/traits.rs","begin":[439,0],"end":[439,31]},"visibility":"public","docs":"Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).\n\nWhen implementing a custom input type, it is possible to use directly the\ndefault implementation: If the input type implements `InputLength`, `InputIter`,\n`InputTake` and `Clone`, you can implement `UnspecializedInput` and get\na default version of `InputTakeAtPosition` and `Compare`.\n\nFor performance reasons, you might want to write a custom implementation of\n`InputTakeAtPosition` (like the one for `&[u8]`).","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4570:2763":{"id":"0:4570:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2718:128":{"id":"b:2:2868-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2766:2074":{"id":"0:2766:2074","crate_id":0,"name":"MapOpt","span":{"filename":"src/error.rs","begin":[369,2],"end":[369,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3297:2663":{"id":"0:3297:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10894:660":{"id":"2:10894:660","crate_id":2,"name":"finish","span":null,"visibility":"default","docs":"Returns the hash value for the values written so far.\n\nDespite its name, the method does not reset the hasher’s internal\nstate. Additional [`write`]s will continue from the current value.\nIf you need to start a fresh hash value, you will have to create\na new hasher.\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::Hasher;\n\nlet mut hasher = DefaultHasher::new();\nhasher.write(b\"Cool!\");\n\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```\n\n[`write`]: Hasher::write","links":{"Hasher::write":"2:10895:2005"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3048:2051":{"id":"0:3048:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13886:2060":{"id":"2:13886:2060","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2118:3498":{"id":"0:2118:3498","crate_id":0,"name":"satisfy","span":{"filename":"src/character/streaming.rs","begin":[61,0],"end":[76,1]},"visibility":"public","docs":"Recognizes one character and checks that it satisfies a predicate\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};\n# use nom::character::streaming::satisfy;\nfn parser(i: &str) -> IResult<&str, char> {\n    satisfy(|c| c == 'a' || c == 'b')(i)\n}\nassert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));\nassert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));\nassert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::Unknown)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"char"}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:367:2365":{"id":"0:367:2365","crate_id":0,"name":"recognize","span":{"filename":"src/combinator/mod.rs","begin":[504,0],"end":[520,1]},"visibility":"public","docs":"If the child parser was successful, return the consumed input as produced value.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::recognize;\nuse nom::character::complete::{char, alpha1};\nuse nom::sequence::separated_pair;\n# fn main() {\n\nlet mut parser = recognize(separated_pair(alpha1, char(','), alpha1));\n\nassert_eq!(parser(\"abcd,efgh\"), Ok((\"\", \"abcd,efgh\")));\nassert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:6095":{"id":"0:6095","crate_id":0,"name":null,"span":{"filename":"src/number/mod.rs","begin":[7,16],"end":[7,25]},"visibility":{"restricted":{"parent":"0:2234:1851","path":"::number"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13820:1849":{"id":"2:13820:1849","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49884:5022","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4861:2786":{"id":"0:4861:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2996:2051":{"id":"0:2996:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13826:12977":{"id":"2:13826:12977","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3197":{"id":"0:3197","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}},"items":["0:3200:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4329:1026":{"id":"0:4329:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4145-0:2884:2426":{"id":"b:2:4145-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:825":{"id":"0:825","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[377,0],"end":[414,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:827:2425","0:828:2548","0:829:2608","0:830:2610","0:831:2612","0:832:1026","0:834:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6236:18080":{"id":"1:6236:18080","crate_id":1,"name":"signal","span":null,"visibility":"default","docs":"If the process was terminated by a signal, returns that signal.\n\nIn other words, if `WIFSIGNALED`, this returns `WTERMSIG`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3927:2610":{"id":"0:3927:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2730:2013":{"id":"b:2:3207-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4244:2425":{"id":"0:4244:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3928:2612":{"id":"0:3928:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5966:1460":{"id":"0:5966:1460","crate_id":0,"name":"u64","span":{"filename":"src/character/complete.rs","begin":[829,0],"end":[829,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:900:2647":{"id":"0:900:2647","crate_id":0,"name":"split_at_position1_complete","span":{"filename":"src/traits.rs","begin":[675,2],"end":[701,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9023:5413":{"id":"2:9023:5413","crate_id":2,"name":"try_for_each","span":null,"visibility":"default","docs":"An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error.\n\nThis can also be thought of as the fallible form of [`for_each()`]\nor as the stateless version of [`try_fold()`].\n\n[`for_each()`]: Iterator::for_each\n[`try_fold()`]: Iterator::try_fold\n\n# Examples\n\n```\nuse std::fs::rename;\nuse std::io::{stdout, Write};\nuse std::path::Path;\n\nlet data = [\"no_tea.txt\", \"stale_bread.json\", \"torrential_rain.png\"];\n\nlet res = data.iter().try_for_each(|x| writeln!(stdout(), \"{x}\"));\nassert!(res.is_ok());\n\nlet mut it = data.iter().cloned();\nlet res = it.try_for_each(|x| rename(x, Path::new(x).with_extension(\"old\")));\nassert!(res.is_err());\n// It short-circuited, so the remaining items are still in the iterator:\nassert_eq!(it.next(), Some(\"stale_bread.json\"));\n```\n\nThe [`ControlFlow`] type can be used with this method for the situations\nin which you'd use `break` and `continue` in a normal loop:\n\n```\nuse std::ops::ControlFlow;\n\nlet r = (2..100).try_for_each(|x| {\n    if 323 % x == 0 {\n        return ControlFlow::Break(x)\n    }\n\n    ControlFlow::Continue(())\n});\nassert_eq!(r, ControlFlow::Break(17));\n```","links":{"Iterator::for_each":"2:8950:5397","`ControlFlow`":"2:46183:4810","Iterator::try_fold":"2:9019:5412"},"attrs":["#[stable(feature = \"iterator_try_fold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"tuple","inner":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2632:4069":{"id":"0:2632:4069","crate_id":0,"name":"le_i128","span":{"filename":"src/number/streaming.rs","begin":[679,0],"end":[684,1]},"visibility":"public","docs":"Recognizes a little endian signed 16 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_i128;\n\nlet parser = |s| {\n  le_i128::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3203-0:6086:3949":{"id":"b:2:3203-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4503:2657":{"id":"0:4503:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3834":{"id":"0:3834","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}},"items":["0:3836:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12859:11437":{"id":"2:12859:11437","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12860:2425","2:12861:61526"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23230:1245":{"id":"2:23230:1245","crate_id":2,"name":"saturating_sub","span":null,"visibility":"default","docs":"Lanewise saturating subtract.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdUint};\nuse core::u32::MAX;\nlet x = Simd::from_array([2, 1, 0, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x - max;\nlet sat = x.saturating_sub(max);\nassert_eq!(unsat, Simd::from_array([3, 2, 1, 0]));\nassert_eq!(sat, Simd::splat(0));","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23160:61109":{"id":"2:23160:61109","crate_id":2,"name":"reduce_sum","span":null,"visibility":"default","docs":"Returns the sum of the lanes of the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([1., 2.]);\nassert_eq!(v.reduce_sum(), 3.);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10901:8866":{"id":"2:10901:8866","crate_id":2,"name":"write_usize","span":null,"visibility":"default","docs":"Writes a single `usize` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3935:2657":{"id":"0:3935:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3211:2617":{"id":"0:3211:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3917":{"id":"0:3917","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}},"items":["0:3920:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4921:2786":{"id":"0:4921:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5071:2786":{"id":"0:5071:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4074":{"id":"0:4074","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}},"items":["0:4076:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3313:2673":{"id":"0:3313:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13873:13201":{"id":"2:13873:13201","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:13870:4686","`DoubleEndedIterator`":"2:8768:121","self::pattern":"2:13419:3185","prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50120:5034","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3964:2425":{"id":"0:3964:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:10893:147":{"id":"2:10893:147","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10894:660","2:10895:2005","2:10896:8861","2:10897:8862","2:10898:8863","2:10899:8864","2:10900:8865","2:10901:8866","2:10902:8867","2:10903:8868","2:10904:8869","2:10905:8870","2:10906:8871","2:10907:8872","2:10908:8873","2:10909:1559"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2951":{"id":"0:2951","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}},"items":["0:2954:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13852:13221":{"id":"2:13852:13221","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"2:13843:2684","prim@char":"1:15857:4607","self::pattern":"2:13419:3185","`DoubleEndedIterator`":"2:8768:121","str::rsplit_terminator":"2:13855:13217"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49948:5036","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:761:2583":{"id":"0:761:2583","crate_id":0,"name":"is_hex_digit","span":{"filename":"src/traits.rs","begin":[167,2],"end":[167,32]},"visibility":"default","docs":"Tests that self is an hex digit","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1650:3275":{"id":"0:1650:3275","crate_id":0,"name":"take_while_m_n","span":{"filename":"src/bytes/complete.rs","begin":[249,0],"end":[310,1]},"visibility":"public","docs":"Returns the longest (m <= len <= n) input slice  that matches the predicate.\n\nThe parser will return the longest slice that matches the given predicate *(a function that\ntakes the input and returns a bool)*.\n\nIt will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met or is out\nof range (m <= len <= n).\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::take_while_m_n;\nuse nom::character::is_alphabetic;\n\nfn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  take_while_m_n(3, 6, is_alphabetic)(s)\n}\n\nassert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));\nassert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));\nassert_eq!(short_alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));\nassert_eq!(short_alpha(b\"ed\"), Err(Err::Error(Error::new(&b\"ed\"[..], ErrorKind::TakeWhileMN))));\nassert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["m",{"kind":"primitive","inner":"usize"}],["n",{"kind":"primitive","inner":"usize"}],["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13803:62645":{"id":"2:13803:62645","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:413:660":{"id":"0:413:660","crate_id":0,"name":"finish","span":{"filename":"src/combinator/mod.rs","begin":[680,2],"end":[686,3]},"visibility":"public","docs":"Returns the remaining input if parsing was successful, or the error if we encountered an error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13447:12983":{"id":"2:13447:12983","crate_id":2,"name":"next_match_back","span":null,"visibility":"default","docs":"Finds the next [`Match`][SearchStep::Match] result.\nSee [`next_back()`][ReverseSearcher::next_back].","links":{"SearchStep::Match":"2:50279:12985","ReverseSearcher::next_back":"2:13446:5381"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:844:228":{"id":"5:844:228","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:4751","5:846:2503","5:847:5430"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5383:2786":{"id":"0:5383:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"},{"kind":"generic","inner":"U"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2359:4021":{"id":"0:2359:4021","crate_id":0,"name":"le_u8","span":{"filename":"src/number/complete.rs","begin":[390,0],"end":[402,1]},"visibility":"public","docs":"Recognizes an unsigned 1 byte integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_u8;\n\nlet parser = |s| {\n  le_u8(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:829:2608":{"id":"0:829:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[380,2],"end":[380,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49868:2551","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}},"2:10931:8893":{"id":"2:10931:8893","crate_id":2,"name":"hash_one","span":null,"visibility":"default","docs":"Calculates the hash of a single value.\n\nThis is intended as a convenience for code which *consumes* hashes, such\nas the implementation of a hash table or in unit tests that check\nwhether a custom [`Hash`] implementation behaves as expected.\n\nThis must not be used in any code which *creates* hashes, such as in an\nimplementation of [`Hash`].  The way to create a combined hash of\nmultiple values is to call [`Hash::hash`] multiple times using the same\n[`Hasher`], not to call this method repeatedly and combine the results.\n\n# Example\n\n```\n#![feature(build_hasher_simple_hash_one)]\n\nuse std::cmp::{max, min};\nuse std::hash::{BuildHasher, Hash, Hasher};\nstruct OrderAmbivalentPair<T: Ord>(T, T);\nimpl<T: Ord + Hash> Hash for OrderAmbivalentPair<T> {\n    fn hash<H: Hasher>(&self, hasher: &mut H) {\n        min(&self.0, &self.1).hash(hasher);\n        max(&self.0, &self.1).hash(hasher);\n    }\n}\n\n// Then later, in a `#[test]` for the type...\nlet bh = std::collections::hash_map::RandomState::new();\nassert_eq!(\n    bh.hash_one(OrderAmbivalentPair(1, 2)),\n    bh.hash_one(OrderAmbivalentPair(2, 1))\n);\nassert_eq!(\n    bh.hash_one(OrderAmbivalentPair(10, 2)),\n    bh.hash_one(&OrderAmbivalentPair(2, 10))\n);\n```","links":{"`Hash`":"2:10883:143","`Hash::hash`":"2:10884:723","`Hasher`":"2:10893:147"},"attrs":["#[unstable(feature = \"build_hasher_simple_hash_one\", issue = \"86161\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["x",{"kind":"generic","inner":"T"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Hash","id":"2:10883:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:947":{"id":"0:947","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[893,0],"end":[897,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:950:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2862:98":{"id":"2:2862:98","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2864:57555"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3717":{"id":"0:3717","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}},"items":["0:3720:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3326:2608":{"id":"0:3326:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:2956:181":{"id":"2:2956:181","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2957:423","2:2958:2938","2:2959:2937","2:2960:5379"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23146:61097":{"id":"2:23146:61097","crate_id":2,"name":"to_degrees","span":null,"visibility":"default","docs":"Converts each lane from radians to degrees.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:828:2548":{"id":"0:828:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[379,2],"end":[379,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49874:2550","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}},"0:941":{"id":"0:941","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[881,0],"end":[885,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:943:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2954:2051":{"id":"0:2954:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3181:1331":{"id":"0:3181:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6639:57639":{"id":"1:6639:57639","crate_id":1,"name":"as_raw_fd","span":null,"visibility":"default","docs":"Extracts the raw file descriptor.\n\nThis function is typically used to **borrow** an owned file descriptor.\nWhen used in this way, this method does **not** pass ownership of the\nraw file descriptor to the caller, and the file descriptor is only\nguaranteed to be valid while the original object has not yet been\ndestroyed.\n\nHowever, borrowing is not strictly required. See [`AsFd::as_fd`]\nfor an API which strictly borrows a file descriptor.\n\n# Example\n\n```no_run\nuse std::fs::File;\n# use std::io;\n#[cfg(unix)]\nuse std::os::unix::io::{AsRawFd, RawFd};\n#[cfg(target_os = \"wasi\")]\nuse std::os::wasi::io::{AsRawFd, RawFd};\n\nlet mut f = File::open(\"foo.txt\")?;\n// Note that `raw_fd` is only valid as long as `f` exists.\n#[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.as_raw_fd();\n# Ok::<(), io::Error>(())\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:493:2498":{"id":"0:493:2498","crate_id":0,"name":"map_input","span":{"filename":"src/internal.rs","begin":[155,2],"end":[170,3]},"visibility":"public","docs":"Maps `Err<error::Error<T>>` to `Err<error::Error<U>>` with the given `F: T -> U`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3627:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4237":{"id":"0:4237","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}},"items":["0:4240:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4116:2236":{"id":"0:4116:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3943:2657":{"id":"0:3943:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4474:60627":{"id":"1:4474:60627","crate_id":1,"name":"write_all_vectored","span":null,"visibility":"default","docs":"Attempts to write multiple buffers into this writer.\n\nThis method will continuously call [`write_vectored`] until there is no\nmore data to be written or an error of non-[`ErrorKind::Interrupted`]\nkind is returned. This method will not return until all buffers have\nbeen successfully written or such an error occurs. The first error that\nis not of [`ErrorKind::Interrupted`] kind generated from this method\nwill be returned.\n\nIf the buffer contains no data, this will never call [`write_vectored`].\n\n# Notes\n\nUnlike [`write_vectored`], this takes a *mutable* reference to\na slice of [`IoSlice`]s, not an immutable one. That's because we need to\nmodify the slice to keep track of the bytes already written.\n\nOnce this function returns, the contents of `bufs` are unspecified, as\nthis depends on how many calls to [`write_vectored`] were necessary. It is\nbest to understand this function as taking ownership of `bufs` and to\nnot use `bufs` afterwards. The underlying buffers, to which the\n[`IoSlice`]s point (but not the [`IoSlice`]s themselves), are unchanged and\ncan be reused.\n\n[`write_vectored`]: Write::write_vectored\n\n# Examples\n\n```\n#![feature(write_all_vectored)]\n# fn main() -> std::io::Result<()> {\n\nuse std::io::{Write, IoSlice};\n\nlet mut writer = Vec::new();\nlet bufs = &mut [\n    IoSlice::new(&[1]),\n    IoSlice::new(&[2, 3]),\n    IoSlice::new(&[4, 5, 6]),\n];\n\nwriter.write_all_vectored(bufs)?;\n// Note: the contents of `bufs` is now undefined, see the Notes section.\n\nassert_eq!(writer, &[1, 2, 3, 4, 5, 6]);\n# Ok(()) }\n```","links":{"`ErrorKind::Interrupted`":"1:10856:17082","`IoSlice`":"1:10916:5603","Write::write_vectored":"1:4469:60624"},"attrs":["#[unstable(feature = \"write_all_vectored\", issue = \"70436\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSlice","id":"1:10916:5603","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:802:2610":{"id":"0:802:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[316,2],"end":[316,39]},"visibility":"default","docs":"Returns an iterator over the elements and their byte offsets","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5503:2036":{"id":"0:5503:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3186:1440":{"id":"2:3186:1440","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":"Performs the conversion.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4873:2786":{"id":"0:4873:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3503:2657":{"id":"0:3503:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4049:1026":{"id":"0:4049:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4451:2617":{"id":"0:4451:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4196:2236":{"id":"0:4196:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1976:3546":{"id":"0:1976:3546","crate_id":0,"name":"tab","span":{"filename":"src/character/complete.rs","begin":[286,0],"end":[292,1]},"visibility":"public","docs":"Matches a tab character '\\t'.\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::tab;\nfn parser(input: &str) -> IResult<&str, char> {\n    tab(input)\n}\n\nassert_eq!(parser(\"\\tc\"), Ok((\"c\", '\\t')));\nassert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1043":{"id":"0:1043","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1261,0],"end":[1266,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":["#[cfg(any(target_pointer_width = \"32\", target_pointer_width = \"64\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u32"},"items":["0:1044:2725"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:792:2577":{"id":"0:792:2577","crate_id":0,"name":"is_alpha","span":{"filename":"src/traits.rs","begin":[276,2],"end":[278,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4313:2673":{"id":"0:4313:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3720:2236":{"id":"0:3720:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:564:2515":{"id":"0:564:2515","crate_id":0,"name":"Map","span":{"filename":"src/internal.rs","begin":[341,0],"end":[345,1]},"visibility":"public","docs":"Implementation of `Parser::map`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:285:2280":{"id":"0:285:2280","crate_id":0,"name":"map_parser","span":{"filename":"src/combinator/mod.rs","begin":[176,0],"end":[189,1]},"visibility":"public","docs":"Applies a parser over the result of another one.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::character::complete::digit1;\nuse nom::bytes::complete::take;\nuse nom::combinator::map_parser;\n# fn main() {\n\nlet mut parse = map_parser(take(5u8), digit1);\n\nassert_eq!(parse(\"12345\"), Ok((\"\", \"12345\")));\nassert_eq!(parse(\"123ab\"), Ok((\"\", \"123\")));\nassert_eq!(parse(\"123\"), Err(Err::Error((\"123\", ErrorKind::Eof))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}],["applied_parser",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3218-0:2901:127":{"id":"b:2:3218-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3987":{"id":"0:3987","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}},"items":["0:3989:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3487:2610":{"id":"0:3487:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3194":{"id":"0:3194","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}},"items":["0:3196:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2972:837":{"id":"2:2972:837","crate_id":2,"name":"lt","span":null,"visibility":"default","docs":"This method tests less than (for `self` and `other`) and is used by the `<` operator.\n\n# Examples\n\n```\nlet result = 1.0 < 2.0;\nassert_eq!(result, true);\n\nlet result = 2.0 < 1.0;\nassert_eq!(result, false);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10664:4715":{"id":"2:10664:4715","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10665:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1046:2725":{"id":"0:1046:2725","crate_id":0,"name":"to_usize","span":{"filename":"src/traits.rs","begin":[1271,2],"end":[1273,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4436:2236":{"id":"0:4436:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2794:2087":{"id":"0:2794:2087","crate_id":0,"name":"Digit","span":{"filename":"src/error.rs","begin":[383,2],"end":[383,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"1:6570:17122":{"id":"1:6570:17122","crate_id":1,"name":"create_pidfd","span":null,"visibility":"default","docs":"Sets whether a [`PidFd`](struct@PidFd) should be created for the [`Child`]\nspawned by this [`Command`].\nBy default, no pidfd will be created.\n\nThe pidfd can be retrieved from the child with [`pidfd`] or [`take_pidfd`].\n\nA pidfd will only be created if it is possible to do so\nin a guaranteed race-free manner (e.g. if the `clone3` system call\nis supported). Otherwise, [`pidfd`] will return an error.\n\n[`Command`]: process::Command\n[`Child`]: process::Child\n[`pidfd`]: fn@ChildExt::pidfd\n[`take_pidfd`]: ChildExt::take_pidfd","links":{"process::Command":"1:7477:14395","fn@ChildExt::pidfd":"1:6567:18120","ChildExt::take_pidfd":"1:6568:57877","struct@PidFd":"1:11274:14313","process::Child":"1:7415:14391"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3279:2509":{"id":"2:3279:2509","crate_id":2,"name":"source","span":null,"visibility":"default","docs":"The lower-level source of this error, if any.\n\n# Examples\n\n```\nuse std::error::Error;\nuse std::fmt;\n\n#[derive(Debug)]\nstruct SuperError {\n    source: SuperErrorSideKick,\n}\n\nimpl fmt::Display for SuperError {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"SuperError is here!\")\n    }\n}\n\nimpl Error for SuperError {\n    fn source(&self) -> Option<&(dyn Error + 'static)> {\n        Some(&self.source)\n    }\n}\n\n#[derive(Debug)]\nstruct SuperErrorSideKick;\n\nimpl fmt::Display for SuperErrorSideKick {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"SuperErrorSideKick is here!\")\n    }\n}\n\nimpl Error for SuperErrorSideKick {}\n\nfn get_super_error() -> Result<(), SuperError> {\n    Err(SuperError { source: SuperErrorSideKick })\n}\n\nfn main() {\n    match get_super_error() {\n        Err(e) => {\n            println!(\"Error: {e}\");\n            println!(\"Caused by: {}\", e.source().unwrap());\n        }\n        _ => println!(\"No error\"),\n    }\n}\n```","links":{},"attrs":["#[stable(feature = \"error_source\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3596:551":{"id":"2:3596:551","crate_id":2,"name":"deref","span":null,"visibility":"default","docs":"Dereferences the value.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"deref_method\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Deref","id":"2:3594:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2814:2097":{"id":"0:2814:2097","crate_id":0,"name":"OneOf","span":{"filename":"src/error.rs","begin":[393,2],"end":[393,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3794":{"id":"0:3794","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}},"items":["0:3796:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:950:2673":{"id":"0:950:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[894,2],"end":[896,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2440:4222":{"id":"0:2440:4222","crate_id":0,"name":"le_f64","span":{"filename":"src/number/complete.rs","begin":[1252,0],"end":[1260,1]},"visibility":"public","docs":"Recognizes a little endian 8 bytes floating point number.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_f64;\n\nlet parser = |s| {\n  le_f64(s)\n};\n\nassert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3716:2236":{"id":"0:3716:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3320:2236":{"id":"0:3320:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3074":{"id":"0:3074","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}},"items":["0:3076:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5567:57726":{"id":"1:5567:57726","crate_id":1,"name":"ino","span":null,"visibility":"default","docs":"Returns the underlying `d_ino` field in the contained `dirent`\nstructure.\n\n# Examples\n\n```\nuse std::fs;\nuse std::os::unix::fs::DirEntryExt;\n\nif let Ok(entries) = fs::read_dir(\".\") {\n    for entry in entries {\n        if let Ok(entry) = entry {\n            // Here, `entry` is a `DirEntry`.\n            println!(\"{:?}: {}\", entry.file_name(), entry.ino());\n        }\n    }\n}\n```","links":{},"attrs":["#[stable(feature = \"dir_entry_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3045:2051":{"id":"0:3045:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1825:3295":{"id":"0:1825:3295","crate_id":0,"name":"take_till1","span":{"filename":"src/bytes/streaming.rs","begin":[375,0],"end":[386,1]},"visibility":"public","docs":"Returns the longest (at least 1) input slice till a predicate is met.\n\nThe parser will return the longest slice till the given predicate *(a function that\ntakes the input and returns a bool)*.\n\n# Streaming Specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the\nend of input or if there was not match.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::streaming::take_till1;\n\nfn till_colon(s: &str) -> IResult<&str, &str> {\n  take_till1(|c| c == ':')(s)\n}\n\nassert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));\nassert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));\nassert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:117:1976":{"id":"0:117:1976","crate_id":0,"name":"append","span":{"filename":"src/error.rs","begin":[124,2],"end":[124,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}],["_",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4597:2763":{"id":"0:4597:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1451:3108":{"id":"0:1451:3108","crate_id":0,"name":"streaming","span":{"filename":"src/bits/streaming.rs","begin":[1,0],"end":[129,1]},"visibility":"public","docs":"Bit level parsers\n","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1498:2423","0:1505:3184"],"is_stripped":false}},"0:3003:2051":{"id":"0:3003:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3510":{"id":"0:3510","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}},"items":["0:3513:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13804:311":{"id":"2:13804:311","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13805:57981","`u8`":"1:15874:4621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2997":{"id":"0:2997","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}},"items":["0:2999:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3446:185":{"id":"2:3446:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `-` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3212":{"id":"0:3212","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3215:2657","0:3217:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4471:60625":{"id":"1:4471:60625","crate_id":1,"name":"is_write_vectored","span":null,"visibility":"default","docs":"Determines if this `Write`r has an efficient [`write_vectored`]\nimplementation.\n\nIf a `Write`r does not override the default [`write_vectored`]\nimplementation, code using it may want to avoid the method all together\nand coalesce writes into a single buffer for higher performance.\n\nThe default implementation returns `false`.\n\n[`write_vectored`]: Write::write_vectored","links":{"Write::write_vectored":"1:4469:60624"},"attrs":["#[unstable(feature = \"can_vector\", issue = \"69941\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9199:5426":{"id":"2:9199:5426","crate_id":2,"name":"is_sorted","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are sorted.\n\nThat is, for each element `a` and its following element `b`, `a <= b` must hold. If the\niterator yields exactly zero or one element, `true` is returned.\n\nNote that if `Self::Item` is only `PartialOrd`, but not `Ord`, the above definition\nimplies that this function returns `false` if any two consecutive items are not\ncomparable.\n\n# Examples\n\n```\n#![feature(is_sorted)]\n\nassert!([1, 2, 2, 9].iter().is_sorted());\nassert!(![1, 3, 2, 4].iter().is_sorted());\nassert!([0].iter().is_sorted());\nassert!(std::iter::empty::<i32>().is_sorted());\nassert!(![0.0, 1.0, f32::NAN].iter().is_sorted());\n```","links":{},"attrs":["#[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10907:8872":{"id":"2:10907:8872","crate_id":2,"name":"write_isize","span":null,"visibility":"default","docs":"Writes a single `isize` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"isize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:154:489":{"id":"0:154:489","crate_id":0,"name":"context","span":{"filename":"src/error.rs","begin":[233,0],"end":[246,1]},"visibility":"public","docs":"Create a new error from an input position, a static string and an existing error.\nThis is used mainly in the [context] combinator, to add user friendly information\nto errors when backtracking through a parse tree","links":{"context":"0:154:489"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["context",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ContextError","id":"0:79:1984","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4988":{"id":"0:4988","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"}]},"items":["0:5013:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5912:4971":{"id":"5:5912:4971","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5914:185","5:5915:441"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3447:1377":{"id":"2:3447:1377","crate_id":2,"name":"sub","span":null,"visibility":"default","docs":"Performs the `-` operation.\n\n# Example\n\n```\nassert_eq!(12 - 1, 11);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Sub","id":"2:3444:4786","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3165:612":{"id":"0:3165:612","crate_id":0,"name":"eq","span":{"filename":"src/traits.rs","begin":[706,16],"end":[706,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9616:5287-0:2761:1972":{"id":"a:2:9616:5287-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4086:2608":{"id":"0:4086:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:4167:2610":{"id":"0:4167:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4345:2663":{"id":"0:4345:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9193:802":{"id":"2:9193:802","crate_id":2,"name":"le","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\nless or equal to those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().le([1].iter()), true);\nassert_eq!([1].iter().le([1, 2].iter()), true);\nassert_eq!([1, 2].iter().le([1].iter()), false);\nassert_eq!([1, 2].iter().le([1, 2].iter()), true);\n```","links":{"`Iterator`":"2:8925:160","Ord#lexicographical-comparison":"2:2956:181"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6465:18006":{"id":"1:6465:18006","crate_id":1,"name":"st_nlink","span":null,"visibility":"default","docs":"Returns the number of hard links to file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_nlink());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23159:61108":{"id":"2:23159:61108","crate_id":2,"name":"simd_clamp","span":null,"visibility":"default","docs":"Restrict each lane to a certain interval unless it is NaN.\n\nFor each lane in `self`, returns the corresponding lane in `max` if the lane is\ngreater than `max`, and the corresponding lane in `min` if the lane is less\nthan `min`.  Otherwise returns the lane in `self`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["min",{"kind":"generic","inner":"Self"}],["max",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23155:61104":{"id":"2:23155:61104","crate_id":2,"name":"signum","span":null,"visibility":"default","docs":"Replaces each lane with a number that represents its sign.\n\n* `1.0` if the number is positive, `+0.0`, or `INFINITY`\n* `-1.0` if the number is negative, `-0.0`, or `NEG_INFINITY`\n* `NAN` if the number is `NAN`","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3889:1026":{"id":"0:3889:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3825:2663":{"id":"0:3825:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23205:61112":{"id":"2:23205:61112","crate_id":2,"name":"reduce_min","span":null,"visibility":"default","docs":"Returns the minimum lane in the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_min(), 1);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23154:61103":{"id":"2:23154:61103","crate_id":2,"name":"is_normal","span":null,"visibility":"default","docs":"Returns true for each lane if its value is neither zero, infinite,\nsubnormal, nor `NaN`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2158:3367":{"id":"0:2158:3367","crate_id":0,"name":"alpha0","span":{"filename":"src/character/streaming.rs","begin":[317,0],"end":[323,1]},"visibility":"public","docs":"Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non alphabetic character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::alpha0;\nassert_eq!(alpha0::<_, (_, ErrorKind)>(\"ab1c\"), Ok((\"1c\", \"ab\")));\nassert_eq!(alpha0::<_, (_, ErrorKind)>(\"1c\"), Ok((\"1c\", \"\")));\nassert_eq!(alpha0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:512":{"id":"0:512","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[203,0],"end":[209,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:513:2503"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3324:2425":{"id":"0:3324:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:8722:692":{"id":"2:8722:692","crate_id":2,"name":"from_iter","span":null,"visibility":"default","docs":"Creates a value from an iterator.\n\nSee the [module-level documentation] for more.\n\n[module-level documentation]: crate::iter\n\n# Examples\n\nBasic usage:\n\n```\nlet five_fives = std::iter::repeat(5).take(5);\n\nlet v = Vec::from_iter(five_fives);\n\nassert_eq!(v, vec![5, 5, 5, 5, 5]);\n```","links":{"crate::iter":"2:5794:789"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2926:2051":{"id":"0:2926:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4851:2786":{"id":"0:4851:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8254:9386":{"id":"2:8254:9386","crate_id":2,"name":"backward","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *predecessor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`,\nthis function is allowed to panic, wrap, or saturate.\nThe suggested behavior is to panic when debug assertions are enabled,\nand to wrap or saturate otherwise.\n\nUnsafe code should not rely on the correctness of behavior after overflow.\n\n# Invariants\n\nFor any `a`, `n`, and `m`, where no overflow occurs:\n\n* `Step::backward(Step::backward(a, n), m) == Step::backward(a, n + m)`\n\nFor any `a` and `n`, where no overflow occurs:\n\n* `Step::backward_checked(a, n) == Some(Step::backward(a, n))`\n* `Step::backward(a, n) == (0..n).fold(a, |x, _| Step::backward(x, 1))`\n  * Corollary: `Step::backward(a, 0) == a`\n* `Step::backward(a, n) <= a`\n* `Step::forward(Step::backward(a, n), n) == a`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23199:62172":{"id":"2:23199:62172","crate_id":2,"name":"is_positive","span":null,"visibility":"default","docs":"Returns true for each positive lane and false if it is zero or negative.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3907":{"id":"0:3907","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}},"items":["0:3909:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5338":{"id":"0:5338","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnS","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnU","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"},{"kind":"generic","inner":"U"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"},{"kind":"generic","inner":"FnS"},{"kind":"generic","inner":"FnT"},{"kind":"generic","inner":"FnU"}]},"items":["0:5383:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3101:2051":{"id":"0:3101:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2901:127":{"id":"b:2:3207-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3027:2051":{"id":"0:3027:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10905:8870":{"id":"2:10905:8870","crate_id":2,"name":"write_i64","span":null,"visibility":"default","docs":"Writes a single `i64` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23232:61110":{"id":"2:23232:61110","crate_id":2,"name":"reduce_product","span":null,"visibility":"default","docs":"Returns the product of the lanes of the vector, with wrapping multiplication.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23227:14721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4248:2612":{"id":"0:4248:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:845:4751":{"id":"5:845:4751","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":"The resulting type after obtaining ownership.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:3597":{"id":"0:3597","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}},"items":["0:3600:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3732":{"id":"0:3732","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3735:2657","0:3737:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3872:185":{"id":"2:3872:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The type of the value produced by `?` when *not* short-circuiting.","links":{},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:8939:5393":{"id":"2:8939:5393","crate_id":2,"name":"step_by","span":null,"visibility":"default","docs":"Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.\n\nNote 1: The first element of the iterator will always be returned,\nregardless of the step given.\n\nNote 2: The time at which ignored elements are pulled is not fixed.\n`StepBy` behaves like the sequence `self.next()`, `self.nth(step-1)`,\n`self.nth(step-1)`, …, but is also free to behave like the sequence\n`advance_n_and_return_first(&mut self, step)`,\n`advance_n_and_return_first(&mut self, step)`, …\nWhich way is used may change for some iterators for performance reasons.\nThe second way will advance the iterator earlier and may consume more items.\n\n`advance_n_and_return_first` is the equivalent of:\n```\nfn advance_n_and_return_first<I>(iter: &mut I, n: usize) -> Option<I::Item>\nwhere\n    I: Iterator,\n{\n    let next = iter.next();\n    if n > 1 {\n        iter.nth(n - 2);\n    }\n    next\n}\n```\n\n# Panics\n\nThe method will panic if the given step is `0`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [0, 1, 2, 3, 4, 5];\nlet mut iter = a.iter().step_by(2);\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&4));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":["#[stable(feature = \"iterator_step_by\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["step",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"StepBy","id":"2:47185:4936","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2162:3570":{"id":"0:2162:3570","crate_id":0,"name":"alpha1","span":{"filename":"src/character/streaming.rs","begin":[338,0],"end":[344,1]},"visibility":"public","docs":"Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non alphabetic character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::alpha1;\nassert_eq!(alpha1::<_, (_, ErrorKind)>(\"aB1c\"), Ok((\"1c\", \"aB\")));\nassert_eq!(alpha1::<_, (_, ErrorKind)>(\"1c\"), Err(Err::Error((\"1c\", ErrorKind::Alpha))));\nassert_eq!(alpha1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2142:3526":{"id":"0:2142:3526","crate_id":0,"name":"not_line_ending","span":{"filename":"src/character/streaming.rs","begin":[171,0],"end":[204,1]},"visibility":"public","docs":"Recognizes a string of any char except '\\r\\n' or '\\n'.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::streaming::not_line_ending;\nassert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));\nassert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"abc\"), Err(Err::Incomplete(Needed::Unknown)));\nassert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::Unknown)));\nassert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rb\\nc\"), Err(Err::Error((\"a\\rb\\nc\", ErrorKind::Tag ))));\nassert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rbc\"), Err(Err::Error((\"a\\rbc\", ErrorKind::Tag ))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3270":{"id":"0:3270","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}},"items":["0:3273:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4088:2612":{"id":"0:4088:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4241":{"id":"0:4241","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}},"items":["0:4244:2425","0:4245:2548","0:4246:2608","0:4247:2610","0:4248:2612","0:4249:1026","0:4251:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:251:2235":{"id":"0:251:2235","crate_id":0,"name":"rest","span":{"filename":"src/combinator/mod.rs","begin":[31,0],"end":[37,1]},"visibility":"public","docs":"Return the remaining input.\n\n```rust\n# use nom::error::ErrorKind;\nuse nom::combinator::rest;\nassert_eq!(rest::<_,(_, ErrorKind)>(\"abc\"), Ok((\"\", \"abc\")));\nassert_eq!(rest::<_,(_, ErrorKind)>(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4548":{"id":"0:4548","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]},"items":["0:4558:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:444:1843":{"id":"0:444:1843","crate_id":0,"name":"internal","span":{"filename":"src/internal.rs","begin":[1,0],"end":[487,1]},"visibility":"crate","docs":"Basic types to build the parsers","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:459:2032","0:463:2455","0:2884:2426","0:2901:127","0:525:1960","0:564:2515","0:580:2519","0:597:2521","0:613:2523","0:627:2525","0:640:150"],"is_stripped":true}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/combinator/mod.rs","begin":[678,0],"end":[687,1]},"visibility":{"restricted":{"parent":"0:185:1846","path":"::combinator"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["0:413:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3288:2612":{"id":"0:3288:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23857:23784":{"id":"2:23857:23784","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23858:61107","2:23859:61106","2:23860:61108"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23852:14653","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3343:2657":{"id":"0:3343:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4628:2763":{"id":"0:4628:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2718:128":{"id":"b:2:3207-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6477:18013":{"id":"1:6477:18013","crate_id":1,"name":"st_blocks","span":null,"visibility":"default","docs":"Returns the number of blocks allocated to the file, 512-byte units.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_blocks());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4309:2673":{"id":"0:4309:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4145-0:2730:2013":{"id":"b:2:4145-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1052:490":{"id":"0:1052:490","crate_id":0,"name":"convert","span":{"filename":"src/traits.rs","begin":[1283,2],"end":[1285,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2894:612":{"id":"0:2894:612","crate_id":0,"name":"eq","span":{"filename":"src/internal.rs","begin":[48,16],"end":[48,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:771:803":{"id":"0:771:803","crate_id":0,"name":"len","span":{"filename":"src/traits.rs","begin":[202,2],"end":[204,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1664:3295":{"id":"0:1664:3295","crate_id":0,"name":"take_till1","span":{"filename":"src/bytes/complete.rs","begin":[361,0],"end":[372,1]},"visibility":"public","docs":"Returns the longest (at least 1) input slice till a predicate is met.\n\nThe parser will return the longest slice till the given predicate *(a function that\ntakes the input and returns a bool)*.\n\nIt will return `Err(Err::Error((_, ErrorKind::TakeTill1)))` if the input is empty or the\npredicate matches the first input.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::take_till1;\n\nfn till_colon(s: &str) -> IResult<&str, &str> {\n  take_till1(|c| c == ':')(s)\n}\n\nassert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));\nassert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));\nassert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));\nassert_eq!(till_colon(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeTill1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2389:4065":{"id":"0:2389:4065","crate_id":0,"name":"le_i64","span":{"filename":"src/number/complete.rs","begin":[682,0],"end":[687,1]},"visibility":"public","docs":"Recognizes a little endian signed 8 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_i64;\n\nlet parser = |s| {\n  le_i64(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8793:4926":{"id":"2:8793:4926","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8794:803","2:8795:2046"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6466:18008":{"id":"1:6466:18008","crate_id":1,"name":"st_uid","span":null,"visibility":"default","docs":"Returns the user ID of the file owner.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_uid());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3000":{"id":"0:3000","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}},"items":["0:3003:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4164:2425":{"id":"0:4164:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"1:4412:60103":{"id":"1:4412:60103","crate_id":1,"name":"read_vectored","span":null,"visibility":"default","docs":"Like `read`, except that it reads into a slice of buffers.\n\nData is copied to fill each buffer in order, with the final buffer\nwritten to possibly being only partially filled. This method must\nbehave equivalently to a single call to `read` with concatenated\nbuffers.\n\nThe default implementation calls `read` with either the first nonempty\nbuffer provided, or an empty one if none exists.","links":{},"attrs":["#[stable(feature = \"iovec\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"IoSliceMut","id":"1:4428:5602","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3997":{"id":"0:3997","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}},"items":["0:4000:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8977:2288":{"id":"2:8977:2288","crate_id":2,"name":"flat_map","span":null,"visibility":"default","docs":"Creates an iterator that works like map, but flattens nested structure.\n\nThe [`map`] adapter is very useful, but only when the closure\nargument produces values. If it produces an iterator instead, there's\nan extra layer of indirection. `flat_map()` will remove this extra layer\non its own.\n\nYou can think of `flat_map(f)` as the semantic equivalent\nof [`map`]ping, and then [`flatten`]ing as in `map(f).flatten()`.\n\nAnother way of thinking about `flat_map()`: [`map`]'s closure returns\none item for each element, and `flat_map()`'s closure returns an\niterator for each element.\n\n[`map`]: Iterator::map\n[`flatten`]: Iterator::flatten\n\n# Examples\n\nBasic usage:\n\n```\nlet words = [\"alpha\", \"beta\", \"gamma\"];\n\n// chars() returns an iterator\nlet merged: String = words.iter()\n                          .flat_map(|s| s.chars())\n                          .collect();\nassert_eq!(merged, \"alphabetagamma\");\n```","links":{"Iterator::flatten":"2:8980:5403","Iterator::map":"2:8947:852"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"FlatMap","id":"2:6691:2519","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"U"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4422:1849":{"id":"1:4422:1849","crate_id":1,"name":"bytes","span":null,"visibility":"default","docs":"Transforms this `Read` instance to an [`Iterator`] over its bytes.\n\nThe returned type implements [`Iterator`] where the [`Item`] is\n<code>[Result]<[u8], [io::Error]></code>.\nThe yielded item is [`Ok`] if a byte was successfully read and [`Err`]\notherwise. EOF is mapped to returning [`None`] from this iterator.\n\nThe default implementation calls `read` for each byte,\nwhich can be very inefficient for data that's not in memory,\nsuch as [`File`]. Consider using a [`BufReader`] in such cases.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`Item`]: Iterator::Item\n[`File`]: crate::fs::File \"fs::File\"\n[Result]: crate::result::Result \"Result\"\n[io::Error]: self::Error \"io::Error\"\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::io::BufReader;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let f = BufReader::new(File::open(\"foo.txt\")?);\n\n    for byte in f.bytes() {\n        println!(\"{}\", byte.unwrap());\n    }\n    Ok(())\n}\n```","links":{"`Ok`":"2:48037:179","self::Error":"1:3803:128","`Iterator`":"2:8925:160","`BufReader`":"1:3284:5612","`Err`":"2:48040:127","u8":"1:15874:4621","crate::fs::File":"1:2909:129","crate::result::Result":"2:48034:209","`None`":"2:47911:178","Iterator::Item":"2:8926:2425"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:10966:5022","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4147:1453":{"id":"2:4147:1453","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46437:14604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4904":{"id":"0:4904","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"}]},"items":["0:4921:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4492":{"id":"0:4492","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4495:2657","0:4497:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4383:2657":{"id":"0:4383:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4489:1026":{"id":"0:4489:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3663:2657":{"id":"0:3663:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2772:2077":{"id":"0:2772:2077","crate_id":0,"name":"IsA","span":{"filename":"src/error.rs","begin":[372,2],"end":[372,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3651:2617":{"id":"0:3651:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5413:2036":{"id":"0:5413:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4434":{"id":"0:4434","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}},"items":["0:4436:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3393:2673":{"id":"0:3393:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5553:2036":{"id":"0:5553:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:794:2581":{"id":"0:794:2581","crate_id":0,"name":"is_dec_digit","span":{"filename":"src/traits.rs","begin":[284,2],"end":[286,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3564:2425":{"id":"0:3564:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:795:2583":{"id":"0:795:2583","crate_id":0,"name":"is_hex_digit","span":{"filename":"src/traits.rs","begin":[288,2],"end":[290,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5877:2036":{"id":"0:5877:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6473:18017":{"id":"1:6473:18017","crate_id":1,"name":"st_mtime_nsec","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in nanoseconds since [`st_mtime`].\n\n[`st_mtime`]: Self::st_mtime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_mtime_nsec());\n    Ok(())\n}\n```","links":{"Self::st_mtime":"1:6472:18016"},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:9136:14338":{"id":"1:9136:14338","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9137:60742","1:9138:60743","1:9139:60744","1:9140:60745","1:9141:56147","1:9142:41904","1:9143:60741"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3076:2051":{"id":"0:3076:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1862:3357":{"id":"0:1862:3357","crate_id":0,"name":"escaped_transform","span":{"filename":"src/bytes/streaming.rs","begin":[627,0],"end":[700,1]},"visibility":"public","docs":"Matches a byte string with escaped characters.\n\n* The first argument matches the normal characters (it must not match the control character)\n* The second argument is the control character (like `\\` in most languages)\n* The third argument matches the escaped characters and transforms them\n\nAs an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)\n\n```\n# use nom::{Err, error::ErrorKind, Needed, IResult};\n# use std::str::from_utf8;\nuse nom::bytes::streaming::{escaped_transform, tag};\nuse nom::character::streaming::alpha1;\nuse nom::branch::alt;\nuse nom::combinator::value;\n\nfn parser(input: &str) -> IResult<&str, String> {\n  escaped_transform(\n    alpha1,\n    '\\\\',\n    alt((\n      value(\"\\\\\", tag(\"\\\\\")),\n      value(\"\\\"\", tag(\"\\\"\")),\n      value(\"\\n\", tag(\"n\")),\n    ))\n  )(input)\n}\n\nassert_eq!(parser(\"ab\\\\\\\"cd\\\"\"), Ok((\"\\\"\", String::from(\"ab\\\"cd\"))));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["normal",{"kind":"generic","inner":"F"}],["control_char",{"kind":"primitive","inner":"char"}],["transform",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ExtendItem","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::traits::Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::ExtendInto","id":"0:1005:2706","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"ExtendItem"}}}},{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O1"},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::ExtendInto","id":"0:1005:2706","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"ExtendItem"}}}},{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O2"},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::ExtendInto","id":"0:1005:2706","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"ExtendItem"}}}},{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Error"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:781":{"id":"0:781","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[239,0],"end":[268,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:782:2573","0:783:2577","0:784:2579","0:785:2581","0:786:2583","0:787:2585","0:788:803"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13442:12980":{"id":"2:13442:12980","crate_id":2,"name":"next_match","span":null,"visibility":"default","docs":"Finds the next [`Match`][SearchStep::Match] result. See [`next()`][Searcher::next].\n\nUnlike [`next()`][Searcher::next], there is no guarantee that the returned ranges\nof this and [`next_reject`][Searcher::next_reject] will overlap. This will return\n`(start_match, end_match)`, where start_match is the index of where\nthe match begins, and end_match is the index after the end of the match.","links":{"Searcher::next":"2:13441:933","Searcher::next_reject":"2:13443:12981","SearchStep::Match":"2:50279:12985"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2990":{"id":"0:2990","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}},"items":["0:2992:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:985:2679":{"id":"0:985:2679","crate_id":0,"name":"find_substring","span":{"filename":"src/traits.rs","begin":[977,2],"end":[979,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["substr",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13902:62655":{"id":"2:13902:62655","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4818":{"id":"0:4818","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"},{"kind":"generic","inner":"U"}]},"items":["0:4843:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3397":{"id":"0:3397","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}},"items":["0:3400:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14627:4741":{"id":"2:14627:4741","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14628:5899","2:14629:5900","2:14630:5901","2:14631:5902","2:14632:5903","2:14633:5904","2:14634:5406"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3511:364":{"id":"2:3511:364","crate_id":2,"name":"bitxor","span":null,"visibility":"default","docs":"Performs the `^` operation.\n\n# Examples\n\n```\nassert_eq!(true ^ false, true);\nassert_eq!(true ^ true, false);\nassert_eq!(5u8 ^ 1u8, 4);\nassert_eq!(5u8 ^ 2u8, 7);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BitXor","id":"2:3508:4793","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2842:2110":{"id":"0:2842:2110","crate_id":0,"name":"NonEmpty","span":{"filename":"src/error.rs","begin":[407,2],"end":[407,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[127,0],"end":[127,33]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["add_context"],"trait":{"name":"ContextError","id":"0:79:1984","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[]},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2950:2051":{"id":"0:2950:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1105:2763":{"id":"0:1105:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[39,2],"end":[39,53]},"visibility":"default","docs":"Tests each parser in the tuple and returns the result of the first one that succeeds","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1305:1848":{"id":"0:1305:1848","crate_id":0,"name":"sequence","span":{"filename":"src/sequence/mod.rs","begin":[1,0],"end":[270,1]},"visibility":"public","docs":"Combinators applying parsers in sequence","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1316:3059","0:1326:3068","0:1335:3075","0:1345:3081","0:1357:3091","0:1369:3095","0:1384:1443"],"is_stripped":false}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[439,0],"end":[439,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::str","name":"str","id":"0:2233:1362","glob":true}},"0:3039":{"id":"0:3039","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}},"items":["0:3041:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9208:5428":{"id":"2:9208:5428","crate_id":2,"name":"is_sorted_by_key","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are sorted using the given key extraction\nfunction.\n\nInstead of comparing the iterator's elements directly, this function compares the keys of\nthe elements, as determined by `f`. Apart from that, it's equivalent to [`is_sorted`]; see\nits documentation for more information.\n\n[`is_sorted`]: Iterator::is_sorted\n\n# Examples\n\n```\n#![feature(is_sorted)]\n\nassert!([\"c\", \"bb\", \"aaa\"].iter().is_sorted_by_key(|s| s.len()));\nassert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n```","links":{"Iterator::is_sorted":"2:9199:5426"},"attrs":["#[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"K"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"K"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"K"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5942:738":{"id":"0:5942:738","crate_id":0,"name":"i64","span":{"filename":"src/character/complete.rs","begin":[786,0],"end":[786,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3790:4804":{"id":"2:3790:4804","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3792:62218","2:3793:62219","2:3794:12977"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2812:2096":{"id":"0:2812:2096","crate_id":0,"name":"TagBits","span":{"filename":"src/error.rs","begin":[392,2],"end":[392,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2659:4164":{"id":"0:2659:4164","crate_id":0,"name":"i24","span":{"filename":"src/number/streaming.rs","begin":[1001,0],"end":[1013,1]},"visibility":"public","docs":"Recognizes a signed 3 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::i24;\n\nlet be_i24 = |s| {\n  i24::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));\nassert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));\n\nlet le_i24 = |s| {\n  i24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));\nassert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1797:3257":{"id":"0:1797:3257","crate_id":0,"name":"take_while","span":{"filename":"src/bytes/streaming.rs","begin":[188,0],"end":[196,1]},"visibility":"public","docs":"Returns the longest input slice (if any) that matches the predicate.\n\nThe parser will return the longest slice that matches the given predicate *(a function that\ntakes the input and returns a bool)*.\n\n# Streaming Specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern reaches the end of the input.\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::streaming::take_while;\nuse nom::character::is_alphabetic;\n\nfn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  take_while(is_alphabetic)(s)\n}\n\nassert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));\nassert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));\nassert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(alpha(b\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2398:1458":{"id":"0:2398:1458","crate_id":0,"name":"u16","span":{"filename":"src/number/complete.rs","begin":[769,0],"end":[781,1]},"visibility":"public","docs":"Recognizes an unsigned 2 bytes integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.\n*complete version*: returns an error if there is not enough input data\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::u16;\n\nlet be_u16 = |s| {\n  u16(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));\nassert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_u16 = |s| {\n  u16(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));\nassert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3185:1331":{"id":"0:3185:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:905:2657":{"id":"0:905:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[719,2],"end":[719,43]},"visibility":"default","docs":"Compares self to another value for equality","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3587":{"id":"0:3587","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}},"items":["0:3589:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14629:5900":{"id":"2:14629:5900","crate_id":2,"name":"allocate_zeroed","span":null,"visibility":"default","docs":"Behaves like `allocate`, but also ensures that the returned memory is zero-initialized.\n\n# Errors\n\nReturning `Err` indicates that either memory is exhausted or `layout` does not meet\nallocator's size or alignment constraints.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50886:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4217:2663":{"id":"0:4217:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3441":{"id":"0:3441","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}},"items":["0:3444:2425","0:3445:2548","0:3446:2608","0:3447:2610","0:3448:2612","0:3449:1026","0:3451:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3209:1026":{"id":"0:3209:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:992:2691":{"id":"0:992:2691","crate_id":0,"name":"parse_to","span":{"filename":"src/traits.rs","begin":[990,2],"end":[992,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3285:2548":{"id":"0:3285:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:2920":{"id":"0:2920","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[95,23],"end":[95,32]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:2922:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3817:2663":{"id":"0:3817:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2344:3999":{"id":"0:2344:3999","crate_id":0,"name":"be_i16","span":{"filename":"src/number/complete.rs","begin":[270,0],"end":[275,1]},"visibility":"public","docs":"Recognizes a big endian signed 2 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_i16;\n\nlet parser = |s| {\n  be_i16(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13438:5016":{"id":"2:13438:5016","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13440:2685","2:13441:933","2:13442:12980","2:13443:12981"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4444:2425":{"id":"0:4444:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:5414":{"id":"0:5414","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"}]},"items":["0:5427:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3474:4790":{"id":"2:3474:4790","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3476:1378"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3049":{"id":"0:3049","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}},"items":["0:3052:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:744:2051":{"id":"0:744:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[92,2],"end":[92,30]},"visibility":"default","docs":"Casts the input type to a byte slice","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4099":{"id":"0:4099","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4103:2657","0:4105:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3685:2548":{"id":"0:3685:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"5:5916:4972":{"id":"5:5916:4972","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5918:185","5:5919:12490"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4255:2657":{"id":"0:4255:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9243:4925":{"id":"2:9243:4925","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8248:4910","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4497:5606":{"id":"1:4497:5606","crate_id":1,"name":"read_until","span":null,"visibility":"default","docs":"Read all bytes into `buf` until the delimiter `byte` or EOF is reached.\n\nThis function will read bytes from the underlying stream until the\ndelimiter or EOF is found. Once found, all bytes up to, and including,\nthe delimiter (if found) will be appended to `buf`.\n\nIf successful, this function will return the total number of bytes read.\n\nThis function is blocking and should be used carefully: it is possible for\nan attacker to continuously send bytes without ever sending the delimiter\nor EOF.\n\n# Errors\n\nThis function will ignore all instances of [`ErrorKind::Interrupted`] and\nwill otherwise return any errors returned by [`fill_buf`].\n\nIf an I/O error is encountered then all bytes read so far will be\npresent in `buf` and its length will have been adjusted appropriately.\n\n[`fill_buf`]: BufRead::fill_buf\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to read all the bytes in a byte slice\nin hyphen delimited segments:\n\n```\nuse std::io::{self, BufRead};\n\nlet mut cursor = io::Cursor::new(b\"lorem-ipsum\");\nlet mut buf = vec![];\n\n// cursor is at 'l'\nlet num_bytes = cursor.read_until(b'-', &mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 6);\nassert_eq!(buf, b\"lorem-\");\nbuf.clear();\n\n// cursor is at 'i'\nlet num_bytes = cursor.read_until(b'-', &mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 5);\nassert_eq!(buf, b\"ipsum\");\nbuf.clear();\n\n// cursor is at EOF\nlet num_bytes = cursor.read_until(b'-', &mut buf)\n    .expect(\"reading from cursor won't fail\");\nassert_eq!(num_bytes, 0);\nassert_eq!(buf, b\"\");\n```","links":{"`Cursor`":"1:10705:5616","BufRead::fill_buf":"1:4493:60855","`ErrorKind::Interrupted`":"1:10856:17082"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["byte",{"kind":"primitive","inner":"u8"}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8223:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3808:2612":{"id":"0:3808:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4495:60857":{"id":"1:4495:60857","crate_id":1,"name":"has_data_left","span":null,"visibility":"default","docs":"Check if the underlying `Read` has any data left to be read.\n\nThis function may fill the buffer to check for data,\nso this functions returns `Result<bool>`, not `bool`.\n\nDefault implementation calls `fill_buf` and checks that\nreturned slice is empty (which means that there is no data left,\nsince EOF is reached).\n\nExamples\n\n```\n#![feature(buf_read_has_data_left)]\nuse std::io;\nuse std::io::prelude::*;\n\nlet stdin = io::stdin();\nlet mut stdin = stdin.lock();\n\nwhile stdin.has_data_left().unwrap() {\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    // work with line\n    println!(\"{line:?}\");\n}\n```","links":{},"attrs":["#[unstable(feature = \"buf_read_has_data_left\", reason = \"recently added\",\nissue = \"86423\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"bool"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2846:2112":{"id":"0:2846:2112","crate_id":0,"name":"Not","span":{"filename":"src/error.rs","begin":[409,2],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3703:2657":{"id":"0:3703:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10897:8862":{"id":"2:10897:8862","crate_id":2,"name":"write_u16","span":null,"visibility":"default","docs":"Writes a single `u16` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4613":{"id":"0:4613","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]},"items":["0:4628:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2228:2583":{"id":"0:2228:2583","crate_id":0,"name":"is_hex_digit","span":{"filename":"src/character/mod.rs","begin":[51,0],"end":[53,1]},"visibility":"public","docs":"Tests if byte is ASCII hex digit: 0-9, A-F, a-f\n\n# Example\n\n```\n# use nom::character::is_hex_digit;\nassert_eq!(is_hex_digit(b'a'), true);\nassert_eq!(is_hex_digit(b'9'), true);\nassert_eq!(is_hex_digit(b'A'), true);\nassert_eq!(is_hex_digit(b'x'), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["chr",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3209:689":{"id":"2:3209:689","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1049:490":{"id":"0:1049:490","crate_id":0,"name":"convert","span":{"filename":"src/traits.rs","begin":[1279,2],"end":[1279,24]},"visibility":"default","docs":"Transform to another error type","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"E"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2882:2124":{"id":"0:2882:2124","crate_id":0,"name":"error_to_u32","span":{"filename":"src/error.rs","begin":[425,0],"end":[481,1]},"visibility":"public","docs":"Converts an ErrorKind to a number","links":{},"attrs":["#[rustfmt::skip]","#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5536:60815":{"id":"1:5536:60815","crate_id":1,"name":"ctime_nsec","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in nanoseconds since [`ctime`].\n\n[`ctime`]: MetadataExt::ctime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nano_last_status_change_time = meta.ctime_nsec();\n    Ok(())\n}\n```","links":{"MetadataExt::ctime":"1:5535:60814"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23162:61111":{"id":"2:23162:61111","crate_id":2,"name":"reduce_max","span":null,"visibility":"default","docs":"Returns the maximum lane in the vector.\n\nReturns values based on equality, so a vector containing both `0.` and `-0.` may\nreturn either.\n\nThis function will not return `NaN` unless all lanes are `NaN`.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([1., 2.]);\nassert_eq!(v.reduce_max(), 2.);\n\n// NaN values are skipped...\nlet v = f32x2::from_array([1., f32::NAN]);\nassert_eq!(v.reduce_max(), 1.);\n\n// ...unless all values are NaN\nlet v = f32x2::from_array([f32::NAN, f32::NAN]);\nassert!(v.reduce_max().is_nan());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3371:2617":{"id":"0:3371:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2901:127":{"id":"b:2:3213-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3477":{"id":"0:3477","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}},"items":["0:3480:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8962:2045":{"id":"2:8962:2045","crate_id":2,"name":"enumerate","span":null,"visibility":"default","docs":"Creates an iterator which gives the current iteration count as well as\nthe next value.\n\nThe iterator returned yields pairs `(i, val)`, where `i` is the\ncurrent index of iteration and `val` is the value returned by the\niterator.\n\n`enumerate()` keeps its count as a [`usize`]. If you want to count by a\ndifferent sized integer, the [`zip`] function provides similar\nfunctionality.\n\n# Overflow Behavior\n\nThe method does no guarding against overflows, so enumerating more than\n[`usize::MAX`] elements either produces the wrong result or panics. If\ndebug assertions are enabled, a panic is guaranteed.\n\n# Panics\n\nThe returned iterator might panic if the to-be-returned index would\noverflow a [`usize`].\n\n[`zip`]: Iterator::zip\n\n# Examples\n\n```\nlet a = ['a', 'b', 'c'];\n\nlet mut iter = a.iter().enumerate();\n\nassert_eq!(iter.next(), Some((0, &'a')));\nassert_eq!(iter.next(), Some((1, &'b')));\nassert_eq!(iter.next(), Some((2, &'c')));\nassert_eq!(iter.next(), None);\n```","links":{"Iterator::zip":"2:8942:2668","`usize`":"1:15880:4627","`usize::MAX`":"2:32434:5748"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9040:283":{"id":"2:9040:283","crate_id":2,"name":"all","span":null,"visibility":"default","docs":"Tests if every element of the iterator matches a predicate.\n\n`all()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if they all return\n`true`, then so does `all()`. If any of them return `false`, it\nreturns `false`.\n\n`all()` is short-circuiting; in other words, it will stop processing\nas soon as it finds a `false`, given that no matter what else happens,\nthe result will also be `false`.\n\nAn empty iterator returns `true`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert!(a.iter().all(|&x| x > 0));\n\nassert!(!a.iter().all(|&x| x > 2));\n```\n\nStopping at the first `false`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert!(!iter.all(|&x| x != 2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&3));\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10596:1559":{"id":"2:10596:1559","crate_id":2,"name":"write_str","span":null,"visibility":"default","docs":"Writes a string slice into this writer, returning whether the write\nsucceeded.\n\nThis method can only succeed if the entire string slice was successfully\nwritten, and this method will not return until all data has been\nwritten or an error occurs.\n\n# Errors\n\nThis function will return an instance of [`Error`] on error.\n\nThe purpose of std::fmt::Error is to abort the formatting operation when the underlying\ndestination encounters some error preventing it from accepting more text; it should\ngenerally be propagated rather than handled, at least when implementing formatting traits.\n\n# Examples\n\n```\nuse std::fmt::{Error, Write};\n\nfn writer<W: Write>(f: &mut W, s: &str) -> Result<(), Error> {\n    f.write_str(s)\n}\n\nlet mut buf = String::new();\nwriter(&mut buf, \"hola\").unwrap();\nassert_eq!(&buf, \"hola\");\n```","links":{"`Error`":"2:48972:128"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3265:2663":{"id":"0:3265:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6834:14334":{"id":"1:6834:14334","crate_id":1,"name":"TcpStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6835:57835","1:6836:57836"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1832:2423":{"id":"0:1832:2423","crate_id":0,"name":"take","span":{"filename":"src/bytes/streaming.rs","begin":[411,0],"end":[423,1]},"visibility":"public","docs":"Returns an input slice containing the first N input elements (Input[..N]).\n\n# Streaming Specific\n*Streaming version* if the input has less than N elements, `take` will\nreturn a `Err::Incomplete(Needed::new(M))` where M is the number of\nadditional bytes the parser would need to succeed.\nIt is well defined for `&[u8]` as the number of elements is the byte size,\nbut for types like `&str`, we cannot know how many bytes correspond for\nthe next few chars, so the result will be `Err::Incomplete(Needed::Unknown)`\n\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::streaming::take;\n\nfn take6(s: &str) -> IResult<&str, &str> {\n  take(6usize)(s)\n}\n\nassert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));\nassert_eq!(take6(\"things\"), Ok((\"\", \"things\")));\nassert_eq!(take6(\"short\"), Err(Err::Incomplete(Needed::Unknown)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["count",{"kind":"generic","inner":"C"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:930:2657":{"id":"0:930:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[839,2],"end":[841,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3166":{"id":"0:3166","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:3168:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2903:2038":{"id":"0:2903:2038","crate_id":0,"name":"Incomplete","span":{"filename":"src/internal.rs","begin":[99,2],"end":[99,20]},"visibility":"default","docs":"There was not enough data","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2905:1568"]}},"0:3427":{"id":"0:3427","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}},"items":["0:3429:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8934:5391":{"id":"2:8934:5391","crate_id":2,"name":"last","span":null,"visibility":"default","docs":"Consumes the iterator, returning the last element.\n\nThis method will evaluate the iterator until it returns [`None`]. While\ndoing so, it keeps track of the current element. After [`None`] is\nreturned, `last()` will then return the last element it saw.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().last(), Some(&3));\n\nlet a = [1, 2, 3, 4, 5];\nassert_eq!(a.iter().last(), Some(&5));\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1041":{"id":"0:1041","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1253,0],"end":[1258,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"usize"},"items":["0:1042:2725"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4063:2657":{"id":"0:4063:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4120:2236":{"id":"0:4120:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8950:5397":{"id":"2:8950:5397","crate_id":2,"name":"for_each","span":null,"visibility":"default","docs":"Calls a closure on each element of an iterator.\n\nThis is equivalent to using a [`for`] loop on the iterator, although\n`break` and `continue` are not possible from a closure. It's generally\nmore idiomatic to use a `for` loop, but `for_each` may be more legible\nwhen processing items at the end of longer iterator chains. In some\ncases `for_each` may also be faster than a loop, because it will use\ninternal iteration on adapters like `Chain`.\n\n[`for`]: ../../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n\n# Examples\n\nBasic usage:\n\n```\nuse std::sync::mpsc::channel;\n\nlet (tx, rx) = channel();\n(0..5).map(|x| x * 2 + 1)\n      .for_each(move |x| tx.send(x).unwrap());\n\nlet v: Vec<_> =  rx.iter().collect();\nassert_eq!(v, vec![1, 3, 5, 7, 9]);\n```\n\nFor such a small example, a `for` loop may be cleaner, but `for_each`\nmight be preferable to keep a functional style with longer iterators:\n\n```\n(0..5).flat_map(|x| x * 100 .. x * 110)\n      .enumerate()\n      .filter(|&(i, x)| (i + x) % 3 == 0)\n      .for_each(|(i, x)| println!(\"{i}:{x}\"));\n```","links":{},"attrs":["#[stable(feature = \"iterator_for_each\", since = \"1.21.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:402:2418":{"id":"b:2:2865-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5434:14301":{"id":"1:5434:14301","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5435:15463","1:5436:2051"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3329:1026":{"id":"0:3329:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2891:668":{"id":"0:2891:668","crate_id":0,"name":"fmt","span":{"filename":"src/internal.rs","begin":[48,9],"end":[48,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5538:60817":{"id":"1:5538:60817","crate_id":1,"name":"blocks","span":null,"visibility":"default","docs":"Returns the number of blocks allocated to the file, in 512-byte units.\n\nPlease note that this may be smaller than `st_size / 512` when the file has holes.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let blocks = meta.blocks();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4473:2673":{"id":"0:4473:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3246:2608":{"id":"0:3246:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:994":{"id":"0:994","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[995,0],"end":[999,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13358:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ParseTo","id":"0:986:2226","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:997:2691"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2721:2001":{"id":"0:2721:2001","crate_id":0,"name":"code","span":{"filename":"src/error.rs","begin":[62,2],"end":[62,21]},"visibility":"public","docs":"nom error code","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"1:5578:14287":{"id":"1:5578:14287","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5579:15883"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4361":{"id":"0:4361","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}},"items":["0:4364:2425","0:4365:2548","0:4366:2608","0:4367:2610","0:4368:2612","0:4369:1026","0:4371:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5579:15883":{"id":"1:5579:15883","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Sets the mode to create new directories with. This option defaults to\n0o777.\n\n# Examples\n\n```no_run\nuse std::fs::DirBuilder;\nuse std::os::unix::fs::DirBuilderExt;\n\nlet mut builder = DirBuilder::new();\nbuilder.mode(0o755);\n```","links":{},"attrs":["#[stable(feature = \"dir_builder\", since = \"1.6.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mode",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4343:2657":{"id":"0:4343:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23327:14340":{"id":"2:23327:14340","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23317:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3544:1254":{"id":"2:3544:1254","crate_id":2,"name":"shr_assign","span":null,"visibility":"default","docs":"Performs the `>>=` operation.\n\n# Examples\n\n```\nlet mut x: u8 = 5;\nx >>= 1;\nassert_eq!(x, 2);\n\nlet mut x: u8 = 2;\nx >>= 1;\nassert_eq!(x, 1);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4081":{"id":"0:4081","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}},"items":["0:4084:2425","0:4085:2548","0:4086:2608","0:4087:2610","0:4088:2612","0:4089:1026","0:4091:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:989":{"id":"0:989","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[989,0],"end":[993,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13358:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ParseTo","id":"0:986:2226","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:992:2691"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5138":{"id":"0:5138","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"}]},"items":["0:5173:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4922":{"id":"0:4922","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"}]},"items":["0:4941:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3380:107":{"id":"2:3380:107","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3094:2051":{"id":"0:3094:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5531:60810":{"id":"1:5531:60810","crate_id":1,"name":"atime","span":null,"visibility":"default","docs":"Returns the last access time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let last_access_time = meta.atime();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9616:5287-0:2901:127":{"id":"a:2:9616:5287-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3859":{"id":"0:3859","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3863:2657","0:3865:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4114":{"id":"0:4114","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}},"items":["0:4116:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1296:3045":{"id":"0:1296:3045","crate_id":0,"name":"length_count","span":{"filename":"src/multi/mod.rs","begin":[950,0],"end":[981,1]},"visibility":"public","docs":"Gets a number from the first parser,\nthen applies the second parser that many times.\n# Arguments\n* `f` The parser to apply to obtain the count.\n* `g` The parser to apply repeatedly.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::number::complete::u8;\nuse nom::multi::length_count;\nuse nom::bytes::complete::tag;\nuse nom::combinator::map;\n\nfn parser(s: &[u8]) -> IResult<&[u8], Vec<&[u8]>> {\n  length_count(map(u8, |i| {\n     println!(\"got number: {}\", i);\n     i\n  }), tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(&b\"\\x02abcabcabc\"[..]), Ok(((&b\"abc\"[..], vec![&b\"abc\"[..], &b\"abc\"[..]]))));\nassert_eq!(parser(b\"\\x03123123123\"), Err(Err::Error(Error::new(&b\"123123123\"[..], ErrorKind::Tag))));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"N"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2923":{"id":"0:2923","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}},"items":["0:2926:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3390":{"id":"0:3390","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}},"items":["0:3393:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2635:1461":{"id":"0:2635:1461","crate_id":0,"name":"u8","span":{"filename":"src/number/streaming.rs","begin":[703,0],"end":[715,1]},"visibility":"public","docs":"Recognizes an unsigned 1 byte integer\n\nNote that endianness does not apply to 1 byte numbers.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::u8;\n\nlet parser = |s| {\n  u8::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3459":{"id":"0:3459","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3463:2657","0:3465:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3629:2673":{"id":"0:3629:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2341:3995":{"id":"0:2341:3995","crate_id":0,"name":"be_i8","span":{"filename":"src/number/complete.rs","begin":[247,0],"end":[252,1]},"visibility":"public","docs":"Recognizes a signed 1 byte integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_i8;\n\nlet parser = |s| {\n  be_i8(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3994":{"id":"0:3994","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}},"items":["0:3996:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3682:762":{"id":"2:3682:762","crate_id":2,"name":"index","span":null,"visibility":"default","docs":"Performs the indexing (`container[index]`) operation.\n\n# Panics\n\nMay panic if the index is out of bounds.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"generic","inner":"Idx"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Index","id":"2:3679:4800","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3007":{"id":"0:3007","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}},"items":["0:3010:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4487:42303":{"id":"1:4487:42303","crate_id":1,"name":"rewind","span":null,"visibility":"default","docs":"Rewind to the beginning of a stream.\n\nThis is a convenience method, equivalent to `seek(SeekFrom::Start(0))`.\n\n# Errors\n\nRewinding can fail, for example because it might involve flushing a buffer.\n\n# Example\n\n```no_run\nuse std::io::{Read, Seek, Write};\nuse std::fs::OpenOptions;\n\nlet mut f = OpenOptions::new()\n    .write(true)\n    .read(true)\n    .create(true)\n    .open(\"foo.txt\").unwrap();\n\nlet hello = \"Hello!\\n\";\nwrite!(f, \"{hello}\").unwrap();\nf.rewind().unwrap();\n\nlet mut buf = String::new();\nf.read_to_string(&mut buf).unwrap();\nassert_eq!(&buf, hello);\n```","links":{},"attrs":["#[stable(feature = \"seek_rewind\", since = \"1.55.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2569:3976":{"id":"0:2569:3976","crate_id":0,"name":"be_u24","span":{"filename":"src/number/streaming.rs","begin":[113,0],"end":[128,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 3 byte integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_u24;\n\nlet parser = |s| {\n  be_u24::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23151:4387":{"id":"2:23151:4387","crate_id":2,"name":"is_infinite","span":null,"visibility":"default","docs":"Returns true for each lane if its value is positive infinity or negative infinity.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2958":{"id":"0:2958","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}},"items":["0:2961:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4437":{"id":"0:4437","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}},"items":["0:4440:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3382:225-0:2761:1972":{"id":"a:2:3382:225-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23237:61906":{"id":"2:23237:61906","crate_id":2,"name":"reduce_xor","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"xor\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23227:14721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6470:18014":{"id":"1:6470:18014","crate_id":1,"name":"st_atime","span":null,"visibility":"default","docs":"Returns the last access time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_atime());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:374:2384":{"id":"0:374:2384","crate_id":0,"name":"consumed","span":{"filename":"src/combinator/mod.rs","begin":[559,0],"end":[576,1]},"visibility":"public","docs":"if the child parser was successful, return the consumed input with the output\nas a tuple. Functions similarly to [recognize](fn.recognize.html) except it\nreturns the parser output as well.\n\nThis can be useful especially in cases where the output is not the same type\nas the input, or the input is a user defined type.\n\nReturned tuple is of the format `(consumed input, produced output)`.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::{consumed, value, recognize, map};\nuse nom::character::complete::{char, alpha1};\nuse nom::bytes::complete::tag;\nuse nom::sequence::separated_pair;\n\nfn inner_parser(input: &str) -> IResult<&str, bool> {\n    value(true, tag(\"1234\"))(input)\n}\n\n# fn main() {\n\nlet mut consumed_parser = consumed(value(true, separated_pair(alpha1, char(','), alpha1)));\n\nassert_eq!(consumed_parser(\"abcd,efgh1\"), Ok((\"1\", (\"abcd,efgh\", true))));\nassert_eq!(consumed_parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));\n\n\n// the first output (representing the consumed input)\n// should be the same as that of the `recognize` parser.\nlet mut recognize_parser = recognize(inner_parser);\nlet mut consumed_parser = map(consumed(inner_parser), |(consumed, output)| consumed);\n\nassert_eq!(recognize_parser(\"1234\"), consumed_parser(\"1234\"));\nassert_eq!(recognize_parser(\"abcd\"), consumed_parser(\"abcd\"));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"O"}]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3801":{"id":"0:3801","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}},"items":["0:3804:2425","0:3805:2548","0:3806:2608","0:3807:2610","0:3808:2612","0:3809:1026","0:3811:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5525:15883":{"id":"1:5525:15883","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Returns the rights applied to this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let mode = meta.mode();\n    let user_has_write_access      = mode & 0o200;\n    let user_has_read_write_access = mode & 0o600;\n    let group_has_read_access      = mode & 0o040;\n    let others_have_exec_access    = mode & 0o001;\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2760:612":{"id":"0:2760:612","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[159,23],"end":[159,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1856":{"id":"0:0:1856","crate_id":0,"name":"nom","span":{"filename":"src/lib.rs","begin":[1,0],"end":[463,18]},"visibility":"public","docs":"# nom, eating data byte by byte\n\nnom is a parser combinator library with a focus on safe parsing,\nstreaming patterns, and as much as possible zero copy.\n\n## Example\n\n```rust\nuse nom::{\n  IResult,\n  bytes::complete::{tag, take_while_m_n},\n  combinator::map_res,\n  sequence::tuple};\n\n#[derive(Debug,PartialEq)]\npub struct Color {\n  pub red:     u8,\n  pub green:   u8,\n  pub blue:    u8,\n}\n\nfn from_hex(input: &str) -> Result<u8, std::num::ParseIntError> {\n  u8::from_str_radix(input, 16)\n}\n\nfn is_hex_digit(c: char) -> bool {\n  c.is_digit(16)\n}\n\nfn hex_primary(input: &str) -> IResult<&str, u8> {\n  map_res(\n    take_while_m_n(2, 2, is_hex_digit),\n    from_hex\n  )(input)\n}\n\nfn hex_color(input: &str) -> IResult<&str, Color> {\n  let (input, _) = tag(\"#\")(input)?;\n  let (input, (red, green, blue)) = tuple((hex_primary, hex_primary, hex_primary))(input)?;\n\n  Ok((input, Color { red, green, blue }))\n}\n\nfn main() {\n  assert_eq!(hex_color(\"#2F14DF\"), Ok((\"\", Color {\n    red: 47,\n    green: 20,\n    blue: 223,\n  })));\n}\n```\n\nThe code is available on [Github](https://github.com/Geal/nom)\n\nThere are a few [guides](https://github.com/Geal/nom/tree/main/doc) with more details\nabout [how to write parsers](https://github.com/Geal/nom/blob/main/doc/making_a_new_parser_from_scratch.md),\nor the [error management system](https://github.com/Geal/nom/blob/main/doc/error_management.md).\nYou can also check out the [recipes] module that contains examples of common patterns.\n\n**Looking for a specific combinator? Read the\n[\"choose a combinator\" guide](https://github.com/Geal/nom/blob/main/doc/choosing_a_combinator.md)**\n\nIf you are upgrading to nom 5.0, please read the\n[migration document](https://github.com/Geal/nom/blob/main/doc/upgrading_to_nom_5.md).\n\n## Parser combinators\n\nParser combinators are an approach to parsers that is very different from\nsoftware like [lex](https://en.wikipedia.org/wiki/Lex_(software)) and\n[yacc](https://en.wikipedia.org/wiki/Yacc). Instead of writing the grammar\nin a separate syntax and generating the corresponding code, you use very small\nfunctions with very specific purposes, like \"take 5 bytes\", or \"recognize the\nword 'HTTP'\", and assemble them in meaningful patterns like \"recognize\n'HTTP', then a space, then a version\".\nThe resulting code is small, and looks like the grammar you would have\nwritten with other parser approaches.\n\nThis gives us a few advantages:\n\n- The parsers are small and easy to write\n- The parsers components are easy to reuse (if they're general enough, please add them to nom!)\n- The parsers components are easy to test separately (unit tests and property-based tests)\n- The parser combination code looks close to the grammar you would have written\n- You can build partial parsers, specific to the data you need at the moment, and ignore the rest\n\nHere is an example of one such parser, to recognize text between parentheses:\n\n```rust\nuse nom::{\n  IResult,\n  sequence::delimited,\n  // see the \"streaming/complete\" paragraph lower for an explanation of these submodules\n  character::complete::char,\n  bytes::complete::is_not\n};\n\nfn parens(input: &str) -> IResult<&str, &str> {\n  delimited(char('('), is_not(\")\"), char(')'))(input)\n}\n```\n\nIt defines a function named `parens` which will recognize a sequence of the\ncharacter `(`, the longest byte array not containing `)`, then the character\n`)`, and will return the byte array in the middle.\n\nHere is another parser, written without using nom's combinators this time:\n\n```rust\nuse nom::{IResult, Err, Needed};\n\n# fn main() {\nfn take4(i: &[u8]) -> IResult<&[u8], &[u8]>{\n  if i.len() < 4 {\n    Err(Err::Incomplete(Needed::new(4)))\n  } else {\n    Ok((&i[4..], &i[0..4]))\n  }\n}\n# }\n```\n\nThis function takes a byte array as input, and tries to consume 4 bytes.\nWriting all the parsers manually, like this, is dangerous, despite Rust's\nsafety features. There are still a lot of mistakes one can make. That's why\nnom provides a list of functions to help in developing parsers.\n\nWith functions, you would write it like this:\n\n```rust\nuse nom::{IResult, bytes::streaming::take};\nfn take4(input: &str) -> IResult<&str, &str> {\n  take(4u8)(input)\n}\n```\n\nA parser in nom is a function which, for an input type `I`, an output type `O`\nand an optional error type `E`, will have the following signature:\n\n```rust,compile_fail\nfn parser(input: I) -> IResult<I, O, E>;\n```\n\nOr like this, if you don't want to specify a custom error type (it will be `(I, ErrorKind)` by default):\n\n```rust,compile_fail\nfn parser(input: I) -> IResult<I, O>;\n```\n\n`IResult` is an alias for the `Result` type:\n\n```rust\nuse nom::{Needed, error::Error};\n\ntype IResult<I, O, E = Error<I>> = Result<(I, O), Err<E>>;\n\nenum Err<E> {\n  Incomplete(Needed),\n  Error(E),\n  Failure(E),\n}\n```\n\nIt can have the following values:\n\n- A correct result `Ok((I,O))` with the first element being the remaining of the input (not parsed yet), and the second the output value;\n- An error `Err(Err::Error(c))` with `c` an error that can be built from the input position and a parser specific error\n- An error `Err(Err::Incomplete(Needed))` indicating that more input is necessary. `Needed` can indicate how much data is needed\n- An error `Err(Err::Failure(c))`. It works like the `Error` case, except it indicates an unrecoverable error: We cannot backtrack and test another parser\n\nPlease refer to the [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/main/doc/choosing_a_combinator.md) for an exhaustive list of parsers.\nSee also the rest of the documentation [here](https://github.com/Geal/nom/blob/main/doc).\n\n## Making new parsers with function combinators\n\nnom is based on functions that generate parsers, with a signature like\nthis: `(arguments) -> impl Fn(Input) -> IResult<Input, Output, Error>`.\nThe arguments of a combinator can be direct values (like `take` which uses\na number of bytes or character as argument) or even other parsers (like\n`delimited` which takes as argument 3 parsers, and returns the result of\nthe second one if all are successful).\n\nHere are some examples:\n\n```rust\nuse nom::IResult;\nuse nom::bytes::complete::{tag, take};\nfn abcd_parser(i: &str) -> IResult<&str, &str> {\n  tag(\"abcd\")(i) // will consume bytes if the input begins with \"abcd\"\n}\n\nfn take_10(i: &[u8]) -> IResult<&[u8], &[u8]> {\n  take(10u8)(i) // will consume and return 10 bytes of input\n}\n```\n\n## Combining parsers\n\nThere are higher level patterns, like the **`alt`** combinator, which\nprovides a choice between multiple parsers. If one branch fails, it tries\nthe next, and returns the result of the first parser that succeeds:\n\n```rust\nuse nom::IResult;\nuse nom::branch::alt;\nuse nom::bytes::complete::tag;\n\nlet mut alt_tags = alt((tag(\"abcd\"), tag(\"efgh\")));\n\nassert_eq!(alt_tags(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], &b\"abcd\"[..])));\nassert_eq!(alt_tags(&b\"efghxxx\"[..]), Ok((&b\"xxx\"[..], &b\"efgh\"[..])));\nassert_eq!(alt_tags(&b\"ijklxxx\"[..]), Err(nom::Err::Error((&b\"ijklxxx\"[..], nom::error::ErrorKind::Tag))));\n```\n\nThe **`opt`** combinator makes a parser optional. If the child parser returns\nan error, **`opt`** will still succeed and return None:\n\n```rust\nuse nom::{IResult, combinator::opt, bytes::complete::tag};\nfn abcd_opt(i: &[u8]) -> IResult<&[u8], Option<&[u8]>> {\n  opt(tag(\"abcd\"))(i)\n}\n\nassert_eq!(abcd_opt(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], Some(&b\"abcd\"[..]))));\nassert_eq!(abcd_opt(&b\"efghxxx\"[..]), Ok((&b\"efghxxx\"[..], None)));\n```\n\n**`many0`** applies a parser 0 or more times, and returns a vector of the aggregated results:\n\n```rust\n# #[cfg(feature = \"alloc\")]\n# fn main() {\nuse nom::{IResult, multi::many0, bytes::complete::tag};\nuse std::str;\n\nfn multi(i: &str) -> IResult<&str, Vec<&str>> {\n  many0(tag(\"abcd\"))(i)\n}\n\nlet a = \"abcdef\";\nlet b = \"abcdabcdef\";\nlet c = \"azerty\";\nassert_eq!(multi(a), Ok((\"ef\",     vec![\"abcd\"])));\nassert_eq!(multi(b), Ok((\"ef\",     vec![\"abcd\", \"abcd\"])));\nassert_eq!(multi(c), Ok((\"azerty\", Vec::new())));\n# }\n# #[cfg(not(feature = \"alloc\"))]\n# fn main() {}\n```\n\nHere are some basic combinators available:\n\n- **`opt`**: Will make the parser optional (if it returns the `O` type, the new parser returns `Option<O>`)\n- **`many0`**: Will apply the parser 0 or more times (if it returns the `O` type, the new parser returns `Vec<O>`)\n- **`many1`**: Will apply the parser 1 or more times\n\nThere are more complex (and more useful) parsers like `tuple`, which is\nused to apply a series of parsers then assemble their results.\n\nExample with `tuple`:\n\n```rust\n# fn main() {\nuse nom::{error::ErrorKind, Needed,\nnumber::streaming::be_u16,\nbytes::streaming::{tag, take},\nsequence::tuple};\n\nlet mut tpl = tuple((be_u16, take(3u8), tag(\"fg\")));\n\nassert_eq!(\n  tpl(&b\"abcdefgh\"[..]),\n  Ok((\n    &b\"h\"[..],\n    (0x6162u16, &b\"cde\"[..], &b\"fg\"[..])\n  ))\n);\nassert_eq!(tpl(&b\"abcde\"[..]), Err(nom::Err::Incomplete(Needed::new(2))));\nlet input = &b\"abcdejk\"[..];\nassert_eq!(tpl(input), Err(nom::Err::Error((&input[5..], ErrorKind::Tag))));\n# }\n```\n\nBut you can also use a sequence of combinators written in imperative style,\nthanks to the `?` operator:\n\n```rust\n# fn main() {\nuse nom::{IResult, bytes::complete::tag};\n\n#[derive(Debug, PartialEq)]\nstruct A {\n  a: u8,\n  b: u8\n}\n\nfn ret_int1(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,1)) }\nfn ret_int2(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,2)) }\n\nfn f(i: &[u8]) -> IResult<&[u8], A> {\n  // if successful, the parser returns `Ok((remaining_input, output_value))` that we can destructure\n  let (i, _) = tag(\"abcd\")(i)?;\n  let (i, a) = ret_int1(i)?;\n  let (i, _) = tag(\"efgh\")(i)?;\n  let (i, b) = ret_int2(i)?;\n\n  Ok((i, A { a, b }))\n}\n\nlet r = f(b\"abcdefghX\");\nassert_eq!(r, Ok((&b\"X\"[..], A{a: 1, b: 2})));\n# }\n```\n\n## Streaming / Complete\n\nSome of nom's modules have `streaming` or `complete` submodules. They hold\ndifferent variants of the same combinators.\n\nA streaming parser assumes that we might not have all of the input data.\nThis can happen with some network protocol or large file parsers, where the\ninput buffer can be full and need to be resized or refilled.\n\nA complete parser assumes that we already have all of the input data.\nThis will be the common case with small files that can be read entirely to\nmemory.\n\nHere is how it works in practice:\n\n```rust\nuse nom::{IResult, Err, Needed, error::{Error, ErrorKind}, bytes, character};\n\nfn take_streaming(i: &[u8]) -> IResult<&[u8], &[u8]> {\n  bytes::streaming::take(4u8)(i)\n}\n\nfn take_complete(i: &[u8]) -> IResult<&[u8], &[u8]> {\n  bytes::complete::take(4u8)(i)\n}\n\n// both parsers will take 4 bytes as expected\nassert_eq!(take_streaming(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));\nassert_eq!(take_complete(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));\n\n// if the input is smaller than 4 bytes, the streaming parser\n// will return `Incomplete` to indicate that we need more data\nassert_eq!(take_streaming(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));\n\n// but the complete parser will return an error\nassert_eq!(take_complete(&b\"abc\"[..]), Err(Err::Error(Error::new(&b\"abc\"[..], ErrorKind::Eof))));\n\n// the alpha0 function recognizes 0 or more alphabetic characters\nfn alpha0_streaming(i: &str) -> IResult<&str, &str> {\n  character::streaming::alpha0(i)\n}\n\nfn alpha0_complete(i: &str) -> IResult<&str, &str> {\n  character::complete::alpha0(i)\n}\n\n// if there's a clear limit to the recognized characters, both parsers work the same way\nassert_eq!(alpha0_streaming(\"abcd;\"), Ok((\";\", \"abcd\")));\nassert_eq!(alpha0_complete(\"abcd;\"), Ok((\";\", \"abcd\")));\n\n// but when there's no limit, the streaming version returns `Incomplete`, because it cannot\n// know if more input data should be recognized. The whole input could be \"abcd;\", or\n// \"abcde;\"\nassert_eq!(alpha0_streaming(\"abcd\"), Err(Err::Incomplete(Needed::new(1))));\n\n// while the complete version knows that all of the data is there\nassert_eq!(alpha0_complete(\"abcd\"), Ok((\"\", \"abcd\")));\n```\n**Going further:** Read the [guides](https://github.com/Geal/nom/tree/main/doc),\ncheck out the [recipes]!","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:4:807","0:66:1845","0:185:1846","0:1083:377","0:1137:1847","0:1305:1848","0:1391:1842","0:1557:1849","0:1876:1850","0:2234:1851","0:173:2191","0:174:2195","0:62","0:63","0:64","0:65"],"is_stripped":false}},"2:10929:147":{"id":"2:10929:147","crate_id":2,"name":"Hasher","span":null,"visibility":"default","docs":"Type of the hasher that will be created.","links":{},"attrs":["#[stable(since = \"1.7.0\", feature = \"build_hasher\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10893:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[92,0],"end":[96,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":"The Display implementation allows the std::error::Error implementation","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:101:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3749:2673":{"id":"0:3749:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:971:2677":{"id":"0:971:2677","crate_id":0,"name":"FindSubstring","span":{"filename":"src/traits.rs","begin":[930,0],"end":[933,1]},"visibility":"public","docs":"Look for a substring in self","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:973:2679"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:974","0:978","0:982"]}},"0:856:2425":{"id":"0:856:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[501,2],"end":[501,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:533:2288":{"id":"0:533:2288","crate_id":0,"name":"flat_map","span":{"filename":"src/internal.rs","begin":[260,2],"end":[271,3]},"visibility":"default","docs":"Creates a second parser from the output of the first one, then apply over the rest of the input","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"FlatMap","id":"0:580:2519","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"O"}],"output":{"kind":"generic","inner":"H"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"core::marker::Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2870:57555":{"id":"2:2870:57555","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3507":{"id":"0:3507","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}},"items":["0:3509:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:804:1026":{"id":"0:804:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[320,2],"end":[322,30]},"visibility":"default","docs":"Finds the byte position of the element","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4057:2663":{"id":"0:4057:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1982:3367":{"id":"0:1982:3367","crate_id":0,"name":"alpha0","span":{"filename":"src/character/complete.rs","begin":[341,0],"end":[347,1]},"visibility":"public","docs":"Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z\n\n*Complete version*: Will return the whole input if no terminating token is found (a non\nalphabetic character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::complete::alpha0;\nfn parser(input: &str) -> IResult<&str, &str> {\n    alpha0(input)\n}\n\nassert_eq!(parser(\"ab1c\"), Ok((\"1c\", \"ab\")));\nassert_eq!(parser(\"1c\"), Ok((\"1c\", \"\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:9236:4728":{"id":"2:9236:4728","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:5582":{"id":"0:5582","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"}]},"items":["0:5611:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2986":{"id":"0:2986","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}},"items":["0:2989:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2877:723":{"id":"0:2877:723","crate_id":0,"name":"hash","span":{"filename":"src/error.rs","begin":[364,28],"end":[364,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10893:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[226,0],"end":[226,75]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["description","source","type_id","cause","provide"],"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4513:2673":{"id":"0:4513:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5428:14303":{"id":"1:5428:14303","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5429:60280","1:5430:5174"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8982:5405":{"id":"2:8982:5405","crate_id":2,"name":"inspect","span":null,"visibility":"default","docs":"Does something with each element of an iterator, passing the value on.\n\nWhen using iterators, you'll often chain several of them together.\nWhile working on such code, you might want to check out what's\nhappening at various parts in the pipeline. To do that, insert\na call to `inspect()`.\n\nIt's more common for `inspect()` to be used as a debugging tool than to\nexist in your final code, but applications may find it useful in certain\nsituations when errors need to be logged before being discarded.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 4, 2, 3];\n\n// this iterator sequence is complex.\nlet sum = a.iter()\n    .cloned()\n    .filter(|x| x % 2 == 0)\n    .fold(0, |sum, i| sum + i);\n\nprintln!(\"{sum}\");\n\n// let's add some inspect() calls to investigate what's happening\nlet sum = a.iter()\n    .cloned()\n    .inspect(|x| println!(\"about to filter: {x}\"))\n    .filter(|x| x % 2 == 0)\n    .inspect(|x| println!(\"made it through filter: {x}\"))\n    .fold(0, |sum, i| sum + i);\n\nprintln!(\"{sum}\");\n```\n\nThis will print:\n\n```text\n6\nabout to filter: 1\nabout to filter: 4\nmade it through filter: 4\nabout to filter: 2\nmade it through filter: 2\nabout to filter: 3\n6\n```\n\nLogging errors before discarding them:\n\n```\nlet lines = [\"1\", \"2\", \"a\"];\n\nlet sum: i32 = lines\n    .iter()\n    .map(|line| line.parse::<i32>())\n    .inspect(|num| {\n        if let Err(ref e) = *num {\n            println!(\"Parsing error: {e}\");\n        }\n    })\n    .filter_map(Result::ok)\n    .sum();\n\nprintln!(\"Sum: {sum}\");\n```\n\nThis will print:\n\n```text\nParsing error: invalid digit found in string\nSum: 3\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Inspect","id":"2:47096:4944","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23163:61112":{"id":"2:23163:61112","crate_id":2,"name":"reduce_min","span":null,"visibility":"default","docs":"Returns the minimum lane in the vector.\n\nReturns values based on equality, so a vector containing both `0.` and `-0.` may\nreturn either.\n\nThis function will not return `NaN` unless all lanes are `NaN`.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([3., 7.]);\nassert_eq!(v.reduce_min(), 3.);\n\n// NaN values are skipped...\nlet v = f32x2::from_array([1., f32::NAN]);\nassert_eq!(v.reduce_min(), 1.);\n\n// ...unless all values are NaN\nlet v = f32x2::from_array([f32::NAN, f32::NAN]);\nassert!(v.reduce_min().is_nan());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4201":{"id":"0:4201","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}},"items":["0:4204:2425","0:4205:2548","0:4206:2608","0:4207:2610","0:4208:2612","0:4209:1026","0:4211:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4485:5604":{"id":"1:4485:5604","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4486:60460","1:4487:42303","1:4488:60461","1:4489:60462"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8253:9385":{"id":"2:8253:9385","crate_id":2,"name":"backward_checked","span":null,"visibility":"default","docs":"Returns the value that would be obtained by taking the *predecessor*\nof `self` `count` times.\n\nIf this would overflow the range of values supported by `Self`, returns `None`.\n\n# Invariants\n\nFor any `a`, `n`, and `m`:\n\n* `Step::backward_checked(a, n).and_then(|x| Step::backward_checked(x, m)) == n.checked_add(m).and_then(|x| Step::backward_checked(a, x))`\n* `Step::backward_checked(a, n).and_then(|x| Step::backward_checked(x, m)) == try { Step::backward_checked(a, n.checked_add(m)?) }`\n\nFor any `a` and `n`:\n\n* `Step::backward_checked(a, n) == (0..n).try_fold(a, |x, _| Step::backward_checked(&x, 1))`\n  * Corollary: `Step::backward_checked(&a, 0) == Some(a)`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"generic","inner":"Self"}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8738:5388":{"id":"2:8738:5388","crate_id":2,"name":"extend_reserve","span":null,"visibility":"default","docs":"Reserves capacity in a collection for the given number of additional elements.\n\nThe default implementation does nothing.","links":{},"attrs":["#[unstable(feature = \"extend_one\", issue = \"72631\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["additional",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3470":{"id":"0:3470","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}},"items":["0:3473:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3589:2673":{"id":"0:3589:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3529:1026":{"id":"0:3529:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2824:2101":{"id":"0:2824:2101","crate_id":0,"name":"RegexpMatches","span":{"filename":"src/error.rs","begin":[398,2],"end":[398,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:3478:4788":{"id":"2:3478:4788","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3480:904"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3491:2112":{"id":"2:3491:2112","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3492:185","2:3493:963"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:835":{"id":"0:835","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[416,0],"end":[428,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:837:2423","0:838:2622"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2674:4212":{"id":"0:2674:4212","crate_id":0,"name":"be_f64","span":{"filename":"src/number/streaming.rs","begin":[1172,0],"end":[1180,1]},"visibility":"public","docs":"Recognizes a big endian 8 bytes floating point number.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_f64;\n\nlet parser = |s| {\n  be_f64::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:1037:57696":{"id":"1:1037:57696","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"default","docs":"Converts this type to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`to_ascii_uppercase`]: AsciiExt::to_ascii_uppercase","links":{"AsciiExt::to_ascii_uppercase":"1:1034:57693"},"attrs":["#[stable(feature = \"ascii\", since = \"1.9.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3549:2673":{"id":"0:3549:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4583:2763":{"id":"0:4583:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3686:2608":{"id":"0:3686:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2948":{"id":"0:2948","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}},"items":["0:2950:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2838:2108":{"id":"0:2838:2108","crate_id":0,"name":"Escaped","span":{"filename":"src/error.rs","begin":[405,2],"end":[405,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3178":{"id":"0:3178","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"items":["0:3181:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1035:2723":{"id":"0:1035:2723","crate_id":0,"name":"ToUsize","span":{"filename":"src/traits.rs","begin":[1234,0],"end":[1237,1]},"visibility":"public","docs":"Helper trait to convert numbers to usize.\n\nBy default, usize implements `From<u8>` and `From<u16>` but not\n`From<u32>` and `From<u64>` because that would be invalid on some\nplatforms. This trait implements the conversion for platforms\nwith 32 and 64 bits pointer platforms","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1036:2725"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1037","0:1039","0:1041","0:1043","0:1045"]}},"0:4011:2617":{"id":"0:4011:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3189:1331":{"id":"0:3189:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:837:2423":{"id":"0:837:2423","crate_id":0,"name":"take","span":{"filename":"src/traits.rs","begin":[418,2],"end":[420,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6189:63294":{"id":"5:6189:63294","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8478:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3286:2608":{"id":"0:3286:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2828:2103":{"id":"0:2828:2103","crate_id":0,"name":"RegexpCapture","span":{"filename":"src/error.rs","begin":[400,2],"end":[400,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3617:2663":{"id":"0:3617:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2884:2426":{"id":"b:2:2865-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2976":{"id":"0:2976","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}},"items":["0:2978:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3137":{"id":"0:3137","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}},"items":["0:3139:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:765:2573":{"id":"0:765:2573","crate_id":0,"name":"as_char","span":{"filename":"src/traits.rs","begin":[176,2],"end":[178,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2125:3368":{"id":"0:2125:3368","crate_id":0,"name":"one_of","span":{"filename":"src/character/streaming.rs","begin":[90,0],"end":[101,1]},"visibility":"public","docs":"Recognizes one of the provided characters.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::character::streaming::one_of;\nassert_eq!(one_of::<_, _, (_, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));\nassert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));\nassert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["list",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3236:2236":{"id":"0:3236:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3520:2236":{"id":"0:3520:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3819":{"id":"0:3819","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3823:2657","0:3825:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3310":{"id":"0:3310","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}},"items":["0:3313:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3457:566":{"id":"2:3457:566","crate_id":2,"name":"div","span":null,"visibility":"default","docs":"Performs the `/` operation.\n\n# Example\n\n```\nassert_eq!(12 / 2, 6);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Div","id":"2:3454:3163","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:944":{"id":"0:944","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[887,0],"end":[891,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:946:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2170:3592":{"id":"0:2170:3592","crate_id":0,"name":"digit1","span":{"filename":"src/character/streaming.rs","begin":[380,0],"end":[386,1]},"visibility":"public","docs":"Recognizes one or more ASCII numerical characters: 0-9\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::digit1;\nassert_eq!(digit1::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));\nassert_eq!(digit1::<_, (_, ErrorKind)>(\"c1\"), Err(Err::Error((\"c1\", ErrorKind::Digit))));\nassert_eq!(digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:730:2236":{"id":"0:730:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[40,2],"end":[44,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23156:61105":{"id":"2:23156:61105","crate_id":2,"name":"copysign","span":null,"visibility":"default","docs":"Returns each lane with the magnitude of `self` and the sign of `sign`.\n\nFor any lane containing a `NAN`, a `NAN` with the sign of `sign` is returned.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["sign",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2900":{"id":"0:2900","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[48,38],"end":[48,42]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1956:3374":{"id":"0:1956:3374","crate_id":0,"name":"none_of","span":{"filename":"src/character/complete.rs","begin":[113,0],"end":[123,1]},"visibility":"public","docs":"Recognizes a character that is not in the provided characters.\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind};\n# use nom::character::complete::none_of;\nassert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));\nassert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));\nassert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::NoneOf))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["list",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3442:271":{"id":"2:3442:271","crate_id":2,"name":"add","span":null,"visibility":"default","docs":"Performs the `+` operation.\n\n# Example\n\n```\nassert_eq!(12 + 1, 13);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Add","id":"2:3439:4749","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:851:2503":{"id":"5:851:2503","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:821":{"id":"0:821","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[365,0],"end":[375,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:823:2423","0:824:2622"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4375:2657":{"id":"0:4375:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13911:2036":{"id":"2:13911:2036","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13359:127","`FromStr`":"2:13358:2552"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13358:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13358:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1622:3231":{"id":"0:1622:3231","crate_id":0,"name":"is_not","span":{"filename":"src/bytes/complete.rs","begin":[117,0],"end":[128,1]},"visibility":"public","docs":"Parse till certain characters are met.\n\nThe parser will return the longest slice till one of the characters of the combinator's argument are met.\n\nIt doesn't consume the matched character.\n\nIt will return a `Err::Error((\"\", ErrorKind::IsNot))` if the pattern wasn't met.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::is_not;\n\nfn not_space(s: &str) -> IResult<&str, &str> {\n  is_not(\" \\t\\r\\n\")(s)\n}\n\nassert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));\nassert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));\nassert_eq!(not_space(\"Nospace\"), Ok((\"\", \"Nospace\")));\nassert_eq!(not_space(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsNot))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arr",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4792:2763":{"id":"0:4792:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1137:1847":{"id":"0:1137:1847","crate_id":0,"name":"multi","span":{"filename":"src/multi/mod.rs","begin":[1,0],"end":[981,1]},"visibility":"public","docs":"Combinators applying their child parser multiple times","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1173:2883","0:1180:2897","0:1187:2908","0:1196:2919","0:1205:2927","0:1214:2936","0:1221:2948","0:1228:2956","0:1235:503","0:1242:659","0:1250:2991","0:1260:2999","0:1270:3008","0:1280:3020","0:1287:3033","0:1296:3045"],"is_stripped":false}},"2:23191:14647":{"id":"2:23191:14647","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23192:14651","2:23193:61093","2:23194:1244","2:23195:1245","2:23196:45292","2:23197:62170","2:23198:62171","2:23199:62172","2:23200:62173","2:23201:61104","2:23202:61109","2:23203:61110","2:23204:61111","2:23205:61112","2:23206:61904","2:23207:61905","2:23208:61906"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23240:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9054:2648":{"id":"2:9054:2648","crate_id":2,"name":"find","span":null,"visibility":"default","docs":"Searches for an element of an iterator that satisfies a predicate.\n\n`find()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if any of them return\n`true`, then `find()` returns [`Some(element)`]. If they all return\n`false`, it returns [`None`].\n\n`find()` is short-circuiting; in other words, it will stop processing\nas soon as the closure returns `true`.\n\nBecause `find()` takes a reference, and many iterators iterate over\nreferences, this leads to a possibly confusing situation where the\nargument is a double reference. You can see this effect in the\nexamples below, with `&&x`.\n\n[`Some(element)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().find(|&&x| x == 2), Some(&2));\n\nassert_eq!(a.iter().find(|&&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.find(|&&x| x == 2), Some(&2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&3));\n```\n\nNote that `iter.find(f)` is equivalent to `iter.filter(f).next()`.","links":{"`None`":"2:47911:178","Some":"2:47913:220"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23161:61110":{"id":"2:23161:61110","crate_id":2,"name":"reduce_product","span":null,"visibility":"default","docs":"Reducing multiply.  Returns the product of the lanes of the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{f32x2, SimdFloat};\nlet v = f32x2::from_array([3., 4.]);\nassert_eq!(v.reduce_product(), 12.);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:848-0:2744:2017":{"id":"b:5:848-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:4751","5:851:2503","5:852:5430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3180:136":{"id":"2:3180:136","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3182:689"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3218-0:402:2418":{"id":"b:2:3218-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:963":{"id":"0:963","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[917,0],"end":[921,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"char"}}}},"items":["0:965:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10658:4717":{"id":"2:10658:4717","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10659:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6171:4767":{"id":"5:6171:4767","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8478:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1702:3357":{"id":"0:1702:3357","crate_id":0,"name":"escaped_transform","span":{"filename":"src/bytes/complete.rs","begin":[623,0],"end":[705,1]},"visibility":"public","docs":"Matches a byte string with escaped characters.\n\n* The first argument matches the normal characters (it must not match the control character)\n* The second argument is the control character (like `\\` in most languages)\n* The third argument matches the escaped characters and transforms them\n\nAs an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)\n\n```\n# use nom::{Err, error::ErrorKind, Needed, IResult};\n# use std::str::from_utf8;\nuse nom::bytes::complete::{escaped_transform, tag};\nuse nom::character::complete::alpha1;\nuse nom::branch::alt;\nuse nom::combinator::value;\n\nfn parser(input: &str) -> IResult<&str, String> {\n  escaped_transform(\n    alpha1,\n    '\\\\',\n    alt((\n      value(\"\\\\\", tag(\"\\\\\")),\n      value(\"\\\"\", tag(\"\\\"\")),\n      value(\"\\n\", tag(\"n\")),\n    ))\n  )(input)\n}\n\nassert_eq!(parser(\"ab\\\\\\\"cd\"), Ok((\"\", String::from(\"ab\\\"cd\"))));\nassert_eq!(parser(\"ab\\\\ncd\"), Ok((\"\", String::from(\"ab\\ncd\"))));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["normal",{"kind":"generic","inner":"F"}],["control_char",{"kind":"primitive","inner":"char"}],["transform",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"ExtendItem","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::traits::Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::ExtendInto","id":"0:1005:2706","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"ExtendItem"}}}},{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O1"},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::ExtendInto","id":"0:1005:2706","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"ExtendItem"}}}},{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O2"},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::ExtendInto","id":"0:1005:2706","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"ExtendItem"}}}},{"name":"Extender","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Output"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Error"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3950":{"id":"0:3950","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}},"items":["0:3953:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4113:2673":{"id":"0:4113:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3965:2548":{"id":"0:3965:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:3524:2425":{"id":"0:3524:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:4486:2608":{"id":"0:4486:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:3084":{"id":"0:3084","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}},"items":["0:3087:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2912":{"id":"0:2912","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[95,9],"end":[95,14]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:2914:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23142:61095":{"id":"2:23142:61095","crate_id":2,"name":"to_bits","span":null,"visibility":"default","docs":"Raw transmutation to an unsigned integer vector type with the\nsame size and number of lanes.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:106:1970":{"id":"0:106:1970","crate_id":0,"name":"from_error_kind","span":{"filename":"src/error.rs","begin":[104,2],"end":[106,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3316:2236":{"id":"0:3316:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3354":{"id":"0:3354","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}},"items":["0:3356:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3206:2404":{"id":"2:3206:2404","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3180:136"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3339":{"id":"0:3339","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3343:2657","0:3345:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1040:2725":{"id":"0:1040:2725","crate_id":0,"name":"to_usize","span":{"filename":"src/traits.rs","begin":[1248,2],"end":[1250,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2186:3620":{"id":"0:2186:3620","crate_id":0,"name":"oct_digit1","span":{"filename":"src/character/streaming.rs","begin":[464,0],"end":[470,1]},"visibility":"public","docs":"Recognizes one or more octal characters: 0-7\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non octal digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::oct_digit1;\nassert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));\nassert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::OctDigit))));\nassert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3456:185":{"id":"2:3456:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `/` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3234":{"id":"0:3234","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}},"items":["0:3236:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[436,0],"end":[436,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::internal","name":"internal","id":"0:444:1843","glob":true}},"2:4143:68":{"id":"2:4143:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4144:1453"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:3337:2663":{"id":"0:3337:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:846:2503":{"id":"5:846:2503","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":"Creates owned data from borrowed data, usually by cloning.\n\n# Examples\n\nBasic usage:\n\n```\nlet s: &str = \"a\";\nlet ss: String = s.to_owned();\n\nlet v: &[i32] = &[1, 2];\nlet vv: Vec<i32> = v.to_owned();\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"cloning is often expensive and is not expected to have side effects\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1990:3578":{"id":"0:1990:3578","crate_id":0,"name":"digit0","span":{"filename":"src/character/complete.rs","begin":[392,0],"end":[398,1]},"visibility":"public","docs":"Recognizes zero or more ASCII numerical characters: 0-9\n\n*Complete version*: Will return an error if there's not enough input data,\nor the whole input if no terminating token is found (a non digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::complete::digit0;\nfn parser(input: &str) -> IResult<&str, &str> {\n    digit0(input)\n}\n\nassert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));\nassert_eq!(parser(\"21\"), Ok((\"\", \"21\")));\nassert_eq!(parser(\"a21c\"), Ok((\"a21c\", \"\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4331:2617":{"id":"0:4331:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13799:62644":{"id":"2:13799:62644","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13797:62643"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4389:2673":{"id":"0:4389:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3756:2236":{"id":"0:3756:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2782:2082":{"id":"0:2782:2082","crate_id":0,"name":"ManyTill","span":{"filename":"src/error.rs","begin":[377,2],"end":[377,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:778:2583":{"id":"0:778:2583","crate_id":0,"name":"is_hex_digit","span":{"filename":"src/traits.rs","begin":[224,2],"end":[228,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10655:668":{"id":"2:10655:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:2901:127":{"id":"b:2:2865-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3727:2610":{"id":"0:3727:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9616:5287-0:2730:2013":{"id":"a:2:9616:5287-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3257:2663":{"id":"0:3257:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:951":{"id":"0:951","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[899,0],"end":[903,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:954:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6638:14295":{"id":"1:6638:14295","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6639:57639"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3087:2051":{"id":"0:3087:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7595:14402":{"id":"1:7595:14402","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7596:57671"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5557:60262":{"id":"1:5557:60262","crate_id":1,"name":"is_block_device","span":null,"visibility":"default","docs":"Returns `true` if this file type is a block device.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"block_device_file\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_block_device());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3292":{"id":"0:3292","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3295:2657","0:3297:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2034:3661":{"id":"0:2034:3661","crate_id":0,"name":"multispace1","span":{"filename":"src/character/complete.rs","begin":[695,0],"end":[707,1]},"visibility":"public","docs":"Recognizes one or more spaces, tabs, carriage returns and line feeds.\n\n*Complete version*: will return an error if there's not enough input data,\nor the whole input if no terminating token is found (a non space character).\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::multispace1;\nfn parser(input: &str) -> IResult<&str, &str> {\n    multispace1(input)\n}\n\nassert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));\nassert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::MultiSpace))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::MultiSpace))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4206:2608":{"id":"0:4206:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"1:7596:57671":{"id":"1:7596:57671","crate_id":1,"name":"report","span":null,"visibility":"default","docs":"Is called to get the representation of the value as status code.\nThis status code is returned to the operating system.","links":{},"attrs":["#[stable(feature = \"termination_trait_lib\", since = \"1.61.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"ExitCode","id":"1:11868:14400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2641:4100":{"id":"0:2641:4100","crate_id":0,"name":"u24","span":{"filename":"src/number/streaming.rs","begin":[782,0],"end":[794,1]},"visibility":"public","docs":"Recognizes an unsigned 3 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::u24;\n\nlet be_u24 = |s| {\n  u24::<_,(_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));\nassert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));\n\nlet le_u24 = |s| {\n  u24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));\nassert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:988:2691":{"id":"0:988:2691","crate_id":0,"name":"parse_to","span":{"filename":"src/traits.rs","begin":[986,2],"end":[986,34]},"visibility":"default","docs":"Succeeds if `parse()` succeeded. The byte slice implementation\nwill first convert it to a `&str`, then apply the `parse()` function","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3857:2663":{"id":"0:3857:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4844":{"id":"0:4844","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"}]},"items":["0:4851:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2608:4036":{"id":"0:2608:4036","crate_id":0,"name":"le_u32","span":{"filename":"src/number/streaming.rs","begin":[463,0],"end":[478,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 4 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_u32;\n\nlet parser = |s| {\n  le_u32::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2422:737":{"id":"0:2422:737","crate_id":0,"name":"i32","span":{"filename":"src/number/complete.rs","begin":[1066,0],"end":[1078,1]},"visibility":"public","docs":"Recognizes a signed 4 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::i32;\n\nlet be_i32 = |s| {\n  i32(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));\nassert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_i32 = |s| {\n  i32(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));\nassert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3794:12977":{"id":"2:3794:12977","crate_id":2,"name":"contains","span":null,"visibility":"default","docs":"Returns `true` if `item` is contained in the range.\n\n# Examples\n\n```\nassert!( (3..5).contains(&4));\nassert!(!(3..5).contains(&2));\n\nassert!( (0.0..1.0).contains(&0.5));\nassert!(!(0.0..1.0).contains(&f32::NAN));\nassert!(!(0.0..f32::NAN).contains(&0.5));\nassert!(!(f32::NAN..1.0).contains(&0.5));","links":{},"attrs":["#[stable(feature = \"range_contains\", since = \"1.35.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["item",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"U"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4107":{"id":"0:4107","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}},"items":["0:4109:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4489:60462":{"id":"1:4489:60462","crate_id":1,"name":"stream_position","span":null,"visibility":"default","docs":"Returns the current seek position from the start of the stream.\n\nThis is equivalent to `self.seek(SeekFrom::Current(0))`.\n\n# Example\n\n```no_run\nuse std::{\n    io::{self, BufRead, BufReader, Seek},\n    fs::File,\n};\n\nfn main() -> io::Result<()> {\n    let mut f = BufReader::new(File::open(\"foo.txt\")?);\n\n    let before = f.stream_position()?;\n    f.read_line(&mut String::new())?;\n    let after = f.stream_position()?;\n\n    println!(\"The first line was {} bytes long\", after - before);\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"seek_convenience\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3277":{"id":"0:3277","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}},"items":["0:3280:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:760:2581":{"id":"0:760:2581","crate_id":0,"name":"is_dec_digit","span":{"filename":"src/traits.rs","begin":[165,2],"end":[165,32]},"visibility":"default","docs":"Tests that self is a decimal digit","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8931:5390":{"id":"2:8931:5390","crate_id":2,"name":"size_hint","span":null,"visibility":"default","docs":"Returns the bounds on the remaining length of the iterator.\n\nSpecifically, `size_hint()` returns a tuple where the first element\nis the lower bound, and the second element is the upper bound.\n\nThe second half of the tuple that is returned is an <code>[Option]<[usize]></code>.\nA [`None`] here means that either there is no known upper bound, or the\nupper bound is larger than [`usize`].\n\n# Implementation notes\n\nIt is not enforced that an iterator implementation yields the declared\nnumber of elements. A buggy iterator may yield less than the lower bound\nor more than the upper bound of elements.\n\n`size_hint()` is primarily intended to be used for optimizations such as\nreserving space for the elements of the iterator, but must not be\ntrusted to e.g., omit bounds checks in unsafe code. An incorrect\nimplementation of `size_hint()` should not lead to memory safety\nviolations.\n\nThat said, the implementation should provide a correct estimation,\nbecause otherwise it would be a violation of the trait's protocol.\n\nThe default implementation returns <code>(0, [None])</code> which is correct for any\niterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet mut iter = a.iter();\n\nassert_eq!((3, Some(3)), iter.size_hint());\nlet _ = iter.next();\nassert_eq!((2, Some(2)), iter.size_hint());\n```\n\nA more complex example:\n\n```\n// The even numbers in the range of zero to nine.\nlet iter = (0..10).filter(|x| x % 2 == 0);\n\n// We might iterate from zero to ten times. Knowing that it's five\n// exactly wouldn't be possible without executing filter().\nassert_eq!((0, Some(10)), iter.size_hint());\n\n// Let's add five more numbers with chain()\nlet iter = (0..10).filter(|x| x % 2 == 0).chain(15..20);\n\n// now both bounds are increased by five\nassert_eq!((5, Some(15)), iter.size_hint());\n```\n\nReturning `None` for an upper bound:\n\n```\n// an infinite iterator has no upper bound\n// and the maximum possible lower bound\nlet iter = 0..;\n\nassert_eq!((usize::MAX, None), iter.size_hint());\n```","links":{"usize":"1:15880:4627","`None`":"2:47911:178","Option":"2:47909:180","None":"2:47911:178","`usize`":"1:15880:4627"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2884:105":{"id":"2:2884:105","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2885:416","2:2886:418"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10895:2005":{"id":"2:10895:2005","crate_id":2,"name":"write","span":null,"visibility":"default","docs":"Writes some data into this `Hasher`.\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::Hasher;\n\nlet mut hasher = DefaultHasher::new();\nlet data = [0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef];\n\nhasher.write(&data);\n\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```\n\n# Note to Implementers\n\nYou generally should not do length-prefixing as part of implementing\nthis method.  It's up to the [`Hash`] implementation to call\n[`Hasher::write_length_prefix`] before sequences that need it.","links":{"`Hasher::write_length_prefix`":"2:10908:8873","`Hash`":"2:10883:143"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["bytes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3765:2548":{"id":"0:3765:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"2:13795:2046":{"id":"2:13795:2046","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14161:152":{"id":"2:14161:152","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":"Which kind of future are we turning this into?","links":{},"attrs":["#[stable(feature = \"into_future\", since = \"1.64.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoFuture","id":"2:14159:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Future","id":"2:14144:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoFuture","id":"2:14159:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:14144:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:2906:128":{"id":"0:2906:128","crate_id":0,"name":"Error","span":{"filename":"src/internal.rs","begin":[101,2],"end":[101,10]},"visibility":"default","docs":"The parser had an error (recoverable)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2908:1568"]}},"0:890:2425":{"id":"0:890:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[626,2],"end":[626,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"char"}}},"0:918:2657":{"id":"0:918:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[792,2],"end":[808,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"generic","inner":"O"}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4350":{"id":"0:4350","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}},"items":["0:4353:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9002:5410":{"id":"2:9002:5410","crate_id":2,"name":"partition_in_place","span":null,"visibility":"default","docs":"Reorders the elements of this iterator *in-place* according to the given predicate,\nsuch that all those that return `true` precede all those that return `false`.\nReturns the number of `true` elements found.\n\nThe relative order of partitioned items is not maintained.\n\n# Current implementation\n\nCurrent algorithms tries finding the first element for which the predicate evaluates\nto false, and the last element for which it evaluates to true and repeatedly swaps them.\n\nTime complexity: *O*(*n*)\n\nSee also [`is_partitioned()`] and [`partition()`].\n\n[`is_partitioned()`]: Iterator::is_partitioned\n[`partition()`]: Iterator::partition\n\n# Examples\n\n```\n#![feature(iter_partition_in_place)]\n\nlet mut a = [1, 2, 3, 4, 5, 6, 7];\n\n// Partition in-place between evens and odds\nlet i = a.iter_mut().partition_in_place(|&n| n % 2 == 0);\n\nassert_eq!(i, 3);\nassert!(a[..i].iter().all(|&n| n % 2 == 0)); // evens\nassert!(a[i..].iter().all(|&n| n % 2 == 1)); // odds\n```","links":{"Iterator::partition":"2:8992:5409","Iterator::is_partitioned":"2:9017:5411"},"attrs":["#[unstable(feature = \"iter_partition_in_place\", reason = \"new API\", issue =\n\"62543\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'a"}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8768:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2232:3479":{"id":"0:2232:3479","crate_id":0,"name":"is_newline","span":{"filename":"src/character/mod.rs","begin":[114,0],"end":[116,1]},"visibility":"public","docs":"Tests if byte is ASCII newline: \\n\n\n# Example\n\n```\n# use nom::character::is_newline;\nassert_eq!(is_newline(b'\\n'), true);\nassert_eq!(is_newline(b'\\r'), false);\nassert_eq!(is_newline(b' '), false);\nassert_eq!(is_newline(b'\\t'), false);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["chr",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4139":{"id":"0:4139","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4143:2657","0:4145:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2848:2113":{"id":"0:2848:2113","crate_id":0,"name":"Permutation","span":{"filename":"src/error.rs","begin":[410,2],"end":[410,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:132:1970":{"id":"0:132:1970","crate_id":0,"name":"from_error_kind","span":{"filename":"src/error.rs","begin":[173,2],"end":[177,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14146:1025":{"id":"2:14146:1025","crate_id":2,"name":"poll","span":null,"visibility":"default","docs":"Attempt to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available.\n\n# Return value\n\nThis function returns:\n\n- [`Poll::Pending`] if the future is not ready yet\n- [`Poll::Ready(val)`] with the result `val` of this future if it\n  finished successfully.\n\nOnce a future has finished, clients should not `poll` it again.\n\nWhen a future is not ready yet, `poll` returns `Poll::Pending` and\nstores a clone of the [`Waker`] copied from the current [`Context`].\nThis [`Waker`] is then woken once the future can make progress.\nFor example, a future waiting for a socket to become\nreadable would call `.clone()` on the [`Waker`] and store it.\nWhen a signal arrives elsewhere indicating that the socket is readable,\n[`Waker::wake`] is called and the socket future's task is awoken.\nOnce a task has been woken up, it should attempt to `poll` the future\nagain, which may or may not produce a final value.\n\nNote that on multiple calls to `poll`, only the [`Waker`] from the\n[`Context`] passed to the most recent call should be scheduled to\nreceive a wakeup.\n\n# Runtime characteristics\n\nFutures alone are *inert*; they must be *actively* `poll`ed to make\nprogress, meaning that each time the current task is woken up, it should\nactively re-`poll` pending futures that it still has an interest in.\n\nThe `poll` function is not called repeatedly in a tight loop -- instead,\nit should only be called when the future indicates that it is ready to\nmake progress (by calling `wake()`). If you're familiar with the\n`poll(2)` or `select(2)` syscalls on Unix it's worth noting that futures\ntypically do *not* suffer the same problems of \"all wakeups must poll\nall events\"; they are more like `epoll(4)`.\n\nAn implementation of `poll` should strive to return quickly, and should\nnot block. Returning quickly prevents unnecessarily clogging up\nthreads or event loops. If it is known ahead of time that a call to\n`poll` may end up taking awhile, the work should be offloaded to a\nthread pool (or something similar) to ensure that `poll` can return\nquickly.\n\n# Panics\n\nOnce a future has completed (returned `Ready` from `poll`), calling its\n`poll` method again may panic, block forever, or cause other kinds of\nproblems; the `Future` trait places no requirements on the effects of\nsuch a call. However, as the `poll` method is not marked `unsafe`,\nRust's usual rules apply: calls must never cause undefined behavior\n(memory corruption, incorrect use of `unsafe` functions, or the like),\nregardless of the future's state.\n\n[`Poll::Ready(val)`]: Poll::Ready\n[`Waker`]: crate::task::Waker\n[`Waker::wake`]: crate::task::Waker::wake","links":{"Poll::Ready":"2:50803:205","crate::task::Waker":"2:14456:14808","crate::task::Waker::wake":"2:14462:14805","`Poll::Pending`":"2:50806:191","`Context`":"2:14446:2020"},"attrs":["#[stable(feature = \"futures_api\", since = \"1.36.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:48026:192","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:14446:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50801:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Future","id":"2:14144:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4862":{"id":"0:4862","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"}]},"items":["0:4873:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4234":{"id":"0:4234","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}},"items":["0:4236:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:824:2622":{"id":"0:824:2622","crate_id":0,"name":"take_split","span":{"filename":"src/traits.rs","begin":[371,2],"end":[374,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"Self"},{"kind":"generic","inner":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3913:2673":{"id":"0:3913:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:897:2646":{"id":"0:897:2646","crate_id":0,"name":"split_at_position_complete","span":{"filename":"src/traits.rs","begin":[655,2],"end":[673,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:830:2610":{"id":"0:830:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[382,2],"end":[384,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23207:61905":{"id":"2:23207:61905","crate_id":2,"name":"reduce_or","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"or\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2329:3976":{"id":"0:2329:3976","crate_id":0,"name":"be_u24","span":{"filename":"src/number/complete.rs","begin":[115,0],"end":[130,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 3 byte integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_u24;\n\nlet parser = |s| {\n  be_u24(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3513:2673":{"id":"0:3513:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4012":{"id":"0:4012","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4015:2657","0:4017:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23208:61906":{"id":"2:23208:61906","crate_id":2,"name":"reduce_xor","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"xor\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3840:2236":{"id":"0:3840:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[57,0],"end":[79,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:474:931","0:475:2473","0:476:852"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13879:13193":{"id":"2:13879:13193","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15857:4607","str::match_indices":"2:13876:13189","self::pattern":"2:13419:3185","`DoubleEndedIterator`":"2:8768:121"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50066:5032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2880:416":{"id":"0:2880:416","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[364,33],"end":[364,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3021":{"id":"0:3021","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}},"items":["0:3024:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2798:2089":{"id":"0:2798:2089","crate_id":0,"name":"OctDigit","span":{"filename":"src/error.rs","begin":[385,2],"end":[385,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"5:6504:229":{"id":"5:6504:229","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6505:1419"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:739:968":{"id":"0:739:968","crate_id":0,"name":"offset","span":{"filename":"src/traits.rs","begin":[72,2],"end":[77,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["second",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13436:61178":{"id":"2:13436:61178","crate_id":2,"name":"strip_prefix_of","span":null,"visibility":"default","docs":"Removes the pattern from the front of haystack, if it matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:925:2657":{"id":"0:925:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[828,2],"end":[830,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3792:62218":{"id":"2:3792:62218","crate_id":2,"name":"start_bound","span":null,"visibility":"default","docs":"Start index bound.\n\nReturns the start value as a `Bound`.\n\n# Examples\n\n```\n# fn main() {\nuse std::ops::Bound::*;\nuse std::ops::RangeBounds;\n\nassert_eq!((..10).start_bound(), Unbounded);\nassert_eq!((3..10).start_bound(), Included(&3));\n# }\n```","links":{},"attrs":["#[stable(feature = \"collections_range\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bound","id":"2:46398:4803","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3649:1026":{"id":"0:3649:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3528:2612":{"id":"0:3528:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3779":{"id":"0:3779","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3783:2657","0:3785:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1101:2075":{"id":"0:1101:2075","crate_id":0,"name":"Alt","span":{"filename":"src/branch/mod.rs","begin":[37,0],"end":[40,1]},"visibility":"public","docs":"Helper trait for the [alt()] combinator.\n\nThis trait is implemented for tuples of up to 21 elements","links":{"alt()":"0:1106:2781"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1105:2763"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:4514","0:4521","0:4529","0:4538","0:4548","0:4559","0:4571","0:4584","0:4598","0:4613","0:4629","0:4646","0:4664","0:4683","0:4703","0:4724","0:4746","0:4769","0:4793","0:4818","0:1128"]}},"5:6193:57694":{"id":"5:6193:57694","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13916:57697"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4150":{"id":"0:4150","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}},"items":["0:4153:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:732:968":{"id":"0:732:968","crate_id":0,"name":"offset","span":{"filename":"src/traits.rs","begin":[50,2],"end":[50,43]},"visibility":"default","docs":"Offset between the first byte of self and the first byte of the argument","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["second",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3251:2617":{"id":"0:3251:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3225:2663":{"id":"0:3225:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:77:1978":{"id":"0:77:1978","crate_id":0,"name":"from_char","span":{"filename":"src/error.rs","begin":[26,2],"end":[28,3]},"visibility":"default","docs":"Creates an error from an input position and an expected character","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["_",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3745:2663":{"id":"0:3745:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3954":{"id":"0:3954","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}},"items":["0:3956:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:1035:57694":{"id":"1:1035:57694","crate_id":1,"name":"to_ascii_lowercase","span":null,"visibility":"default","docs":"Makes a copy of the value in its ASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`str::to_lowercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`make_ascii_lowercase`]: AsciiExt::make_ascii_lowercase","links":{"AsciiExt::make_ascii_lowercase":"1:1038:57697","`str::to_lowercase`":"5:6177:2669"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"AsciiExt","id":"1:1031:14336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4065:2663":{"id":"0:4065:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4723:2763":{"id":"0:4723:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2971:2051":{"id":"0:2971:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2198:3641":{"id":"0:2198:3641","crate_id":0,"name":"space0","span":{"filename":"src/character/streaming.rs","begin":[527,0],"end":[536,1]},"visibility":"public","docs":"Recognizes zero or more spaces and tabs.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non space character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::space0;\nassert_eq!(space0::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));\nassert_eq!(space0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(space0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3309:2673":{"id":"0:3309:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2644:1459":{"id":"0:2644:1459","crate_id":0,"name":"u32","span":{"filename":"src/number/streaming.rs","begin":[821,0],"end":[833,1]},"visibility":"public","docs":"Recognizes an unsigned 4 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::u32;\n\nlet be_u32 = |s| {\n  u32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));\nassert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));\n\nlet le_u32 = |s| {\n  u32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));\nassert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:720:2236":{"id":"0:720:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[21,2],"end":[21,31]},"visibility":"default","docs":"Calculates the input length, as indicated by its name,\nand the name of the trait itself","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[193,0],"end":[198,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["add_context"],"trait":{"name":"ContextError","id":"0:79:1984","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:137:1988"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23157:61106":{"id":"2:23157:61106","crate_id":2,"name":"simd_min","span":null,"visibility":"default","docs":"Returns the minimum of each lane.\n\nIf one of the values is `NAN`, then the other value is returned.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4645:2763":{"id":"0:4645:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13818:2063":{"id":"2:13818:2063","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49868:2551","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:6086:3949":{"id":"b:2:2868-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2861:1836":{"id":"2:2861:1836","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":"Immutably borrows from an owned value.\n\n# Examples\n\n```\nuse std::borrow::Borrow;\n\nfn check<T: Borrow<str>>(s: T) {\n    assert_eq!(\"Hello\", s.borrow());\n}\n\nlet s = \"Hello\".to_string();\n\ncheck(s);\n\nlet s = \"Hello\";\n\ncheck(s);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Borrowed"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13446:5381":{"id":"2:13446:5381","crate_id":2,"name":"next_back","span":null,"visibility":"default","docs":"Performs the next search step starting from the back.\n\n- Returns [`Match(a, b)`][SearchStep::Match] if `haystack[a..b]`\n  matches the pattern.\n- Returns [`Reject(a, b)`][SearchStep::Reject] if `haystack[a..b]`\n  can not match the pattern, even partially.\n- Returns [`Done`][SearchStep::Done] if every byte of the haystack\n  has been visited\n\nThe stream of [`Match`][SearchStep::Match] and\n[`Reject`][SearchStep::Reject] values up to a [`Done`][SearchStep::Done]\nwill contain index ranges that are adjacent, non-overlapping,\ncovering the whole haystack, and laying on utf8 boundaries.\n\nA [`Match`][SearchStep::Match] result needs to contain the whole matched\npattern, however [`Reject`][SearchStep::Reject] results may be split up\ninto arbitrary many adjacent fragments. Both ranges may have zero length.\n\nAs an example, the pattern `\"aaa\"` and the haystack `\"cbaaaaab\"`\nmight produce the stream\n`[Reject(7, 8), Match(4, 7), Reject(1, 4), Reject(0, 1)]`.","links":{"SearchStep::Reject":"2:50283:12986","SearchStep::Done":"2:50287:2424","SearchStep::Match":"2:50279:12985"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SearchStep","id":"2:50278:12906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3203-0:2718:128":{"id":"b:2:3203-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1392:2216":{"id":"0:1392:2216","crate_id":0,"name":"complete","span":{"filename":"src/bits/complete.rs","begin":[1,0],"end":[150,1]},"visibility":"public","docs":"Bit level parsers\n","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1436:2423","0:1443:3184"],"is_stripped":false}},"0:2338:3991":{"id":"0:2338:3991","crate_id":0,"name":"be_u128","span":{"filename":"src/number/complete.rs","begin":[214,0],"end":[229,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 16 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_u128;\n\nlet parser = |s| {\n  be_u128(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2860:2119":{"id":"0:2860:2119","crate_id":0,"name":"Many1Count","span":{"filename":"src/error.rs","begin":[416,2],"end":[416,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2800:2090":{"id":"0:2800:2090","crate_id":0,"name":"AlphaNumeric","span":{"filename":"src/error.rs","begin":[386,2],"end":[386,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:4179":{"id":"0:4179","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4183:2657","0:4185:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9615:5288":{"id":"2:9615:5288","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:509:2503":{"id":"0:509:2503","crate_id":0,"name":"to_owned","span":{"filename":"src/internal.rs","begin":[188,2],"end":[190,3]},"visibility":"public","docs":"Obtaining ownership","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5559:60264":{"id":"1:5559:60264","crate_id":1,"name":"is_fifo","span":null,"visibility":"default","docs":"Returns `true` if this file type is a fifo.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::FileTypeExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"fifo_file\")?;\n    let file_type = meta.file_type();\n    assert!(file_type.is_fifo());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"file_type_ext\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3569:1026":{"id":"0:3569:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3177:150":{"id":"2:3177:150","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179:2404"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9061:5416":{"id":"2:9061:5416","crate_id":2,"name":"find_map","span":null,"visibility":"default","docs":"Applies function to the elements of iterator and returns\nthe first non-none result.\n\n`iter.find_map(f)` is equivalent to `iter.filter_map(f).next()`.\n\n# Examples\n\n```\nlet a = [\"lol\", \"NaN\", \"2\", \"5\"];\n\nlet first_number = a.iter().find_map(|s| s.parse().ok());\n\nassert_eq!(first_number, Some(2));\n```","links":{},"attrs":["#[stable(feature = \"iterator_find_map\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5503:59527":{"id":"1:5503:59527","crate_id":1,"name":"write_at","span":null,"visibility":"default","docs":"Writes a number of bytes starting from a given offset.\n\nReturns the number of bytes written.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nWhen writing beyond the end of the file, the file is appropriately\nextended and the intermediate bytes are initialized with the value 0.\n\nNote that similar to [`File::write`], it is not an error to return a\nshort write.\n\n[`File::write`]: fs::File::write\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::io;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let file = File::open(\"foo.txt\")?;\n\n    // We now write at the offset 10.\n    file.write_at(b\"sushi\", 10)?;\n    Ok(())\n}\n```","links":{"fs::File::write":"1:2958:2005"},"attrs":["#[stable(feature = \"file_offset\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3480:904":{"id":"2:3480:904","crate_id":2,"name":"mul_assign","span":null,"visibility":"default","docs":"Performs the `*=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx *= 2;\nassert_eq!(x, 24);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4427":{"id":"0:4427","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}},"items":["0:4429:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1498:2423":{"id":"0:1498:2423","crate_id":0,"name":"take","span":{"filename":"src/bits/streaming.rs","begin":[10,0],"end":[56,1]},"visibility":"public","docs":"Generates a parser taking `count` bits","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["count",{"kind":"generic","inner":"C"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AddAssign","id":"2:3470:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shl","id":"2:3513:3164","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shr","id":"2:3519:3165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2593:4014":{"id":"0:2593:4014","crate_id":0,"name":"be_i64","span":{"filename":"src/number/streaming.rs","begin":[327,0],"end":[332,1]},"visibility":"public","docs":"Recognizes a big endian signed 8 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_i64;\n\nlet parser = be_i64::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:789":{"id":"0:789","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[270,0],"end":[299,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"char"}}},"items":["0:791:2573","0:792:2577","0:793:2579","0:794:2581","0:795:2583","0:796:2585","0:797:803"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3859:4805":{"id":"2:3859:4805","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3790:4804","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13823:2059":{"id":"2:13823:2059","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50152:5029","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3926:2608":{"id":"0:3926:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:748":{"id":"0:748","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[102,0],"end":[107,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"str"},"items":["0:749:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4041":{"id":"0:4041","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}},"items":["0:4044:2425","0:4045:2548","0:4046:2608","0:4047:2610","0:4048:2612","0:4049:1026","0:4051:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5522:14277":{"id":"1:5522:14277","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5523:17661","1:5524:57726","1:5525:15883","1:5526:60808","1:5527:14547","1:5528:14548","1:5529:60809","1:5530:1326","1:5531:60810","1:5532:60811","1:5533:60812","1:5534:60813","1:5535:60814","1:5536:60815","1:5537:60816","1:5538:60817"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23196:45292":{"id":"2:23196:45292","crate_id":2,"name":"abs","span":null,"visibility":"default","docs":"Lanewise absolute value, implemented in Rust.\nEvery lane becomes its absolute value.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet xs = Simd::from_array([MIN, MIN +1, -5, 0]);\nassert_eq!(xs.abs(), Simd::from_array([MIN, MAX, 5, 0]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:98:1997":{"id":"0:98:1997","crate_id":0,"name":"from_external_error","span":{"filename":"src/error.rs","begin":[86,2],"end":[88,3]},"visibility":"default","docs":"Create a new error from an input position and an external error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_e",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:880:2646":{"id":"0:880:2646","crate_id":0,"name":"split_at_position_complete","span":{"filename":"src/traits.rs","begin":[590,2],"end":[601,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4514":{"id":"0:4514","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]},"items":["0:4520:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5444":{"id":"0:5444","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"}]},"items":["0:5461:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2784:108":{"id":"0:2784:108","crate_id":0,"name":"Count","span":{"filename":"src/error.rs","begin":[378,2],"end":[378,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2747:1568":{"id":"0:2747:1568","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[163,10],"end":[163,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:4314":{"id":"0:4314","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}},"items":["0:4316:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1949:3368":{"id":"0:1949:3368","crate_id":0,"name":"one_of","span":{"filename":"src/character/complete.rs","begin":[89,0],"end":[99,1]},"visibility":"public","docs":"Recognizes one of the provided characters.\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind};\n# use nom::character::complete::one_of;\nassert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));\nassert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));\nassert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::OneOf))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["list",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4425:2423":{"id":"1:4425:2423","crate_id":1,"name":"take","span":null,"visibility":"default","docs":"Creates an adapter which will read at most `limit` bytes from it.\n\nThis function returns a new instance of `Read` which will read at most\n`limit` bytes, after which it will always return EOF ([`Ok(0)`]). Any\nread errors will not count towards the number of bytes read and future\ncalls to [`read()`] may succeed.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n[`Ok(0)`]: Ok\n[`read()`]: Read::read\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let f = File::open(\"foo.txt\")?;\n    let mut buffer = [0; 5];\n\n    // read at most five bytes\n    let mut handle = f.take(5);\n\n    handle.read(&mut buffer)?;\n    Ok(())\n}\n```","links":{"crate::fs::File":"1:2909:129","Ok":"2:48037:179","Read::read":"1:4411:6361"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["limit",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Take","id":"1:10959:4950","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2683:640":{"id":"0:2683:640","crate_id":0,"name":"f32","span":{"filename":"src/number/streaming.rs","begin":[1257,0],"end":[1269,1]},"visibility":"public","docs":"Recognizes a 4 byte floating point number\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,\notherwise if `nom::number::Endianness::Little` parse a little endian f32 float.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::f32;\n\nlet be_f32 = |s| {\n  f32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));\n\nlet le_f32 = |s| {\n  f32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4070":{"id":"0:4070","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}},"items":["0:4073:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1671:2423":{"id":"0:1671:2423","crate_id":0,"name":"take","span":{"filename":"src/bytes/complete.rs","begin":[403,0],"end":[415,1]},"visibility":"public","docs":"Returns an input slice containing the first N input elements (Input[..N]).\n\nIt will return `Err(Err::Error((_, ErrorKind::Eof)))` if the input is shorter than the argument.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::take;\n\nfn take6(s: &str) -> IResult<&str, &str> {\n  take(6usize)(s)\n}\n\nassert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));\nassert_eq!(take6(\"things\"), Ok((\"\", \"things\")));\nassert_eq!(take6(\"short\"), Err(Err::Error(Error::new(\"short\", ErrorKind::Eof))));\nassert_eq!(take6(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));\n```\n\nThe units that are taken will depend on the input type. For example, for a\n`&str` it will take a number of `char`'s, whereas for a `&[u8]` it will\ntake that many `u8`'s:\n\n```rust\nuse nom::error::Error;\nuse nom::bytes::complete::take;\n\nassert_eq!(take::<_, _, Error<_>>(1usize)(\"💙\"), Ok((\"\", \"💙\")));\nassert_eq!(take::<_, _, Error<_>>(1usize)(\"💙\".as_bytes()), Ok((b\"\\x9F\\x92\\x99\".as_ref(), b\"\\xF0\".as_ref())));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["count",{"kind":"generic","inner":"C"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23201:61104":{"id":"2:23201:61104","crate_id":2,"name":"signum","span":null,"visibility":"default","docs":"Returns numbers representing the sign of each lane.\n* `0` if the number is zero\n* `1` if the number is positive\n* `-1` if the number is negative","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3673:2673":{"id":"0:3673:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1357:3091":{"id":"0:1357:3091","crate_id":0,"name":"delimited","span":{"filename":"src/sequence/mod.rs","begin":[172,0],"end":[187,1]},"visibility":"public","docs":"Matches an object from the first parser and discards it,\nthen gets an object from the second parser,\nand finally matches an object from the third parser and discards it.\n\n# Arguments\n* `first` The first parser to apply and discard.\n* `second` The second parser to apply.\n* `third` The third parser to apply and discard.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::sequence::delimited;\nuse nom::bytes::complete::tag;\n\nlet mut parser = delimited(tag(\"(\"), tag(\"abc\"), tag(\")\"));\n\nassert_eq!(parser(\"(abc)\"), Ok((\"\", \"abc\")));\nassert_eq!(parser(\"(abc)def\"), Ok((\"def\", \"abc\")));\nassert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["first",{"kind":"generic","inner":"F"}],["second",{"kind":"generic","inner":"G"}],["third",{"kind":"generic","inner":"H"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O3","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O3"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3116":{"id":"0:3116","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}},"items":["0:3118:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1790:3245":{"id":"0:1790:3245","crate_id":0,"name":"is_a","span":{"filename":"src/bytes/streaming.rs","begin":[153,0],"end":[164,1]},"visibility":"public","docs":"Returns the longest slice of the matches the pattern.\n\nThe parser will return the longest slice consisting of the characters in provided in the\ncombinator's argument.\n\n# Streaming specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met\nor if the pattern reaches the end of the input.\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::streaming::is_a;\n\nfn hex(s: &str) -> IResult<&str, &str> {\n  is_a(\"1234567890ABCDEF\")(s)\n}\n\nassert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));\nassert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));\nassert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));\nassert_eq!(hex(\"D15EA5E\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(hex(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arr",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5566:14284":{"id":"1:5566:14284","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5567:57726"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4047:2610":{"id":"0:4047:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2758":{"id":"0:2758","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[159,23],"end":[159,32]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4208:2612":{"id":"0:4208:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4874":{"id":"0:4874","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"}]},"items":["0:4887:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2050:3108":{"id":"0:2050:3108","crate_id":0,"name":"streaming","span":{"filename":"src/character/streaming.rs","begin":[1,0],"end":[1182,1]},"visibility":"public","docs":"Character specific parsers and combinators, streaming version\n\nFunctions recognizing specific characters","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2112:412","0:2118:3498","0:2125:3368","0:2132:3374","0:2139:3516","0:2142:3526","0:2146:3534","0:2149:3541","0:2152:3546","0:2155:3553","0:2158:3367","0:2162:3570","0:2166:3578","0:2170:3592","0:2174:3599","0:2178:3606","0:2182:3613","0:2186:3620","0:2190:3627","0:2194:3634","0:2198:3641","0:2202:3648","0:2206:3654","0:2210:3661","0:5974:739","0:5980:736","0:5986:737","0:5992:738","0:5998:734","0:6004:1461","0:6008:1458","0:6012:1459","0:6016:1460","0:6020:1457"],"is_stripped":false}},"0:3989:2673":{"id":"0:3989:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3903:2657":{"id":"0:3903:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:2730:2013":{"id":"a:2:3382:225-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2790:2085":{"id":"0:2790:2085","crate_id":0,"name":"TagClosure","span":{"filename":"src/error.rs","begin":[381,2],"end":[381,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"1:6213:14547":{"id":"1:6213:14547","crate_id":1,"name":"uid","span":null,"visibility":"default","docs":"Sets the child process's user ID. This translates to a\n`setuid` call in the child process. Failure in the `setuid`\ncall will cause the spawn to fail.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["id",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3707":{"id":"0:3707","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}},"items":["0:3709:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:842:2641":{"id":"0:842:2641","crate_id":0,"name":"split_at_position","span":{"filename":"src/traits.rs","begin":[454,2],"end":[456,30]},"visibility":"default","docs":"Looks for the first element of the input type for which the condition returns true,\nand returns the input up to this position.\n\n*streaming version*: If no element is found matching the condition, this will return `Incomplete`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1053":{"id":"0:1053","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1288,0],"end":[1292,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"items":["0:1055:490"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5527:14547":{"id":"1:5527:14547","crate_id":1,"name":"uid","span":null,"visibility":"default","docs":"Returns the user ID of the owner of this file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let user_id = meta.uid();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4227":{"id":"0:4227","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}},"items":["0:4229:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:6101":{"id":"0:6101","crate_id":0,"name":null,"span":{"filename":"src/number/mod.rs","begin":[7,31],"end":[7,36]},"visibility":{"restricted":{"parent":"0:2234:1851","path":"::number"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:6102:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3522:1253":{"id":"2:3522:1253","crate_id":2,"name":"shr","span":null,"visibility":"default","docs":"Performs the `>>` operation.\n\n# Examples\n\n```\nassert_eq!(5u8 >> 1, 2);\nassert_eq!(2u8 >> 1, 1);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Shr","id":"2:3519:3165","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2623:4057":{"id":"0:2623:4057","crate_id":0,"name":"le_i24","span":{"filename":"src/number/streaming.rs","begin":[605,0],"end":[615,1]},"visibility":"public","docs":"Recognizes a little endian signed 3 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_i24;\n\nlet parser = |s| {\n  le_i24::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3370:217-0:3154:2228":{"id":"a:2:3370:217-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:4946:2425":{"id":"2:4946:2425","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The type of items yielded by the async iterator.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2650:1457":{"id":"0:2650:1457","crate_id":0,"name":"u128","span":{"filename":"src/number/streaming.rs","begin":[899,0],"end":[911,1]},"visibility":"public","docs":"Recognizes an unsigned 16 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::u128;\n\nlet be_u128 = |s| {\n  u128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));\nassert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n\nlet le_u128 = |s| {\n  u128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));\nassert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6568:57877":{"id":"1:6568:57877","crate_id":1,"name":"take_pidfd","span":null,"visibility":"default","docs":"Takes ownership of the [`PidFd`] created for this [`Child`], if available.\n\nA pidfd will only be available if its creation was requested with\n[`create_pidfd`] when the corresponding [`Command`] was created.\n\nEven if requested, a pidfd may not be available due to an older\nversion of Linux being in use, or if some other error occurred.\n\n[`Command`]: process::Command\n[`create_pidfd`]: CommandExt::create_pidfd\n[`Child`]: process::Child","links":{"CommandExt::create_pidfd":"1:6570:17122","process::Command":"1:7477:14395","`PidFd`":"1:11274:14313","process::Child":"1:7415:14391"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"PidFd","id":"1:11274:14313","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3276:2236":{"id":"0:3276:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3474":{"id":"0:3474","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}},"items":["0:3476:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2905:1568":{"id":"0:2905:1568","crate_id":0,"name":"0","span":{"filename":"src/internal.rs","begin":[99,13],"end":[99,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3836:2236":{"id":"0:3836:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2955":{"id":"0:2955","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}},"items":["0:2957:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2724:668":{"id":"0:2724:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[57,9],"end":[57,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:402:2418":{"id":"b:2:3213-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5534:60813":{"id":"1:5534:60813","crate_id":1,"name":"mtime_nsec","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in nanoseconds since [`mtime`].\n\n[`mtime`]: MetadataExt::mtime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let nano_last_modification_time = meta.mtime_nsec();\n    Ok(())\n}\n```","links":{"MetadataExt::mtime":"1:5533:60812"},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2992:2051":{"id":"0:2992:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4:807":{"id":"0:4:807","crate_id":0,"name":"lib","span":{"filename":"src/lib.rs","begin":[392,0],"end":[392,11]},"visibility":"public","docs":"Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does\nit, albeit there it is not public.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:5:1353"],"is_stripped":false}},"1:6237:60439":{"id":"1:6237:60439","crate_id":1,"name":"core_dumped","span":null,"visibility":"default","docs":"If the process was terminated by a signal, says whether it dumped core.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:1034:57693":{"id":"1:1034:57693","crate_id":1,"name":"to_ascii_uppercase","span":null,"visibility":"default","docs":"Makes a copy of the value in its ASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`str::to_uppercase`].\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.\n\n[`make_ascii_uppercase`]: AsciiExt::make_ascii_uppercase","links":{"`str::to_uppercase`":"5:6189:63294","AsciiExt::make_ascii_uppercase":"1:1037:57696"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"AsciiExt","id":"1:1031:14336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1205:2927":{"id":"0:1205:2927","crate_id":0,"name":"separated_list1","span":{"filename":"src/multi/mod.rs","begin":[279,0],"end":[324,1]},"visibility":"public","docs":"Alternates between two parsers to produce\na list of elements. Fails if the element\nparser does not produce at least one element.\n# Arguments\n* `sep` Parses the separator between list elements.\n* `f` Parses the elements of the list.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::multi::separated_list1;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  separated_list1(tag(\"|\"), tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));\nassert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"def|abc\"), Err(Err::Error(Error::new(\"def|abc\", ErrorKind::Tag))));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["sep",{"kind":"generic","inner":"G"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1804:3263":{"id":"0:1804:3263","crate_id":0,"name":"take_while1","span":{"filename":"src/bytes/streaming.rs","begin":[222,0],"end":[233,1]},"visibility":"public","docs":"Returns the longest (at least 1) input slice that matches the predicate.\n\nThe parser will return the longest slice that matches the given predicate *(a function that\ntakes the input and returns a bool)*.\n\nIt will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.\n\n# Streaming Specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(1))` or if the pattern reaches the end of the input.\n\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::streaming::take_while1;\nuse nom::character::is_alphabetic;\n\nfn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  take_while1(is_alphabetic)(s)\n}\n\nassert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));\nassert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:1033:12589":{"id":"1:1033:12589","crate_id":1,"name":"is_ascii","span":null,"visibility":"default","docs":"Checks if the value is within the ASCII range.\n\n# Note\n\nThis method is deprecated in favor of the identically-named\ninherent methods on `u8`, `char`, `[u8]` and `str`.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3467:185":{"id":"2:3467:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `-` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:2922:612":{"id":"2:2922:612","crate_id":2,"name":"eq","span":null,"visibility":"default","docs":"This method tests for `self` and `other` values to be equal, and is used\nby `==`.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23143:4207":{"id":"2:23143:4207","crate_id":2,"name":"from_bits","span":null,"visibility":"default","docs":"Raw transmutation from an unsigned integer vector type with the\nsame size and number of lanes.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bits",{"kind":"qualified_path","inner":{"name":"Bits","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3105":{"id":"0:3105","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}},"items":["0:3108:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1187:2908":{"id":"0:1187:2908","crate_id":0,"name":"many_till","span":{"filename":"src/multi/mod.rs","begin":[149,0],"end":[184,1]},"visibility":"public","docs":"Applies the parser `f` until the parser `g` produces\na result. Returns a pair consisting of the results of\n`f` in a `Vec` and the result of `g`.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::multi::many_till;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, (Vec<&str>, &str)> {\n  many_till(tag(\"abc\"), tag(\"end\"))(s)\n};\n\nassert_eq!(parser(\"abcabcend\"), Ok((\"\", (vec![\"abc\", \"abc\"], \"end\"))));\nassert_eq!(parser(\"abc123end\"), Err(Err::Error(Error::new(\"123end\", ErrorKind::Tag))));\nassert_eq!(parser(\"123123end\"), Err(Err::Error(Error::new(\"123123end\", ErrorKind::Tag))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"abcendefg\"), Ok((\"efg\", (vec![\"abc\"], \"end\"))));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}},{"kind":"generic","inner":"P"}]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2947:2051":{"id":"0:2947:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3254:116":{"id":"2:3254:116","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3255:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3109:4755":{"id":"2:3109:4755","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3108:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:6089:3953":{"id":"0:6089:3953","crate_id":0,"name":"Little","span":{"filename":"src/number/mod.rs","begin":[12,2],"end":[12,8]},"visibility":"default","docs":"Little endian","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:4040:2236":{"id":"0:4040:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4117":{"id":"0:4117","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}},"items":["0:4120:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9615:5288-0:2730:2013":{"id":"a:2:9615:5288-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3267":{"id":"0:3267","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}},"items":["0:3269:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3611:2617":{"id":"0:3611:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4416:5601":{"id":"1:4416:5601","crate_id":1,"name":"read_to_string","span":null,"visibility":"default","docs":"Read all bytes until EOF in this source, appending them to `buf`.\n\nIf successful, this function returns the number of bytes which were read\nand appended to `buf`.\n\n# Errors\n\nIf the data in this stream is *not* valid UTF-8 then an error is\nreturned and `buf` is unchanged.\n\nSee [`read_to_end`] for other error semantics.\n\n[`read_to_end`]: Read::read_to_end\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = String::new();\n\n    f.read_to_string(&mut buffer)?;\n    Ok(())\n}\n```\n\n(See also the [`std::fs::read_to_string`] convenience function for\nreading from a file.)\n\n[`std::fs::read_to_string`]: crate::fs::read_to_string","links":{"crate::fs::read_to_string":"1:2917:5601","Read::read_to_end":"1:4415:60105","crate::fs::File":"1:2909:129"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3851:2617":{"id":"0:3851:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3205:2548":{"id":"0:3205:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"b:2:3218-0:3154:2228":{"id":"b:2:3218-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1228:2956":{"id":"0:1228:2956","crate_id":0,"name":"many1_count","span":{"filename":"src/multi/mod.rs","begin":[465,0],"end":[500,1]},"visibility":"public","docs":"Repeats the embedded parser until it fails\nand returns the number of successful iterations.\nFails if the embedded parser does not succeed\nat least once.\n# Arguments\n* `f` The parser to apply.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::multi::many1_count;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, usize> {\n  many1_count(tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));\nassert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1Count))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1Count))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4189:2673":{"id":"0:4189:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1106:2781":{"id":"0:1106:2781","crate_id":0,"name":"alt","span":{"filename":"src/branch/mod.rs","begin":[71,0],"end":[75,1]},"visibility":"public","docs":"Tests a list of parsers one by one until one succeeds.\n\nIt takes as argument a tuple of parsers. There is a maximum of 21\nparsers. If you need more, it is possible to nest them in other `alt` calls,\nlike this: `alt(parser_a, alt(parser_b, parser_c))`\n\n```rust\n# use nom::error_position;\n# use nom::{Err,error::ErrorKind, Needed, IResult};\nuse nom::character::complete::{alpha1, digit1};\nuse nom::branch::alt;\n# fn main() {\nfn parser(input: &str) -> IResult<&str, &str> {\n  alt((alpha1, digit1))(input)\n};\n\n// the first parser, alpha1, recognizes the input\nassert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));\n\n// the first parser returns an error, so alt tries the second one\nassert_eq!(parser(\"123456\"), Ok((\"\", \"123456\")));\n\n// both parsers failed, and with the default error type, alt will return the last error\nassert_eq!(parser(\" \"), Err(Err::Error(error_position!(\" \", ErrorKind::Digit))));\n# }\n```\n\nWith a custom error type, it is possible to have alt return the error of the parser\nthat went the farthest in the input data","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["l",{"kind":"generic","inner":"List"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"List","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4488:2612":{"id":"0:4488:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6016:1460":{"id":"0:6016:1460","crate_id":0,"name":"u64","span":{"filename":"src/character/streaming.rs","begin":[735,0],"end":[735,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4017:2663":{"id":"0:4017:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6333:60608":{"id":"1:6333:60608","crate_id":1,"name":"as_pthread_t","span":null,"visibility":"default","docs":"Extracts the raw pthread_t without taking ownership","links":{},"attrs":["#[stable(feature = \"thread_extensions\", since = \"1.9.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1966:3526":{"id":"0:1966:3526","crate_id":0,"name":"not_line_ending","span":{"filename":"src/character/complete.rs","begin":[177,0],"end":[209,1]},"visibility":"public","docs":"Recognizes a string of any char except '\\r\\n' or '\\n'.\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::not_line_ending;\nfn parser(input: &str) -> IResult<&str, &str> {\n    not_line_ending(input)\n}\n\nassert_eq!(parser(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));\nassert_eq!(parser(\"ab\\nc\"), Ok((\"\\nc\", \"ab\")));\nassert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\nassert_eq!(parser(\"a\\rb\\nc\"), Err(Err::Error(Error { input: \"a\\rb\\nc\", code: ErrorKind::Tag })));\nassert_eq!(parser(\"a\\rbc\"), Err(Err::Error(Error { input: \"a\\rbc\", code: ErrorKind::Tag })));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3063":{"id":"0:3063","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}},"items":["0:3066:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2937":{"id":"0:2937","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}},"items":["0:2940:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2572:3981":{"id":"0:2572:3981","crate_id":0,"name":"be_u32","span":{"filename":"src/number/streaming.rs","begin":[146,0],"end":[161,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 4 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_u32;\n\nlet parser = |s| {\n  be_u32::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4423:5394":{"id":"1:4423:5394","crate_id":1,"name":"chain","span":null,"visibility":"default","docs":"Creates an adapter which will chain this stream with another.\n\nThe returned `Read` instance will first read all bytes from this object\nuntil EOF is encountered. Afterwards the output is equivalent to the\noutput of `next`.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let f1 = File::open(\"foo.txt\")?;\n    let f2 = File::open(\"bar.txt\")?;\n\n    let mut handle = f1.chain(f2);\n    let mut buffer = String::new();\n\n    // read the value into a String. We could use any Read method here,\n    // this is just one example.\n    handle.read_to_string(&mut buffer)?;\n    Ok(())\n}\n```","links":{"crate::fs::File":"1:2909:129"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"1:10949:4939","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4410:5600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3382:225":{"id":"2:3382:225","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3136:2051":{"id":"0:3136:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2820:2099":{"id":"0:2820:2099","crate_id":0,"name":"CrLf","span":{"filename":"src/error.rs","begin":[396,2],"end":[396,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:8249:9381":{"id":"2:8249:9381","crate_id":2,"name":"steps_between","span":null,"visibility":"default","docs":"Returns the number of *successor* steps required to get from `start` to `end`.\n\nReturns `None` if the number of steps would overflow `usize`\n(or is infinite, or if `end` would never be reached).\n\n# Invariants\n\nFor any `a`, `b`, and `n`:\n\n* `steps_between(&a, &b) == Some(n)` if and only if `Step::forward_checked(&a, n) == Some(b)`\n* `steps_between(&a, &b) == Some(n)` if and only if `Step::backward_checked(&b, n) == Some(a)`\n* `steps_between(&a, &b) == Some(n)` only if `a <= b`\n  * Corollary: `steps_between(&a, &b) == Some(0)` if and only if `a == b`\n  * Note that `a <= b` does _not_ imply `steps_between(&a, &b) != None`;\n    this is the case when it would require more than `usize::MAX` steps to get to `b`\n* `steps_between(&a, &b) == None` if `a > b`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["start",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["end",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5173:2786":{"id":"0:5173:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2464:4275":{"id":"0:2464:4275","crate_id":0,"name":"recognize_float_parts","span":{"filename":"src/number/complete.rs","begin":[1464,0],"end":[1549,1]},"visibility":"public","docs":"Recognizes a floating point number in text format\n\nIt returns a tuple of (`sign`, `integer part`, `fraction part` and `exponent`) of the input\ndata.\n\n*Complete version*: Can parse until the end of input.\n","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"},{"kind":"primitive","inner":"i32"}]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4259":{"id":"0:4259","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4263:2657","0:4265:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4326:2608":{"id":"0:4326:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:3761":{"id":"0:3761","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}},"items":["0:3764:2425","0:3765:2548","0:3766:2608","0:3767:2610","0:3768:2612","0:3769:1026","0:3771:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5435:15463":{"id":"1:5435:15463","crate_id":1,"name":"from_bytes","span":null,"visibility":"default","docs":"Creates an [`OsStr`] from a byte slice.\n\nSee the module documentation for an example.","links":{"`OsStr`":"1:2654:183"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2182:3613":{"id":"0:2182:3613","crate_id":0,"name":"oct_digit0","span":{"filename":"src/character/streaming.rs","begin":[443,0],"end":[449,1]},"visibility":"public","docs":"Recognizes zero or more octal characters: 0-7\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non octal digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::oct_digit0;\nassert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));\nassert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:6103":{"id":"0:6103","crate_id":0,"name":null,"span":{"filename":"src/number/mod.rs","begin":[7,38],"end":[7,42]},"visibility":{"restricted":{"parent":"0:2234:1851","path":"::number"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23206:61904":{"id":"2:23206:61904","crate_id":2,"name":"reduce_and","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"and\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3665:2663":{"id":"0:3665:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13805:57981":{"id":"2:13805:57981","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15874:4621"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3661:4735":{"id":"2:3661:4735","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3663:243","2:3664:210","2:3665:61840"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2985:2051":{"id":"0:2985:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2754":{"id":"0:2754","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[159,9],"end":[159,14]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2755:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3193:1331":{"id":"0:3193:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"RangeFull","id":"2:46272:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3728:2612":{"id":"0:3728:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3772":{"id":"0:3772","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3775:2657","0:3777:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2933:2051":{"id":"0:2933:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1689:3336":{"id":"0:1689:3336","crate_id":0,"name":"escaped","span":{"filename":"src/bytes/complete.rs","begin":[509,0],"end":[588,1]},"visibility":"public","docs":"Matches a byte string with escaped characters.\n\n* The first argument matches the normal characters (it must not accept the control character)\n* The second argument is the control character (like `\\` in most languages)\n* The third argument matches the escaped characters\n# Example\n```\n# use nom::{Err, error::ErrorKind, Needed, IResult};\n# use nom::character::complete::digit1;\nuse nom::bytes::complete::escaped;\nuse nom::character::complete::one_of;\n\nfn esc(s: &str) -> IResult<&str, &str> {\n  escaped(digit1, '\\\\', one_of(r#\"\"n\\\"#))(s)\n}\n\nassert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));\nassert_eq!(esc(r#\"12\\\"34;\"#), Ok((\";\", r#\"12\\\"34\"#)));\n```\n","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["normal",{"kind":"generic","inner":"F"}],["control_char",{"kind":"primitive","inner":"char"}],["escapable",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Input","kind":{"type":{"bounds":[{"outlives":"'a"}],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::traits::Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Error"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3800:2236":{"id":"0:3800:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3020:2051":{"id":"0:3020:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4354":{"id":"0:4354","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}},"items":["0:4356:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3848:2612":{"id":"0:3848:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3112":{"id":"0:3112","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}},"items":["0:3115:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:2730:2013":{"id":"b:2:3203-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4059":{"id":"0:4059","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4063:2657","0:4065:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5962:1459":{"id":"0:5962:1459","crate_id":0,"name":"u32","span":{"filename":"src/character/complete.rs","begin":[829,0],"end":[829,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3876:138":{"id":"2:3876:138","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3878:695"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2929:2051":{"id":"0:2929:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:813:2548":{"id":"0:813:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[337,2],"end":[337,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:785:2581":{"id":"0:785:2581","crate_id":0,"name":"is_dec_digit","span":{"filename":"src/traits.rs","begin":[253,2],"end":[255,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3066:2051":{"id":"0:3066:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3173:312":{"id":"2:3173:312","crate_id":2,"name":"as_ref","span":null,"visibility":"default","docs":"Converts this type into a shared reference of the (usually inferred) input type.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6567:18120":{"id":"1:6567:18120","crate_id":1,"name":"pidfd","span":null,"visibility":"default","docs":"Obtains a reference to the [`PidFd`] created for this [`Child`], if available.\n\nA pidfd will only be available if its creation was requested with\n[`create_pidfd`] when the corresponding [`Command`] was created.\n\nEven if requested, a pidfd may not be available due to an older\nversion of Linux being in use, or if some other error occurred.\n\n[`Command`]: process::Command\n[`create_pidfd`]: CommandExt::create_pidfd\n[`Child`]: process::Child","links":{"process::Child":"1:7415:14391","`PidFd`":"1:11274:14313","CommandExt::create_pidfd":"1:6570:17122","process::Command":"1:7477:14395"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"PidFd","id":"1:11274:14313","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3237":{"id":"0:3237","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}},"items":["0:3240:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[172,0],"end":[189,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["from_char","or"],"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:132:1970","0:133:1976","0:134:1978"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2802:2091":{"id":"0:2802:2091","crate_id":0,"name":"Space","span":{"filename":"src/error.rs","begin":[387,2],"end":[387,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:3595:227":{"id":"2:3595:227","crate_id":2,"name":"Target","span":null,"visibility":"default","docs":"The resulting type after dereferencing.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"deref_target\"]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null}},"2:8769:5381":{"id":"2:8769:5381","crate_id":2,"name":"next_back","span":null,"visibility":"default","docs":"Removes and returns an element from the end of the iterator.\n\nReturns `None` when there are no more elements.\n\nThe [trait-level] docs contain more details.\n\n[trait-level]: DoubleEndedIterator\n\n# Examples\n\nBasic usage:\n\n```\nlet numbers = vec![1, 2, 3, 4, 5, 6];\n\nlet mut iter = numbers.iter();\n\nassert_eq!(Some(&1), iter.next());\nassert_eq!(Some(&6), iter.next_back());\nassert_eq!(Some(&5), iter.next_back());\nassert_eq!(Some(&2), iter.next());\nassert_eq!(Some(&3), iter.next());\nassert_eq!(Some(&4), iter.next());\nassert_eq!(None, iter.next());\nassert_eq!(None, iter.next_back());\n```\n\n# Remarks\n\nThe elements yielded by `DoubleEndedIterator`'s methods may differ from\nthe ones yielded by [`Iterator`]'s methods:\n\n```\nlet vec = vec![(1, 'a'), (1, 'b'), (1, 'c'), (2, 'a'), (2, 'b')];\nlet uniq_by_fst_comp = || {\n    let mut seen = std::collections::HashSet::new();\n    vec.iter().copied().filter(move |x| seen.insert(x.0))\n};\n\nassert_eq!(uniq_by_fst_comp().last(), Some((2, 'a')));\nassert_eq!(uniq_by_fst_comp().next_back(), Some((2, 'b')));\n\nassert_eq!(\n    uniq_by_fst_comp().fold(vec![], |mut v, x| {v.push(x); v}),\n    vec![(1, 'a'), (2, 'a')]\n);\nassert_eq!(\n    uniq_by_fst_comp().rfold(vec![], |mut v, x| {v.push(x); v}),\n    vec![(2, 'b'), (1, 'c')]\n);\n```","links":{"`Iterator`":"2:8925:160","DoubleEndedIterator":"2:8768:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10662:193":{"id":"2:10662:193","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10663:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2473:662":{"id":"0:2473:662","crate_id":0,"name":"float","span":{"filename":"src/number/complete.rs","begin":[1570,0],"end":[1604,1]},"visibility":"public","docs":"Recognizes floating point number in text format and returns a f32.\n\n*Complete version*: Can parse until the end of input.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::float;\n\nlet parser = |s| {\n  float(s)\n};\n\nassert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));\nassert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));\nassert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));\nassert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ParseTo","id":"0:986:2226","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"f32"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2923:918":{"id":"2:2923:918","crate_id":2,"name":"ne","span":null,"visibility":"default","docs":"This method tests for `!=`. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13843:2684":{"id":"2:13843:2684","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"2:13821:13062","self::pattern":"2:13419:3185","str::rsplit":"2:13849:12801","`DoubleEndedIterator`":"2:8768:121","prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49898:4991","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2883:2168":{"id":"0:2883:2168","crate_id":0,"name":"description","span":{"filename":"src/error.rs","begin":[487,2],"end":[543,3]},"visibility":"public","docs":"Converts an ErrorKind to a text description","links":{},"attrs":["#[rustfmt::skip]","#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3497:2663":{"id":"0:3497:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3060":{"id":"0:3060","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}},"items":["0:3062:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4419":{"id":"0:4419","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4423:2657","0:4425:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2975:704":{"id":"2:2975:704","crate_id":2,"name":"ge","span":null,"visibility":"default","docs":"This method tests greater than or equal to (for `self` and `other`) and is used by the `>=`\noperator.\n\n# Examples\n\n```\nlet result = 2.0 >= 1.0;\nassert_eq!(result, true);\n\nlet result = 2.0 >= 2.0;\nassert_eq!(result, true);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:753":{"id":"0:753","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[116,0],"end":[121,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:754:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3535:365":{"id":"2:3535:365","crate_id":2,"name":"bitxor_assign","span":null,"visibility":"default","docs":"Performs the `^=` operation.\n\n# Examples\n\n```\nlet mut x = true;\nx ^= false;\nassert_eq!(x, true);\n\nlet mut x = true;\nx ^= true;\nassert_eq!(x, false);\n\nlet mut x: u8 = 5;\nx ^= 1;\nassert_eq!(x, 4);\n\nlet mut x: u8 = 5;\nx ^= 2;\nassert_eq!(x, 7);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:903:2227":{"id":"0:903:2227","crate_id":0,"name":"Compare","span":{"filename":"src/traits.rs","begin":[717,0],"end":[728,1]},"visibility":"public","docs":"Abstracts comparison operations","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:905:2657","0:906:2663"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:908","0:915","0:922","0:927","0:933","0:3212","0:3219","0:3252","0:3259","0:3292","0:3299","0:3332","0:3339","0:3372","0:3379","0:3412","0:3419","0:3452","0:3459","0:3492","0:3499","0:3532","0:3539","0:3572","0:3579","0:3612","0:3619","0:3652","0:3659","0:3692","0:3699","0:3732","0:3739","0:3772","0:3779","0:3812","0:3819","0:3852","0:3859","0:3892","0:3899","0:3932","0:3939","0:3972","0:3979","0:4012","0:4019","0:4052","0:4059","0:4092","0:4099","0:4132","0:4139","0:4172","0:4179","0:4212","0:4219","0:4252","0:4259","0:4292","0:4299","0:4332","0:4339","0:4372","0:4379","0:4412","0:4419","0:4452","0:4459","0:4492","0:4499"]}},"1:4492:5607":{"id":"1:4492:5607","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4493:60855","1:4494:60856","1:4495:60857","1:4497:5606","1:4498:60858","1:4500:2684","1:4501:2059"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4410:5600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2413:739":{"id":"0:2413:739","crate_id":0,"name":"i8","span":{"filename":"src/number/complete.rs","begin":[956,0],"end":[961,1]},"visibility":"public","docs":"Recognizes a signed 1 byte integer\n\nNote that endianness does not apply to 1 byte numbers.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::i8;\n\nlet parser = |s| {\n  i8(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3877":{"id":"0:3877","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}},"items":["0:3880:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4166:2608":{"id":"0:4166:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:3441:185":{"id":"2:3441:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `+` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:1771:3184":{"id":"0:1771:3184","crate_id":0,"name":"tag","span":{"filename":"src/bytes/streaming.rs","begin":[31,0],"end":[52,1]},"visibility":"public","docs":"Recognizes a pattern.\n\nThe input data will be compared to the tag combinator's argument and will return the part of\nthe input that matches the argument.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::streaming::tag;\n\nfn parser(s: &str) -> IResult<&str, &str> {\n  tag(\"Hello\")(s)\n}\n\nassert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));\nassert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));\nassert_eq!(parser(\"S\"), Err(Err::Error(Error::new(\"S\", ErrorKind::Tag))));\nassert_eq!(parser(\"H\"), Err(Err::Incomplete(Needed::new(4))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1128":{"id":"0:1128","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[186,0],"end":[192,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"}]},"items":["0:1133:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:113:1997":{"id":"0:113:1997","crate_id":0,"name":"from_external_error","span":{"filename":"src/error.rs","begin":[116,2],"end":[118,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_e",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23228:61093":{"id":"2:23228:61093","crate_id":2,"name":"Scalar","span":null,"visibility":"default","docs":"Scalar type contained by this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2826:2102":{"id":"0:2826:2102","crate_id":0,"name":"RegexpFind","span":{"filename":"src/error.rs","begin":[399,2],"end":[399,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:10886:5585":{"id":"2:10886:5585","crate_id":2,"name":"hash_slice","span":null,"visibility":"default","docs":"Feeds a slice of this type into the given [`Hasher`].\n\nThis method is meant as a convenience, but its implementation is\nalso explicitly left unspecified. It isn't guaranteed to be\nequivalent to repeated calls of [`hash`] and implementations of\n[`Hash`] should keep that in mind and call [`hash`] themselves\nif the slice isn't treated as a whole unit in the [`PartialEq`]\nimplementation.\n\nFor example, a [`VecDeque`] implementation might naïvely call\n[`as_slices`] and then [`hash_slice`] on each slice, but this\nis wrong since the two slices can change with a call to\n[`make_contiguous`] without affecting the [`PartialEq`]\nresult. Since these slices aren't treated as singular\nunits, and instead part of a larger deque, this method cannot\nbe used.\n\n# Examples\n\n```\nuse std::collections::hash_map::DefaultHasher;\nuse std::hash::{Hash, Hasher};\n\nlet mut hasher = DefaultHasher::new();\nlet numbers = [6, 28, 496, 8128];\nHash::hash_slice(&numbers, &mut hasher);\nprintln!(\"Hash is {:x}!\", hasher.finish());\n```\n\n[`VecDeque`]: ../../std/collections/struct.VecDeque.html\n[`as_slices`]: ../../std/collections/struct.VecDeque.html#method.as_slices\n[`make_contiguous`]: ../../std/collections/struct.VecDeque.html#method.make_contiguous\n[`hash`]: Hash::hash\n[`hash_slice`]: Hash::hash_slice","links":{"Hash::hash_slice":"2:10886:5585","`Hasher`":"2:10893:147","Hash::hash":"2:10884:723","`PartialEq`":"2:2920:187"},"attrs":["#[stable(feature = \"hash_slice\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["data",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"Self"}}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Hasher","id":"2:10893:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4317":{"id":"0:4317","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}},"items":["0:4320:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5391:2036":{"id":"0:5391:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2738:668":{"id":"0:2738:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[150,16],"end":[150,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5252":{"id":"0:5252","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnS","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"},{"kind":"generic","inner":"FnS"}]},"items":["0:5293:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3273:2673":{"id":"0:3273:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8724:153":{"id":"2:8724:153","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8725:2425","2:8726:4885","2:8727:778"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5174":{"id":"0:5174","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"}]},"items":["0:5211:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:782:2573":{"id":"0:782:2573","crate_id":0,"name":"as_char","span":{"filename":"src/traits.rs","begin":[241,2],"end":[243,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2647:1460":{"id":"0:2647:1460","crate_id":0,"name":"u64","span":{"filename":"src/number/streaming.rs","begin":[860,0],"end":[872,1]},"visibility":"public","docs":"Recognizes an unsigned 8 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::u64;\n\nlet be_u64 = |s| {\n  u64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));\nassert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n\nlet le_u64 = |s| {\n  u64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));\nassert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3073:2051":{"id":"0:3073:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3971:2617":{"id":"0:3971:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6643:60399":{"id":"1:6643:60399","crate_id":1,"name":"into_raw_fd","span":null,"visibility":"default","docs":"Consumes this object, returning the raw underlying file descriptor.\n\nThis function is typically used to **transfer ownership** of the underlying\nfile descriptor to the caller. When used in this way, callers are then the unique\nowners of the file descriptor and must close it once it's no longer needed.\n\nHowever, transferring ownership is not strictly required. Use a\n[`Into<OwnedFd>::into`] implementation for an API which strictly\ntransfers ownership.\n\n# Example\n\n```no_run\nuse std::fs::File;\n# use std::io;\n#[cfg(unix)]\nuse std::os::unix::io::{IntoRawFd, RawFd};\n#[cfg(target_os = \"wasi\")]\nuse std::os::wasi::io::{IntoRawFd, RawFd};\n\nlet f = File::open(\"foo.txt\")?;\n#[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.into_raw_fd();\n# Ok::<(), io::Error>(())\n```","links":{"`Into<OwnedFd>::into`":"2:3179:2404"},"attrs":["#[stable(feature = \"into_raw_os\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4455:2657":{"id":"0:4455:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1075:2735":{"id":"0:1075:2735","crate_id":0,"name":"to_hex_from","span":{"filename":"src/traits.rs","begin":[1343,2],"end":[1343,66]},"visibility":"default","docs":"Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n`String`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["chunk_size",{"kind":"primitive","inner":"usize"}],["from",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3038:2051":{"id":"0:3038:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5392":{"id":"0:5392","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"}]},"items":["0:5401:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4135:2657":{"id":"0:4135:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4223:2657":{"id":"0:4223:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:838:2622":{"id":"0:838:2622","crate_id":0,"name":"take_split","span":{"filename":"src/traits.rs","begin":[424,2],"end":[427,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"Self"},{"kind":"generic","inner":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3303:2657":{"id":"0:3303:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3874":{"id":"0:3874","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}},"items":["0:3876:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2840:2109":{"id":"0:2840:2109","crate_id":0,"name":"EscapedTransform","span":{"filename":"src/error.rs","begin":[406,2],"end":[406,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:13889:62652":{"id":"2:13889:62652","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3873:4807":{"id":"2:3873:4807","crate_id":2,"name":"Residual","span":null,"visibility":"default","docs":"The type of the value passed to [`FromResidual::from_residual`]\nas part of `?` when short-circuiting.\n\nThis represents the possible values of the `Self` type which are *not*\nrepresented by the `Output` type.\n\n# Note to Implementors\n\nThe choice of this type is critical to interconversion.\nUnlike the `Output` type, which will often be a raw generic type,\nthis type is typically a newtype of some sort to \"color\" the type\nso that it's distinguishable from the residuals of other types.\n\nThis is why `Result<T, E>::Residual` is not `E`, but `Result<Infallible, E>`.\nThat way it's distinct from `ControlFlow<E>::Residual`, for example,\nand thus `?` on `ControlFlow` cannot be used in a method returning `Result`.\n\nIf you're making a generic type `Foo<T>` that implements `Try<Output = T>`,\nthen typically you can use `Foo<std::convert::Infallible>` as its `Residual`\ntype: that type will have a \"hole\" in the correct place, and will maintain the\n\"foo-ness\" of the residual so other types need to opt-in to interconversion.","links":{"`FromResidual::from_residual`":"2:3878:695"},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3455:2657":{"id":"0:3455:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4105:2663":{"id":"0:4105:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3885:2548":{"id":"0:3885:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"b:2:4145-0:2761:1972":{"id":"b:2:4145-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2744:2017":{"id":"0:2744:2017","crate_id":0,"name":"VerboseErrorKind","span":{"filename":"src/error.rs","begin":[161,0],"end":[168,1]},"visibility":"public","docs":"Error context for `VerboseError`","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2745:2020","0:2748:1979","0:2751:2023"],"impls":["a:2:3370:217-0:2744:2017","a:2:9616:5287-0:2744:2017","a:2:3382:225-0:2744:2017","a:2:3411:4730-0:2744:2017","a:2:9615:5288-0:2744:2017","b:2:4145-0:2744:2017","b:2:3203-0:2744:2017","b:2:2865-0:2744:2017","b:2:2868-0:2744:2017","b:2:3207-0:2744:2017","b:2:3213-0:2744:2017","b:2:3218-0:2744:2017","b:5:848-0:2744:2017","0:2754","0:2756","0:2758","0:2759"]}},"0:2347:4003":{"id":"0:2347:4003","crate_id":0,"name":"be_i24","span":{"filename":"src/number/complete.rs","begin":[293,0],"end":[303,1]},"visibility":"public","docs":"Recognizes a big endian signed 3 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_i24;\n\nlet parser = |s| {\n  be_i24(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3491:2617":{"id":"0:3491:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6012:1459":{"id":"0:6012:1459","crate_id":0,"name":"u32","span":{"filename":"src/character/streaming.rs","begin":[735,0],"end":[735,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4225:2663":{"id":"0:4225:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1610:3184":{"id":"0:1610:3184","crate_id":0,"name":"tag","span":{"filename":"src/bytes/complete.rs","begin":[32,0],"end":[51,1]},"visibility":"public","docs":"Recognizes a pattern\n\nThe input data will be compared to the tag combinator's argument and will return the part of\nthe input that matches the argument\n\nIt will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, &str> {\n  tag(\"Hello\")(s)\n}\n\nassert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));\nassert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:728":{"id":"0:728","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[38,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},{"kind":"primitive","inner":"usize"}]},"items":["0:730:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2788:2084":{"id":"0:2788:2084","crate_id":0,"name":"LengthValue","span":{"filename":"src/error.rs","begin":[380,2],"end":[380,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:3508:4793":{"id":"2:3508:4793","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3510:185","2:3511:364"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4092":{"id":"0:4092","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4095:2657","0:4097:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3921":{"id":"0:3921","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}},"items":["0:3924:2425","0:3925:2548","0:3926:2608","0:3927:2610","0:3928:2612","0:3929:1026","0:3931:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1994:3592":{"id":"0:1994:3592","crate_id":0,"name":"digit1","span":{"filename":"src/character/complete.rs","begin":[435,0],"end":[441,1]},"visibility":"public","docs":"Recognizes one or more ASCII numerical characters: 0-9\n\n*Complete version*: Will return an error if there's not enough input data,\nor the whole input if no terminating token is found (a non digit character).\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::digit1;\nfn parser(input: &str) -> IResult<&str, &str> {\n    digit1(input)\n}\n\nassert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));\nassert_eq!(parser(\"c1\"), Err(Err::Error(Error::new(\"c1\", ErrorKind::Digit))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Digit))));\n```\n \n## Parsing an integer\nYou can use `digit1` in combination with [`map_res`] to parse an integer:\n \n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::combinator::map_res;\n# use nom::character::complete::digit1;\nfn parser(input: &str) -> IResult<&str, u32> {\n  map_res(digit1, str::parse)(input)\n}\n \nassert_eq!(parser(\"416\"), Ok((\"\", 416)));\nassert_eq!(parser(\"12b\"), Ok((\"b\", 12)));\nassert!(parser(\"b\").is_err());\n```\n \n[`map_res`]: crate::combinator::map_res","links":{"crate::combinator::map_res":"0:266:2265"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6641:59607":{"id":"1:6641:59607","crate_id":1,"name":"from_raw_fd","span":null,"visibility":"default","docs":"Constructs a new instance of `Self` from the given raw file\ndescriptor.\n\nThis function is typically used to **consume ownership** of the\nspecified file descriptor. When used in this way, the returned object\nwill take responsibility for closing it when the object goes out of\nscope.\n\nHowever, consuming ownership is not strictly required. Use a\n[`From<OwnedFd>::from`] implementation for an API which strictly\nconsumes ownership.\n\n# Safety\n\nThe `fd` passed in must be a valid and open file descriptor.\n\n# Example\n\n```no_run\nuse std::fs::File;\n# use std::io;\n#[cfg(unix)]\nuse std::os::unix::io::{FromRawFd, IntoRawFd, RawFd};\n#[cfg(target_os = \"wasi\")]\nuse std::os::wasi::io::{FromRawFd, IntoRawFd, RawFd};\n\nlet f = File::open(\"foo.txt\")?;\n# #[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.into_raw_fd();\n// SAFETY: no other functions should call `from_raw_fd`, so there\n// is only one owner for the file descriptor.\n# #[cfg(any(unix, target_os = \"wasi\"))]\nlet f = unsafe { File::from_raw_fd(raw_fd) };\n# Ok::<(), io::Error>(())\n```","links":{"`From<OwnedFd>::from`":"2:3182:689"},"attrs":["#[stable(feature = \"from_raw_os\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["fd",{"kind":"primitive","inner":"i32"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[72,0],"end":[80,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["from_char","or"],"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:91:1970","0:92:1976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2431:4206":{"id":"0:2431:4206","crate_id":0,"name":"be_f32","span":{"filename":"src/number/complete.rs","begin":[1174,0],"end":[1182,1]},"visibility":"public","docs":"Recognizes a big endian 4 bytes floating point number.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_f32;\n\nlet parser = |s| {\n  be_f32(s)\n};\n\nassert_eq!(parser(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:640:150":{"id":"0:640:150","crate_id":0,"name":"Into","span":{"filename":"src/internal.rs","begin":[431,0],"end":[437,1]},"visibility":"public","docs":"Implementation of `Parser::into`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O1"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E1"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:3699":{"id":"0:3699","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3703:2657","0:3705:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3567:2610":{"id":"0:3567:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1280:3020":{"id":"0:1280:3020","crate_id":0,"name":"length_data","span":{"filename":"src/multi/mod.rs","begin":[853,0],"end":[874,1]},"visibility":"public","docs":"Gets a number from the parser and returns a\nsubslice of the input of that size.\nIf the parser returns `Incomplete`,\n`length_data` will return an error.\n# Arguments\n* `f` The parser to apply.\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::number::complete::be_u16;\nuse nom::multi::length_data;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  length_data(be_u16)(s)\n}\n\nassert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));\nassert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"N"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:9047:301":{"id":"2:9047:301","crate_id":2,"name":"any","span":null,"visibility":"default","docs":"Tests if any element of the iterator matches a predicate.\n\n`any()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if any of them return\n`true`, then so does `any()`. If they all return `false`, it\nreturns `false`.\n\n`any()` is short-circuiting; in other words, it will stop processing\nas soon as it finds a `true`, given that no matter what else happens,\nthe result will also be `true`.\n\nAn empty iterator returns `false`.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert!(a.iter().any(|&x| x > 0));\n\nassert!(!a.iter().any(|&x| x > 5));\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert!(iter.any(|&x| x != 2));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&2));\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2889:1568":{"id":"0:2889:1568","crate_id":0,"name":"0","span":{"filename":"src/internal.rs","begin":[54,7],"end":[54,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"NonZeroUsize","id":"2:25042:2446","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3307":{"id":"0:3307","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}},"items":["0:3309:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8992:5409":{"id":"2:8992:5409","crate_id":2,"name":"partition","span":null,"visibility":"default","docs":"Consumes an iterator, creating two collections from it.\n\nThe predicate passed to `partition()` can return `true`, or `false`.\n`partition()` returns a pair, all of the elements for which it returned\n`true`, and all of the elements for which it returned `false`.\n\nSee also [`is_partitioned()`] and [`partition_in_place()`].\n\n[`is_partitioned()`]: Iterator::is_partitioned\n[`partition_in_place()`]: Iterator::partition_in_place\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet (even, odd): (Vec<_>, Vec<_>) = a\n    .into_iter()\n    .partition(|n| n % 2 == 0);\n\nassert_eq!(even, vec![2]);\nassert_eq!(odd, vec![1, 3]);\n```","links":{"Iterator::partition_in_place":"2:9002:5410","Iterator::is_partitioned":"2:9017:5411"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"2:3254:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"2:8733:4927","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8945:5396":{"id":"2:8945:5396","crate_id":2,"name":"intersperse_with","span":null,"visibility":"default","docs":"Creates a new iterator which places an item generated by `separator`\nbetween adjacent items of the original iterator.\n\nThe closure will be called exactly once each time an item is placed\nbetween two adjacent items from the underlying iterator; specifically,\nthe closure is not called if the underlying iterator yields less than\ntwo items and after the last item is yielded.\n\nIf the iterator's item implements [`Clone`], it may be easier to use\n[`intersperse`].\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_intersperse)]\n\n#[derive(PartialEq, Debug)]\nstruct NotClone(usize);\n\nlet v = [NotClone(0), NotClone(1), NotClone(2)];\nlet mut it = v.into_iter().intersperse_with(|| NotClone(99));\n\nassert_eq!(it.next(), Some(NotClone(0)));  // The first element from `v`.\nassert_eq!(it.next(), Some(NotClone(99))); // The separator.\nassert_eq!(it.next(), Some(NotClone(1)));  // The next element from `v`.\nassert_eq!(it.next(), Some(NotClone(99))); // The separator.\nassert_eq!(it.next(), Some(NotClone(2)));  // The last element from from `v`.\nassert_eq!(it.next(), None);               // The iterator is finished.\n```\n\n`intersperse_with` can be used in situations where the separator needs\nto be computed:\n```\n#![feature(iter_intersperse)]\n\nlet src = [\"Hello\", \"to\", \"all\", \"people\", \"!!\"].iter().copied();\n\n// The closure mutably borrows its context to generate an item.\nlet mut happy_emojis = [\" ❤️ \", \" 😀 \"].iter().copied();\nlet separator = || happy_emojis.next().unwrap_or(\" 🦀 \");\n\nlet result = src.intersperse_with(separator).collect::<String>();\nassert_eq!(result, \"Hello ❤️ to 😀 all 🦀 people 🦀 !!\");\n```\n[`Clone`]: crate::clone::Clone\n[`intersperse`]: Iterator::intersperse","links":{"crate::clone::Clone":"2:2884:105","Iterator::intersperse":"2:8944:5395"},"attrs":["#[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue =\n\"79524\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["separator",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"IntersperseWith","id":"2:7210:4954","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6471:18015":{"id":"1:6471:18015","crate_id":1,"name":"st_atime_nsec","span":null,"visibility":"default","docs":"Returns the last access time of the file, in nanoseconds since [`st_atime`].\n\n[`st_atime`]: Self::st_atime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_atime_nsec());\n    Ok(())\n}\n```","links":{"Self::st_atime":"1:6470:18014"},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3411:4730-0:2901:127":{"id":"a:2:3411:4730-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4121":{"id":"0:4121","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}},"items":["0:4124:2425","0:4125:2548","0:4126:2608","0:4127:2610","0:4128:2612","0:4129:1026","0:4131:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:360:963":{"id":"0:360:963","crate_id":0,"name":"not","span":{"filename":"src/combinator/mod.rs","begin":[475,0],"end":[487,1]},"visibility":"public","docs":"Succeeds if the child parser returns an error.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::not;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nlet mut parser = not(alpha1);\n\nassert_eq!(parser(\"123\"), Ok((\"123\", ())));\nassert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Not))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3892":{"id":"0:3892","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3895:2657","0:3897:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3811:2617":{"id":"0:3811:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2730:2013":{"id":"b:2:2865-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4357":{"id":"0:4357","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}},"items":["0:4360:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3203-0:2901:127":{"id":"b:2:3203-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:116:1970":{"id":"0:116:1970","crate_id":0,"name":"from_error_kind","span":{"filename":"src/error.rs","begin":[122,2],"end":[122,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}],["_",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1037":{"id":"0:1037","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1239,0],"end":[1244,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u8"},"items":["0:1038:2725"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[121,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["from_char","or"],"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[]},"items":["0:116:1970","0:117:1976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:311:2307":{"id":"0:311:2307","crate_id":0,"name":"cond","span":{"filename":"src/combinator/mod.rs","begin":[269,0],"end":[286,1]},"visibility":"public","docs":"Calls the parser if the condition is met.\n\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, IResult};\nuse nom::combinator::cond;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nfn parser(b: bool, i: &str) -> IResult<&str, Option<&str>> {\n  cond(b, alpha1)(i)\n}\n\nassert_eq!(parser(true, \"abcd;\"), Ok((\";\", Some(\"abcd\"))));\nassert_eq!(parser(false, \"abcd;\"), Ok((\"abcd;\", None)));\nassert_eq!(parser(true, \"123;\"), Err(Err::Error(Error::new(\"123;\", ErrorKind::Alpha))));\nassert_eq!(parser(false, \"123;\"), Ok((\"123;\", None)));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["b",{"kind":"primitive","inner":"bool"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:871:2425":{"id":"0:871:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[563,2],"end":[563,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3274":{"id":"0:3274","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}},"items":["0:3276:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6221:57737":{"id":"1:6221:57737","crate_id":1,"name":"arg0","span":null,"visibility":"default","docs":"Set executable argument\n\nSet the first process argument, `argv[0]`, to something other than the\ndefault executable path.","links":{},"attrs":["#[stable(feature = \"process_set_argv0\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["arg",{"kind":"generic","inner":"S"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3171:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2654:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:4145-0:2901:127":{"id":"b:2:4145-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2190:3627":{"id":"0:2190:3627","crate_id":0,"name":"alphanumeric0","span":{"filename":"src/character/streaming.rs","begin":[485,0],"end":[491,1]},"visibility":"public","docs":"Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non alphanumerical character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::alphanumeric0;\nassert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));\nassert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"&Z21c\"), Ok((\"&Z21c\", \"\")));\nassert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3844:2425":{"id":"0:3844:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:2739":{"id":"0:2739","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,23],"end":[150,32]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2792:2086":{"id":"0:2792:2086","crate_id":0,"name":"Alpha","span":{"filename":"src/error.rs","begin":[382,2],"end":[382,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2030:3654":{"id":"0:2030:3654","crate_id":0,"name":"multispace0","span":{"filename":"src/character/complete.rs","begin":[667,0],"end":[676,1]},"visibility":"public","docs":"Recognizes zero or more spaces, tabs, carriage returns and line feeds.\n\n*Complete version*: will return the whole input if no terminating token is found (a non space\ncharacter).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::complete::multispace0;\nfn parser(input: &str) -> IResult<&str, &str> {\n    multispace0(input)\n}\n\nassert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));\nassert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:734:968":{"id":"0:734:968","crate_id":0,"name":"offset","span":{"filename":"src/traits.rs","begin":[54,2],"end":[59,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["second",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9149:4257":{"id":"2:9149:4257","crate_id":2,"name":"sum","span":null,"visibility":"default","docs":"Sums the elements of an iterator.\n\nTakes each element, adds them together, and returns the result.\n\nAn empty iterator returns the zero value of the type.\n\n# Panics\n\nWhen calling `sum()` and a primitive integer type is being returned, this\nmethod will panic if the computation overflows and debug assertions are\nenabled.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet sum: i32 = a.iter().sum();\n\nassert_eq!(sum, 6);\n```","links":{},"attrs":["#[stable(feature = \"iter_arith\", since = \"1.11.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"S"},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sum","id":"2:8683:4929","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5523:17661":{"id":"1:5523:17661","crate_id":1,"name":"dev","span":null,"visibility":"default","docs":"Returns the ID of the device containing the file.\n\n# Examples\n\n```no_run\nuse std::io;\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let dev_id = meta.dev();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5072":{"id":"0:5072","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"}]},"items":["0:5103:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3545:2663":{"id":"0:3545:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2437:4217":{"id":"0:2437:4217","crate_id":0,"name":"le_f32","span":{"filename":"src/number/complete.rs","begin":[1226,0],"end":[1234,1]},"visibility":"public","docs":"Recognizes a little endian 4 bytes floating point number.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_f32;\n\nlet parser = |s| {\n  le_f32(s)\n};\n\nassert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:14628:5899":{"id":"2:14628:5899","crate_id":2,"name":"allocate","span":null,"visibility":"default","docs":"Attempts to allocate a block of memory.\n\nOn success, returns a [`NonNull<[u8]>`][NonNull] meeting the size and alignment guarantees of `layout`.\n\nThe returned block may have a larger size than specified by `layout.size()`, and may or may\nnot have its contents initialized.\n\n# Errors\n\nReturning `Err` indicates that either memory is exhausted or `layout` does not meet\nallocator's size or alignment constraints.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{"NonNull":"2:2391:4881"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50886:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3201":{"id":"0:3201","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}}},"items":["0:3204:2425","0:3205:2548","0:3206:2608","0:3207:2610","0:3208:2612","0:3209:1026","0:3211:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:851:2647":{"id":"0:851:2647","crate_id":0,"name":"split_at_position1_complete","span":{"filename":"src/traits.rs","begin":[489,2],"end":[495,30]},"visibility":"default","docs":"Looks for the first element of the input type for which the condition returns true\nand returns the input up to this position.\n\nFails if the produced slice is empty.\n\n*complete version*: If no element is found matching the condition, this will return the whole input","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:6170:63292":{"id":"5:6170:63292","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2221","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8223:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2221","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8223:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3539":{"id":"0:3539","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3543:2657","0:3545:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:217-0:6086:3949":{"id":"a:2:3370:217-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:6086:3949":{"id":"b:5:848-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:4751","5:851:2503","5:852:5430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2416:736":{"id":"0:2416:736","crate_id":0,"name":"i16","span":{"filename":"src/number/complete.rs","begin":[988,0],"end":[1000,1]},"visibility":"public","docs":"Recognizes a signed 2 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::i16;\n\nlet be_i16 = |s| {\n  i16(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));\nassert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_i16 = |s| {\n  i16(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));\nassert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:134:1978":{"id":"0:134:1978","crate_id":0,"name":"from_char","span":{"filename":"src/error.rs","begin":[184,2],"end":[188,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9080:1026":{"id":"2:9080:1026","crate_id":2,"name":"position","span":null,"visibility":"default","docs":"Searches for an element in an iterator, returning its index.\n\n`position()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, and if one of them\nreturns `true`, then `position()` returns [`Some(index)`]. If all of\nthem return `false`, it returns [`None`].\n\n`position()` is short-circuiting; in other words, it will stop\nprocessing as soon as it finds a `true`.\n\n# Overflow Behavior\n\nThe method does no guarding against overflows, so if there are more\nthan [`usize::MAX`] non-matching elements, it either produces the wrong\nresult or panics. If debug assertions are enabled, a panic is\nguaranteed.\n\n# Panics\n\nThis function might panic if the iterator has more than `usize::MAX`\nnon-matching elements.\n\n[`Some(index)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().position(|&x| x == 2), Some(1));\n\nassert_eq!(a.iter().position(|&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3, 4];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.position(|&x| x >= 2), Some(1));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&3));\n\n// The returned index depends on iterator state\nassert_eq!(iter.position(|&x| x == 4), Some(0));\n\n```","links":{"Some":"2:47913:220","`usize::MAX`":"2:32434:5748","`None`":"2:47911:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2392:4069":{"id":"0:2392:4069","crate_id":0,"name":"le_i128","span":{"filename":"src/number/complete.rs","begin":[705,0],"end":[710,1]},"visibility":"public","docs":"Recognizes a little endian signed 16 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_i128;\n\nlet parser = |s| {\n  le_i128(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8727:778":{"id":"2:8727:778","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":"Creates an iterator from a value.\n\nSee the [module-level documentation] for more.\n\n[module-level documentation]: crate::iter\n\n# Examples\n\nBasic usage:\n\n```\nlet v = [1, 2, 3];\nlet mut iter = v.into_iter();\n\nassert_eq!(Some(1), iter.next());\nassert_eq!(Some(2), iter.next());\nassert_eq!(Some(3), iter.next());\nassert_eq!(None, iter.next());\n```","links":{"crate::iter":"2:5794:789"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:14160:185":{"id":"2:14160:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The output that the future will produce on completion.","links":{},"attrs":["#[stable(feature = \"into_future\", since = \"1.64.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:613:2523":{"id":"0:613:2523","crate_id":0,"name":"And","span":{"filename":"src/internal.rs","begin":[393,0],"end":[396,1]},"visibility":"public","docs":"Implementation of `Parser::and`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:4769":{"id":"0:4769","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"}]},"items":["0:4792:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4768:2763":{"id":"0:4768:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2332:3981":{"id":"0:2332:3981","crate_id":0,"name":"be_u32","span":{"filename":"src/number/complete.rs","begin":[148,0],"end":[163,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 4 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_u32;\n\nlet parser = |s| {\n  be_u32(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4229:2673":{"id":"0:4229:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4030":{"id":"0:4030","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}},"items":["0:4033:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11291:12538":{"id":"2:11291:12538","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"default","docs":"Returns a mutable reference to the output at this location, without\nperforming any bounds checking.\nCalling this method with an out-of-bounds index or a dangling `slice` pointer\nis *[undefined behavior]* even if the resulting reference is not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:480:2493":{"id":"0:480:2493","crate_id":0,"name":"is_incomplete","span":{"filename":"src/internal.rs","begin":[110,2],"end":[116,3]},"visibility":"public","docs":"Tests if the result is Incomplete","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3887:2610":{"id":"0:3887:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3966:2608":{"id":"0:3966:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:3305:2663":{"id":"0:3305:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:518:668":{"id":"0:518:668","crate_id":0,"name":"fmt","span":{"filename":"src/internal.rs","begin":[217,2],"end":[224,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2226:3362":{"id":"0:2226:3362","crate_id":0,"name":"is_alphabetic","span":{"filename":"src/character/mod.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Tests if byte is ASCII alphabetic: A-Z, a-z\n\n# Example\n\n```\n# use nom::character::is_alphabetic;\nassert_eq!(is_alphabetic(b'9'), false);\nassert_eq!(is_alphabetic(b'a'), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["chr",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8980:5403":{"id":"2:8980:5403","crate_id":2,"name":"flatten","span":null,"visibility":"default","docs":"Creates an iterator that flattens nested structure.\n\nThis is useful when you have an iterator of iterators or an iterator of\nthings that can be turned into iterators and you want to remove one\nlevel of indirection.\n\n# Examples\n\nBasic usage:\n\n```\nlet data = vec![vec![1, 2, 3, 4], vec![5, 6]];\nlet flattened = data.into_iter().flatten().collect::<Vec<u8>>();\nassert_eq!(flattened, &[1, 2, 3, 4, 5, 6]);\n```\n\nMapping and then flattening:\n\n```\nlet words = [\"alpha\", \"beta\", \"gamma\"];\n\n// chars() returns an iterator\nlet merged: String = words.iter()\n                          .map(|s| s.chars())\n                          .flatten()\n                          .collect();\nassert_eq!(merged, \"alphabetagamma\");\n```\n\nYou can also rewrite this in terms of [`flat_map()`], which is preferable\nin this case since it conveys intent more clearly:\n\n```\nlet words = [\"alpha\", \"beta\", \"gamma\"];\n\n// chars() returns an iterator\nlet merged: String = words.iter()\n                          .flat_map(|s| s.chars())\n                          .collect();\nassert_eq!(merged, \"alphabetagamma\");\n```\n\nFlattening only removes one level of nesting at a time:\n\n```\nlet d3 = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]];\n\nlet d2 = d3.iter().flatten().collect::<Vec<_>>();\nassert_eq!(d2, [&[1, 2], &[3, 4], &[5, 6], &[7, 8]]);\n\nlet d1 = d3.iter().flatten().flatten().collect::<Vec<_>>();\nassert_eq!(d1, [&1, &2, &3, &4, &5, &6, &7, &8]);\n```\n\nHere we see that `flatten()` does not perform a \"deep\" flatten.\nInstead, only one level of nesting is removed. That is, if you\n`flatten()` a three-dimensional array, the result will be\ntwo-dimensional and not one-dimensional. To get a one-dimensional\nstructure, you have to `flatten()` again.\n\n[`flat_map()`]: Iterator::flat_map","links":{"Iterator::flat_map":"2:8977:2288"},"attrs":["#[stable(feature = \"iterator_flatten\", since = \"1.29.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Flatten","id":"2:6768:4933","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3283:5654":{"id":"2:3283:5654","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":"Provides type based access to context intended for error reports.\n\nUsed in conjunction with [`Demand::provide_value`] and [`Demand::provide_ref`] to extract\nreferences to member variables from `dyn Error` trait objects.\n\n# Example\n\n```rust\n#![feature(provide_any)]\n#![feature(error_generic_member_access)]\nuse core::fmt;\nuse core::any::Demand;\n\n#[derive(Debug)]\nstruct MyBacktrace {\n    // ...\n}\n\nimpl MyBacktrace {\n    fn new() -> MyBacktrace {\n        // ...\n        # MyBacktrace {}\n    }\n}\n\n#[derive(Debug)]\nstruct SourceError {\n    // ...\n}\n\nimpl fmt::Display for SourceError {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"Example Source Error\")\n    }\n}\n\nimpl std::error::Error for SourceError {}\n\n#[derive(Debug)]\nstruct Error {\n    source: SourceError,\n    backtrace: MyBacktrace,\n}\n\nimpl fmt::Display for Error {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        write!(f, \"Example Error\")\n    }\n}\n\nimpl std::error::Error for Error {\n    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {\n        demand\n            .provide_ref::<MyBacktrace>(&self.backtrace)\n            .provide_ref::<dyn std::error::Error + 'static>(&self.source);\n    }\n}\n\nfn main() {\n    let backtrace = MyBacktrace::new();\n    let source = SourceError {};\n    let error = Error { source, backtrace };\n    let dyn_error = &error as &dyn std::error::Error;\n    let backtrace_ref = dyn_error.request_ref::<MyBacktrace>().unwrap();\n\n    assert!(core::ptr::eq(&error.backtrace, backtrace_ref));\n}\n```","links":{"`Demand::provide_value`":"2:4217:71195","`Demand::provide_ref`":"2:4222:71198"},"attrs":["#[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]","#[allow(unused_variables)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4209:14609","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5535:60814":{"id":"1:5535:60814","crate_id":1,"name":"ctime","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let last_status_change_time = meta.ctime();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13915:57696":{"id":"2:13915:57696","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:342:2344":{"id":"0:342:2344","crate_id":0,"name":"verify","span":{"filename":"src/combinator/mod.rs","begin":[415,0],"end":[435,1]},"visibility":"public","docs":"Returns the result of the child parser if it satisfies a verification function.\n\nThe verification function takes as argument a reference to the output of the\nparser.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::verify;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nlet mut parser = verify(alpha1, |s: &str| s.len() == 4);\n\nassert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));\nassert_eq!(parser(\"abcde\"), Err(Err::Error((\"abcde\", ErrorKind::Verify))));\nassert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["first",{"kind":"generic","inner":"F"}],["second",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"O2"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O1"},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O2"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O2"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3129:2051":{"id":"0:3129:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4137:2663":{"id":"0:4137:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3557":{"id":"0:3557","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}},"items":["0:3560:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4067":{"id":"0:4067","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}},"items":["0:4069:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4646":{"id":"0:4646","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"}]},"items":["0:4663:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4037":{"id":"0:4037","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}},"items":["0:4040:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8733:4927":{"id":"2:8733:4927","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8735:2714","2:8737:5387","2:8738:5388"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3785:2663":{"id":"0:3785:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2886:418":{"id":"2:2886:418","crate_id":2,"name":"clone_from","span":null,"visibility":"default","docs":"Performs copy-assignment from `source`.\n\n`a.clone_from(&b)` is equivalent to `a = b.clone()` in functionality,\nbut can be overridden to reuse the resources of `a` to avoid unnecessary\nallocations.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["source",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9140:60745":{"id":"1:9140:60745","crate_id":1,"name":"floor","span":null,"visibility":"default","docs":"Returns the largest integer value less than or equal to each lane.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5517:15883":{"id":"1:5517:15883","crate_id":1,"name":"mode","span":null,"visibility":"default","docs":"Sets the mode bits that a new file will be created with.\n\nIf a new file is created as part of an `OpenOptions::open` call then this\nspecified `mode` will be used as the permission bits for the new file.\nIf no `mode` is set, the default of `0o666` will be used.\nThe operating system masks out bits with the system's `umask`, to produce\nthe final permissions.\n\n# Examples\n\n```no_run\nuse std::fs::OpenOptions;\nuse std::os::unix::fs::OpenOptionsExt;\n\n# fn main() {\nlet mut options = OpenOptions::new();\noptions.mode(0o644); // Give read/write for owner and read for others.\nlet file = options.open(\"foo.txt\");\n# }\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mode",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3829:2673":{"id":"0:3829:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5337:2786":{"id":"0:5337:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3526:2608":{"id":"0:3526:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:3594":{"id":"0:3594","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}},"items":["0:3596:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2885:238":{"id":"0:2885:238","crate_id":0,"name":"Unknown","span":{"filename":"src/internal.rs","begin":[52,2],"end":[52,9]},"visibility":"default","docs":"Needs more data, but we do not know how much","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2326:3971":{"id":"0:2326:3971","crate_id":0,"name":"be_u16","span":{"filename":"src/number/complete.rs","begin":[82,0],"end":[97,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 2 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_u16;\n\nlet parser = |s| {\n  be_u16(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5970:1457":{"id":"0:5970:1457","crate_id":0,"name":"u128","span":{"filename":"src/character/complete.rs","begin":[829,0],"end":[829,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4284:2425":{"id":"0:4284:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:1936:412":{"id":"0:1936:412","crate_id":0,"name":"char","span":{"filename":"src/character/complete.rs","begin":[32,0],"end":[44,1]},"visibility":"public","docs":"Recognizes one character.\n\n*Complete version*: Will return an error if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::{ErrorKind, Error}, IResult};\n# use nom::character::complete::char;\nfn parser(i: &str) -> IResult<&str, char> {\n    char('a')(i)\n}\nassert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));\nassert_eq!(parser(\" abc\"), Err(Err::Error(Error::new(\" abc\", ErrorKind::Char))));\nassert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2686:641":{"id":"0:2686:641","crate_id":0,"name":"f64","span":{"filename":"src/number/streaming.rs","begin":[1296,0],"end":[1308,1]},"visibility":"public","docs":"Recognizes an 8 byte floating point number\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,\notherwise if `nom::number::Endianness::Little` parse a little endian f64 float.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::f64;\n\nlet be_f64 = |s| {\n  f64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));\n\nlet le_f64 = |s| {\n  f64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4356:2236":{"id":"0:4356:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1067:490":{"id":"0:1067:490","crate_id":0,"name":"convert","span":{"filename":"src/traits.rs","begin":[1316,2],"end":[1320,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"error::VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:809:2622":{"id":"0:809:2622","crate_id":0,"name":"take_split","span":{"filename":"src/traits.rs","begin":[332,2],"end":[332,53]},"visibility":"default","docs":"Split the stream at the `count` byte offset. panics if count > length","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"Self"},{"kind":"generic","inner":"Self"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3495:2657":{"id":"0:3495:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4485:2548":{"id":"0:4485:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4379":{"id":"0:4379","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4383:2657","0:4385:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4484:5406":{"id":"1:4484:5406","crate_id":1,"name":"by_ref","span":null,"visibility":"default","docs":"Creates a \"by reference\" adapter for this instance of `Write`.\n\nThe returned adapter also implements `Write` and will simply borrow this\ncurrent writer.\n\n# Examples\n\n```no_run\nuse std::io::Write;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    let reference = buffer.by_ref();\n\n    // we can use reference just like our original buffer\n    reference.write_all(b\"some bytes\")?;\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3176:5380":{"id":"2:3176:5380","crate_id":2,"name":"as_mut","span":null,"visibility":"default","docs":"Converts this type into a mutable reference of the (usually inferred) input type.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2733":{"id":"0:2733","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,9],"end":[150,14]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2735:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5529:60809":{"id":"1:5529:60809","crate_id":1,"name":"rdev","span":null,"visibility":"default","docs":"Returns the device ID of this file (if it is a special one).\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let device_id = meta.rdev();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2753:1568":{"id":"0:2753:1568","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[167,6],"end":[167,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:3207:2610":{"id":"0:3207:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:627:2525":{"id":"0:627:2525","crate_id":0,"name":"Or","span":{"filename":"src/internal.rs","begin":[410,0],"end":[413,1]},"visibility":"public","docs":"Implementation of `Parser::or`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"0:4023:2657":{"id":"0:4023:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397:2417":{"id":"0:397:2417","crate_id":0,"name":"iterator","span":{"filename":"src/combinator/mod.rs","begin":[659,0],"end":[669,1]},"visibility":"public","docs":"Creates an iterator from input data and a parser.\n\nCall the iterator's [ParserIterator::finish] method to get the remaining input if successful,\nor the error value if we encountered an error.\n\n```rust\nuse nom::{combinator::iterator, IResult, bytes::complete::tag, character::complete::alpha1, sequence::terminated};\nuse std::collections::HashMap;\n\nlet data = \"abc|defg|hijkl|mnopqr|123\";\nlet mut it = iterator(data, terminated(alpha1, tag(\"|\")));\n\nlet parsed = it.map(|v| (v, v.len())).collect::<HashMap<_,_>>();\nlet res: IResult<_,_> = it.finish();\n\nassert_eq!(parsed, [(\"abc\", 3usize), (\"defg\", 4), (\"hijkl\", 5), (\"mnopqr\", 6)].iter().cloned().collect());\nassert_eq!(res, Ok((\"123\", ())));\n```","links":{"ParserIterator::finish":"0:413:660"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"Input"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Error"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5581:2036":{"id":"0:5581:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9127:5368":{"id":"2:9127:5368","crate_id":2,"name":"min_by","span":null,"visibility":"default","docs":"Returns the element that gives the minimum value with respect to the\nspecified comparison function.\n\nIf several elements are equally minimum, the first element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().min_by(|x, y| x.cmp(y)).unwrap(), -10);\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"iter_min_by\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4125:2548":{"id":"0:4125:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4194":{"id":"0:4194","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}},"items":["0:4196:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:857:2641":{"id":"0:857:2641","crate_id":0,"name":"split_at_position","span":{"filename":"src/traits.rs","begin":[503,2],"end":[511,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1557:1849":{"id":"0:1557:1849","crate_id":0,"name":"bytes","span":{"filename":"src/bytes/mod.rs","begin":[1,0],"end":[6,10]},"visibility":"public","docs":"Parsers recognizing bytes streams","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1558:2216","0:1716:3108"],"is_stripped":false}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[129,0],"end":[131,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromExternalError","id":"0:82:1993","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[]},"items":["0:123:1997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3446:2608":{"id":"0:3446:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:9616:5287-0:3154:2228":{"id":"a:2:9616:5287-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5833:2036":{"id":"0:5833:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9142:41904":{"id":"1:9142:41904","crate_id":1,"name":"trunc","span":null,"visibility":"default","docs":"Returns the floating point's integer value, with its fractional part removed.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:540:298":{"id":"0:540:298","crate_id":0,"name":"and","span":{"filename":"src/internal.rs","begin":[287,2],"end":[293,3]},"visibility":"default","docs":"Applies a second parser after the first one, return their results as a tuple","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"And","id":"0:613:2523","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"core::marker::Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4474":{"id":"0:4474","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}},"items":["0:4476:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3457:2663":{"id":"0:3457:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254:2241":{"id":"0:254:2241","crate_id":0,"name":"rest_len","span":{"filename":"src/combinator/mod.rs","begin":[48,0],"end":[54,1]},"visibility":"public","docs":"Return the length of the remaining input.\n\n```rust\n# use nom::error::ErrorKind;\nuse nom::combinator::rest_len;\nassert_eq!(rest_len::<_,(_, ErrorKind)>(\"abc\"), Ok((\"abc\", 3)));\nassert_eq!(rest_len::<_,(_, ErrorKind)>(\"\"), Ok((\"\", 0)));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:81:1988":{"id":"0:81:1988","crate_id":0,"name":"add_context","span":{"filename":"src/error.rs","begin":[43,2],"end":[45,3]},"visibility":"default","docs":"Creates a new error from an input position, a static string and an existing error.\nThis is used mainly in the [context] combinator, to add user friendly information\nto errors when backtracking through a parse tree","links":{"context":"0:154:489"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_input",{"kind":"generic","inner":"I"}],["_ctx",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4510":{"id":"0:4510","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}},"items":["0:4513:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4034":{"id":"0:4034","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}},"items":["0:4036:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9177:612":{"id":"2:9177:612","crate_id":2,"name":"eq","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are equal to those of\nanother.\n\n# Examples\n\n```\nassert_eq!([1].iter().eq([1].iter()), true);\nassert_eq!([1].iter().eq([1, 2].iter()), false);\n```","links":{"`Iterator`":"2:8925:160"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2761:1972":{"id":"b:2:3213-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3837":{"id":"0:3837","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}},"items":["0:3840:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3130":{"id":"0:3130","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}},"items":["0:3132:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2599:4021":{"id":"0:2599:4021","crate_id":0,"name":"le_u8","span":{"filename":"src/number/streaming.rs","begin":[367,0],"end":[379,1]},"visibility":"public","docs":"Recognizes an unsigned 1 byte integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_u8;\n\nlet parser = le_u8::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10656:4710":{"id":"2:10656:4710","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10657:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1038:2725":{"id":"0:1038:2725","crate_id":0,"name":"to_usize","span":{"filename":"src/traits.rs","begin":[1241,2],"end":[1243,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3295:2657":{"id":"0:3295:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13920:13116":{"id":"2:13920:13116","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5492:13116"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50215:5028","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3571:2617":{"id":"0:3571:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4520:2763":{"id":"0:4520:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3739":{"id":"0:3739","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3743:2657","0:3745:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5042":{"id":"0:5042","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"}]},"items":["0:5071:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3122:2051":{"id":"0:3122:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3423:2657":{"id":"0:3423:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3823:2657":{"id":"0:3823:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:554:2036":{"id":"0:554:2036","crate_id":0,"name":"parse","span":{"filename":"src/internal.rs","begin":[324,2],"end":[326,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2662:737":{"id":"0:2662:737","crate_id":0,"name":"i32","span":{"filename":"src/number/streaming.rs","begin":[1040,0],"end":[1052,1]},"visibility":"public","docs":"Recognizes a signed 4 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::streaming::i32;\n\nlet be_i32 = |s| {\n  i32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));\nassert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));\n\nlet le_i32 = |s| {\n  i32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));\nassert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4270":{"id":"0:4270","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}},"items":["0:4273:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3619":{"id":"0:3619","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3623:2657","0:3625:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4507":{"id":"0:4507","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}},"items":["0:4509:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3132:2051":{"id":"0:3132:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5919:12490":{"id":"5:5919:12490","crate_id":5,"name":"join","span":null,"visibility":"default","docs":"Implementation of [`[T]::join`](slice::join)","links":{"slice::join":"5:5905:12490"},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["sep",{"kind":"generic","inner":"Separator"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Join","id":"5:5916:4972","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Separator"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1326:3068":{"id":"0:1326:3068","crate_id":0,"name":"preceded","span":{"filename":"src/sequence/mod.rs","begin":[63,0],"end":[75,1]},"visibility":"public","docs":"Matches an object from the first parser and discards it,\nthen gets an object from the second parser.\n\n# Arguments\n* `first` The opening parser.\n* `second` The second parser to get object.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::sequence::preceded;\nuse nom::bytes::complete::tag;\n\nlet mut parser = preceded(tag(\"abc\"), tag(\"efg\"));\n\nassert_eq!(parser(\"abcefg\"), Ok((\"\", \"efg\")));\nassert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"efg\")));\nassert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["first",{"kind":"generic","inner":"F"}],["second",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3375:1968":{"id":"2:3375:1968","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:776:2579":{"id":"0:776:2579","crate_id":0,"name":"is_alphanum","span":{"filename":"src/traits.rs","begin":[216,2],"end":[218,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:908":{"id":"0:908","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[737,0],"end":[784,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:911:2657","0:913:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:812:2425":{"id":"0:812:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[336,2],"end":[336,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:14545:526":{"id":"2:14545:526","crate_id":2,"name":"dealloc","span":null,"visibility":"default","docs":"Deallocate the block of memory at the given `ptr` pointer with the given `layout`.\n\n# Safety\n\nThis function is unsafe because undefined behavior can result\nif the caller does not ensure all of the following:\n\n* `ptr` must denote a block of memory currently allocated via\n  this allocator,\n\n* `layout` must be the same layout that was used\n  to allocate that block of memory.","links":{},"attrs":["#[stable(feature = \"global_alloc\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:2722":{"id":"0:2722","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[57,9],"end":[57,14]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2724:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3895:2657":{"id":"0:3895:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3969:1026":{"id":"0:3969:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4730-0:2744:2017":{"id":"a:2:3411:4730-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13888:62651":{"id":"2:13888:62651","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1777:3219":{"id":"0:1777:3219","crate_id":0,"name":"tag_no_case","span":{"filename":"src/bytes/streaming.rs","begin":[73,0],"end":[94,1]},"visibility":"public","docs":"Recognizes a case insensitive pattern.\n\nThe input data will be compared to the tag combinator's argument and will return the part of\nthe input that matches the argument with no regard to case.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::streaming::tag_no_case;\n\nfn parser(s: &str) -> IResult<&str, &str> {\n  tag_no_case(\"hello\")(s)\n}\n\nassert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));\nassert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));\nassert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));\nassert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));\nassert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(5))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3684:2425":{"id":"0:3684:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3641":{"id":"0:3641","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}},"items":["0:3644:2425","0:3645:2548","0:3646:2608","0:3647:2610","0:3648:2612","0:3649:1026","0:3651:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:915":{"id":"0:915","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[786,0],"end":[824,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnspecializedInput","id":"0:839:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:918:2657","0:920:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3695:2657":{"id":"0:3695:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2443:640":{"id":"0:2443:640","crate_id":0,"name":"f32","span":{"filename":"src/number/complete.rs","begin":[1287,0],"end":[1299,1]},"visibility":"public","docs":"Recognizes a 4 byte floating point number\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,\notherwise if `nom::number::Endianness::Little` parse a little endian f32 float.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::f32;\n\nlet be_f32 = |s| {\n  f32(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n\nlet le_f32 = |s| {\n  f32(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6462:18004":{"id":"1:6462:18004","crate_id":1,"name":"st_dev","span":null,"visibility":"default","docs":"Returns the device ID on which this file resides.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_dev());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1071:490":{"id":"0:1071:490","crate_id":0,"name":"convert","span":{"filename":"src/traits.rs","begin":[1326,2],"end":[1330,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"error::VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23144:45292":{"id":"2:23144:45292","crate_id":2,"name":"abs","span":null,"visibility":"default","docs":"Produces a vector where every lane has the absolute value of the\nequivalently-indexed lane in `self`.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11289:57980":{"id":"2:11289:57980","crate_id":2,"name":"get_mut","span":null,"visibility":"default","docs":"Returns a mutable reference to the output at this location, if in\nbounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1050":{"id":"0:1050","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1282,0],"end":[1286,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"items":["0:1052:490"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5500:14280":{"id":"1:5500:14280","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5501:59526","1:5502:59528","1:5503:59527","1:5504:59529"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8248:4910":{"id":"2:8248:4910","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8249:9381","2:8250:9382","2:8251:9383","2:8252:9384","2:8253:9385","2:8254:9386","2:8255:9387"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2419:4164":{"id":"0:2419:4164","crate_id":0,"name":"i24","span":{"filename":"src/number/complete.rs","begin":[1027,0],"end":[1039,1]},"visibility":"public","docs":"Recognizes a signed 3 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::i24;\n\nlet be_i24 = |s| {\n  i24(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));\nassert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_i24 = |s| {\n  i24(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));\nassert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3151":{"id":"0:3151","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}},"items":["0:3153:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3871:230":{"id":"2:3871:230","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3872:185","2:3873:4807","2:3874:694","2:3875:377"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3876:138","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4045:2548":{"id":"0:4045:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"2:13846:12841":{"id":"2:13846:12841","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13211:5006","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:727:2236":{"id":"0:727:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[33,2],"end":[35,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6218:57739":{"id":"1:6218:57739","crate_id":1,"name":"before_exec","span":null,"visibility":"default","docs":"Schedules a closure to be run just before the `exec` function is\ninvoked.\n\nThis method is stable and usable, but it should be unsafe. To fix\nthat, it got deprecated in favor of the unsafe [`pre_exec`].\n\n[`pre_exec`]: CommandExt::pre_exec","links":{"CommandExt::pre_exec":"1:6216:57735"},"attrs":["#[stable(feature = \"process_exec\", since = \"1.15.0\")]","#[deprecated(since = \"1.37.0\", note =\n\"should be unsafe, use `pre_exec` instead\")]"],"deprecation":{"since":"1.37.0","note":"should be unsafe, use `pre_exec` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10930:8891":{"id":"2:10930:8891","crate_id":2,"name":"build_hasher","span":null,"visibility":"default","docs":"Creates a new hasher.\n\nEach call to `build_hasher` on the same instance should produce identical\n[`Hasher`]s.\n\n# Examples\n\n```\nuse std::collections::hash_map::RandomState;\nuse std::hash::BuildHasher;\n\nlet s = RandomState::new();\nlet new_s = s.build_hasher();\n```","links":{"`Hasher`":"2:10893:147"},"attrs":["#[stable(since = \"1.7.0\", feature = \"build_hasher\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Hasher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BuildHasher","id":"2:10928:5580","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4207:2610":{"id":"0:4207:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1270:3008":{"id":"0:1270:3008","crate_id":0,"name":"fold_many_m_n","span":{"filename":"src/multi/mod.rs","begin":[786,0],"end":[832,1]},"visibility":"public","docs":"Applies a parser `n` times or until it fails and accumulates\nthe results using a given function and initial value.\nFails if the embedded parser does not succeed at least `m`\ntimes.\n# Arguments\n* `m` The minimum number of iterations.\n* `n` The maximum number of iterations.\n* `f` The parser to apply.\n* `init` A function returning the initial value.\n* `g` The function that combines a result of `f` with\n      the current accumulator.\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::multi::fold_many_m_n;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  fold_many_m_n(\n    0,\n    2,\n    tag(\"abc\"),\n    Vec::new,\n    |mut acc: Vec<_>, item| {\n      acc.push(item);\n      acc\n    }\n  )(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));\nassert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));\nassert_eq!(parser(\"\"), Ok((\"\", vec![])));\nassert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["min",{"kind":"primitive","inner":"usize"}],["max",{"kind":"primitive","inner":"usize"}],["parse",{"kind":"generic","inner":"F"}],["init",{"kind":"generic","inner":"H"}],["fold",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"},{"kind":"generic","inner":"O"}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3961":{"id":"0:3961","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}},"items":["0:3964:2425","0:3965:2548","0:3966:2608","0:3967:2610","0:3968:2612","0:3969:1026","0:3971:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3174:1331":{"id":"0:3174:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3845:2548":{"id":"0:3845:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4015:2657":{"id":"0:4015:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:6086:3949":{"id":"b:2:3213-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4418:59520":{"id":"1:4418:59520","crate_id":1,"name":"read_buf","span":null,"visibility":"default","docs":"Pull some bytes from this source into the specified buffer.\n\nThis is equivalent to the [`read`](Read::read) method, except that it is passed a [`BorrowedCursor`] rather than `[u8]` to allow use\nwith uninitialized buffers. The new data will be appended to any existing contents of `buf`.\n\nThe default implementation delegates to `read`.","links":{"Read::read":"1:4411:6361","`BorrowedCursor`":"1:10888:5629"},"attrs":["#[unstable(feature = \"read_buf\", issue = \"78485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"resolved_path","inner":{"name":"BorrowedCursor","id":"1:10888:5629","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4145-0:402:2418":{"id":"b:2:4145-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3189:128":{"id":"2:3189:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":"The type returned in the event of a conversion error.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4292":{"id":"0:4292","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4295:2657","0:4297:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9095:2937":{"id":"2:9095:2937","crate_id":2,"name":"min","span":null,"visibility":"default","docs":"Returns the minimum element of an iterator.\n\nIf several elements are equally minimum, the first element is returned.\nIf the iterator is empty, [`None`] is returned.\n\nNote that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\nincomparable. You can work around this by using [`Iterator::reduce`]:\n```\nassert_eq!(\n    [2.4, f32::NAN, 1.3]\n        .into_iter()\n        .reduce(f32::min)\n        .unwrap(),\n    1.3\n);\n```\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nlet b: Vec<u32> = Vec::new();\n\nassert_eq!(a.iter().min(), Some(&1));\nassert_eq!(b.iter().min(), None);\n```","links":{"`f32`":"1:15867:4614","`Ord`":"2:2956:181","`Iterator::reduce`":"2:9035:5414","`f64`":"1:15868:4615","`None`":"2:47911:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4274":{"id":"0:4274","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}},"items":["0:4276:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3157:2038":{"id":"0:3157:2038","crate_id":0,"name":"Incomplete","span":{"filename":"src/traits.rs","begin":[711,2],"end":[711,12]},"visibility":"default","docs":"We need more data to be sure","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:4008:2612":{"id":"0:4008:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4153:2673":{"id":"0:4153:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2965":{"id":"0:2965","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}}}},"items":["0:2968:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3147":{"id":"0:3147","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}},"items":["0:3150:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:421:933":{"id":"0:421:933","crate_id":0,"name":"next","span":{"filename":"src/combinator/mod.rs","begin":[696,2],"end":[722,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8925:160","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:402:2418":{"id":"b:2:3207-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3328:2612":{"id":"0:3328:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2774:2078":{"id":"0:2774:2078","crate_id":0,"name":"SeparatedList","span":{"filename":"src/error.rs","begin":[373,2],"end":[373,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:23860:61108":{"id":"2:23860:61108","crate_id":2,"name":"simd_clamp","span":null,"visibility":"default","docs":"Restrict each lane to a certain interval.\n\nFor each lane, returns `max` if `self` is greater than `max`, and `min` if `self` is\nless than `min`. Otherwise returns `self`.\n\n# Panics\n\nPanics if `min > max` on any lane.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["min",{"kind":"generic","inner":"Self"}],["max",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5878":{"id":"0:5878","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnS","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnT","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnU","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"},{"kind":"generic","inner":"U"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"},{"kind":"generic","inner":"FnS"},{"kind":"generic","inner":"FnT"},{"kind":"generic","inner":"FnU"}]},"items":["0:5923:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14543:142":{"id":"2:14543:142","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14544:284","2:14545:526","2:14546:287","2:14547:1092"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:124:2008":{"id":"0:124:2008","crate_id":0,"name":"make_error","span":{"filename":"src/error.rs","begin":[134,0],"end":[136,1]},"visibility":"public","docs":"Creates an error from the input position and an [ErrorKind]","links":{"ErrorKind":"0:2761:1972"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"E"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3451:185":{"id":"2:3451:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `*` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4703":{"id":"0:4703","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"}]},"items":["0:4723:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:745":{"id":"0:745","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[95,0],"end":[100,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:747:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:817:1026":{"id":"0:817:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[349,2],"end":[354,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4177:2663":{"id":"0:4177:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4987:2786":{"id":"0:4987:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:894:2644":{"id":"0:894:2644","crate_id":0,"name":"split_at_position1","span":{"filename":"src/traits.rs","begin":[639,2],"end":[653,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3482:4787":{"id":"2:3482:4787","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3484:567"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:24162:14651":{"id":"2:24162:14651","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"The mask element type corresponding to this element type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"MaskElement","id":"2:23524:14666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:3600:2236":{"id":"0:3600:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3083:2051":{"id":"0:3083:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2780:2081":{"id":"0:2780:2081","crate_id":0,"name":"Many1","span":{"filename":"src/error.rs","begin":[376,2],"end":[376,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2736":{"id":"0:2736","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,16],"end":[150,21]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2738:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10645:110":{"id":"2:10645:110","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10646:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13867:62648":{"id":"2:13867:62648","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3793:62219":{"id":"2:3793:62219","crate_id":2,"name":"end_bound","span":null,"visibility":"default","docs":"End index bound.\n\nReturns the end value as a `Bound`.\n\n# Examples\n\n```\n# fn main() {\nuse std::ops::Bound::*;\nuse std::ops::RangeBounds;\n\nassert_eq!((3..).end_bound(), Unbounded);\nassert_eq!((3..10).end_bound(), Excluded(&10));\n# }\n```","links":{},"attrs":["#[stable(feature = \"collections_range\", since = \"1.28.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bound","id":"2:46398:4803","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5714":{"id":"0:5714","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"}]},"items":["0:5751:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3947":{"id":"0:3947","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}},"items":["0:3949:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13829:57996":{"id":"2:13829:57996","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4509:2673":{"id":"0:4509:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4500:2684":{"id":"1:4500:2684","crate_id":1,"name":"split","span":null,"visibility":"default","docs":"Returns an iterator over the contents of this reader split on the byte\n`byte`.\n\nThe iterator returned from this function will return instances of\n<code>[io::Result]<[Vec]\\<u8>></code>. Each vector returned will *not* have\nthe delimiter byte at the end.\n\nThis function will yield errors whenever [`read_until`] would have\nalso yielded an error.\n\n[io::Result]: self::Result \"io::Result\"\n[`read_until`]: BufRead::read_until\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to iterate over all hyphen delimited\nsegments in a byte slice\n\n```\nuse std::io::{self, BufRead};\n\nlet cursor = io::Cursor::new(b\"lorem-ipsum-dolor\");\n\nlet mut split_iter = cursor.split(b'-').map(|l| l.unwrap());\nassert_eq!(split_iter.next(), Some(b\"lorem\".to_vec()));\nassert_eq!(split_iter.next(), Some(b\"ipsum\".to_vec()));\nassert_eq!(split_iter.next(), Some(b\"dolor\".to_vec()));\nassert_eq!(split_iter.next(), None);\n```","links":{"Vec":"5:7897:240","self::Result":"1:3801:209","BufRead::read_until":"1:4497:5606","`Cursor`":"1:10705:5616"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["byte",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:10972:4991","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5524:57726":{"id":"1:5524:57726","crate_id":1,"name":"ino","span":null,"visibility":"default","docs":"Returns the inode number.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let inode = meta.ino();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:9070:5417":{"id":"2:9070:5417","crate_id":2,"name":"try_find","span":null,"visibility":"default","docs":"Applies function to the elements of iterator and returns\nthe first true result or the first error.\n\nThe return type of this method depends on the return type of the closure.\nIf you return `Result<bool, E>` from the closure, you'll get a `Result<Option<Self::Item>; E>`.\nIf you return `Option<bool>` from the closure, you'll get an `Option<Option<Self::Item>>`.\n\n# Examples\n\n```\n#![feature(try_find)]\n\nlet a = [\"1\", \"2\", \"lol\", \"NaN\", \"5\"];\n\nlet is_my_num = |s: &str, search: i32| -> Result<bool, std::num::ParseIntError> {\n    Ok(s.parse::<i32>()?  == search)\n};\n\nlet result = a.iter().try_find(|&&s| is_my_num(s, 2));\nassert_eq!(result, Ok(Some(&\"2\")));\n\nlet result = a.iter().try_find(|&&s| is_my_num(s, 5));\nassert!(result.is_err());\n```\n\nThis also supports other types which implement `Try`, not just `Result`.\n```\n#![feature(try_find)]\n\nuse std::num::NonZeroU32;\nlet a = [3, 5, 7, 4, 9, 0, 11];\nlet result = a.iter().try_find(|&&x| NonZeroU32::new(x).map(|y| y.is_power_of_two()));\nassert_eq!(result, Some(Some(&4)));\nlet result = a.iter().take(3).try_find(|&&x| NonZeroU32::new(x).map(|y| y.is_power_of_two()));\nassert_eq!(result, Some(None));\nlet result = a.iter().rev().try_find(|&&x| NonZeroU32::new(x).map(|y| y.is_power_of_two()));\nassert_eq!(result, None);\n```","links":{},"attrs":["#[unstable(feature = \"try_find\", reason = \"new API\", issue = \"63178\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"bool"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2730:2013":{"id":"b:5:848-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:850:4751","5:851:2503","5:852:5430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3052:2051":{"id":"0:3052:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2602:4026":{"id":"0:2602:4026","crate_id":0,"name":"le_u16","span":{"filename":"src/number/streaming.rs","begin":[397,0],"end":[412,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 2 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_u16;\n\nlet parser = |s| {\n  le_u16::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23854:1291":{"id":"2:23854:1291","crate_id":2,"name":"simd_le","span":null,"visibility":"default","docs":"Test if each lane is less than or equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23264:14720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3674":{"id":"0:3674","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}},"items":["0:3676:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:920:2663":{"id":"0:920:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[811,2],"end":[823,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"generic","inner":"O"}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11287:185":{"id":"2:11287:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The output type returned by methods.","links":{},"attrs":["#[stable(feature = \"slice_get_slice\", since = \"1.28.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null}},"2:8925:160":{"id":"2:8925:160","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8926:2425","2:8927:933","2:8928:5389","2:8931:5390","2:8932:503","2:8934:5391","2:8937:5392","2:8938:3528","2:8939:5393","2:8940:5394","2:8942:2668","2:8944:5395","2:8945:5396","2:8947:852","2:8950:5397","2:8957:2053","2:8959:5398","2:8962:2045","2:8963:5399","2:8964:5400","2:8966:3257","2:8968:5401","2:8971:1330","2:8972:2423","2:8973:5402","2:8977:2288","2:8980:5403","2:8981:5404","2:8982:5405","2:8984:5406","2:8985:2729","2:8987:5407","2:8990:5408","2:8992:5409","2:9002:5410","2:9017:5411","2:9019:5412","2:9023:5413","2:9032:3009","2:9035:5414","2:9037:5415","2:9040:283","2:9047:301","2:9054:2648","2:9061:5416","2:9070:5417","2:9080:1026","2:9087:5418","2:9094:2938","2:9095:2937","2:9096:5371","2:9108:5370","2:9115:5369","2:9127:5368","2:9134:2057","2:9135:5419","2:9140:2623","2:9143:2715","2:9146:5420","2:9147:5421","2:9149:4257","2:9151:5422","2:9153:423","2:9156:5423","2:9165:1009","2:9168:5424","2:9177:612","2:9180:5425","2:9189:918","2:9191:837","2:9193:802","2:9195:721","2:9197:704","2:9199:5426","2:9200:5427","2:9208:5428"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9143:2715":{"id":"2:9143:2715","crate_id":2,"name":"cloned","span":null,"visibility":"default","docs":"Creates an iterator which [`clone`]s all of its elements.\n\nThis is useful when you have an iterator over `&T`, but you need an\niterator over `T`.\n\nThere is no guarantee whatsoever about the `clone` method actually\nbeing called *or* optimized away. So code should not depend on\neither.\n\n[`clone`]: Clone::clone\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet v_cloned: Vec<_> = a.iter().cloned().collect();\n\n// cloned is the same as .map(|&x| x), for integers\nlet v_map: Vec<_> = a.iter().map(|&x| x).collect();\n\nassert_eq!(v_cloned, vec![1, 2, 3]);\nassert_eq!(v_map, vec![1, 2, 3]);\n```\n\nTo get the best performance, try to clone late:\n\n```\nlet a = [vec![0_u8, 1, 2], vec![3, 4], vec![23]];\n// don't do this:\nlet slower: Vec<_> = a.iter().cloned().filter(|s| s.len() == 1).collect();\nassert_eq!(&[vec![23]], &slower[..]);\n// instead call `cloned` late\nlet faster: Vec<_> = a.iter().filter(|s| s.len() == 1).cloned().collect();\nassert_eq!(&[vec![23]], &faster[..]);\n```","links":{"Clone::clone":"2:2885:416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Cloned","id":"2:47017:4932","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174:2195":{"id":"0:174:2195","crate_id":0,"name":"error_node_position","span":{"filename":"src/error.rs","begin":[561,0],"end":[565,2]},"visibility":"public","docs":"Creates a parse error from a `nom::ErrorKind`,\nthe position in the input and the next error in\nthe parsing tree","links":{},"attrs":["#[allow(unused_variables)]","#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! error_node_position {\n    ($input:expr, $code:expr, $next:expr) => { ... };\n}"},"a:2:9615:5288-0:2761:1972":{"id":"a:2:9615:5288-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2885:416":{"id":"2:2885:416","crate_id":2,"name":"clone","span":null,"visibility":"default","docs":"Returns a copy of the value.\n\n# Examples\n\n```\n# #![allow(noop_method_call)]\nlet hello = \"Hello\"; // &str implements Clone\n\nassert_eq!(\"Hello\", hello.clone());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[must_use =\n\"cloning is often expensive and is not expected to have side effects\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3370:217-0:2730:2013":{"id":"a:2:3370:217-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4528:2763":{"id":"0:4528:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2899:416":{"id":"0:2899:416","crate_id":0,"name":"clone","span":{"filename":"src/internal.rs","begin":[48,31],"end":[48,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9037:5415":{"id":"2:9037:5415","crate_id":2,"name":"try_reduce","span":null,"visibility":"default","docs":"Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately.\n\nThe return type of this method depends on the return type of the closure. If the closure\nreturns `Result<Self::Item, E>`, then this function will return `Result<Option<Self::Item>,\nE>`. If the closure returns `Option<Self::Item>`, then this function will return\n`Option<Option<Self::Item>>`.\n\nWhen called on an empty iterator, this function will return either `Some(None)` or\n`Ok(None)` depending on the type of the provided closure.\n\nFor iterators with at least one element, this is essentially the same as calling\n[`try_fold()`] with the first element of the iterator as the initial accumulator value.\n\n[`try_fold()`]: Iterator::try_fold\n\n# Examples\n\nSafely calculate the sum of a series of numbers:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers: Vec<usize> = vec![10, 20, 5, 23, 0];\nlet sum = numbers.into_iter().try_reduce(|x, y| x.checked_add(y));\nassert_eq!(sum, Some(Some(58)));\n```\n\nDetermine when a reduction short circuited:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers = vec![1, 2, 3, usize::MAX, 4, 5];\nlet sum = numbers.into_iter().try_reduce(|x, y| x.checked_add(y));\nassert_eq!(sum, None);\n```\n\nDetermine when a reduction was not performed because there are no elements:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers: Vec<usize> = Vec::new();\nlet sum = numbers.into_iter().try_reduce(|x, y| x.checked_add(y));\nassert_eq!(sum, Some(None));\n```\n\nUse a [`Result`] instead of an [`Option`]:\n\n```\n#![feature(iterator_try_reduce)]\n\nlet numbers = vec![\"1\", \"2\", \"3\", \"4\", \"5\"];\nlet max: Result<Option<_>, <usize as std::str::FromStr>::Err> =\n    numbers.into_iter().try_reduce(|x, y| {\n        if x.parse::<usize>()? > y.parse::<usize>()? { Ok(x) } else { Ok(y) }\n    });\nassert_eq!(max, Ok(Some(\"5\")));\n```","links":{"`Result`":"2:48034:209","Iterator::try_fold":"2:9019:5412","`Option`":"2:47909:180"},"attrs":["#[unstable(feature = \"iterator_try_reduce\", reason = \"new API\", issue =\n\"87053\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3486:4789":{"id":"2:3486:4789","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3488:1116"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:3154:2228":{"id":"b:2:3213-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3139:2051":{"id":"0:3139:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3760:2236":{"id":"0:3760:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2596:4018":{"id":"0:2596:4018","crate_id":0,"name":"be_i128","span":{"filename":"src/number/streaming.rs","begin":[347,0],"end":[352,1]},"visibility":"public","docs":"Recognizes a big endian signed 16 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_i128;\n\nlet parser = be_i128::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:5677:2036":{"id":"0:5677:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13855:13217":{"id":"2:13855:13217","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:13843:2684","str::split_terminator":"2:13852:13221","self::pattern":"2:13419:3185","prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49966:5035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3409:1026":{"id":"0:3409:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5251:2786":{"id":"0:5251:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3865:2663":{"id":"0:3865:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3123":{"id":"0:3123","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}},"items":["0:3125:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13434:61177":{"id":"2:13434:61177","crate_id":2,"name":"is_prefix_of","span":null,"visibility":"default","docs":"Checks whether the pattern matches at the front of the haystack","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5936:737":{"id":"0:5936:737","crate_id":0,"name":"i32","span":{"filename":"src/character/complete.rs","begin":[786,0],"end":[786,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4480:2236":{"id":"0:4480:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9615:5288-0:2884:2426":{"id":"a:2:9615:5288-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:101:668":{"id":"0:101:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[93,2],"end":[95,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3633:2673":{"id":"0:3633:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3377:2663":{"id":"0:3377:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2911:1568":{"id":"0:2911:1568","crate_id":0,"name":"0","span":{"filename":"src/internal.rs","begin":[105,10],"end":[105,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"E"}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[483,0],"end":[544,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2883:2168"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4537:2763":{"id":"0:4537:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3630":{"id":"0:3630","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}},"items":["0:3633:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:6102:416":{"id":"0:6102:416","crate_id":0,"name":"clone","span":{"filename":"src/number/mod.rs","begin":[7,31],"end":[7,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14630:5901":{"id":"2:14630:5901","crate_id":2,"name":"deallocate","span":null,"visibility":"default","docs":"Deallocates the memory referenced by `ptr`.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator, and\n* `layout` must [*fit*] that block of memory.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:1250:2991":{"id":"0:1250:2991","crate_id":0,"name":"fold_many0","span":{"filename":"src/multi/mod.rs","begin":[633,0],"end":[671,1]},"visibility":"public","docs":"Applies a parser until it fails and accumulates\nthe results using a given function and initial value.\n# Arguments\n* `f` The parser to apply.\n* `init` A function returning the initial value.\n* `g` The function that combines a result of `f` with\n      the current accumulator.\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::multi::fold_many0;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  fold_many0(\n    tag(\"abc\"),\n    Vec::new,\n    |mut acc: Vec<_>, item| {\n      acc.push(item);\n      acc\n    }\n  )(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));\nassert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));\nassert_eq!(parser(\"\"), Ok((\"\", vec![])));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}],["init",{"kind":"generic","inner":"H"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"},{"kind":"generic","inner":"O"}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"5:847:5430":{"id":"5:847:5430","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":"Uses borrowed data to replace owned data, usually by cloning.\n\nThis is borrow-generalized version of [`Clone::clone_from`].\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s: String = String::new();\n\"hello\".clone_into(&mut s);\n\nlet mut v: Vec<i32> = Vec::new();\n[1, 2][..].clone_into(&mut v);\n```","links":{"`Clone::clone_from`":"2:2886:418"},"attrs":["#[stable(feature = \"toowned_clone_into\", since = \"1.63.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4730-0:2730:2013":{"id":"a:2:3411:4730-0:2730:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:5014":{"id":"0:5014","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"}]},"items":["0:5041:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4941:2786":{"id":"0:4941:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1998:3599":{"id":"0:1998:3599","crate_id":0,"name":"hex_digit0","span":{"filename":"src/character/complete.rs","begin":[459,0],"end":[465,1]},"visibility":"public","docs":"Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f\n\n*Complete version*: Will return the whole input if no terminating token is found (a non hexadecimal digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::complete::hex_digit0;\nfn parser(input: &str) -> IResult<&str, &str> {\n    hex_digit0(input)\n}\n\nassert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));\nassert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3606:2608":{"id":"0:3606:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:23198:62171":{"id":"2:23198:62171","crate_id":2,"name":"saturating_neg","span":null,"visibility":"default","docs":"Lanewise saturating negation, implemented in Rust.\nAs neg(), except the MIN value becomes MAX instead of itself.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet x = Simd::from_array([MIN, -2, 3, MAX]);\nlet unsat = -x;\nlet sat = x.saturating_neg();\nassert_eq!(unsat, Simd::from_array([MIN, 2, -3, MIN + 1]));\nassert_eq!(sat, Simd::from_array([MAX, 2, -3, MIN + 1]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:4947:61227":{"id":"2:4947:61227","crate_id":2,"name":"poll_next","span":null,"visibility":"default","docs":"Attempt to pull out the next value of this async iterator, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n`None` if the async iterator is exhausted.\n\n# Return value\n\nThere are several possible return values, each indicating a distinct\nasync iterator state:\n\n- `Poll::Pending` means that this async iterator's next value is not ready\nyet. Implementations will ensure that the current task will be notified\nwhen the next value may be ready.\n\n- `Poll::Ready(Some(val))` means that the async iterator has successfully\nproduced a value, `val`, and may produce further values on subsequent\n`poll_next` calls.\n\n- `Poll::Ready(None)` means that the async iterator has terminated, and\n`poll_next` should not be invoked again.\n\n# Panics\n\nOnce an async iterator has finished (returned `Ready(None)` from `poll_next`), calling its\n`poll_next` method again may panic, block forever, or cause other kinds of\nproblems; the `AsyncIterator` trait places no requirements on the effects of\nsuch a call. However, as the `poll_next` method is not marked `unsafe`,\nRust's usual rules apply: calls must never cause undefined behavior\n(memory corruption, incorrect use of `unsafe` functions, or the like),\nregardless of the async iterator's state.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:48026:192","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:14446:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50801:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"AsyncIterator","id":"2:4945:4727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:970:2673":{"id":"0:970:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[924,2],"end":[926,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"char"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3957":{"id":"0:3957","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}},"items":["0:3960:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3010:2051":{"id":"0:3010:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4441":{"id":"0:4441","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}},"items":["0:4444:2425","0:4445:2548","0:4446:2608","0:4447:2610","0:4448:2612","0:4449:1026","0:4451:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3916:2236":{"id":"0:3916:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4212":{"id":"0:4212","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4215:2657","0:4217:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4393:2673":{"id":"0:4393:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5678":{"id":"0:5678","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"}]},"items":["0:5713:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:757:2573":{"id":"0:757:2573","crate_id":0,"name":"as_char","span":{"filename":"src/traits.rs","begin":[153,2],"end":[153,27]},"visibility":"default","docs":"makes a char from self","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2964:2051":{"id":"0:2964:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4009:1026":{"id":"0:4009:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5516:14282":{"id":"1:5516:14282","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5517:15883","1:5518:17127"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13433:61176":{"id":"2:13433:61176","crate_id":2,"name":"is_contained_in","span":null,"visibility":"default","docs":"Checks whether the pattern matches anywhere in the haystack","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10928:5580":{"id":"2:10928:5580","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10929:147","2:10930:8891","2:10931:8893"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3863:2657":{"id":"0:3863:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3364:2425":{"id":"0:3364:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3949:2673":{"id":"0:3949:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23147:61098":{"id":"2:23147:61098","crate_id":2,"name":"to_radians","span":null,"visibility":"default","docs":"Converts each lane from degrees to radians.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2870":{"id":"0:2870","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,15],"end":[364,24]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3515:185":{"id":"2:3515:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `<<` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:749:2051":{"id":"0:749:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[104,2],"end":[106,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:91:1970":{"id":"0:91:1970","crate_id":0,"name":"from_error_kind","span":{"filename":"src/error.rs","begin":[73,2],"end":[75,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["kind",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6476:18012":{"id":"1:6476:18012","crate_id":1,"name":"st_blksize","span":null,"visibility":"default","docs":"Returns the \"preferred\" block size for efficient filesystem I/O.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_blksize());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1118:2786":{"id":"0:1118:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[130,0],"end":[134,1]},"visibility":"public","docs":"Applies a list of parsers in any order.\n\nPermutation will succeed if all of the child parsers succeeded.\nIt takes as argument a tuple of parsers, and returns a\ntuple of the parser results.\n\n```rust\n# use nom::{Err,error::{Error, ErrorKind}, Needed, IResult};\nuse nom::character::complete::{alpha1, digit1};\nuse nom::branch::permutation;\n# fn main() {\nfn parser(input: &str) -> IResult<&str, (&str, &str)> {\n  permutation((alpha1, digit1))(input)\n}\n\n// permutation recognizes alphabetic characters then digit\nassert_eq!(parser(\"abc123\"), Ok((\"\", (\"abc\", \"123\"))));\n\n// but also in inverse order\nassert_eq!(parser(\"123abc\"), Ok((\"\", (\"abc\", \"123\"))));\n\n// it will fail if one of the parsers failed\nassert_eq!(parser(\"abc;\"), Err(Err::Error(Error::new(\";\", ErrorKind::Digit))));\n# }\n```\n\nThe parsers are applied greedily: if there are multiple unapplied parsers\nthat could parse the next slice of input, the first one is used.\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, IResult};\nuse nom::branch::permutation;\nuse nom::character::complete::{anychar, char};\n\nfn parser(input: &str) -> IResult<&str, (char, char)> {\n  permutation((anychar, char('a')))(input)\n}\n\n// anychar parses 'b', then char('a') parses 'a'\nassert_eq!(parser(\"ba\"), Ok((\"\", ('b', 'a'))));\n\n// anychar parses 'a', then char('a') fails on 'b',\n// even though char('a') followed by anychar would succeed\nassert_eq!(parser(\"ab\"), Err(Err::Error(Error::new(\"b\", ErrorKind::Char))));\n```\n","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["l",{"kind":"generic","inner":"List"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"List","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4487:2610":{"id":"0:4487:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3370:217-0:2884:2426":{"id":"a:2:3370:217-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3280:2236":{"id":"0:3280:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[113,0],"end":[113,45]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["add_context"],"trait":{"name":"ContextError","id":"0:79:1984","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14631:5902":{"id":"2:14631:5902","crate_id":2,"name":"grow","span":null,"visibility":"default","docs":"Attempts to extend the memory block.\n\nReturns a new [`NonNull<[u8]>`][NonNull] containing a pointer and the actual size of the allocated\nmemory. The pointer is suitable for holding data described by `new_layout`. To accomplish\nthis, the allocator may extend the allocation referenced by `ptr` to fit the new layout.\n\nIf this returns `Ok`, then ownership of the memory block referenced by `ptr` has been\ntransferred to this allocator. The memory may or may not have been freed, and should be\nconsidered unusable.\n\nIf this method returns `Err`, then ownership of the memory block has not been transferred to\nthis allocator, and the contents of the memory block are unaltered.\n\n# Safety\n\n* `ptr` must denote a block of memory [*currently allocated*] via this allocator.\n* `old_layout` must [*fit*] that block of memory (The `new_layout` argument need not fit it.).\n* `new_layout.size()` must be greater than or equal to `old_layout.size()`.\n\nNote that `new_layout.align()` need not be the same as `old_layout.align()`.\n\n[*currently allocated*]: #currently-allocated-memory\n[*fit*]: #memory-fitting\n\n# Errors\n\nReturns `Err` if the new layout does not meet the allocator's size and alignment\nconstraints of the allocator, or if growing otherwise fails.\n\nImplementations are encouraged to return `Err` on memory exhaustion rather than panicking or\naborting, but this is not a strict requirement. (Specifically: it is *legal* to implement\nthis trait atop an underlying native allocation library that aborts on memory exhaustion.)\n\nClients wishing to abort computation in response to an allocation error are encouraged to\ncall the [`handle_alloc_error`] function, rather than directly invoking `panic!` or similar.\n\n[`handle_alloc_error`]: ../../alloc/alloc/fn.handle_alloc_error.html","links":{"NonNull":"2:2391:4881"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ptr",{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}],["old_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["new_layout",{"kind":"resolved_path","inner":{"name":"Layout","id":"2:50857:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"NonNull","id":"2:2391:4881","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"AllocError","id":"2:50886:4740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:2744:2017":{"id":"b:2:3203-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11293:763":{"id":"2:11293:763","crate_id":2,"name":"index_mut","span":null,"visibility":"default","docs":"Returns a mutable reference to the output at this location, panicking\nif out of bounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4160:2236":{"id":"0:4160:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[176,0],"end":[182,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"items":["0:507:2503"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2876":{"id":"0:2876","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,28],"end":[364,32]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10883:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2877:723"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3469:2673":{"id":"0:3469:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:827:2425":{"id":"0:827:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[378,2],"end":[378,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"char"}}},"0:2022:3641":{"id":"0:2022:3641","crate_id":0,"name":"space0","span":{"filename":"src/character/complete.rs","begin":[608,0],"end":[617,1]},"visibility":"public","docs":"Recognizes zero or more spaces and tabs.\n\n*Complete version*: Will return the whole input if no terminating token is found (a non space\ncharacter).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::complete::space0;\nfn parser(input: &str) -> IResult<&str, &str> {\n    space0(input)\n}\n\nassert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));\nassert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3217:2663":{"id":"0:3217:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"0"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:815:2610":{"id":"0:815:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[341,2],"end":[343,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3516:1250":{"id":"2:3516:1250","crate_id":2,"name":"shl","span":null,"visibility":"default","docs":"Performs the `<<` operation.\n\n# Examples\n\n```\nassert_eq!(5u8 << 1, 10);\nassert_eq!(1u8 << 1, 2);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Shl","id":"2:3513:3164","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:524:2509":{"id":"0:524:2509","crate_id":0,"name":"source","span":{"filename":"src/internal.rs","begin":[235,2],"end":[237,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4410:5600":{"id":"1:4410:5600","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4411:6361","1:4412:60103","1:4414:60104","1:4415:60105","1:4416:5601","1:4417:60106","1:4418:59520","1:4420:60107","1:4421:5406","1:4422:1849","1:4423:5394","1:4425:2423"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:841:2425":{"id":"0:841:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[448,2],"end":[448,12]},"visibility":"default","docs":"The current input type is a sequence of that `Item` type.\n\nExample: `u8` for `&[u8]` or `char` for `&str`","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2936:2051":{"id":"0:2936:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8987:5407":{"id":"2:8987:5407","crate_id":2,"name":"try_collect","span":null,"visibility":"default","docs":"Fallibly transforms an iterator into a collection, short circuiting if\na failure is encountered.\n\n`try_collect()` is a variation of [`collect()`][`collect`] that allows fallible\nconversions during collection. Its main use case is simplifying conversions from\niterators yielding [`Option<T>`][`Option`] into `Option<Collection<T>>`, or similarly for other [`Try`]\ntypes (e.g. [`Result`]).\n\nImportantly, `try_collect()` doesn't require that the outer [`Try`] type also implements [`FromIterator`];\nonly the inner type produced on `Try::Output` must implement it. Concretely,\nthis means that collecting into `ControlFlow<_, Vec<i32>>` is valid because `Vec<i32>` implements\n[`FromIterator`], even though [`ControlFlow`] doesn't.\n\nAlso, if a failure is encountered during `try_collect()`, the iterator is still valid and\nmay continue to be used, in which case it will continue iterating starting after the element that\ntriggered the failure. See the last example below for an example of how this works.\n\n# Examples\nSuccessfully collecting an iterator of `Option<i32>` into `Option<Vec<i32>>`:\n```\n#![feature(iterator_try_collect)]\n\nlet u = vec![Some(1), Some(2), Some(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, Some(vec![1, 2, 3]));\n```\n\nFailing to collect in the same way:\n```\n#![feature(iterator_try_collect)]\n\nlet u = vec![Some(1), Some(2), None, Some(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, None);\n```\n\nA similar example, but with `Result`:\n```\n#![feature(iterator_try_collect)]\n\nlet u: Vec<Result<i32, ()>> = vec![Ok(1), Ok(2), Ok(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, Ok(vec![1, 2, 3]));\n\nlet u = vec![Ok(1), Ok(2), Err(()), Ok(3)];\nlet v = u.into_iter().try_collect::<Vec<i32>>();\nassert_eq!(v, Err(()));\n```\n\nFinally, even [`ControlFlow`] works, despite the fact that it\ndoesn't implement [`FromIterator`]. Note also that the iterator can\ncontinue to be used, even if a failure is encountered:\n\n```\n#![feature(iterator_try_collect)]\n\nuse core::ops::ControlFlow::{Break, Continue};\n\nlet u = [Continue(1), Continue(2), Break(3), Continue(4), Continue(5)];\nlet mut it = u.into_iter();\n\nlet v = it.try_collect::<Vec<_>>();\nassert_eq!(v, Break(3));\n\nlet v = it.try_collect::<Vec<_>>();\nassert_eq!(v, Continue(vec![4, 5]));\n```\n\n[`collect`]: Iterator::collect","links":{"`Try`":"2:3871:230","`FromIterator`":"2:8720:137","`ControlFlow`":"2:46183:4810","`Result`":"2:48034:209","`Option`":"2:47909:180","Iterator::collect":"2:8985:2729"},"attrs":["#[unstable(feature = \"iterator_try_collect\", issue = \"94047\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"FromIterator","id":"2:8720:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10898:8863":{"id":"2:10898:8863","crate_id":2,"name":"write_u32","span":null,"visibility":"default","docs":"Writes a single `u32` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3621:131":{"id":"2:3621:131","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3623:384"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3812":{"id":"0:3812","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3815:2657","0:3817:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1811:3275":{"id":"0:1811:3275","crate_id":0,"name":"take_while_m_n","span":{"filename":"src/bytes/streaming.rs","begin":[260,0],"end":[318,1]},"visibility":"public","docs":"Returns the longest (m <= len <= n) input slice  that matches the predicate.\n\nThe parser will return the longest slice that matches the given predicate *(a function that\ntakes the input and returns a bool)*.\n\nIt will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met.\n# Streaming Specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(1))`  if the pattern reaches the end of the input or is too short.\n\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::streaming::take_while_m_n;\nuse nom::character::is_alphabetic;\n\nfn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  take_while_m_n(3, 6, is_alphabetic)(s)\n}\n\nassert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));\nassert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));\nassert_eq!(short_alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(short_alpha(b\"ed\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["m",{"kind":"primitive","inner":"usize"}],["n",{"kind":"primitive","inner":"usize"}],["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3891:2617":{"id":"0:3891:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4046:2608":{"id":"0:4046:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:3486:2608":{"id":"0:3486:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:563:2036":{"id":"0:563:2036","crate_id":0,"name":"parse","span":{"filename":"src/internal.rs","begin":[334,2],"end":[336,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2743:612":{"id":"0:2743:612","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[150,23],"end":[150,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3448:2612":{"id":"0:3448:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6081:4266":{"id":"0:6081:4266","crate_id":0,"name":"recognize_float","span":{"filename":"src/number/streaming.rs","begin":[1367,0],"end":[1390,1]},"visibility":"public","docs":"Recognizes a floating point number in text format and returns the corresponding part of the input.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::recognize_float;\n\nlet parser = |s| {\n  recognize_float(s)\n};\n\nassert_eq!(parser(\"11e-1;\"), Ok((\";\", \"11e-1\")));\nassert_eq!(parser(\"123E-02;\"), Ok((\";\", \"123E-02\")));\nassert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));\nassert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));\n```","links":{},"attrs":["#[rustfmt::skip]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:854":{"id":"0:854","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[498,0],"end":[560,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnspecializedInput","id":"0:839:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"T"},"items":["0:856:2425","0:857:2641","0:860:2644","0:863:2646","0:866:2647"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3531:362":{"id":"2:3531:362","crate_id":2,"name":"bitor_assign","span":null,"visibility":"default","docs":"Performs the `|=` operation.\n\n# Examples\n\n```\nlet mut x = true;\nx |= false;\nassert_eq!(x, true);\n\nlet mut x = false;\nx |= false;\nassert_eq!(x, false);\n\nlet mut x: u8 = 5;\nx |= 1;\nassert_eq!(x, 5);\n\nlet mut x: u8 = 5;\nx |= 2;\nassert_eq!(x, 7);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23150:4386":{"id":"2:23150:4386","crate_id":2,"name":"is_nan","span":null,"visibility":"default","docs":"Returns true for each lane if its value is `NaN`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3775:2657":{"id":"0:3775:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4390":{"id":"0:4390","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}},"items":["0:4393:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3168:1331":{"id":"0:3168:1331","crate_id":0,"name":"slice","span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["range",{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4420:60107":{"id":"1:4420:60107","crate_id":1,"name":"read_buf_exact","span":null,"visibility":"default","docs":"Read the exact number of bytes required to fill `cursor`.\n\nThis is equivalent to the [`read_exact`](Read::read_exact) method, except that it is passed a [`BorrowedCursor`] rather than `[u8]` to\nallow use with uninitialized buffers.","links":{"Read::read_exact":"1:4417:60106","`BorrowedCursor`":"1:10888:5629"},"attrs":["#[unstable(feature = \"read_buf\", issue = \"78485\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["cursor",{"kind":"resolved_path","inner":{"name":"BorrowedCursor","id":"1:10888:5629","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13360:5655":{"id":"2:13360:5655","crate_id":2,"name":"from_str","span":null,"visibility":"default","docs":"Parses a string `s` to return a value of this type.\n\nIf parsing succeeds, return the value inside [`Ok`], otherwise\nwhen the string is ill-formatted return an error specific to the\ninside [`Err`]. The error type is specific to the implementation of the trait.\n\n# Examples\n\nBasic usage with [`i32`], a type that implements `FromStr`:\n\n```\nuse std::str::FromStr;\n\nlet s = \"5\";\nlet x = i32::from_str(s).unwrap();\n\nassert_eq!(5, x);\n```","links":{"`Ok`":"2:48037:179","`Err`":"2:48040:127","`i32`":"1:15871:4618"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FromStr","id":"2:13358:2552","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3331:2617":{"id":"0:3331:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3655:2657":{"id":"0:3655:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:294:2288":{"id":"0:294:2288","crate_id":0,"name":"flat_map","span":{"filename":"src/combinator/mod.rs","begin":[206,0],"end":[219,1]},"visibility":"public","docs":"Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::bytes::complete::take;\nuse nom::number::complete::u8;\nuse nom::combinator::flat_map;\n# fn main() {\n\nlet mut parse = flat_map(u8, take);\n\nassert_eq!(parse(&[2, 0, 1, 2][..]), Ok((&[2][..], &[0, 1][..])));\nassert_eq!(parse(&[4, 0, 1, 2][..]), Err(Err::Error((&[0, 1, 2][..], ErrorKind::Eof))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}],["applied_parser",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"O1"}],"output":{"kind":"generic","inner":"H"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3506:361":{"id":"2:3506:361","crate_id":2,"name":"bitor","span":null,"visibility":"default","docs":"Performs the `|` operation.\n\n# Examples\n\n```\nassert_eq!(true | false, true);\nassert_eq!(false | false, false);\nassert_eq!(5u8 | 1u8, 5);\nassert_eq!(5u8 | 2u8, 7);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BitOr","id":"2:3503:4792","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:769:2583":{"id":"0:769:2583","crate_id":0,"name":"is_hex_digit","span":{"filename":"src/traits.rs","begin":[192,2],"end":[196,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6190:63295":{"id":"5:6190:63295","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:2221","`String`":"5:8478:221"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2221","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8223:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:779:2585":{"id":"0:779:2585","crate_id":0,"name":"is_oct_digit","span":{"filename":"src/traits.rs","begin":[230,2],"end":[232,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3196:2236":{"id":"0:3196:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5508:14281":{"id":"1:5508:14281","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5509:15883","1:5510:60378","1:5511:60379"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6240:6336":{"id":"1:6240:6336","crate_id":1,"name":"into_raw","span":null,"visibility":"default","docs":"Returns the underlying raw `wait` status.\n\nThe returned integer is a **wait status, not an exit status**.","links":{},"attrs":["#[stable(feature = \"unix_process_wait_more\", since = \"1.58.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4404:2425":{"id":"0:4404:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:23852:14653":{"id":"2:23852:14653","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23853:1292","2:23854:1291","2:23855:1289","2:23856:1288"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23264:14720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23194:1244":{"id":"2:23194:1244","crate_id":2,"name":"saturating_add","span":null,"visibility":"default","docs":"Lanewise saturating add.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet x = Simd::from_array([MIN, 0, 1, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x + max;\nlet sat = x.saturating_add(max);\nassert_eq!(unsat, Simd::from_array([-1, MAX, MIN, -2]));\nassert_eq!(sat, Simd::from_array([-1, MAX, MAX, MAX]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4126:2608":{"id":"0:4126:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2909:2039":{"id":"0:2909:2039","crate_id":0,"name":"Failure","span":{"filename":"src/internal.rs","begin":[105,2],"end":[105,12]},"visibility":"default","docs":"The parser had an unrecoverable error: we got to the right\nbranch and we know other branches won't work, so backtrack\nas fast as possible","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2911:1568"]}},"0:4316:2236":{"id":"0:4316:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3347":{"id":"0:3347","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}},"items":["0:3349:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3568:2612":{"id":"0:3568:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3360:2236":{"id":"0:3360:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3670":{"id":"0:3670","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}},"items":["0:3673:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:931:2663":{"id":"0:931:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[845,2],"end":[861,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3886:2608":{"id":"0:3886:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"1:5571:60545":{"id":"1:5571:60545","crate_id":1,"name":"file_name_ref","span":null,"visibility":"default","docs":"Returns a reference to the underlying `OsStr` of this entry's filename.\n\n# Examples\n\n```\n#![feature(dir_entry_ext2)]\nuse std::os::unix::fs::DirEntryExt2;\nuse std::{fs, io};\n\nfn main() -> io::Result<()> {\n    let mut entries = fs::read_dir(\".\")?.collect::<Result<Vec<_>, io::Error>>()?;\n    entries.sort_unstable_by(|a, b| a.file_name_ref().cmp(b.file_name_ref()));\n\n    for p in entries {\n        println!(\"{p:?}\");\n    }\n\n    Ok(())\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"1:2654:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6835:57835":{"id":"1:6835:57835","crate_id":1,"name":"set_quickack","span":null,"visibility":"default","docs":"Enable or disable `TCP_QUICKACK`.\n\nThis flag causes Linux to eagerly send ACKs rather than delaying them.\nLinux may reset this flag after further operations on the socket.\n\nSee [`man 7 tcp`](https://man7.org/linux/man-pages/man7/tcp.7.html) and\n[TCP delayed acknowledgement](https://en.wikipedia.org/wiki/TCP_delayed_acknowledgment)\nfor more information.\n\n# Examples\n\n```no_run\n#![feature(tcp_quickack)]\nuse std::net::TcpStream;\nuse std::os::linux::net::TcpStreamExt;\n\nlet stream = TcpStream::connect(\"127.0.0.1:8080\")\n        .expect(\"Couldn't connect to the server...\");\nstream.set_quickack(true).expect(\"set_quickack call failed\");\n```","links":{},"attrs":["#[unstable(feature = \"tcp_quickack\", issue = \"96256\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["quickack",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2969:188":{"id":"2:2969:188","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2971:1009","2:2972:837","2:2973:802","2:2974:721","2:2975:704"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3815:2657":{"id":"0:3815:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3382:225-0:2718:128":{"id":"a:2:3382:225-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2174:3599":{"id":"0:2174:3599","crate_id":0,"name":"hex_digit0","span":{"filename":"src/character/streaming.rs","begin":[401,0],"end":[407,1]},"visibility":"public","docs":"Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non hexadecimal digit character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::hex_digit0;\nassert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));\nassert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));\nassert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23856:1288":{"id":"2:23856:1288","crate_id":2,"name":"simd_ge","span":null,"visibility":"default","docs":"Test if each lane is greater than or equal to the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23264:14720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3245:2548":{"id":"0:3245:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4505:2663":{"id":"0:4505:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3924:2425":{"id":"0:3924:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:796:2585":{"id":"0:796:2585","crate_id":0,"name":"is_oct_digit","span":{"filename":"src/traits.rs","begin":[292,2],"end":[294,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13899:57998":{"id":"2:13899:57998","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13419:3185","prim@char":"1:15857:4607"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1379:2036":{"id":"0:1379:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[200,2],"end":[202,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"Output"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3484:2425":{"id":"0:3484:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:8940:5394":{"id":"2:8940:5394","crate_id":2,"name":"chain","span":null,"visibility":"default","docs":"Takes two iterators and creates a new iterator over both in sequence.\n\n`chain()` will return a new iterator which will first iterate over\nvalues from the first iterator and then over values from the second\niterator.\n\nIn other words, it links two iterators together, in a chain. 🔗\n\n[`once`] is commonly used to adapt a single value into a chain of\nother kinds of iteration.\n\n# Examples\n\nBasic usage:\n\n```\nlet a1 = [1, 2, 3];\nlet a2 = [4, 5, 6];\n\nlet mut iter = a1.iter().chain(a2.iter());\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), Some(&4));\nassert_eq!(iter.next(), Some(&5));\nassert_eq!(iter.next(), Some(&6));\nassert_eq!(iter.next(), None);\n```\n\nSince the argument to `chain()` uses [`IntoIterator`], we can pass\nanything that can be converted into an [`Iterator`], not just an\n[`Iterator`] itself. For example, slices (`&[T]`) implement\n[`IntoIterator`], and so can be passed to `chain()` directly:\n\n```\nlet s1 = &[1, 2, 3];\nlet s2 = &[4, 5, 6];\n\nlet mut iter = s1.iter().chain(s2);\n\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), Some(&2));\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), Some(&4));\nassert_eq!(iter.next(), Some(&5));\nassert_eq!(iter.next(), Some(&6));\nassert_eq!(iter.next(), None);\n```\n\nIf you work with Windows API, you may wish to convert [`OsStr`] to `Vec<u16>`:\n\n```\n#[cfg(windows)]\nfn os_str_to_utf16(s: &std::ffi::OsStr) -> Vec<u16> {\n    use std::os::windows::ffi::OsStrExt;\n    s.encode_wide().chain(std::iter::once(0)).collect()\n}\n```\n\n[`once`]: crate::iter::once\n[`OsStr`]: ../../std/ffi/struct.OsStr.html","links":{"`Iterator`":"2:8925:160","`IntoIterator`":"2:8724:153","crate::iter::once":"2:8500:4913"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Chain","id":"2:47004:4939","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5980:736":{"id":"0:5980:736","crate_id":0,"name":"i16","span":{"filename":"src/character/streaming.rs","begin":[692,0],"end":[692,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:9616:5287":{"id":"2:9616:5287","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13870:4686":{"id":"2:13870:4686","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"2:13870:4686","self::pattern":"2:13419:3185","`DoubleEndedIterator`":"2:8768:121","prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50102:5033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1083:377":{"id":"0:1083:377","crate_id":0,"name":"branch","span":{"filename":"src/branch/mod.rs","begin":[1,0],"end":[291,2]},"visibility":"public","docs":"Choice combinators","links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1101:2075","0:1106:2781","0:1113:2113","0:1118:2786"],"is_stripped":false}},"0:4407:2610":{"id":"0:4407:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[202,0],"end":[207,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromExternalError","id":"0:82:1993","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:141:1997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2972":{"id":"0:2972","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}},"items":["0:2975:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:545:2404":{"id":"0:545:2404","crate_id":0,"name":"into","span":{"filename":"src/internal.rs","begin":[306,2],"end":[317,3]},"visibility":"default","docs":"automatically converts the parser's output and error values to another type, as long as they\nimplement the `From` trait","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Into","id":"0:640:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"O2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E2","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"core::marker::Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4310":{"id":"0:4310","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}},"items":["0:4313:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3269:2673":{"id":"0:3269:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6091:3955":{"id":"0:6091:3955","crate_id":0,"name":"Native","span":{"filename":"src/number/mod.rs","begin":[14,2],"end":[14,8]},"visibility":"default","docs":"Will match the host's endianness","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3809:1026":{"id":"0:3809:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59":{"id":"0:59","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[430,6],"end":[430,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"std::prelude","name":"v1","id":"1:69:1042","glob":false}},"0:2227:2599":{"id":"0:2227:2599","crate_id":0,"name":"is_digit","span":{"filename":"src/character/mod.rs","begin":[35,0],"end":[37,1]},"visibility":"public","docs":"Tests if byte is ASCII digit: 0-9\n\n# Example\n\n```\n# use nom::character::is_digit;\nassert_eq!(is_digit(b'a'), false);\nassert_eq!(is_digit(b'9'), true);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["chr",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3190":{"id":"0:3190","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1048,0],"end":[1048,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFull","id":"2:46272:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"T"}}}},"items":["0:3193:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4193:2673":{"id":"0:4193:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:852:5430":{"id":"5:852:5430","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1549:1849":{"id":"0:1549:1849","crate_id":0,"name":"bytes","span":{"filename":"src/bits/mod.rs","begin":[86,0],"end":[111,1]},"visibility":"public","docs":"Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying\nparser, allowing byte-slice parsers to work on bit streams.\n\nA partial byte remaining in the input will be ignored and the given parser will start parsing\nat the next full byte.\n\n```\nuse nom::bits::{bits, bytes, streaming::take};\nuse nom::combinator::rest;\nuse nom::error::Error;\nuse nom::sequence::tuple;\nuse nom::IResult;\n\nfn parse(input: &[u8]) -> IResult<&[u8], (u8, u8, &[u8])> {\n  bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((\n    take(4usize),\n    take(8usize),\n    bytes::<_, _, Error<&[u8]>, _, _>(rest)\n  )))(input)\n}\n\nlet input = &[0x12, 0x34, 0xff, 0xff];\n\nassert_eq!(parse( input ), Ok(( &[][..], (0x01, 0x23, &[0xff, 0xff][..]) )));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"P"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E1"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E2"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E1"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3046":{"id":"0:3046","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}},"items":["0:3048:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5530:1326":{"id":"1:5530:1326","crate_id":1,"name":"size","span":null,"visibility":"default","docs":"Returns the total size of this file in bytes.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let file_size = meta.size();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:759:2579":{"id":"0:759:2579","crate_id":0,"name":"is_alphanum","span":{"filename":"src/traits.rs","begin":[163,2],"end":[163,31]},"visibility":"default","docs":"Tests that self is an alphabetic character\nor a decimal digit","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13816:2625":{"id":"2:13816:2625","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:13817:57989"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1850:3336":{"id":"0:1850:3336","crate_id":0,"name":"escaped","span":{"filename":"src/bytes/streaming.rs","begin":[525,0],"end":[593,1]},"visibility":"public","docs":"Matches a byte string with escaped characters.\n\n* The first argument matches the normal characters (it must not accept the control character)\n* The second argument is the control character (like `\\` in most languages)\n* The third argument matches the escaped characters\n# Example\n```\n# use nom::{Err, error::ErrorKind, Needed, IResult};\n# use nom::character::complete::digit1;\nuse nom::bytes::streaming::escaped;\nuse nom::character::streaming::one_of;\n\nfn esc(s: &str) -> IResult<&str, &str> {\n  escaped(digit1, '\\\\', one_of(\"\\\"n\\\\\"))(s)\n}\n\nassert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));\nassert_eq!(esc(\"12\\\\\\\"34;\"), Ok((\";\", \"12\\\\\\\"34\")));\n```\n","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["normal",{"kind":"generic","inner":"F"}],["control_char",{"kind":"primitive","inner":"char"}],["escapable",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::traits::Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"crate::traits::AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Error"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4463:2657":{"id":"0:4463:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2407:1460":{"id":"0:2407:1460","crate_id":0,"name":"u64","span":{"filename":"src/number/complete.rs","begin":[886,0],"end":[898,1]},"visibility":"public","docs":"Recognizes an unsigned 8 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::u64;\n\nlet be_u64 = |s| {\n  u64(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));\nassert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_u64 = |s| {\n  u64(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));\nassert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13919:13113":{"id":"2:13919:13113","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5495:13113"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50206:5027","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4286:2608":{"id":"0:4286:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"1:6215:17121":{"id":"1:6215:17121","crate_id":1,"name":"groups","span":null,"visibility":"default","docs":"Sets the supplementary group IDs for the calling process. Translates to\na `setgroups` call in the child process.","links":{},"attrs":["#[unstable(feature = \"setgroups\", issue = \"90747\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["groups",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u32"}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2872:612":{"id":"0:2872:612","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[364,15],"end":[364,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2999:2051":{"id":"0:2999:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3804:2425":{"id":"0:3804:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3248:2612":{"id":"0:3248:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6334:60609":{"id":"1:6334:60609","crate_id":1,"name":"into_pthread_t","span":null,"visibility":"default","docs":"Consumes the thread, returning the raw pthread_t\n\nThis function **transfers ownership** of the underlying pthread_t to\nthe caller. Callers are then the unique owners of the pthread_t and\nmust either detach or join the pthread_t once it's no longer needed.","links":{},"attrs":["#[stable(feature = \"thread_extensions\", since = \"1.9.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3637":{"id":"0:3637","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}},"items":["0:3640:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3680:2236":{"id":"0:3680:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6468:18011":{"id":"1:6468:18011","crate_id":1,"name":"st_rdev","span":null,"visibility":"default","docs":"Returns the device ID that this file represents. Only relevant for special file.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_rdev());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2920:187":{"id":"2:2920:187","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2922:612","2:2923:918"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:3577:2663":{"id":"0:3577:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3513:3164":{"id":"2:3513:3164","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3515:185","2:3516:1250"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2745:2020":{"id":"0:2745:2020","crate_id":0,"name":"Context","span":{"filename":"src/error.rs","begin":[163,2],"end":[163,23]},"visibility":"default","docs":"Static string added by the `context` function","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2747:1568"]}},"0:725":{"id":"0:725","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[31,0],"end":[36,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:727:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1436:2423":{"id":"0:1436:2423","crate_id":0,"name":"take","span":{"filename":"src/bits/complete.rs","begin":[33,0],"end":[82,1]},"visibility":"public","docs":"Generates a parser taking `count` bits\n\n# Example\n```rust\n# use nom::bits::complete::take;\n# use nom::IResult;\n# use nom::error::{Error, ErrorKind};\n// Input is a tuple of (input: I, bit_offset: usize)\nfn parser(input: (&[u8], usize), count: usize)-> IResult<(&[u8], usize), u8> {\n take(count)(input)\n}\n\n// Consumes 0 bits, returns 0\nassert_eq!(parser(([0b00010010].as_ref(), 0), 0), Ok((([0b00010010].as_ref(), 0), 0)));\n\n// Consumes 4 bits, returns their values and increase offset to 4\nassert_eq!(parser(([0b00010010].as_ref(), 0), 4), Ok((([0b00010010].as_ref(), 4), 0b00000001)));\n\n// Consumes 4 bits, offset is 4, returns their values and increase offset to 0 of next byte\nassert_eq!(parser(([0b00010010].as_ref(), 4), 4), Ok((([].as_ref(), 0), 0b00000010)));\n\n// Tries to consume 12 bits but only 8 are available\nassert_eq!(parser(([0b00010010].as_ref(), 0), 12), Err(nom::Err::Error(Error{input: ([0b00010010].as_ref(), 0), code: ErrorKind::Eof })));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["count",{"kind":"generic","inner":"C"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AddAssign","id":"2:3470:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shl","id":"2:3513:3164","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shr","id":"2:3519:3165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4385:2663":{"id":"0:4385:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3335:2657":{"id":"0:3335:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2566:3971":{"id":"0:2566:3971","crate_id":0,"name":"be_u16","span":{"filename":"src/number/streaming.rs","begin":[80,0],"end":[95,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 2 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_u16;\n\nlet parser = |s| {\n  be_u16::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3750":{"id":"0:3750","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}},"items":["0:3753:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:459:2032":{"id":"0:459:2032","crate_id":0,"name":"IResult","span":{"filename":"src/internal.rs","begin":[18,0],"end":[18,69]},"visibility":"public","docs":"Holds the result of parsing functions\n\nIt depends on the input type `I`, the output type `O`, and the error type `E`\n(by default `(I, nom::ErrorKind)`)\n\nThe `Ok` side is a pair containing the remainder of the input (the part of the data that\nwas not parsed) and the produced value. The `Err` side contains an instance of `nom::Err`.\n\nOutside of the parsing code, you can use the [Finish::finish] method to convert\nit to a more common result type","links":{"Finish::finish":"0:467:660"},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"O"}]}},{"type":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}},"0:4095:2657":{"id":"0:4095:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4409:1026":{"id":"0:4409:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2725":{"id":"0:2725","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[57,16],"end":[57,25]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:507:2503":{"id":"0:507:2503","crate_id":0,"name":"to_owned","span":{"filename":"src/internal.rs","begin":[179,2],"end":[181,3]},"visibility":"public","docs":"Obtaining ownership","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1073:2210":{"id":"0:1073:2210","crate_id":0,"name":"HexDisplay","span":{"filename":"src/traits.rs","begin":[1336,0],"end":[1344,1]},"visibility":"public","docs":"Helper trait to show a byte slice as a hex dump","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1074:2213","0:1075:2735"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4368:2612":{"id":"0:4368:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3317":{"id":"0:3317","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}},"items":["0:3320:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10646:668":{"id":"2:10646:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.\n\n# Examples\n\n```\nuse std::fmt;\n\nstruct Position {\n    longitude: f32,\n    latitude: f32,\n}\n\nimpl fmt::Debug for Position {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        f.debug_tuple(\"\")\n         .field(&self.longitude)\n         .field(&self.latitude)\n         .finish()\n    }\n}\n\nlet position = Position { longitude: 1.987, latitude: 2.983 };\nassert_eq!(format!(\"{position:?}\"), \"(1.987, 2.983)\");\n\nassert_eq!(format!(\"{position:#?}\"), \"(\n    1.987,\n    2.983,\n)\");\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10903:8868":{"id":"2:10903:8868","crate_id":2,"name":"write_i16","span":null,"visibility":"default","docs":"Writes a single `i16` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3764:2425":{"id":"0:3764:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:758:2577":{"id":"0:758:2577","crate_id":0,"name":"is_alpha","span":{"filename":"src/traits.rs","begin":[159,2],"end":[159,28]},"visibility":"default","docs":"Tests that self is an alphabetic character\n\nWarning: for `&str` it recognizes alphabetic\ncharacters outside of the 52 ASCII letters","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3091":{"id":"0:3091","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}},"items":["0:3094:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2834:2106":{"id":"0:2834:2106","crate_id":0,"name":"Complete","span":{"filename":"src/error.rs","begin":[403,2],"end":[403,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2832:2105":{"id":"0:2832:2105","crate_id":0,"name":"TakeWhile1","span":{"filename":"src/error.rs","begin":[402,2],"end":[402,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3430":{"id":"0:3430","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}},"items":["0:3433:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2680:4222":{"id":"0:2680:4222","crate_id":0,"name":"le_f64","span":{"filename":"src/number/streaming.rs","begin":[1222,0],"end":[1230,1]},"visibility":"public","docs":"Recognizes a little endian 8 bytes floating point number.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_f64;\n\nlet parser = |s| {\n  le_f64::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 3145728.0)));\nassert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13917:13110":{"id":"2:13917:13110","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5494:13110"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50197:5026","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4411:2617":{"id":"0:4411:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4425:2663":{"id":"0:4425:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2884:2426":{"id":"b:5:848-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:4751","5:851:2503","5:852:5430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3604:2425":{"id":"0:3604:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:10899:8864":{"id":"2:10899:8864","crate_id":2,"name":"write_u64","span":null,"visibility":"default","docs":"Writes a single `u64` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:820:2617":{"id":"0:820:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[356,2],"end":[362,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10663:668":{"id":"2:10663:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"pointer_trait_fmt\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5427:2036":{"id":"0:5427:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3729:1026":{"id":"0:3729:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3697:2663":{"id":"0:3697:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"12"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4481":{"id":"0:4481","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}}},"items":["0:4484:2425","0:4485:2548","0:4486:2608","0:4487:2610","0:4488:2612","0:4489:1026","0:4491:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3983:2657":{"id":"0:3983:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"19"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3915:4732":{"id":"2:3915:4732","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3493:963":{"id":"2:3493:963","crate_id":2,"name":"not","span":null,"visibility":"default","docs":"Performs the unary `!` operation.\n\n# Examples\n\n```\nassert_eq!(!true, false);\nassert_eq!(!false, true);\nassert_eq!(!1u8, 254);\nassert_eq!(!0u8, 255);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Not","id":"2:3491:2112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8937:5392":{"id":"2:8937:5392","crate_id":2,"name":"advance_by","span":null,"visibility":"default","docs":"Advances the iterator by `n` elements.\n\nThis method will eagerly skip `n` elements by calling [`next`] up to `n`\ntimes until [`None`] is encountered.\n\n`advance_by(n)` will return [`Ok(())`][Ok] if the iterator successfully advances by\n`n` elements, or [`Err(k)`][Err] if [`None`] is encountered, where `k` is the number\nof elements the iterator is advanced by before running out of elements (i.e. the\nlength of the iterator). Note that `k` is always less than `n`.\n\nCalling `advance_by(0)` can do meaningful work, for example [`Flatten`]\ncan advance its outer iterator until it finds an inner iterator that is not empty, which\nthen often allows it to return a more accurate `size_hint()` than in its initial state.\n\n[`Flatten`]: crate::iter::Flatten\n[`next`]: Iterator::next\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_advance_by)]\n\nlet a = [1, 2, 3, 4];\nlet mut iter = a.iter();\n\nassert_eq!(iter.advance_by(2), Ok(()));\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.advance_by(0), Ok(()));\nassert_eq!(iter.advance_by(100), Err(1)); // only `&4` was skipped\n```","links":{"Err":"2:48040:127","Ok":"2:48037:179","Iterator::next":"2:8927:933","`None`":"2:47911:178","crate::iter::Flatten":"2:6768:4933"},"attrs":["#[unstable(feature = \"iter_advance_by\", reason = \"recently added\", issue =\n\"77404\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1677:3319":{"id":"0:1677:3319","crate_id":0,"name":"take_until","span":{"filename":"src/bytes/complete.rs","begin":[435,0],"end":[450,1]},"visibility":"public","docs":"Returns the input slice up to the first occurrence of the pattern.\n\nIt doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`\nif the pattern wasn't met.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::take_until;\n\nfn until_eof(s: &str) -> IResult<&str, &str> {\n  take_until(\"eof\")(s)\n}\n\nassert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));\nassert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));\nassert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));\nassert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"FindSubstring","id":"0:971:2677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4888":{"id":"0:4888","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"}]},"items":["0:4903:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8720:137":{"id":"2:8720:137","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8722:692"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13858:12830":{"id":"2:13858:12830","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185","str::rsplitn":"2:13861:12818"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50002:5004","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6506-0:2718:128":{"id":"b:5:6506-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6504:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["5:6508:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9195:721":{"id":"2:9195:721","crate_id":2,"name":"gt","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\ngreater than those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().gt([1].iter()), false);\nassert_eq!([1].iter().gt([1, 2].iter()), false);\nassert_eq!([1, 2].iter().gt([1].iter()), true);\nassert_eq!([1, 2].iter().gt([1, 2].iter()), false);\n```","links":{"`Iterator`":"2:8925:160","Ord#lexicographical-comparison":"2:2956:181"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3609:1026":{"id":"0:3609:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4124:2425":{"id":"0:4124:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"1:6460:14277":{"id":"1:6460:14277","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6461:60559","1:6462:18004","1:6463:18005","1:6464:18007","1:6465:18006","1:6466:18008","1:6467:18009","1:6468:18011","1:6469:15925","1:6470:18014","1:6471:18015","1:6472:18016","1:6473:18017","1:6474:18018","1:6475:18019","1:6476:18012","1:6477:18013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3521:185":{"id":"2:3521:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `>>` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4240:2236":{"id":"0:4240:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13793":{"id":"2:13793","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12872:1362","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13794:803","2:13795:2046","2:13796:13424","2:13797:62643","2:13799:62644","2:13802:2051","2:13803:62645","2:13804:311","2:13805:57981","2:13806:3126","2:13808:57980","2:13810:2649","2:13812:12538","2:13814:14382","2:13815:62646","2:13816:2625","2:13817:57989","2:13818:2063","2:13819:2626","2:13820:1849","2:13821:13062","2:13822:13050","2:13823:2059","2:13824:13183","2:13825:13040","2:13826:12977","2:13829:57996","2:13832:57997","2:13835:2648","2:13839:5386","2:13843:2684","2:13846:12841","2:13849:12801","2:13852:13221","2:13855:13217","2:13858:12830","2:13861:12818","2:13864:62647","2:13867:62648","2:13870:4686","2:13873:13201","2:13876:13189","2:13879:13193","2:13882:62649","2:13884:62650","2:13886:2060","2:13888:62651","2:13889:62652","2:13890:62653","2:13893:62654","2:13896:22288","2:13899:57998","2:13902:62655","2:13905:62656","2:13908:62657","2:13911:2036","2:13913:12589","2:13914:57695","2:13915:57696","2:13916:57697","2:13917:13110","2:13919:13113","2:13920:13116"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2962":{"id":"0:2962","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}},"items":["0:2964:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3370:217-0:2901:127":{"id":"a:2:3370:217-0:2901:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:6004:1461":{"id":"0:6004:1461","crate_id":0,"name":"u8","span":{"filename":"src/character/streaming.rs","begin":[735,0],"end":[735,30]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:402:2418":{"id":"0:402:2418","crate_id":0,"name":"ParserIterator","span":{"filename":"src/combinator/mod.rs","begin":[672,0],"end":[676,1]},"visibility":"public","docs":"Main structure associated to the [iterator] function.","links":{"iterator":"0:397:2417"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:409","a:2:3370:217-0:402:2418","a:2:9616:5287-0:402:2418","a:2:3382:225-0:402:2418","a:2:3411:4730-0:402:2418","a:2:9615:5288-0:402:2418","b:2:4145-0:402:2418","b:2:3203-0:402:2418","b:2:2865-0:402:2418","b:2:2868-0:402:2418","b:2:3207-0:402:2418","b:2:3213-0:402:2418","b:2:3218-0:402:2418","0:414"]}},"0:388:2404":{"id":"0:388:2404","crate_id":0,"name":"into","span":{"filename":"src/combinator/mod.rs","begin":[624,0],"end":[639,1]},"visibility":"public","docs":"automatically converts the child parser's result to another type\n\nit will be able to convert the output value and the error value\nas long as the `Into` implementations are available\n\n```rust\n# use nom::IResult;\nuse nom::combinator::into;\nuse nom::character::complete::alpha1;\n# fn main() {\n\n fn parser1(i: &str) -> IResult<&str, &str> {\n   alpha1(i)\n }\n\n let mut parser2 = into(parser1);\n\n// the parser converts the &str output of the child parser into a Vec<u8>\nlet bytes: IResult<&str, Vec<u8>> = parser2(\"abcd\");\nassert_eq!(bytes, Ok((\"\", vec![97, 98, 99, 100])));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"O1"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O2"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E1"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E1"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E2"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E1"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3144":{"id":"0:3144","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}},"items":["0:3146:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2764:2073":{"id":"0:2764:2073","crate_id":0,"name":"MapRes","span":{"filename":"src/error.rs","begin":[368,2],"end":[368,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:13441:933":{"id":"2:13441:933","crate_id":2,"name":"next","span":null,"visibility":"default","docs":"Performs the next search step starting from the front.\n\n- Returns [`Match(a, b)`][SearchStep::Match] if `haystack[a..b]` matches\n  the pattern.\n- Returns [`Reject(a, b)`][SearchStep::Reject] if `haystack[a..b]` can\n  not match the pattern, even partially.\n- Returns [`Done`][SearchStep::Done] if every byte of the haystack has\n  been visited.\n\nThe stream of [`Match`][SearchStep::Match] and\n[`Reject`][SearchStep::Reject] values up to a [`Done`][SearchStep::Done]\nwill contain index ranges that are adjacent, non-overlapping,\ncovering the whole haystack, and laying on utf8 boundaries.\n\nA [`Match`][SearchStep::Match] result needs to contain the whole matched\npattern, however [`Reject`][SearchStep::Reject] results may be split up\ninto arbitrary many adjacent fragments. Both ranges may have zero length.\n\nAs an example, the pattern `\"aaa\"` and the haystack `\"cbaaaaab\"`\nmight produce the stream\n`[Reject(0, 1), Reject(1, 2), Match(2, 5), Reject(5, 8)]`","links":{"SearchStep::Done":"2:50287:2424","SearchStep::Match":"2:50279:12985","SearchStep::Reject":"2:50283:12986"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SearchStep","id":"2:50278:12906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1369:3095":{"id":"0:1369:3095","crate_id":0,"name":"Tuple","span":{"filename":"src/sequence/mod.rs","begin":[192,0],"end":[195,1]},"visibility":"public","docs":"Helper trait for the tuple combinator.\n\nThis trait is implemented for tuples of parsers of up to 21 elements.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1373:2036"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:1374","0:5384","0:5392","0:5402","0:5414","0:5428","0:5444","0:5462","0:5482","0:5504","0:5528","0:5554","0:5582","0:5612","0:5644","0:5678","0:5714","0:5752","0:5792","0:5834","0:5878"]}},"0:511:2503":{"id":"0:511:2503","crate_id":0,"name":"to_owned","span":{"filename":"src/internal.rs","begin":[197,2],"end":[199,3]},"visibility":"public","docs":"Obtaining ownership","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3102":{"id":"0:3102","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}},"items":["0:3104:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5918:185":{"id":"5:5918:185","crate_id":5,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after concatenation","links":{},"attrs":["#[unstable(feature = \"slice_concat_trait\", issue = \"27747\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:1844:3324":{"id":"0:1844:3324","crate_id":0,"name":"take_until1","span":{"filename":"src/bytes/streaming.rs","begin":[486,0],"end":[503,1]},"visibility":"public","docs":"Returns the non empty input slice up to the first occurrence of the pattern.\n\nIt doesn't consume the pattern.\n\n# Streaming Specific\n*Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't\ncontain the pattern or if the input is smaller than the pattern.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::streaming::take_until1;\n\nfn until_eof(s: &str) -> IResult<&str, &str> {\n  take_until1(\"eof\")(s)\n}\n\nassert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));\nassert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));\nassert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));\nassert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));\nassert_eq!(until_eof(\"eof\"),  Err(Err::Error(Error::new(\"eof\", ErrorKind::TakeUntil))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"FindSubstring","id":"0:971:2677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3503:4792":{"id":"2:3503:4792","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:185","2:3506:361"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[103,0],"end":[111,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["from_char","or"],"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"items":["0:106:1970","0:107:1976"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3233:2673":{"id":"0:3233:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3914":{"id":"0:3914","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}},"items":["0:3916:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4048:2612":{"id":"0:4048:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4131:2617":{"id":"0:4131:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4257:2663":{"id":"0:4257:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3369:1026":{"id":"0:3369:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4245:2548":{"id":"0:4245:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"2:13832:57997":{"id":"2:13832:57997","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13419:3185","prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3353:2673":{"id":"0:3353:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9143:60741":{"id":"1:9143:60741","crate_id":1,"name":"fract","span":null,"visibility":"default","docs":"Returns the floating point's fractional value, with its integer part removed.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3434":{"id":"0:3434","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}},"items":["0:3436:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3657:2663":{"id":"0:3657:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1221:2948":{"id":"0:1221:2948","crate_id":0,"name":"many0_count","span":{"filename":"src/multi/mod.rs","begin":[413,0],"end":[443,1]},"visibility":"public","docs":"Repeats the embedded parser until it fails\nand returns the number of successful iterations.\n# Arguments\n* `f` The parser to apply.\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::multi::many0_count;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, usize> {\n  many0_count(tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));\nassert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));\nassert_eq!(parser(\"123123\"), Ok((\"123123\", 0)));\nassert_eq!(parser(\"\"), Ok((\"\", 0)));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:6099":{"id":"0:6099","crate_id":0,"name":null,"span":{"filename":"src/number/mod.rs","begin":[7,27],"end":[7,29]},"visibility":{"restricted":{"parent":"0:2234:1851","path":"::number"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4085:2548":{"id":"0:4085:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:3035":{"id":"0:3035","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}}},"items":["0:3038:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6212:14312":{"id":"1:6212:14312","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6213:14547","1:6214:14548","1:6215:17121","1:6216:57735","1:6218:57739","1:6220:57736","1:6221:57737","1:6223:57738"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:4252":{"id":"0:4252","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"26"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4255:2657","0:4257:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1783:3231":{"id":"0:1783:3231","crate_id":0,"name":"is_not","span":{"filename":"src/bytes/streaming.rs","begin":[117,0],"end":[128,1]},"visibility":"public","docs":"Parse till certain characters are met.\n\nThe parser will return the longest slice till one of the characters of the combinator's argument are met.\n\nIt doesn't consume the matched character.\n\nIt will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met.\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::streaming::is_not;\n\nfn not_space(s: &str) -> IResult<&str, &str> {\n  is_not(\" \\t\\r\\n\")(s)\n}\n\nassert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));\nassert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));\nassert_eq!(not_space(\"Nospace\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(not_space(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arr",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2377:4049":{"id":"0:2377:4049","crate_id":0,"name":"le_i8","span":{"filename":"src/number/complete.rs","begin":[585,0],"end":[590,1]},"visibility":"public","docs":"Recognizes a signed 1 byte integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_i8;\n\nlet parser = |s| {\n  le_i8(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13794:803":{"id":"2:13794:803","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15857:4607"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2859:97":{"id":"2:2859:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2861:1836"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:4005:2548":{"id":"0:4005:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"2:3505:185":{"id":"2:3505:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `|` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:2934":{"id":"0:2934","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1"}},"items":["0:2936:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2874":{"id":"0:2874","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,25],"end":[364,27]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2925:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3249:1026":{"id":"0:3249:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:402:2418":{"id":"b:2:3203-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2350:4010":{"id":"0:2350:4010","crate_id":0,"name":"be_i32","span":{"filename":"src/number/complete.rs","begin":[321,0],"end":[326,1]},"visibility":"public","docs":"Recognizes a big endian signed 4 bytes integer.\n\n*Complete version*: Teturns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_i32;\n\nlet parser = |s| {\n  be_i32(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8770:5382":{"id":"2:8770:5382","crate_id":2,"name":"advance_back_by","span":null,"visibility":"default","docs":"Advances the iterator from the back by `n` elements.\n\n`advance_back_by` is the reverse version of [`advance_by`]. This method will\neagerly skip `n` elements starting from the back by calling [`next_back`] up\nto `n` times until [`None`] is encountered.\n\n`advance_back_by(n)` will return [`Ok(())`] if the iterator successfully advances by\n`n` elements, or [`Err(k)`] if [`None`] is encountered, where `k` is the number of\nelements the iterator is advanced by before running out of elements (i.e. the length\nof the iterator). Note that `k` is always less than `n`.\n\nCalling `advance_back_by(0)` can do meaningful work, for example [`Flatten`] can advance its\nouter iterator until it finds an inner iterator that is not empty, which then often\nallows it to return a more accurate `size_hint()` than in its initial state.\n\n[`advance_by`]: Iterator::advance_by\n[`Flatten`]: crate::iter::Flatten\n[`next_back`]: DoubleEndedIterator::next_back\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_advance_by)]\n\nlet a = [3, 4, 5, 6];\nlet mut iter = a.iter();\n\nassert_eq!(iter.advance_back_by(2), Ok(()));\nassert_eq!(iter.next_back(), Some(&4));\nassert_eq!(iter.advance_back_by(0), Ok(()));\nassert_eq!(iter.advance_back_by(100), Err(1)); // only `&3` was skipped\n```\n\n[`Ok(())`]: Ok\n[`Err(k)`]: Err","links":{"Ok":"2:48037:179","crate::iter::Flatten":"2:6768:4933","DoubleEndedIterator::next_back":"2:8769:5381","Err":"2:48040:127","`None`":"2:47911:178","Iterator::advance_by":"2:8937:5392"},"attrs":["#[unstable(feature = \"iter_advance_by\", reason = \"recently added\", issue =\n\"77404\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9108:5370":{"id":"2:9108:5370","crate_id":2,"name":"max_by","span":null,"visibility":"default","docs":"Returns the element that gives the maximum value with respect to the\nspecified comparison function.\n\nIf several elements are equally maximum, the last element is\nreturned. If the iterator is empty, [`None`] is returned.\n\n# Examples\n\n```\nlet a = [-3_i32, 0, 1, 5, -10];\nassert_eq!(*a.iter().max_by(|x, y| x.cmp(y)).unwrap(), 5);\n```","links":{"`None`":"2:47911:178"},"attrs":["#[stable(feature = \"iter_max_by\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["compare",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5430:5174":{"id":"1:5430:5174","crate_id":1,"name":"into_vec","span":null,"visibility":"default","docs":"Yields the underlying byte vector of this [`OsString`].\n\nSee the module documentation for an example.","links":{"`OsString`":"1:2651:184"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8223:4742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:831:2612":{"id":"0:831:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[386,2],"end":[388,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2149:3541":{"id":"0:2149:3541","crate_id":0,"name":"newline","span":{"filename":"src/character/streaming.rs","begin":[250,0],"end":[256,1]},"visibility":"public","docs":"Matches a newline character '\\\\n'.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::newline;\nassert_eq!(newline::<_, (_, ErrorKind)>(\"\\nc\"), Ok((\"c\", '\\n')));\nassert_eq!(newline::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));\nassert_eq!(newline::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13908:62657":{"id":"2:13908:62657","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:763:803":{"id":"0:763:803","crate_id":0,"name":"len","span":{"filename":"src/traits.rs","begin":[171,2],"end":[171,24]},"visibility":"default","docs":"Gets the len in bytes for self","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10597:5578":{"id":"2:10597:5578","crate_id":2,"name":"write_char","span":null,"visibility":"default","docs":"Writes a [`char`] into this writer, returning whether the write succeeded.\n\nA single [`char`] may be encoded as more than one byte.\nThis method can only succeed if the entire byte sequence was successfully\nwritten, and this method will not return until all data has been\nwritten or an error occurs.\n\n# Errors\n\nThis function will return an instance of [`Error`] on error.\n\n# Examples\n\n```\nuse std::fmt::{Error, Write};\n\nfn writer<W: Write>(f: &mut W, c: char) -> Result<(), Error> {\n    f.write_char(c)\n}\n\nlet mut buf = String::new();\nwriter(&mut buf, 'a').unwrap();\nwriter(&mut buf, 'b').unwrap();\nassert_eq!(&buf, \"ab\");\n```","links":{"`char`":"1:15857:4607","`Error`":"2:48972:128"},"attrs":["#[stable(feature = \"fmt_write_char\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23138:14719":{"id":"2:23138:14719","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23139:14651","2:23140:61093","2:23141:61094","2:23142:61095","2:23143:4207","2:23144:45292","2:23145:61096","2:23146:61097","2:23147:61098","2:23148:61099","2:23149:61100","2:23150:4386","2:23151:4387","2:23152:61101","2:23153:61102","2:23154:61103","2:23155:61104","2:23156:61105","2:23157:61106","2:23158:61107","2:23159:61108","2:23160:61109","2:23161:61110","2:23162:61111","2:23163:61112"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23240:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3931:2617":{"id":"0:3931:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3560:2236":{"id":"0:3560:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3953:2673":{"id":"0:3953:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2368:4036":{"id":"0:2368:4036","crate_id":0,"name":"le_u32","span":{"filename":"src/number/complete.rs","begin":[486,0],"end":[501,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 4 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_u32;\n\nlet parser = |s| {\n  le_u32(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:832:1026":{"id":"0:832:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[389,2],"end":[399,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9019:5412":{"id":"2:9019:5412","crate_id":2,"name":"try_fold","span":null,"visibility":"default","docs":"An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value.\n\n`try_fold()` takes two arguments: an initial value, and a closure with\ntwo arguments: an 'accumulator', and an element. The closure either\nreturns successfully, with the value that the accumulator should have\nfor the next iteration, or it returns failure, with an error value that\nis propagated back to the caller immediately (short-circuiting).\n\nThe initial value is the value the accumulator will have on the first\ncall. If applying the closure succeeded against every element of the\niterator, `try_fold()` returns the final accumulator as success.\n\nFolding is useful whenever you have a collection of something, and want\nto produce a single value from it.\n\n# Note to Implementors\n\nSeveral of the other (forward) methods have default implementations in\nterms of this one, so try to implement this explicitly if it can\ndo something better than the default `for` loop implementation.\n\nIn particular, try to have this call `try_fold()` on the internal parts\nfrom which this iterator is composed. If multiple calls are needed,\nthe `?` operator may be convenient for chaining the accumulator value\nalong, but beware any invariants that need to be upheld before those\nearly returns. This is a `&mut self` method, so iteration needs to be\nresumable after hitting an error here.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\n// the checked sum of all of the elements of the array\nlet sum = a.iter().try_fold(0i8, |acc, &x| acc.checked_add(x));\n\nassert_eq!(sum, Some(6));\n```\n\nShort-circuiting:\n\n```\nlet a = [10, 20, 30, 100, 40, 50];\nlet mut it = a.iter();\n\n// This sum overflows when adding the 100 element\nlet sum = it.try_fold(0i8, |acc, &x| acc.checked_add(x));\nassert_eq!(sum, None);\n\n// Because it short-circuited, the remaining elements are still\n// available through the iterator.\nassert_eq!(it.len(), 2);\nassert_eq!(it.next(), Some(&40));\n```\n\nWhile you cannot `break` from a closure, the [`ControlFlow`] type allows\na similar idea:\n\n```\nuse std::ops::ControlFlow;\n\nlet triangular = (1..30).try_fold(0_i8, |prev, x| {\n    if let Some(next) = prev.checked_add(x) {\n        ControlFlow::Continue(next)\n    } else {\n        ControlFlow::Break(prev)\n    }\n});\nassert_eq!(triangular, ControlFlow::Break(120));\n\nlet triangular = (1..30).try_fold(0_u64, |prev, x| {\n    if let Some(next) = prev.checked_add(x) {\n        ControlFlow::Continue(next)\n    } else {\n        ControlFlow::Break(prev)\n    }\n});\nassert_eq!(triangular, ControlFlow::Continue(435));\n```","links":{"`ControlFlow`":"2:46183:4810"},"attrs":["#[stable(feature = \"iterator_try_fold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9153:423":{"id":"2:9153:423","crate_id":2,"name":"cmp","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another.\n\n# Examples\n\n```\nuse std::cmp::Ordering;\n\nassert_eq!([1].iter().cmp([1].iter()), Ordering::Equal);\nassert_eq!([1].iter().cmp([1, 2].iter()), Ordering::Less);\nassert_eq!([1, 2].iter().cmp([1].iter()), Ordering::Greater);\n```","links":{"`Iterator`":"2:8925:160","Ord#lexicographical-comparison":"2:2956:181"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Ord","id":"2:2956:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1876:1850":{"id":"0:1876:1850","crate_id":0,"name":"character","span":{"filename":"src/character/mod.rs","begin":[1,0],"end":[116,1]},"visibility":"public","docs":"Character specific parsers and combinators\n\nFunctions recognizing specific characters","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1877:2216","0:2050:3108","0:2226:3362","0:2227:2599","0:2228:2583","0:2229:2585","0:2230:3465","0:2231:3472","0:2232:3479"],"is_stripped":false}},"1:4411:6361":{"id":"1:4411:6361","crate_id":1,"name":"read","span":null,"visibility":"default","docs":"Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.\n\nThis function does not provide any guarantees about whether it blocks\nwaiting for data, but if an object needs to block for a read and cannot,\nit will typically signal this via an [`Err`] return value.\n\nIf the return value of this method is [`Ok(n)`], then implementations must\nguarantee that `0 <= n <= buf.len()`. A nonzero `n` value indicates\nthat the buffer `buf` has been filled in with `n` bytes of data from this\nsource. If `n` is `0`, then it can indicate one of two scenarios:\n\n1. This reader has reached its \"end of file\" and will likely no longer\n   be able to produce bytes. Note that this does not mean that the\n   reader will *always* no longer be able to produce bytes. As an example,\n   on Linux, this method will call the `recv` syscall for a [`TcpStream`],\n   where returning zero indicates the connection was shut down correctly. While\n   for [`File`], it is possible to reach the end of file and get zero as result,\n   but if more data is appended to the file, future calls to `read` will return\n   more data.\n2. The buffer specified was 0 bytes in length.\n\nIt is not an error if the returned value `n` is smaller than the buffer size,\neven when the reader is not at the end of the stream yet.\nThis may happen for example because fewer bytes are actually available right now\n(e. g. being close to end-of-file) or because read() was interrupted by a signal.\n\nAs this trait is safe to implement, callers cannot rely on `n <= buf.len()` for safety.\nExtra care needs to be taken when `unsafe` functions are used to access the read bytes.\nCallers have to ensure that no unchecked out-of-bounds accesses are possible even if\n`n > buf.len()`.\n\nNo guarantees are provided about the contents of `buf` when this\nfunction is called, implementations cannot rely on any property of the\ncontents of `buf` being true. It is recommended that *implementations*\nonly write data to `buf` instead of reading its contents.\n\nCorrespondingly, however, *callers* of this method must not assume any guarantees\nabout how the implementation uses `buf`. The trait is safe to implement,\nso it is possible that the code that's supposed to write to the buffer might also read\nfrom it. It is your responsibility to make sure that `buf` is initialized\nbefore calling `read`. Calling `read` with an uninitialized `buf` (of the kind one\nobtains via [`MaybeUninit<T>`]) is not safe, and can lead to undefined behavior.\n\n[`MaybeUninit<T>`]: crate::mem::MaybeUninit\n\n# Errors\n\nIf this function encounters any form of I/O or other error, an error\nvariant will be returned. If an error is returned then it must be\nguaranteed that no bytes were read.\n\nAn error of the [`ErrorKind::Interrupted`] kind is non-fatal and the read\noperation should be retried if there is nothing else to do.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`Ok(n)`]: Ok\n[`File`]: crate::fs::File\n[`TcpStream`]: crate::net::TcpStream\n\n```no_run\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = [0; 10];\n\n    // read up to 10 bytes\n    let n = f.read(&mut buffer[..])?;\n\n    println!(\"The bytes: {:?}\", &buffer[..n]);\n    Ok(())\n}\n```","links":{"`Err`":"2:48040:127","`ErrorKind::Interrupted`":"1:10856:17082","Ok":"2:48037:179","crate::net::TcpStream":"1:5154:14525","crate::fs::File":"1:2909:129","crate::mem::MaybeUninit":"2:32715:4773"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13797:62643":{"id":"2:13797:62643","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2605:4031":{"id":"0:2605:4031","crate_id":0,"name":"le_u24","span":{"filename":"src/number/streaming.rs","begin":[430,0],"end":[445,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 3 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_u24;\n\nlet parser = |s| {\n  le_u24::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1335:3075":{"id":"0:1335:3075","crate_id":0,"name":"terminated","span":{"filename":"src/sequence/mod.rs","begin":[97,0],"end":[109,1]},"visibility":"public","docs":"Gets an object from the first parser,\nthen matches an object from the second parser and discards it.\n\n# Arguments\n* `first` The first parser to apply.\n* `second` The second parser to match an object.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::sequence::terminated;\nuse nom::bytes::complete::tag;\n\nlet mut parser = terminated(tag(\"abc\"), tag(\"efg\"));\n\nassert_eq!(parser(\"abcefg\"), Ok((\"\", \"abc\")));\nassert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"abc\")));\nassert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["first",{"kind":"generic","inner":"F"}],["second",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:1069":{"id":"0:1069","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1325,0],"end":[1331,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"error::VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:1071:490"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1683:3324":{"id":"0:1683:3324","crate_id":0,"name":"take_until1","span":{"filename":"src/bytes/complete.rs","begin":[471,0],"end":[487,1]},"visibility":"public","docs":"Returns the non empty input slice up to the first occurrence of the pattern.\n\nIt doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`\nif the pattern wasn't met.\n# Example\n```rust\n# use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\nuse nom::bytes::complete::take_until1;\n\nfn until_eof(s: &str) -> IResult<&str, &str> {\n  take_until1(\"eof\")(s)\n}\n\nassert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));\nassert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));\nassert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));\nassert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));\nassert_eq!(until_eof(\"eof\"), Err(Err::Error(Error::new(\"eof\", ErrorKind::TakeUntil))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["tag",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"FindSubstring","id":"0:971:2677","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4080:2236":{"id":"0:4080:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3870":{"id":"0:3870","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}},"items":["0:3873:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5401:2036":{"id":"0:5401:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2751:2023":{"id":"0:2751:2023","crate_id":0,"name":"Nom","span":{"filename":"src/error.rs","begin":[167,2],"end":[167,16]},"visibility":"default","docs":"Error kind given by various nom parsers","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2753:1568"]}},"0:3159:128":{"id":"0:3159:128","crate_id":0,"name":"Error","span":{"filename":"src/traits.rs","begin":[713,2],"end":[713,7]},"visibility":"default","docs":"Comparison failed","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3396:2236":{"id":"0:3396:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4149:2673":{"id":"0:4149:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:381:2391":{"id":"0:381:2391","crate_id":0,"name":"cut","span":{"filename":"src/combinator/mod.rs","begin":[592,0],"end":[600,1]},"visibility":"public","docs":"transforms an error to failure\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::combinator::cut;\nuse nom::character::complete::alpha1;\n# fn main() {\n\nlet mut parser = cut(alpha1);\n\nassert_eq!(parser(\"abcd;\"), Ok((\";\", \"abcd\")));\nassert_eq!(parser(\"123;\"), Err(Err::Failure((\"123;\", ErrorKind::Alpha))));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:6096":{"id":"0:6096","crate_id":0,"name":null,"span":{"filename":"src/number/mod.rs","begin":[7,16],"end":[7,25]},"visibility":{"restricted":{"parent":"0:2234:1851","path":"::number"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:6097:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4289:1026":{"id":"0:4289:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3537:4797":{"id":"2:3537:4797","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3539:1251"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:4209:1026":{"id":"0:4209:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3874:694":{"id":"2:3874:694","crate_id":2,"name":"from_output","span":null,"visibility":"default","docs":"Constructs the type from its `Output` type.\n\nThis should be implemented consistently with the `branch` method\nsuch that applying the `?` operator will get back the original value:\n`Try::from_output(x).branch() --> ControlFlow::Continue(x)`.\n\n# Examples\n\n```\n#![feature(try_trait_v2)]\nuse std::ops::Try;\n\nassert_eq!(<Result<_, String> as Try>::from_output(3), Ok(3));\nassert_eq!(<Option<_> as Try>::from_output(4), Some(4));\nassert_eq!(\n    <std::ops::ControlFlow<String, _> as Try>::from_output(5),\n    std::ops::ControlFlow::Continue(5),\n);\n\n# fn make_question_mark_work() -> Option<()> {\nassert_eq!(Option::from_output(4)?, 4);\n# None }\n# make_question_mark_work();\n\n// This is used, for example, on the accumulator in `try_fold`:\nlet r = std::iter::empty().try_fold(4, |_, ()| -> Option<_> { unreachable!() });\nassert_eq!(r, Some(4));\n```","links":{},"attrs":["#[unstable(feature = \"try_trait_v2\", issue = \"84277\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["output",{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:484:490":{"id":"0:484:490","crate_id":0,"name":"convert","span":{"filename":"src/internal.rs","begin":[131,2],"end":[136,3]},"visibility":"public","docs":"Automatically converts between errors if the underlying type supports it","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:78:983":{"id":"0:78:983","crate_id":0,"name":"or","span":{"filename":"src/error.rs","begin":[32,2],"end":[34,3]},"visibility":"default","docs":"Combines two existing errors. This function is used to compare errors\ngenerated in various branches of `alt`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2155:3553":{"id":"0:2155:3553","crate_id":0,"name":"anychar","span":{"filename":"src/character/streaming.rs","begin":[289,0],"end":[302,1]},"visibility":"public","docs":"Matches one byte as a character. Note that the input type will\naccept a `str`, but not a `&[u8]`, unlike many other nom parsers.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{character::streaming::anychar, Err, error::ErrorKind, IResult, Needed};\nassert_eq!(anychar::<_, (_, ErrorKind)>(\"abc\"), Ok((\"bc\",'a')));\nassert_eq!(anychar::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:4360:2236":{"id":"0:4360:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4211:2617":{"id":"0:4211:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23204:61111":{"id":"2:23204:61111","crate_id":2,"name":"reduce_max","span":null,"visibility":"default","docs":"Returns the maximum lane in the vector.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_max(), 4);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4457:2663":{"id":"0:4457:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3787":{"id":"0:3787","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}},"items":["0:3789:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4629":{"id":"0:4629","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"}]},"items":["0:4645:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:927":{"id":"0:927","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[837,0],"end":[862,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:930:2657","0:931:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:510":{"id":"0:510","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[194,0],"end":[200,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:511:2503"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2386:4061":{"id":"0:2386:4061","crate_id":0,"name":"le_i32","span":{"filename":"src/number/complete.rs","begin":[659,0],"end":[664,1]},"visibility":"public","docs":"Recognizes a little endian signed 4 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_i32;\n\nlet parser = |s| {\n  le_i32(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3014":{"id":"0:3014","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}},"items":["0:3017:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4817:2763":{"id":"0:4817:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3663:243":{"id":"2:3663:243","crate_id":2,"name":"Yield","span":null,"visibility":"default","docs":"The type of value this generator yields.\n\nThis associated type corresponds to the `yield` expression and the\nvalues which are allowed to be returned each time a generator yields.\nFor example an iterator-as-a-generator would likely have this type as\n`T`, the type being iterated over.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[153,0],"end":[171,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"error::Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:493:2498"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3394":{"id":"0:3394","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}},"items":["0:3396:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8932:503":{"id":"2:8932:503","crate_id":2,"name":"count","span":null,"visibility":"default","docs":"Consumes the iterator, counting the number of iterations and returning it.\n\nThis method will call [`next`] repeatedly until [`None`] is encountered,\nreturning the number of times it saw [`Some`]. Note that [`next`] has to be\ncalled at least once even if the iterator does not have any elements.\n\n[`next`]: Iterator::next\n\n# Overflow Behavior\n\nThe method does no guarding against overflows, so counting elements of\nan iterator with more than [`usize::MAX`] elements either produces the\nwrong result or panics. If debug assertions are enabled, a panic is\nguaranteed.\n\n# Panics\n\nThis function might panic if the iterator has more than [`usize::MAX`]\nelements.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\nassert_eq!(a.iter().count(), 3);\n\nlet a = [1, 2, 3, 4, 5];\nassert_eq!(a.iter().count(), 5);\n```","links":{"`Some`":"2:47913:220","`None`":"2:47911:178","`usize::MAX`":"2:32434:5748","Iterator::next":"2:8927:933"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:936:2657":{"id":"0:936:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[866,2],"end":[868,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3203-0:2884:2426":{"id":"b:2:3203-0:2884:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3206:2404"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:740":{"id":"0:740","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[80,0],"end":[87,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:742:968"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3299":{"id":"0:3299","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3303:2657","0:3305:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9017:5411":{"id":"2:9017:5411","crate_id":2,"name":"is_partitioned","span":null,"visibility":"default","docs":"Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return `true` precede all those that return `false`.\n\nSee also [`partition()`] and [`partition_in_place()`].\n\n[`partition()`]: Iterator::partition\n[`partition_in_place()`]: Iterator::partition_in_place\n\n# Examples\n\n```\n#![feature(iter_is_partitioned)]\n\nassert!(\"Iterator\".chars().is_partitioned(char::is_uppercase));\nassert!(!\"IntoIterator\".chars().is_partitioned(char::is_uppercase));\n```","links":{"Iterator::partition_in_place":"2:9002:5410","Iterator::partition":"2:8992:5409"},"attrs":["#[unstable(feature = \"iter_is_partitioned\", reason = \"new API\", issue =\n\"62544\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4475:5105":{"id":"1:4475:5105","crate_id":1,"name":"write_fmt","span":null,"visibility":"default","docs":"Writes a formatted string into this writer, returning any error\nencountered.\n\nThis method is primarily used to interface with the\n[`format_args!()`] macro, and it is rare that this should\nexplicitly be called. The [`write!()`] macro should be favored to\ninvoke this method instead.\n\nThis function internally uses the [`write_all`] method on\nthis trait and hence will continuously write data so long as no errors\nare received. This also means that partial writes are not indicated in\nthis signature.\n\n[`write_all`]: Write::write_all\n\n# Errors\n\nThis function will return any I/O error reported while formatting.\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    // this call\n    write!(buffer, \"{:.*}\", 2, 1.234567)?;\n    // turns into this:\n    buffer.write_fmt(format_args!(\"{:.*}\", 2, 1.234567))?;\n    Ok(())\n}\n```","links":{"Write::write_all":"1:4473:60626","`format_args!()`":"2:21:680","`write!()`":"2:14:2005"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"resolved_path","inner":{"name":"Arguments","id":"2:49046:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8687:4928":{"id":"2:8687:4928","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8689:5422"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:986:2226":{"id":"0:986:2226","crate_id":0,"name":"ParseTo","span":{"filename":"src/traits.rs","begin":[983,0],"end":[987,1]},"visibility":"public","docs":"Used to integrate `str`'s `parse()` method","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:988:2691"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:989","0:994"]}},"0:5643:2036":{"id":"0:5643:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13884:62650":{"id":"2:13884:62650","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3709:2673":{"id":"0:3709:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3484:567":{"id":"2:3484:567","crate_id":2,"name":"div_assign","span":null,"visibility":"default","docs":"Performs the `/=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx /= 2;\nassert_eq!(x, 6);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3585:2663":{"id":"0:3585:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"9"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3543:2657":{"id":"0:3543:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:82:1993":{"id":"0:82:1993","crate_id":0,"name":"FromExternalError","span":{"filename":"src/error.rs","begin":[50,0],"end":[54,1]},"visibility":"public","docs":"This trait is required by the `map_res` combinator to integrate\nerror types from external functions, like [std::str::FromStr]","links":{"std::str::FromStr":"2:13358:2552"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:85:1997"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:95","0:110","0:120","0:138"]}},"0:3070":{"id":"0:3070","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}},"items":["0:3073:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10904:8869":{"id":"2:10904:8869","crate_id":2,"name":"write_i32","span":null,"visibility":"default","docs":"Writes a single `i32` into this hasher.","links":{},"attrs":["#[stable(feature = \"hasher_write\", since = \"1.3.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3884:56962":{"id":"2:3884:56962","crate_id":2,"name":"TryType","span":null,"visibility":"default","docs":"The \"return\" type of this meta-function.","links":{},"attrs":["#[unstable(feature = \"try_trait_v2_residual\", issue = \"91285\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"generic","inner":"O"}}}},{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"TryType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Residual","id":"2:3882:4807","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"generic","inner":"Self"}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:3535:2657":{"id":"0:3535:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5013:2786":{"id":"0:5013:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5792":{"id":"0:5792","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnP","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"P"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnQ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Q"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnR","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnS","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"},{"kind":"generic","inner":"FnP"},{"kind":"generic","inner":"FnQ"},{"kind":"generic","inner":"FnR"},{"kind":"generic","inner":"FnS"}]},"items":["0:5833:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:2744:2017":{"id":"b:2:3207-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:967":{"id":"0:967","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[923,0],"end":[927,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"char"}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"char"}}}},"items":["0:970:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2374:4046":{"id":"0:2374:4046","crate_id":0,"name":"le_u128","span":{"filename":"src/number/complete.rs","begin":[552,0],"end":[567,1]},"visibility":"public","docs":"Recognizes a little endian unsigned 16 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_u128;\n\nlet parser = |s| {\n  le_u128(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u128"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13796:13424":{"id":"2:13796:13424","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13896:22288":{"id":"2:13896:22288","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13419:3185","prim@char":"1:15857:4607"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:529:2036":{"id":"0:529:2036","crate_id":0,"name":"parse","span":{"filename":"src/internal.rs","begin":[244,2],"end":[244,52]},"visibility":"default","docs":"A parser takes in input type, and returns a `Result` containing\neither the remaining input and the output value, or an error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8964:5400":{"id":"2:8964:5400","crate_id":2,"name":"skip_while","span":null,"visibility":"default","docs":"Creates an iterator that [`skip`]s elements based on a predicate.\n\n[`skip`]: Iterator::skip\n\n`skip_while()` takes a closure as an argument. It will call this\nclosure on each element of the iterator, and ignore elements\nuntil it returns `false`.\n\nAfter `false` is returned, `skip_while()`'s job is over, and the\nrest of the elements are yielded.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [-1i32, 0, 1];\n\nlet mut iter = a.iter().skip_while(|x| x.is_negative());\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), None);\n```\n\nBecause the closure passed to `skip_while()` takes a reference, and many\niterators iterate over references, this leads to a possibly confusing\nsituation, where the type of the closure argument is a double reference:\n\n```\nlet a = [-1, 0, 1];\n\nlet mut iter = a.iter().skip_while(|x| **x < 0); // need two *s!\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&1));\nassert_eq!(iter.next(), None);\n```\n\nStopping after an initial `false`:\n\n```\nlet a = [-1, 0, 1, -2];\n\nlet mut iter = a.iter().skip_while(|x| **x < 0);\n\nassert_eq!(iter.next(), Some(&0));\nassert_eq!(iter.next(), Some(&1));\n\n// while this would have been false, since we already got a false,\n// skip_while() isn't used any more\nassert_eq!(iter.next(), Some(&-2));\n\nassert_eq!(iter.next(), None);\n```","links":{"Iterator::skip":"2:8971:1330"},"attrs":["#[doc(alias = \"drop_while\")]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SkipWhile","id":"2:47175:4949","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3032":{"id":"0:3032","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}},"items":["0:3034:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[333,0],"end":[337,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["flat_map","and","or","map","into","and_then"],"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2221","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[]}],"lifetime":"'a"}}}],"bindings":[]}}}},"items":["0:563:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3771:2617":{"id":"0:3771:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:6086:3949":{"id":"b:2:3218-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4110":{"id":"0:4110","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}},"items":["0:4113:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14634:5406":{"id":"2:14634:5406","crate_id":2,"name":"by_ref","span":null,"visibility":"default","docs":"Creates a \"by reference\" adapter for this instance of `Allocator`.\n\nThe returned adapter also implements `Allocator` and will simply borrow this.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:2718:128":{"id":"b:2:3213-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3183:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3216:128","2:3217:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8685:4257":{"id":"2:8685:4257","crate_id":2,"name":"sum","span":null,"visibility":"default","docs":"Method which takes an iterator and generates `Self` from the elements by\n\"summing up\" the items.","links":{},"attrs":["#[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1636:3257":{"id":"0:1636:3257","crate_id":0,"name":"take_while","span":{"filename":"src/bytes/complete.rs","begin":[183,0],"end":[191,1]},"visibility":"public","docs":"Returns the longest input slice (if any) that matches the predicate.\n\nThe parser will return the longest slice that matches the given predicate *(a function that\ntakes the input and returns a bool)*.\n# Example\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::bytes::complete::take_while;\nuse nom::character::is_alphabetic;\n\nfn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {\n  take_while(is_alphabetic)(s)\n}\n\nassert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));\nassert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));\nassert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));\nassert_eq!(alpha(b\"\"), Ok((&b\"\"[..], &b\"\"[..])));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cond",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Input"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Input"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3325:2548":{"id":"0:3325:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:2804:2092":{"id":"0:2804:2092","crate_id":0,"name":"MultiSpace","span":{"filename":"src/error.rs","begin":[388,2],"end":[388,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:5211:2786":{"id":"0:5211:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3098":{"id":"0:3098","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"25"}}}},"items":["0:3101:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2446:641":{"id":"0:2446:641","crate_id":0,"name":"f64","span":{"filename":"src/number/complete.rs","begin":[1326,0],"end":[1338,1]},"visibility":"public","docs":"Recognizes an 8 byte floating point number\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,\notherwise if `nom::number::Endianness::Little` parse a little endian f64 float.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::f64;\n\nlet be_f64 = |s| {\n  f64(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n\nlet le_f64 = |s| {\n  f64(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2234:1851":{"id":"0:2234:1851","crate_id":0,"name":"number","span":{"filename":"src/number/mod.rs","begin":[1,0],"end":[15,1]},"visibility":"public","docs":"Parsers recognizing numbers","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2235:2216","0:2481:3108","0:6086:3949"],"is_stripped":false}},"0:733":{"id":"0:733","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[53,0],"end":[60,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}},"items":["0:734:968"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[231,0],"end":[238,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["description","source","type_id","cause","provide"],"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:524:2509"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2757:668":{"id":"0:2757:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[159,16],"end":[159,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:660:1844":{"id":"0:660:1844","crate_id":0,"name":"traits","span":{"filename":"src/traits.rs","begin":[1,0],"end":[1437,1]},"visibility":"crate","docs":"Traits input types have to implement to work with nom combinators","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:719:2224","0:731:2043","0:743:2561","0:756:2222","0:798:2223","0:807:2619","0:839:2635","0:840:2225","0:3154:2228","0:903:2227","0:938:2671","0:971:2677","0:986:2226","0:998:2229","0:1005:2706","0:1035:2723","0:1047:2727","0:1073:2210"],"is_stripped":true}},"0:4087:2610":{"id":"0:4087:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4183:2657":{"id":"0:4183:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3645:2548":{"id":"0:3645:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:2335:3986":{"id":"0:2335:3986","crate_id":0,"name":"be_u64","span":{"filename":"src/number/complete.rs","begin":[181,0],"end":[196,1]},"visibility":"public","docs":"Recognizes a big endian unsigned 8 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_u64;\n\nlet parser = |s| {\n  be_u64(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:9189:918":{"id":"2:9189:918","crate_id":2,"name":"ne","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are unequal to those of\nanother.\n\n# Examples\n\n```\nassert_eq!([1].iter().ne([1].iter()), false);\nassert_eq!([1].iter().ne([1, 2].iter()), true);\n```","links":{"`Iterator`":"2:8925:160"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4521":{"id":"0:4521","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"}]},"items":["0:4528:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3777:2663":{"id":"0:3777:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2139:3516":{"id":"0:2139:3516","crate_id":0,"name":"crlf","span":{"filename":"src/character/streaming.rs","begin":[140,0],"end":[155,1]},"visibility":"public","docs":"Recognizes the string \"\\r\\n\".\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::crlf;\nassert_eq!(crlf::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));\nassert_eq!(crlf::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));\nassert_eq!(crlf::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46288:198","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3790":{"id":"0:3790","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}},"items":["0:3793:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3488:2612":{"id":"0:3488:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2898":{"id":"0:2898","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[48,31],"end":[48,36]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2899:416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5428":{"id":"0:5428","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"}]},"items":["0:5443:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13882:62649":{"id":"2:13882:62649","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4172":{"id":"0:4172","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4175:2657","0:4177:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2868":{"id":"0:2868","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,9],"end":[364,14]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2869:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3025":{"id":"0:3025","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"14"}},"items":["0:3027:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5501:59526":{"id":"1:5501:59526","crate_id":1,"name":"read_at","span":null,"visibility":"default","docs":"Reads a number of bytes starting from a given offset.\n\nReturns the number of bytes read.\n\nThe offset is relative to the start of the file and thus independent\nfrom the current cursor.\n\nThe current file cursor is not affected by this function.\n\nNote that similar to [`File::read`], it is not an error to return with a\nshort read.\n\n[`File::read`]: fs::File::read\n\n# Examples\n\n```no_run\nuse std::io;\nuse std::fs::File;\nuse std::os::unix::prelude::FileExt;\n\nfn main() -> io::Result<()> {\n    let mut buf = [0u8; 8];\n    let file = File::open(\"foo.txt\")?;\n\n    // We now read 8 bytes from the offset 10.\n    let num_bytes_read = file.read_at(&mut buf, 10)?;\n    println!(\"read {num_bytes_read} bytes: {buf:?}\");\n    Ok(())\n}\n```","links":{"fs::File::read":"1:2951:6361"},"attrs":["#[stable(feature = \"file_offset\", since = \"1.15.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["offset",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:6505:1419":{"id":"5:6505:1419","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":"Converts the given value to a `String`.\n\n# Examples\n\nBasic usage:\n\n```\nlet i = 5;\nlet five = String::from(\"5\");\n\nassert_eq!(five, i.to_string());\n```","links":{},"attrs":["#[rustc_conversion_suggestion]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6463:18005":{"id":"1:6463:18005","crate_id":1,"name":"st_ino","span":null,"visibility":"default","docs":"Returns the inode number.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_ino());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3516:2236":{"id":"0:3516:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8772:5384":{"id":"2:8772:5384","crate_id":2,"name":"try_rfold","span":null,"visibility":"default","docs":"This is the reverse version of [`Iterator::try_fold()`]: it takes\nelements starting from the back of the iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [\"1\", \"2\", \"3\"];\nlet sum = a.iter()\n    .map(|&s| s.parse::<i32>())\n    .try_rfold(0, |acc, x| x.and_then(|y| Ok(acc + y)));\nassert_eq!(sum, Ok(6));\n```\n\nShort-circuiting:\n\n```\nlet a = [\"1\", \"rust\", \"3\"];\nlet mut it = a.iter();\nlet sum = it\n    .by_ref()\n    .map(|&s| s.parse::<i32>())\n    .try_rfold(0, |acc, x| x.and_then(|y| Ok(acc + y)));\nassert!(sum.is_err());\n\n// Because it short-circuited, the remaining elements are still\n// available through the iterator.\nassert_eq!(it.next_back(), Some(&\"1\"));\n```","links":{"`Iterator::try_fold()`":"2:9019:5412"},"attrs":["#[stable(feature = \"iterator_try_fold\", since = \"1.27.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["init",{"kind":"generic","inner":"B"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"B"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Try","id":"2:3871:230","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"B"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3118:2051":{"id":"0:3118:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3652":{"id":"0:3652","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"11"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3655:2657","0:3657:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:6086:3949":{"id":"b:2:3207-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3209:689"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4157":{"id":"0:4157","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}},"items":["0:4160:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9616:5287-0:6086:3949":{"id":"a:2:9616:5287-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13861:12818":{"id":"2:13861:12818","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13419:3185","prim@char":"1:15857:4607","str::splitn":"2:13858:12830"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50020:5002","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4297:2663":{"id":"0:4297:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23141:61094":{"id":"2:23141:61094","crate_id":2,"name":"Bits","span":null,"visibility":"default","docs":"Bit representation of this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"1:4473:60626":{"id":"1:4473:60626","crate_id":1,"name":"write_all","span":null,"visibility":"default","docs":"Attempts to write an entire buffer into this writer.\n\nThis method will continuously call [`write`] until there is no more data\nto be written or an error of non-[`ErrorKind::Interrupted`] kind is\nreturned. This method will not return until the entire buffer has been\nsuccessfully written or such an error occurs. The first error that is\nnot of [`ErrorKind::Interrupted`] kind generated from this method will be\nreturned.\n\nIf the buffer contains no data, this will never call [`write`].\n\n# Errors\n\nThis function will return the first error of\nnon-[`ErrorKind::Interrupted`] kind that [`write`] returns.\n\n[`write`]: Write::write\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    buffer.write_all(b\"some bytes\")?;\n    Ok(())\n}\n```","links":{"`ErrorKind::Interrupted`":"1:10856:17082","Write::write":"1:4468:2005"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4084:2425":{"id":"0:4084:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:4369:1026":{"id":"0:4369:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9156:5423":{"id":"2:9156:5423","crate_id":2,"name":"cmp_by","span":null,"visibility":"default","docs":"[Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\nof another with respect to the specified comparison function.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(iter_order_by)]\n\nuse std::cmp::Ordering;\n\nlet xs = [1, 2, 3, 4];\nlet ys = [1, 4, 9, 16];\n\nassert_eq!(xs.iter().cmp_by(&ys, |&x, &y| x.cmp(&y)), Ordering::Less);\nassert_eq!(xs.iter().cmp_by(&ys, |&x, &y| (x * x).cmp(&y)), Ordering::Equal);\nassert_eq!(xs.iter().cmp_by(&ys, |&x, &y| (2 * x).cmp(&y)), Ordering::Greater);\n```","links":{"`Iterator`":"2:8925:160","Ord#lexicographical-comparison":"2:2956:181"},"attrs":["#[unstable(feature = \"iter_order_by\", issue = \"64295\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}],["cmp",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38017:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3939":{"id":"0:3939","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3943:2657","0:3945:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23229:1244":{"id":"2:23229:1244","crate_id":2,"name":"saturating_add","span":null,"visibility":"default","docs":"Lanewise saturating add.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdUint};\nuse core::u32::MAX;\nlet x = Simd::from_array([2, 1, 0, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x + max;\nlet sat = x.saturating_add(max);\nassert_eq!(unsat, Simd::from_array([1, 0, MAX, MAX - 1]));\nassert_eq!(sat, max);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:774:2573":{"id":"0:774:2573","crate_id":0,"name":"as_char","span":{"filename":"src/traits.rs","begin":[208,2],"end":[210,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"char"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4025:2663":{"id":"0:4025:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1316:3059":{"id":"0:1316:3059","crate_id":0,"name":"pair","span":{"filename":"src/sequence/mod.rs","begin":[29,0],"end":[41,1]},"visibility":"public","docs":"Gets an object from the first parser,\nthen gets another object from the second parser.\n\n# Arguments\n* `first` The first parser to apply.\n* `second` The second parser to apply.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::sequence::pair;\nuse nom::bytes::complete::tag;\n\nlet mut parser = pair(tag(\"abc\"), tag(\"efg\"));\n\nassert_eq!(parser(\"abcefg\"), Ok((\"\", (\"abc\", \"efg\"))));\nassert_eq!(parser(\"abcefghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));\nassert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["first",{"kind":"generic","inner":"F"}],["second",{"kind":"generic","inner":"G"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"O1"},{"kind":"generic","inner":"O2"}]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3607:4733":{"id":"2:3607:4733","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3608:553"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3594:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2770:2076":{"id":"0:2770:2076","crate_id":0,"name":"IsNot","span":{"filename":"src/error.rs","begin":[371,2],"end":[371,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3387":{"id":"0:3387","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}},"items":["0:3389:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:977:2679":{"id":"0:977:2679","crate_id":0,"name":"find_substring","span":{"filename":"src/traits.rs","begin":[936,2],"end":[966,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["substr",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5992:738":{"id":"0:5992:738","crate_id":0,"name":"i64","span":{"filename":"src/character/streaming.rs","begin":[692,0],"end":[692,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13839:5386":{"id":"2:13839:5386","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:15857:4607","`None`":"2:47911:178","self::pattern":"2:13419:3185"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13444:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9616:5287-0:2718:128":{"id":"a:2:9616:5287-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:4051:2617":{"id":"0:4051:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5570:14285":{"id":"1:5570:14285","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5571:60545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6474:18018":{"id":"1:6474:18018","crate_id":1,"name":"st_ctime","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_ctime());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5923:2036":{"id":"0:5923:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"},{"kind":"generic","inner":"P"},{"kind":"generic","inner":"Q"},{"kind":"generic","inner":"R"},{"kind":"generic","inner":"S"},{"kind":"generic","inner":"T"},{"kind":"generic","inner":"U"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3594:117":{"id":"2:3594:117","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3595:227","2:3596:551"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2710:662":{"id":"0:2710:662","crate_id":0,"name":"float","span":{"filename":"src/number/streaming.rs","begin":[1542,0],"end":[1576,1]},"visibility":"public","docs":"Recognizes floating point number in text format and returns a f32.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::float;\n\nlet parser = |s| {\n  float(s)\n};\n\nassert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));\nassert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));\nassert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));\nassert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::traits::ParseTo","id":"0:986:2226","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"f32"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[185,0],"end":[191,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"items":["0:509:2503"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6467:18009":{"id":"1:6467:18009","crate_id":1,"name":"st_gid","span":null,"visibility":"default","docs":"Returns the group ID of the file owner.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_gid());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2741":{"id":"0:2741","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[150,23],"end":[150,32]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseError","id":"0:2730:2013","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:2743:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5510:60378":{"id":"1:5510:60378","crate_id":1,"name":"set_mode","span":null,"visibility":"default","docs":"Sets the underlying raw bits for this set of permissions.\n\n# Examples\n\n```no_run\nuse std::fs::File;\nuse std::os::unix::fs::PermissionsExt;\n\nfn main() -> std::io::Result<()> {\n    let f = File::create(\"foo.txt\")?;\n    let metadata = f.metadata()?;\n    let mut permissions = metadata.permissions();\n\n    permissions.set_mode(0o644); // Read/write for owner and read for others.\n    assert_eq!(permissions.mode(), 0o644);\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"fs_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mode",{"kind":"primitive","inner":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1374":{"id":"0:1374","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[197,0],"end":[203,1]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"Output"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"F"}]},"items":["0:1379:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:840:2225":{"id":"0:840:2225","crate_id":0,"name":"InputTakeAtPosition","span":{"filename":"src/traits.rs","begin":[444,0],"end":[496,1]},"visibility":"public","docs":"Methods to take as much input as possible until the provided function returns true for the current element.\n\nA large part of nom's basic parsers are built using this trait.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:841:2425","0:842:2641","0:845:2644","0:848:2646","0:851:2647"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:854","0:869","0:888"]}},"5:6191:4917":{"id":"5:6191:4917","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8478:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:891:2641":{"id":"0:891:2641","crate_id":0,"name":"split_at_position","span":{"filename":"src/traits.rs","begin":[628,2],"end":[637,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:869":{"id":"0:869","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[562,0],"end":[623,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:871:2425","0:872:2641","0:876:2644","0:880:2646","0:884:2647"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2881":{"id":"0:2881","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[364,39],"end":[364,43]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(deprecated, missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9087:5418":{"id":"2:9087:5418","crate_id":2,"name":"rposition","span":null,"visibility":"default","docs":"Searches for an element in an iterator from the right, returning its\nindex.\n\n`rposition()` takes a closure that returns `true` or `false`. It applies\nthis closure to each element of the iterator, starting from the end,\nand if one of them returns `true`, then `rposition()` returns\n[`Some(index)`]. If all of them return `false`, it returns [`None`].\n\n`rposition()` is short-circuiting; in other words, it will stop\nprocessing as soon as it finds a `true`.\n\n[`Some(index)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nassert_eq!(a.iter().rposition(|&x| x == 3), Some(2));\n\nassert_eq!(a.iter().rposition(|&x| x == 5), None);\n```\n\nStopping at the first `true`:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\nassert_eq!(iter.rposition(|&x| x == 2), Some(1));\n\n// we can still use `iter`, as there are more elements.\nassert_eq!(iter.next(), Some(&1));\n```","links":{"Some":"2:47913:220","`None`":"2:47911:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"2:8793:4926","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"2:8768:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3519:3165":{"id":"2:3519:3165","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:185","2:3522:1253"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:5986:737":{"id":"0:5986:737","crate_id":0,"name":"i32","span":{"filename":"src/character/streaming.rs","begin":[692,0],"end":[692,29]},"visibility":"public","docs":"will parse a number in text form to a number\n\n*Complete version*: can parse until the end of input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"i32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3499":{"id":"0:3499","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3503:2657","0:3505:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23479:61825":{"id":"2:23479:61825","crate_id":2,"name":"from_bitmask","span":null,"visibility":"default","docs":"Converts a bitmask to a mask.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bitmask",{"kind":"qualified_path","inner":{"name":"BitMask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToBitMask","id":"2:23476:23765","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4468:2005":{"id":"1:4468:2005","crate_id":1,"name":"write","span":null,"visibility":"default","docs":"Write a buffer into this writer, returning how many bytes were written.\n\nThis function will attempt to write the entire contents of `buf`, but\nthe entire write might not succeed, or the write may also generate an\nerror. A call to `write` represents *at most one* attempt to write to\nany wrapped object.\n\nCalls to `write` are not guaranteed to block waiting for data to be\nwritten, and a write which would otherwise block can be indicated through\nan [`Err`] variant.\n\nIf the return value is [`Ok(n)`] then it must be guaranteed that\n`n <= buf.len()`. A return value of `0` typically means that the\nunderlying object is no longer able to accept bytes and will likely not\nbe able to in the future as well, or that the buffer provided is empty.\n\n# Errors\n\nEach call to `write` may generate an I/O error indicating that the\noperation could not be completed. If an error is returned then no bytes\nin the buffer were written to this writer.\n\nIt is **not** considered an error if the entire buffer could not be\nwritten to this writer.\n\nAn error of the [`ErrorKind::Interrupted`] kind is non-fatal and the\nwrite operation should be retried if there is nothing else to do.\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = File::create(\"foo.txt\")?;\n\n    // Writes some prefix of the byte string, not necessarily all of it.\n    buffer.write(b\"some bytes\")?;\n    Ok(())\n}\n```\n\n[`Ok(n)`]: Ok","links":{"Ok":"2:48037:179","`ErrorKind::Interrupted`":"1:10856:17082","`Err`":"2:48040:127"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2210:3661":{"id":"0:2210:3661","crate_id":0,"name":"multispace1","span":{"filename":"src/character/streaming.rs","begin":[601,0],"end":[613,1]},"visibility":"public","docs":"Recognizes one or more spaces, tabs, carriage returns and line feeds.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non space character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::multispace1;\nassert_eq!(multispace1::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));\nassert_eq!(multispace1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::MultiSpace))));\nassert_eq!(multispace1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3501:359":{"id":"2:3501:359","crate_id":2,"name":"bitand","span":null,"visibility":"default","docs":"Performs the `&` operation.\n\n# Examples\n\n```\nassert_eq!(true & false, false);\nassert_eq!(true & true, true);\nassert_eq!(5u8 & 1u8, 1);\nassert_eq!(5u8 & 2u8, 0);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"BitAnd","id":"2:3498:4791","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3462:185":{"id":"2:3462:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `%` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:3449:4783":{"id":"2:3449:4783","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3451:185","2:3452:903"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2629:4065":{"id":"0:2629:4065","crate_id":0,"name":"le_i64","span":{"filename":"src/number/streaming.rs","begin":[656,0],"end":[661,1]},"visibility":"public","docs":"Recognizes a little endian signed 8 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::le_i64;\n\nlet parser = |s| {\n  le_i64::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2584:3999":{"id":"0:2584:3999","crate_id":0,"name":"be_i16","span":{"filename":"src/number/streaming.rs","begin":[261,0],"end":[266,1]},"visibility":"public","docs":"Recognizes a big endian signed 2 bytes integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_i16;\n\nlet parser = be_i16::<_, (_, ErrorKind)>;\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(2))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23265:14651":{"id":"2:23265:14651","crate_id":2,"name":"Mask","span":null,"visibility":"default","docs":"The mask type returned by each comparison.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:3967:2610":{"id":"0:3967:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3411:4730":{"id":"2:3411:4730","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3737:2663":{"id":"0:3737:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3411:4730-0:6086:3949":{"id":"a:2:3411:4730-0:6086:3949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3525:4794":{"id":"2:3525:4794","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:360"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3357":{"id":"0:3357","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}}},"items":["0:3360:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11290:2649":{"id":"2:11290:2649","crate_id":2,"name":"get_unchecked","span":null,"visibility":"default","docs":"Returns a shared reference to the output at this location, without\nperforming any bounds checking.\nCalling this method with an out-of-bounds index or a dangling `slice` pointer\nis *[undefined behavior]* even if the resulting reference is not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"1:6234:14344":{"id":"1:6234:14344","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6235:6341","1:6236:18080","1:6237:60439","1:6238:60440","1:6239:60441","1:6240:6336"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10402:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2425:738":{"id":"0:2425:738","crate_id":0,"name":"i64","span":{"filename":"src/number/complete.rs","begin":[1105,0],"end":[1117,1]},"visibility":"public","docs":"Recognizes a signed 8 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::i64;\n\nlet be_i64 = |s| {\n  i64(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));\nassert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_i64 = |s| {\n  i64(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));\nassert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:144:668":{"id":"0:144:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[211,2],"end":[222,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10594:209","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3429:2673":{"id":"0:3429:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2969":{"id":"0:2969","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"6"}},"items":["0:2971:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3713:2673":{"id":"0:3713:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2720:1971":{"id":"0:2720:1971","crate_id":0,"name":"input","span":{"filename":"src/error.rs","begin":[60,2],"end":[60,14]},"visibility":"public","docs":"position of the error in the input data","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"I"}},"b:2:4145-0:2744:2017":{"id":"b:2:4145-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10666:4716":{"id":"2:10666:4716","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10667:668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2983":{"id":"0:2983","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}},"items":["0:2985:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:850:4751":{"id":"5:850:4751","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:913:2663":{"id":"0:913:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[771,2],"end":[783,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:965:2673":{"id":"0:965:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[918,2],"end":[920,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"char"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5481:2036":{"id":"0:5481:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2941":{"id":"0:2941","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"2"}},"items":["0:2943:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3833:2673":{"id":"0:3833:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1047:2727":{"id":"0:1047:2727","crate_id":0,"name":"ErrorConvert","span":{"filename":"src/traits.rs","begin":[1277,0],"end":[1280,1]},"visibility":"public","docs":"Equivalent From implementation to avoid orphan rules in bits parsers","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1049:490"],"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:1050","0:1053","0:1059","0:1062","0:1065","0:1069"]}},"a:2:3411:4730-0:3154:2228":{"id":"a:2:3411:4730-0:3154:2228","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5068:2548":{"id":"1:5068:2548","crate_id":1,"name":"Iter","span":null,"visibility":"default","docs":"Returned iterator over socket addresses which this type may correspond\nto.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[{"eq_predicate":{"lhs":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"ToSocketAddrs","id":"1:5067:14316","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"rhs":{"type":{"kind":"resolved_path","inner":{"name":"SocketAddr","id":"1:11127:14318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"2:23193:61093":{"id":"2:23193:61093","crate_id":2,"name":"Scalar","span":null,"visibility":"default","docs":"Scalar type contained by this SIMD vector type.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:12860:2425":{"id":"2:12860:2425","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The element type of the slice being matched on.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:13802:2051":{"id":"2:13802:2051","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12883:2549"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5104":{"id":"0:5104","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnL","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnM","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnN","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"N"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnO","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"},{"kind":"generic","inner":"FnL"},{"kind":"generic","inner":"FnM"},{"kind":"generic","inner":"FnN"},{"kind":"generic","inner":"FnO"}]},"items":["0:5137:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[84,0],"end":[89,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromExternalError","id":"0:82:1993","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["0:98:1997"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9615:5288-0:2744:2017":{"id":"a:2:9615:5288-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3492":{"id":"0:3492","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3495:2657","0:3497:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10657:668":{"id":"2:10657:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3314":{"id":"0:3314","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}},"items":["0:3316:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:543:983":{"id":"0:543:983","crate_id":0,"name":"or","span":{"filename":"src/internal.rs","begin":[296,2],"end":[302,3]},"visibility":"default","docs":"Applies a second parser over the input if the first one failed","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"Or","id":"0:627:2525","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"G"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"core::marker::Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23195:1245":{"id":"2:23195:1245","crate_id":2,"name":"saturating_sub","span":null,"visibility":"default","docs":"Lanewise saturating subtract.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet x = Simd::from_array([MIN, -2, -1, MAX]);\nlet max = Simd::splat(MAX);\nlet unsat = x - max;\nlet sat = x.saturating_sub(max);\nassert_eq!(unsat, Simd::from_array([1, MAX, MIN, 0]));\nassert_eq!(sat, Simd::from_array([MIN, MIN, MIN, 0]));","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["second",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13443:12981":{"id":"2:13443:12981","crate_id":2,"name":"next_reject","span":null,"visibility":"default","docs":"Finds the next [`Reject`][SearchStep::Reject] result. See [`next()`][Searcher::next]\nand [`next_match()`][Searcher::next_match].\n\nUnlike [`next()`][Searcher::next], there is no guarantee that the returned ranges\nof this and [`next_match`][Searcher::next_match] will overlap.","links":{"Searcher::next":"2:13441:933","Searcher::next_match":"2:13442:12980","SearchStep::Reject":"2:50283:12986"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3640:2236":{"id":"0:3640:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13448:12984":{"id":"2:13448:12984","crate_id":2,"name":"next_reject_back","span":null,"visibility":"default","docs":"Finds the next [`Reject`][SearchStep::Reject] result.\nSee [`next_back()`][ReverseSearcher::next_back].","links":{"SearchStep::Reject":"2:50283:12986","ReverseSearcher::next_back":"2:13446:5381"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6472:18016":{"id":"1:6472:18016","crate_id":1,"name":"st_mtime","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_mtime());\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:5103:2786":{"id":"0:5103:2786","crate_id":0,"name":"permutation","span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2850:2114":{"id":"0:2850:2114","crate_id":0,"name":"Verify","span":{"filename":"src/error.rs","begin":[411,2],"end":[411,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"1:1032:4751":{"id":"1:1032:4751","crate_id":1,"name":"Owned","span":null,"visibility":"default","docs":"Container type for copied ASCII characters.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":{"since":"1.26.0","note":"use inherent methods instead"},"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4683":{"id":"0:4683","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"N","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"},{"kind":"generic","inner":"L"},{"kind":"generic","inner":"M"},{"kind":"generic","inner":"N"},{"kind":"generic","inner":"O"}]},"items":["0:4702:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2353:4014":{"id":"0:2353:4014","crate_id":0,"name":"be_i64","span":{"filename":"src/number/complete.rs","begin":[344,0],"end":[349,1]},"visibility":"public","docs":"Recognizes a big endian signed 8 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_i64;\n\nlet parser = |s| {\n  be_i64(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:6475:18019":{"id":"1:6475:18019","crate_id":1,"name":"st_ctime_nsec","span":null,"visibility":"default","docs":"Returns the last status change time of the file, in nanoseconds since [`st_ctime`].\n\n[`st_ctime`]: Self::st_ctime\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::io;\nuse std::os::linux::fs::MetadataExt;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    println!(\"{}\", meta.st_ctime_nsec());\n    Ok(())\n}\n```","links":{"Self::st_ctime":"1:6474:18018"},"attrs":["#[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4417:2663":{"id":"0:4417:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3472:272":{"id":"2:3472:272","crate_id":2,"name":"add_assign","span":null,"visibility":"default","docs":"Performs the `+=` operation.\n\n# Example\n\n```\nlet mut x: u32 = 12;\nx += 1;\nassert_eq!(x, 13);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:73:1966":{"id":"0:73:1966","crate_id":0,"name":"ParseError","span":{"filename":"src/error.rs","begin":[16,0],"end":[35,1]},"visibility":"public","docs":"This trait must be implemented by the error type of a nom parser.\n\nThere are already implementations of it for `(Input, ErrorKind)`\nand `VerboseError<Input>`.\n\nIt provides methods to create an error from some combinators,\nand combine existing errors in combinators like `alt`.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:75:1970","0:76:1976","0:77:1978","0:78:983"],"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:89","0:104","0:114","0:130"]}},"0:4337:2663":{"id":"0:4337:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4332":{"id":"0:4332","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4335:2657","0:4337:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11292:762":{"id":"2:11292:762","crate_id":2,"name":"index","span":null,"visibility":"default","docs":"Returns a shared reference to the output at this location, panicking\nif out of bounds.","links":{},"attrs":["#[unstable(feature = \"slice_index_methods\", issue = \"none\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["slice",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SliceIndex","id":"2:11285:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13824:13183":{"id":"2:13824:13183","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50162:5030","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23197:62170":{"id":"2:23197:62170","crate_id":2,"name":"saturating_abs","span":null,"visibility":"default","docs":"Lanewise saturating absolute value, implemented in Rust.\nAs abs(), except the MIN value becomes MAX instead of itself.\n\n# Examples\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{Simd, SimdInt};\nuse core::i32::{MIN, MAX};\nlet xs = Simd::from_array([MIN, -2, 0, 3]);\nlet unsat = xs.abs();\nlet sat = xs.saturating_abs();\nassert_eq!(unsat, Simd::from_array([MIN, 2, 0, 3]));\nassert_eq!(sat, Simd::from_array([MAX, 2, 0, 3]));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8725:2425":{"id":"2:8725:2425","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":"The type of the elements being iterated over.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:9191:837":{"id":"2:9191:837","crate_id":2,"name":"lt","span":null,"visibility":"default","docs":"Determines if the elements of this [`Iterator`] are [lexicographically](Ord#lexicographical-comparison)\nless than those of another.\n\n# Examples\n\n```\nassert_eq!([1].iter().lt([1].iter()), false);\nassert_eq!([1].iter().lt([1, 2].iter()), true);\nassert_eq!([1, 2].iter().lt([1].iter()), false);\nassert_eq!([1, 2].iter().lt([1, 2].iter()), false);\n```","links":{"`Iterator`":"2:8925:160","Ord#lexicographical-comparison":"2:2956:181"},"attrs":["#[stable(feature = \"iter_order\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"I"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2969:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3366:2608":{"id":"0:3366:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:1443:3184":{"id":"0:1443:3184","crate_id":0,"name":"tag","span":{"filename":"src/bits/complete.rs","begin":[85,0],"end":[106,1]},"visibility":"public","docs":"Generates a parser taking `count` bits and comparing them to `pattern`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["pattern",{"kind":"generic","inner":"O"}],["count",{"kind":"generic","inner":"C"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"C"},"bounds":[{"trait_bound":{"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"O"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3180:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AddAssign","id":"2:3470:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shl","id":"2:3513:3164","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Shr","id":"2:3519:3165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"O"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13916:57697":{"id":"2:13916:57697","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3725:2548":{"id":"0:3725:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4538":{"id":"0:4538","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"}]},"items":["0:4547:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10908:8873":{"id":"2:10908:8873","crate_id":2,"name":"write_length_prefix","span":null,"visibility":"default","docs":"Writes a length prefix into this hasher, as part of being prefix-free.\n\nIf you're implementing [`Hash`] for a custom collection, call this before\nwriting its contents to this `Hasher`.  That way\n`(collection![1, 2, 3], collection![4, 5])` and\n`(collection![1, 2], collection![3, 4, 5])` will provide different\nsequences of values to the `Hasher`\n\nThe `impl<T> Hash for [T]` includes a call to this method, so if you're\nhashing a slice (or array or vector) via its `Hash::hash` method,\nyou should **not** call this yourself.\n\nThis method is only for providing domain separation.  If you want to\nhash a `usize` that represents part of the *data*, then it's important\nthat you pass it to [`Hasher::write_usize`] instead of to this method.\n\n# Examples\n\n```\n#![feature(hasher_prefixfree_extras)]\n# // Stubs to make the `impl` below pass the compiler\n# struct MyCollection<T>(Option<T>);\n# impl<T> MyCollection<T> {\n#     fn len(&self) -> usize { todo!() }\n# }\n# impl<'a, T> IntoIterator for &'a MyCollection<T> {\n#     type Item = T;\n#     type IntoIter = std::iter::Empty<T>;\n#     fn into_iter(self) -> Self::IntoIter { todo!() }\n# }\n\nuse std::hash::{Hash, Hasher};\nimpl<T: Hash> Hash for MyCollection<T> {\n    fn hash<H: Hasher>(&self, state: &mut H) {\n        state.write_length_prefix(self.len());\n        for elt in self {\n            elt.hash(state);\n        }\n    }\n}\n```\n\n# Note to Implementers\n\nIf you've decided that your `Hasher` is willing to be susceptible to\nHash-DoS attacks, then you might consider skipping hashing some or all\nof the `len` provided in the name of increased performance.","links":{"`Hash`":"2:10883:143","`Hasher::write_usize`":"2:10901:8866"},"attrs":["#[unstable(feature = \"hasher_prefixfree_extras\", issue = \"96762\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["len",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3897:2663":{"id":"0:3897:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23200:62173":{"id":"2:23200:62173","crate_id":2,"name":"is_negative","span":null,"visibility":"default","docs":"Returns true for each negative lane and false if it is zero or positive.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10906:8871":{"id":"2:10906:8871","crate_id":2,"name":"write_i128","span":null,"visibility":"default","docs":"Writes a single `i128` into this hasher.","links":{},"attrs":["#[stable(feature = \"i128\", since = \"1.26.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:797:803":{"id":"0:797:803","crate_id":0,"name":"len","span":{"filename":"src/traits.rs","begin":[296,2],"end":[298,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4077":{"id":"0:4077","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}},"items":["0:4080:2236"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3807:2610":{"id":"0:3807:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2958:2938":{"id":"2:2958:2938","crate_id":2,"name":"max","span":null,"visibility":"default","docs":"Compares and returns the maximum of two values.\n\nReturns the second argument if the comparison determines them to be equal.\n\n# Examples\n\n```\nassert_eq!(2, 1.max(2));\nassert_eq!(2, 2.max(2));\n```","links":{},"attrs":["#[stable(feature = \"ord_max_min\", since = \"1.21.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2887:2469":{"id":"0:2887:2469","crate_id":0,"name":"Size","span":{"filename":"src/internal.rs","begin":[54,2],"end":[54,20]},"visibility":"default","docs":"Contains the required data size in bytes","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2889:1568"]}},"2:23148:61099":{"id":"2:23148:61099","crate_id":2,"name":"is_sign_positive","span":null,"visibility":"default","docs":"Returns true for each lane if it has a positive sign, including\n`+0.0`, `NaN`s with positive sign bit and positive infinity.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6220:57736":{"id":"1:6220:57736","crate_id":1,"name":"exec","span":null,"visibility":"default","docs":"Performs all the required setup by this `Command`, followed by calling\nthe `execvp` syscall.\n\nOn success this function will not return, and otherwise it will return\nan error indicating why the exec (or another part of the setup of the\n`Command`) failed.\n\n`exec` not returning has the same implications as calling\n[`process::exit`] – no destructors on the current stack or any other\nthread’s stack will be run. Therefore, it is recommended to only call\n`exec` at a point where it is fine to not run any destructors. Note,\nthat the `execvp` syscall independently guarantees that all memory is\nfreed and all file descriptors with the `CLOEXEC` option (set by default\non all file descriptors opened by the standard library) are closed.\n\nThis function, unlike `spawn`, will **not** `fork` the process to create\na new child. Like spawn, however, the default behavior for the stdio\ndescriptors will be to inherited from the current process.\n\n# Notes\n\nThe process may be in a \"broken state\" if this function returns in\nerror. For example the working directory, environment variables, signal\nhandling settings, various user/group information, or aspects of stdio\nfile descriptors may have changed. If a \"transactional spawn\" is\nrequired to gracefully handle errors it is recommended to use the\ncross-platform `spawn` instead.","links":{"`process::exit`":"1:7592:14401"},"attrs":["#[stable(feature = \"process_exec2\", since = \"1.9.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:6087:3951":{"id":"0:6087:3951","crate_id":0,"name":"Big","span":{"filename":"src/number/mod.rs","begin":[10,2],"end":[10,5]},"visibility":"default","docs":"Big endian","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:801:2608":{"id":"0:801:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[313,2],"end":[313,45]},"visibility":"default","docs":"An iterator over the input type, producing the item","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:2776:2079":{"id":"0:2776:2079","crate_id":0,"name":"SeparatedNonEmptyList","span":{"filename":"src/error.rs","begin":[374,2],"end":[374,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:2868-0:402:2418":{"id":"b:2:2868-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":["2:2870:57555"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4143:2657":{"id":"0:4143:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4036:2236":{"id":"0:4036:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3647:2610":{"id":"0:3647:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3630:386":{"id":"2:3630:386","crate_id":2,"name":"call_once","span":null,"visibility":"default","docs":"Performs the call operation.","links":{},"attrs":["#[unstable(feature = \"fn_traits\", issue = \"29625\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["args",{"kind":"generic","inner":"Args"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"FnOnce","id":"2:3627:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":{"Other":"\"rust-call\""}},"has_body":false}},"0:2202:3648":{"id":"0:2202:3648","crate_id":0,"name":"space1","span":{"filename":"src/character/streaming.rs","begin":[550,0],"end":[562,1]},"visibility":"public","docs":"Recognizes one or more spaces and tabs.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non space character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::space1;\nassert_eq!(space1::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));\nassert_eq!(space1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::Space))));\nassert_eq!(space1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3685:763":{"id":"2:3685:763","crate_id":2,"name":"index_mut","span":null,"visibility":"default","docs":"Performs the mutable indexing (`container[index]`) operation.\n\n# Panics\n\nMay panic if the index is out of bounds.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[track_caller]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"generic","inner":"Idx"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Index","id":"2:3679:4800","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:786:2583":{"id":"0:786:2583","crate_id":0,"name":"is_hex_digit","span":{"filename":"src/traits.rs","begin":[257,2],"end":[259,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3375:2657":{"id":"0:3375:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"4"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4128:2612":{"id":"0:4128:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4529":{"id":"0:4529","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Alt","id":"0:1101:2075","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"}]},"items":["0:4537:2763"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5533:60812":{"id":"1:5533:60812","crate_id":1,"name":"mtime","span":null,"visibility":"default","docs":"Returns the last modification time of the file, in seconds since Unix Epoch.\n\n# Examples\n\n```no_run\nuse std::fs;\nuse std::os::unix::fs::MetadataExt;\nuse std::io;\n\nfn main() -> io::Result<()> {\n    let meta = fs::metadata(\"some_file\")?;\n    let last_modification_time = meta.mtime();\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"metadata_ext\", since = \"1.1.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:475:2473":{"id":"0:475:2473","crate_id":0,"name":"is_known","span":{"filename":"src/internal.rs","begin":[67,2],"end":[69,3]},"visibility":"public","docs":"Indicates if we know how many bytes we need","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4364:2425":{"id":"0:4364:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"0:3925:2548":{"id":"0:3925:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"2:2974:721":{"id":"2:2974:721","crate_id":2,"name":"gt","span":null,"visibility":"default","docs":"This method tests greater than (for `self` and `other`) and is used by the `>` operator.\n\n# Examples\n\n```\nlet result = 1.0 > 2.0;\nassert_eq!(result, false);\n\nlet result = 2.0 > 2.0;\nassert_eq!(result, false);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Rhs"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1039":{"id":"0:1039","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1246,0],"end":[1251,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"ToUsize","id":"0:1035:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"primitive","inner":"u16"},"items":["0:1040:2725"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2434:4212":{"id":"0:2434:4212","crate_id":0,"name":"be_f64","span":{"filename":"src/number/complete.rs","begin":[1200,0],"end":[1208,1]},"visibility":"public","docs":"Recognizes a big endian 8 bytes floating point number.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_f64;\n\nlet parser = |s| {\n  be_f64(s)\n};\n\nassert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));\nassert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3451:2617":{"id":"0:3451:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3143:2051":{"id":"0:3143:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2010:3620":{"id":"0:2010:3620","crate_id":0,"name":"oct_digit1","span":{"filename":"src/character/complete.rs","begin":[533,0],"end":[539,1]},"visibility":"public","docs":"Recognizes one or more octal characters: 0-7\n\n*Complete version*: Will return an error if there's not enough input data,\nor the whole input if no terminating token is found (a non octal digit character).\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::oct_digit1;\nfn parser(input: &str) -> IResult<&str, &str> {\n    oct_digit1(input)\n}\n\nassert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));\nassert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::OctDigit))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::OctDigit))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3945:2663":{"id":"0:3945:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"18"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2026:3648":{"id":"0:2026:3648","crate_id":0,"name":"space1","span":{"filename":"src/character/complete.rs","begin":[636,0],"end":[648,1]},"visibility":"public","docs":"Recognizes one or more spaces and tabs.\n\n*Complete version*: Will return an error if there's not enough input data,\nor the whole input if no terminating token is found (a non space character).\n# Example\n\n```\n# use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};\n# use nom::character::complete::space1;\nfn parser(input: &str) -> IResult<&str, &str> {\n    space1(input)\n}\n\nassert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));\nassert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::Space))));\nassert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Space))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3172":{"id":"0:3172","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1047,0],"end":[1047,24]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:3174:1331"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:938:2671":{"id":"0:938:2671","crate_id":0,"name":"FindToken","span":{"filename":"src/traits.rs","begin":[876,0],"end":[879,1]},"visibility":"public","docs":"Look for a token in self","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:940:2673"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:941","0:944","0:947","0:951","0:955","0:959","0:963","0:967","0:3227","0:3230","0:3267","0:3270","0:3307","0:3310","0:3347","0:3350","0:3387","0:3390","0:3427","0:3430","0:3467","0:3470","0:3507","0:3510","0:3547","0:3550","0:3587","0:3590","0:3627","0:3630","0:3667","0:3670","0:3707","0:3710","0:3747","0:3750","0:3787","0:3790","0:3827","0:3830","0:3867","0:3870","0:3907","0:3910","0:3947","0:3950","0:3987","0:3990","0:4027","0:4030","0:4067","0:4070","0:4107","0:4110","0:4147","0:4150","0:4187","0:4190","0:4227","0:4230","0:4267","0:4270","0:4307","0:4310","0:4347","0:4350","0:4387","0:4390","0:4427","0:4430","0:4467","0:4470","0:4507","0:4510"]}},"0:3119":{"id":"0:3119","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}}},"items":["0:3122:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4421:5406":{"id":"1:4421:5406","crate_id":1,"name":"by_ref","span":null,"visibility":"default","docs":"Creates a \"by reference\" adaptor for this instance of `Read`.\n\nThe returned adapter also implements `Read` and will simply borrow this\ncurrent reader.\n\n# Examples\n\n[`File`]s implement `Read`:\n\n[`File`]: crate::fs::File\n\n```no_run\nuse std::io;\nuse std::io::Read;\nuse std::fs::File;\n\nfn main() -> io::Result<()> {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = Vec::new();\n    let mut other_buffer = Vec::new();\n\n    {\n        let reference = f.by_ref();\n\n        // read at most 5 bytes\n        reference.take(5).read_to_end(&mut buffer)?;\n\n    } // drop our &mut reference so we can use f again\n\n    // original file still usable, read the rest\n    f.read_to_end(&mut other_buffer)?;\n    Ok(())\n}\n```","links":{"crate::fs::File":"1:2909:129"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4069:2673":{"id":"0:4069:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3855:2657":{"id":"0:3855:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"16"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:24161:14652":{"id":"2:24161:14652","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24162:14651"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24157:14298","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3380:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1196:2919":{"id":"0:1196:2919","crate_id":0,"name":"separated_list0","span":{"filename":"src/multi/mod.rs","begin":[209,0],"end":[254,1]},"visibility":"public","docs":"Alternates between two parsers to produce\na list of elements.\n# Arguments\n* `sep` Parses the separator between list elements.\n* `f` Parses the elements of the list.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed, IResult};\nuse nom::multi::separated_list0;\nuse nom::bytes::complete::tag;\n\nfn parser(s: &str) -> IResult<&str, Vec<&str>> {\n  separated_list0(tag(\"|\"), tag(\"abc\"))(s)\n}\n\nassert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));\nassert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));\nassert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));\nassert_eq!(parser(\"\"), Ok((\"\", vec![])));\nassert_eq!(parser(\"def|abc\"), Ok((\"def|abc\", vec![])));\n```","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["sep",{"kind":"generic","inner":"G"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3492:185":{"id":"2:3492:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `!` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:4547:2763":{"id":"0:4547:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2744:2017":{"id":"b:2:2865-0:2744:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1836"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:961:2673":{"id":"0:961:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[912,2],"end":[914,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"primitive","inner":"char"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3034:2051":{"id":"0:3034:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2856:2117":{"id":"0:2856:2117","crate_id":0,"name":"TooLarge","span":{"filename":"src/error.rs","begin":[414,2],"end":[414,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3753:2673":{"id":"0:3753:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3505:2663":{"id":"0:3505:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1540:1842":{"id":"0:1540:1842","crate_id":0,"name":"bits","span":{"filename":"src/bits/mod.rs","begin":[40,0],"end":[59,1]},"visibility":"public","docs":"Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.\n\nAfterwards, the input is converted back to a byte-level parser, with any remaining bits thrown\naway.\n\n# Example\n```\nuse nom::bits::{bits, streaming::take};\nuse nom::error::Error;\nuse nom::sequence::tuple;\nuse nom::IResult;\n\nfn parse(input: &[u8]) -> IResult<&[u8], (u8, u8)> {\n    bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((take(4usize), take(8usize))))(input)\n}\n\nlet input = &[0x12, 0x34, 0xff, 0xff];\n\nlet output = parse(input).expect(\"We take 1.5 bytes and the input is longer than 2 bytes\");\n\n// The first byte is consumed, the second byte is partially consumed and dropped.\nlet remaining = output.0;\nassert_eq!(remaining, [0xff, 0xff]);\n\nlet parsed = output.1;\nassert_eq!(parsed.0, 0x01);\nassert_eq!(parsed.1, 0x23);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["parser",{"kind":"generic","inner":"P"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E1"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"ErrorConvert","id":"0:1047:2727","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E2"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"E2"},"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"primitive","inner":"usize"}]}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E1"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3285-0:2718:128":{"id":"b:2:3285-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3278:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4194:14603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:3287:5654"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:13835:2648":{"id":"2:13835:2648","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47911:178","prim@char":"1:15857:4607","self::pattern":"2:13419:3185"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4200:2236":{"id":"0:4200:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:173:2191":{"id":"0:173:2191","crate_id":0,"name":"error_position","span":{"filename":"src/error.rs","begin":[550,0],"end":[554,2]},"visibility":"public","docs":"Creates a parse error from a `nom::ErrorKind`\nand the position in the input","links":{},"attrs":["#[allow(unused_variables)]","#[macro_export(local_inner_macros)]"],"deprecation":null,"kind":"macro","inner":"macro_rules! error_position {\n    ($input:expr, $code:expr) => { ... };\n}"},"0:2404:1459":{"id":"0:2404:1459","crate_id":0,"name":"u32","span":{"filename":"src/number/complete.rs","begin":[847,0],"end":[859,1]},"visibility":"public","docs":"Recognizes an unsigned 4 byte integer\n\nIf the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,\notherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.\n*complete version*: returns an error if there is not enough input data\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::u32;\n\nlet be_u32 = |s| {\n  u32(nom::number::Endianness::Big)(s)\n};\n\nassert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));\nassert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n\nlet le_u32 = |s| {\n  u32(nom::number::Endianness::Little)(s)\n};\n\nassert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));\nassert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["endian",{"kind":"resolved_path","inner":{"name":"crate::number::Endianness","id":"0:6086:3949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"function_pointer","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generic_params":[],"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2714:4291":{"id":"0:2714:4291","crate_id":0,"name":"double","span":{"filename":"src/number/streaming.rs","begin":[1596,0],"end":[1630,1]},"visibility":"public","docs":"Recognizes floating point number in text format and returns a f64.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::double;\n\nlet parser = |s| {\n  double(s)\n};\n\nassert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));\nassert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));\nassert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));\nassert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"primitive","inner":"f64"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::traits::ParseTo","id":"0:986:2226","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"f64"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2730:2013":{"id":"0:2730:2013","crate_id":0,"name":"VerboseError","span":{"filename":"src/error.rs","begin":[151,0],"end":[155,1]},"visibility":"public","docs":"This error type accumulates errors and their position when backtracking\nthrough a parse tree. With some post processing (cf `examples/json.rs`),\nit can be used to display user friendly error messages","links":{},"attrs":["#[cfg(feature = \"alloc\")]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2732:2016"],"fields_stripped":false}},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3370:217-0:2730:2013","a:2:9616:5287-0:2730:2013","a:2:3382:225-0:2730:2013","a:2:3411:4730-0:2730:2013","a:2:9615:5288-0:2730:2013","b:2:3285-0:2730:2013","b:2:4145-0:2730:2013","b:2:3203-0:2730:2013","b:2:2865-0:2730:2013","b:2:2868-0:2730:2013","b:2:3207-0:2730:2013","b:2:3213-0:2730:2013","b:2:3218-0:2730:2013","b:5:6506-0:2730:2013","b:5:848-0:2730:2013","0:2733","0:2736","0:2739","0:2741","0:130","0:135","0:138","0:142","0:145","0:1065","0:1069"]}},"0:3747":{"id":"0:3747","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}},"items":["0:3749:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3208:2612":{"id":"0:3208:2612","crate_id":0,"name":"iter_elements","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9616:5287-0:402:2418":{"id":"a:2:9616:5287-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9616:5287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:88:931":{"id":"0:88:931","crate_id":0,"name":"new","span":{"filename":"src/error.rs","begin":[67,2],"end":[69,3]},"visibility":"public","docs":"creates a new basic error","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["code",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3683:4801":{"id":"2:3683:4801","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3685:763"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3679:4800","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2884:2426":{"id":"0:2884:2426","crate_id":0,"name":"Needed","span":{"filename":"src/internal.rs","begin":[50,0],"end":[55,1]},"visibility":"public","docs":"Contains information on needed data if a parser returned `Incomplete`","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2885:238","0:2887:2469"],"impls":["0:473","a:2:3370:217-0:2884:2426","a:2:9616:5287-0:2884:2426","a:2:3382:225-0:2884:2426","a:2:3411:4730-0:2884:2426","a:2:9615:5288-0:2884:2426","b:2:4145-0:2884:2426","b:2:3203-0:2884:2426","b:2:2865-0:2884:2426","b:2:2868-0:2884:2426","b:2:3207-0:2884:2426","b:2:3213-0:2884:2426","b:2:3218-0:2884:2426","b:5:848-0:2884:2426","0:2890","0:2892","0:2893","0:2895","0:2896","0:2898","0:2900"]}},"0:4171:2617":{"id":"0:4171:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2194:3634":{"id":"0:2194:3634","crate_id":0,"name":"alphanumeric1","span":{"filename":"src/character/streaming.rs","begin":[506,0],"end":[512,1]},"visibility":"public","docs":"Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,\nor if no terminating token is found (a non alphanumerical character).\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::alphanumeric1;\nassert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));\nassert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"&H2\"), Err(Err::Error((\"&H2\", ErrorKind::AlphaNumeric))));\nassert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3619:586":{"id":"2:3619:586","crate_id":2,"name":"drop","span":null,"visibility":"default","docs":"Executes the destructor for this type.\n\nThis method is called implicitly when the value goes out of scope,\nand cannot be called explicitly (this is compiler error [E0040]).\nHowever, the [`mem::drop`] function in the prelude can be\nused to call the argument's `Drop` implementation.\n\nWhen this method has been called, `self` has not yet been deallocated.\nThat only happens after the method is over.\nIf this wasn't the case, `self` would be a dangling reference.\n\n# Panics\n\nGiven that a [`panic!`] will call `drop` as it unwinds, any [`panic!`]\nin a `drop` implementation will likely abort.\n\nNote that even if this panics, the value is considered to be dropped;\nyou must not cause `drop` to be called again. This is normally automatically\nhandled by the compiler, but when using unsafe code, can sometimes occur\nunintentionally, particularly when using [`ptr::drop_in_place`].\n\n[E0040]: ../../error_codes/E0040.html\n[`panic!`]: crate::panic!\n[`mem::drop`]: drop\n[`ptr::drop_in_place`]: crate::ptr::drop_in_place","links":{"crate::panic!":"2:4:990","drop":"2:2181:586","crate::ptr::drop_in_place":"2:2765:587"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4445:2548":{"id":"0:4445:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4942":{"id":"0:4942","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"}]},"items":["0:4963:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3805:2548":{"id":"0:3805:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:2748:1979":{"id":"0:2748:1979","crate_id":0,"name":"Char","span":{"filename":"src/error.rs","begin":[165,2],"end":[165,12]},"visibility":"default","docs":"Indicates which character was expected by the `char` function","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2750:1568"]}},"0:3881":{"id":"0:3881","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}},"items":["0:3884:2425","0:3885:2548","0:3886:2608","0:3887:2610","0:3888:2612","0:3889:1026","0:3891:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3743:2657":{"id":"0:3743:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13821:13062":{"id":"2:13821:13062","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"2:13822:13050"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50172:5020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1373:2036":{"id":"0:1373:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[194,2],"end":[194,52]},"visibility":"default","docs":"Parses the input and returns a tuple of results of each parser.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2867:1836":{"id":"2:2867:1836","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9239:4924":{"id":"2:9239:4924","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:9137:60742":{"id":"1:9137:60742","crate_id":1,"name":"mul_add","span":null,"visibility":"default","docs":"Fused multiply-add.  Computes `(self * a) + b` with only one rounding error,\nyielding a more accurate result than an unfused multiply-add.\n\nUsing `mul_add` *may* be more performant than an unfused multiply-add if the target\narchitecture has a dedicated `fma` CPU instruction.  However, this is not always\ntrue, and will be heavily dependent on designing algorithms with specific target\nhardware in mind.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["a",{"kind":"generic","inner":"Self"}],["b",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3218-0:2761:1972":{"id":"b:2:3218-0:2761:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3177:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3221:128","2:3222:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:784:2579":{"id":"0:784:2579","crate_id":0,"name":"is_alphanum","span":{"filename":"src/traits.rs","begin":[249,2],"end":[251,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2836:2107":{"id":"0:2836:2107","crate_id":0,"name":"Fix","span":{"filename":"src/error.rs","begin":[404,2],"end":[404,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:23202:61109":{"id":"2:23202:61109","crate_id":2,"name":"reduce_sum","span":null,"visibility":"default","docs":"Returns the sum of the lanes of the vector, with wrapping addition.\n\n# Examples\n\n```\n# #![feature(portable_simd)]\n# #[cfg(feature = \"as_crate\")] use core_simd::simd;\n# #[cfg(not(feature = \"as_crate\"))] use core::simd;\n# use simd::{i32x4, SimdInt};\nlet v = i32x4::from_array([1, 2, 3, 4]);\nassert_eq!(v.reduce_sum(), 10);\n\n// SIMD integer addition is always wrapping\nlet v = i32x4::from_array([i32::MAX, 1, 0, 0]);\nassert_eq!(v.reduce_sum(), i32::MIN);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdInt","id":"2:23191:14647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2689:4254":{"id":"0:2689:4254","crate_id":0,"name":"hex_u32","span":{"filename":"src/number/streaming.rs","begin":[1326,0],"end":[1347,1]},"visibility":"public","docs":"Recognizes a hex-encoded integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::hex_u32;\n\nlet parser = |s| {\n  hex_u32(s)\n};\n\nassert_eq!(parser(b\"01AE;\"), Ok((&b\";\"[..], 0x01AE)));\nassert_eq!(parser(b\"abc\"), Err(Err::Incomplete(Needed::new(1))));\nassert_eq!(parser(b\"ggg\"), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},{"type":{"kind":"primitive","inner":"u32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2778:2080":{"id":"0:2778:2080","crate_id":0,"name":"Many0","span":{"filename":"src/error.rs","begin":[375,2],"end":[375,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:1007:2708":{"id":"0:1007:2708","crate_id":0,"name":"Extender","span":{"filename":"src/traits.rs","begin":[1145,2],"end":[1145,16]},"visibility":"default","docs":"The type that will be produced","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"0:997:2691":{"id":"0:997:2691","crate_id":0,"name":"parse_to","span":{"filename":"src/traits.rs","begin":[996,2],"end":[998,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4156:2236":{"id":"0:4156:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3042":{"id":"0:3042","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"17"}}}},"items":["0:3045:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3415:2657":{"id":"0:3415:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"5"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:974":{"id":"0:974","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[935,0],"end":[967,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindSubstring","id":"0:971:2677","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:977:2679"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4145:2663":{"id":"0:4145:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"23"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4129:1026":{"id":"0:4129:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8768:121":{"id":"2:8768:121","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8769:5381","2:8770:5382","2:8771:5383","2:8772:5384","2:8776:5385","2:8779:5386"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10599:5105":{"id":"2:10599:5105","crate_id":2,"name":"write_fmt","span":null,"visibility":"default","docs":"Glue for usage of the [`write!`] macro with implementors of this trait.\n\nThis method should generally not be invoked manually, but rather through\nthe [`write!`] macro itself.\n\n# Examples\n\n```\nuse std::fmt::{Error, Write};\n\nfn writer<W: Write>(f: &mut W, s: &str) -> Result<(), Error> {\n    f.write_fmt(format_args!(\"{s}\"))\n}\n\nlet mut buf = String::new();\nwriter(&mut buf, \"world\").unwrap();\nassert_eq!(&buf, \"world\");\n```","links":{"`write!`":"2:14:2005"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["args",{"kind":"resolved_path","inner":{"name":"Arguments","id":"2:49046:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4702:2763":{"id":"0:4702:2763","crate_id":0,"name":"choice","span":{"filename":"src/branch/mod.rs","begin":[183,0],"end":[183,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"Output"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3539:1251":{"id":"2:3539:1251","crate_id":2,"name":"shl_assign","span":null,"visibility":"default","docs":"Performs the `<<=` operation.\n\n# Examples\n\n```\nlet mut x: u8 = 5;\nx <<= 1;\nassert_eq!(x, 10);\n\nlet mut x: u8 = 1;\nx <<= 1;\nassert_eq!(x, 2);\n```","links":{},"attrs":["#[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:23153:61102":{"id":"2:23153:61102","crate_id":2,"name":"is_subnormal","span":null,"visibility":"default","docs":"Returns true for each lane if its value is subnormal.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3830":{"id":"0:3830","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"15"}},"items":["0:3833:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5443:2036":{"id":"0:5443:2036","crate_id":0,"name":"parse","span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"Input"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2152:3546":{"id":"0:2152:3546","crate_id":0,"name":"tab","span":{"filename":"src/character/streaming.rs","begin":[270,0],"end":[276,1]},"visibility":"public","docs":"Matches a tab character '\\t'.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.\n# Example\n\n```\n# use nom::{Err, error::ErrorKind, IResult, Needed};\n# use nom::character::streaming::tab;\nassert_eq!(tab::<_, (_, ErrorKind)>(\"\\tc\"), Ok((\"c\", '\\t')));\nassert_eq!(tab::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));\nassert_eq!(tab::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"char"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23236:61905":{"id":"2:23236:61905","crate_id":2,"name":"reduce_or","span":null,"visibility":"default","docs":"Returns the cumulative bitwise \"or\" across the lanes of the vector.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Scalar","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdUint","id":"2:23227:14721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4000:2236":{"id":"0:4000:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[115,0],"end":[119,1]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromExternalError","id":"0:82:1993","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]},"items":["0:113:1997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3133":{"id":"0:3133","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}},"items":["0:3136:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:486":{"id":"0:486","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[139,0],"end":[151,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}},"items":["0:488:2498"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4452":{"id":"0:4452","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4455:2657","0:4457:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3691:2617":{"id":"0:3691:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8971:1330":{"id":"2:8971:1330","crate_id":2,"name":"skip","span":null,"visibility":"default","docs":"Creates an iterator that skips the first `n` elements.\n\n`skip(n)` skips elements until `n` elements are skipped or the end of the\niterator is reached (whichever happens first). After that, all the remaining\nelements are yielded. In particular, if the original iterator is too short,\nthen the returned iterator is empty.\n\nRather than overriding this method directly, instead override the `nth` method.\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter().skip(2);\n\nassert_eq!(iter.next(), Some(&3));\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Skip","id":"2:47165:4948","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4365:2548":{"id":"0:4365:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"29"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:92:1976":{"id":"0:92:1976","crate_id":0,"name":"append","span":{"filename":"src/error.rs","begin":[77,2],"end":[79,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["_",{"kind":"generic","inner":"I"}],["_",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3500:185":{"id":"2:3500:185","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":"The resulting type after applying the `&` operator.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"a:2:9615:5288-0:2718:128":{"id":"a:2:9615:5288-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9615:5288","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2993":{"id":"0:2993","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}},"items":["0:2996:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:467:660":{"id":"0:467:660","crate_id":0,"name":"finish","span":{"filename":"src/internal.rs","begin":[32,2],"end":[32,39]},"visibility":"default","docs":"converts the parser's result to a type that is more consumable by error\nmanagement libraries. It keeps the same `Ok` branch, and merges `Err::Error`\nand `Err::Failure` into the `Err` side.\n\n*warning*: if the result is `Err(Err::Incomplete(_))`, this method will panic.\n- \"complete\" parsers: It will not be an issue, `Incomplete` is never used\n- \"streaming\" parsers: `Incomplete` will be returned if there's not enough data\nfor the parser to decide, and you should gather more data before parsing again.\nOnce the parser returns either `Ok(_)`, `Err(Err::Error(_))` or `Err(Err::Failure(_))`,\nyou can get out of the parsing loop and call `finish()` on the parser's result","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"generic","inner":"O"}]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10667:668":{"id":"2:10667:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:4414:60104":{"id":"1:4414:60104","crate_id":1,"name":"is_read_vectored","span":null,"visibility":"default","docs":"Determines if this `Read`er has an efficient `read_vectored`\nimplementation.\n\nIf a `Read`er does not override the default `read_vectored`\nimplementation, code using it may want to avoid the method all together\nand coalesce writes into a single buffer for higher performance.\n\nThe default implementation returns `false`.","links":{},"attrs":["#[unstable(feature = \"can_vector\", issue = \"69941\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4273:2673":{"id":"0:4273:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9141:56147":{"id":"1:9141:56147","crate_id":1,"name":"round","span":null,"visibility":"default","docs":"Rounds to the nearest integer value. Ties round toward zero.","links":{},"attrs":["#[must_use =\n\"method returns a new vector and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:973:2679":{"id":"0:973:2679","crate_id":0,"name":"find_substring","span":{"filename":"src/traits.rs","begin":[932,2],"end":[932,55]},"visibility":"default","docs":"Returns the byte position of the substring if it is found","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["substr",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3190:1439":{"id":"2:3190:1439","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":"Performs the conversion.","links":{},"attrs":["#[stable(feature = \"try_from\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"TryFrom","id":"2:3187:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:434:2438":{"id":"0:434:2438","crate_id":0,"name":"success","span":{"filename":"src/combinator/mod.rs","begin":[753,0],"end":[755,1]},"visibility":"public","docs":"a parser which always succeeds with given value without consuming any input.\n\nIt can be used for example as the last alternative in `alt` to\nspecify the default case.\n\n```rust\n# use nom::{Err,error::ErrorKind, IResult};\nuse nom::branch::alt;\nuse nom::combinator::{success, value};\nuse nom::character::complete::char;\n# fn main() {\n\nlet mut parser = success::<_,_,(_,ErrorKind)>(10);\nassert_eq!(parser(\"xyz\"), Ok((\"xyz\", 10)));\n\nlet mut sign = alt((value(-1, char('-')), value(1, char('+')), success::<_,_,(_,ErrorKind)>(1)));\nassert_eq!(sign(\"+10\"), Ok((\"10\", 1)));\nassert_eq!(sign(\"-10\"), Ok((\"10\", -1)));\nassert_eq!(sign(\"10\"), Ok((\"10\", 1)));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"O"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2768:2075":{"id":"0:2768:2075","crate_id":0,"name":"Alt","span":{"filename":"src/error.rs","begin":[370,2],"end":[370,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:4194:14603":{"id":"2:4194:14603","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4195:5654"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4472:15000":{"id":"1:4472:15000","crate_id":1,"name":"flush","span":null,"visibility":"default","docs":"Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.\n\n# Errors\n\nIt is considered an error if not all bytes could be written due to\nI/O errors or EOF being reached.\n\n# Examples\n\n```no_run\nuse std::io::prelude::*;\nuse std::io::BufWriter;\nuse std::fs::File;\n\nfn main() -> std::io::Result<()> {\n    let mut buffer = BufWriter::new(File::create(\"foo.txt\")?);\n\n    buffer.write_all(b\"some bytes\")?;\n    buffer.flush()?;\n    Ok(())\n}\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2755:416":{"id":"0:2755:416","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[159,9],"end":[159,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3806:2608":{"id":"0:3806:2608","crate_id":0,"name":"IterElem","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Copied","id":"2:47026:2546","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11474:2548","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:4145-0:2718:128":{"id":"b:2:4145-0:2718:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4143:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2718:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}}},"items":["2:4147:1453"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:4353:2673":{"id":"0:4353:2673","crate_id":0,"name":"find_token","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["token",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"u8"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10661:668":{"id":"2:10661:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4964":{"id":"0:4964","crate_id":0,"name":null,"span":{"filename":"src/branch/mod.rs","begin":[269,0],"end":[291,1]},"visibility":{"restricted":{"parent":"0:1083:377","path":"::branch"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Permutation","id":"0:1113:2113","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"}]},"items":["0:4987:2786"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:5:1353":{"id":"0:5:1353","crate_id":0,"name":"std","span":{"filename":"src/lib.rs","begin":[420,2],"end":[420,13]},"visibility":"public","docs":"internal std exports for no_std compatibility","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:5528":{"id":"0:5528","crate_id":0,"name":null,"span":{"filename":"src/sequence/mod.rs","begin":[252,0],"end":[253,64]},"visibility":{"restricted":{"parent":"0:1305:1848","path":"::sequence"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"D","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"J","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Error","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnA","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"A"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnB","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"B"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnC","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"C"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnD","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"D"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnE","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnF","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnG","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnH","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"H"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnI","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnJ","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"J"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"FnK","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"generic","inner":"K"}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Tuple","id":"0:1369:3095","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Input"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"A"},{"kind":"generic","inner":"B"},{"kind":"generic","inner":"C"},{"kind":"generic","inner":"D"},{"kind":"generic","inner":"E"},{"kind":"generic","inner":"F"},{"kind":"generic","inner":"G"},{"kind":"generic","inner":"H"},{"kind":"generic","inner":"I"},{"kind":"generic","inner":"J"},{"kind":"generic","inner":"K"}]}},{"type":{"kind":"generic","inner":"Error"}}],"bindings":[]}}},"for":{"kind":"tuple","inner":[{"kind":"generic","inner":"FnA"},{"kind":"generic","inner":"FnB"},{"kind":"generic","inner":"FnC"},{"kind":"generic","inner":"FnD"},{"kind":"generic","inner":"FnE"},{"kind":"generic","inner":"FnF"},{"kind":"generic","inner":"FnG"},{"kind":"generic","inner":"FnH"},{"kind":"generic","inner":"FnI"},{"kind":"generic","inner":"FnJ"},{"kind":"generic","inner":"FnK"}]},"items":["0:5553:2036"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4494:60856":{"id":"1:4494:60856","crate_id":1,"name":"consume","span":null,"visibility":"default","docs":"Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.\n\nThis function is a lower-level call. It needs to be paired with the\n[`fill_buf`] method to function properly. This function does\nnot perform any I/O, it simply informs this object that some amount of\nits buffer, returned from [`fill_buf`], has been consumed and should\nno longer be returned. As such, this function may do odd things if\n[`fill_buf`] isn't called before calling it.\n\nThe `amt` must be `<=` the number of bytes in the buffer returned by\n[`fill_buf`].\n\n# Examples\n\nSince `consume()` is meant to be used with [`fill_buf`],\nthat method's example includes an example of `consume()`.\n\n[`fill_buf`]: BufRead::fill_buf","links":{"BufRead::fill_buf":"1:4493:60855"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["amt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3115:2051":{"id":"0:3115:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:866:2647":{"id":"0:866:2647","crate_id":0,"name":"split_at_position1_complete","span":{"filename":"src/traits.rs","begin":[541,2],"end":[559,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}],["e",{"kind":"resolved_path","inner":{"name":"ErrorKind","id":"0:2761:1972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:840:2225","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4497:2663":{"id":"0:4497:2663","crate_id":0,"name":"compare_no_case","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"32"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:325:2323":{"id":"0:325:2323","crate_id":0,"name":"eof","span":{"filename":"src/combinator/mod.rs","begin":[331,0],"end":[338,1]},"visibility":"public","docs":"returns its input if it is at the end of input data\n\nWhen we're at the end of the data, this combinator\nwill succeed\n\n```\n# use std::str;\n# use nom::{Err, error::ErrorKind, IResult};\n# use nom::combinator::eof;\n\n# fn main() {\nlet parser = eof;\nassert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Eof))));\nassert_eq!(parser(\"\"), Ok((\"\", \"\")));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10665:668":{"id":"2:10665:668","crate_id":2,"name":"fmt","span":null,"visibility":"default","docs":"Formats the value using the given formatter.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10605:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48972:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3411:4730-0:402:2418":{"id":"a:2:3411:4730-0:402:2418","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3411:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserIterator","id":"0:402:2418","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8981:5404":{"id":"2:8981:5404","crate_id":2,"name":"fuse","span":null,"visibility":"default","docs":"Creates an iterator which ends after the first [`None`].\n\nAfter an iterator returns [`None`], future calls may or may not yield\n[`Some(T)`] again. `fuse()` adapts an iterator, ensuring that after a\n[`None`] is given, it will always return [`None`] forever.\n\nNote that the [`Fuse`] wrapper is a no-op on iterators that implement\nthe [`FusedIterator`] trait. `fuse()` may therefore behave incorrectly\nif the [`FusedIterator`] trait is improperly implemented.\n\n[`Some(T)`]: Some\n[`FusedIterator`]: crate::iter::FusedIterator\n\n# Examples\n\nBasic usage:\n\n```\n// an iterator which alternates between Some and None\nstruct Alternate {\n    state: i32,\n}\n\nimpl Iterator for Alternate {\n    type Item = i32;\n\n    fn next(&mut self) -> Option<i32> {\n        let val = self.state;\n        self.state = self.state + 1;\n\n        // if it's even, Some(i32), else None\n        if val % 2 == 0 {\n            Some(val)\n        } else {\n            None\n        }\n    }\n}\n\nlet mut iter = Alternate { state: 0 };\n\n// we can see our iterator going back and forth\nassert_eq!(iter.next(), Some(0));\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), Some(2));\nassert_eq!(iter.next(), None);\n\n// however, once we fuse it...\nlet mut iter = iter.fuse();\n\nassert_eq!(iter.next(), Some(4));\nassert_eq!(iter.next(), None);\n\n// it will always return `None` after the first time.\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n```","links":{"`None`":"2:47911:178","`Fuse`":"2:47087:4943","crate::iter::FusedIterator":"2:9236:4728","Some":"2:47913:220"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Fuse","id":"2:47087:4943","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4052":{"id":"0:4052","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"21"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:4055:2657","0:4057:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3013:2051":{"id":"0:3013:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3542:4798":{"id":"2:3542:4798","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3544:1254"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3612":{"id":"0:3612","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:3615:2657","0:3617:2663"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8942:2668":{"id":"2:8942:2668","crate_id":2,"name":"zip","span":null,"visibility":"default","docs":"'Zips up' two iterators into a single iterator of pairs.\n\n`zip()` returns a new iterator that will iterate over two other\niterators, returning a tuple where the first element comes from the\nfirst iterator, and the second element comes from the second iterator.\n\nIn other words, it zips two iterators together, into a single one.\n\nIf either iterator returns [`None`], [`next`] from the zipped iterator\nwill return [`None`].\nIf the zipped iterator has no more elements to return then each further attempt to advance\nit will first try to advance the first iterator at most one time and if it still yielded an item\ntry to advance the second iterator at most one time.\n\nTo 'undo' the result of zipping up two iterators, see [`unzip`].\n\n[`unzip`]: Iterator::unzip\n\n# Examples\n\nBasic usage:\n\n```\nlet a1 = [1, 2, 3];\nlet a2 = [4, 5, 6];\n\nlet mut iter = a1.iter().zip(a2.iter());\n\nassert_eq!(iter.next(), Some((&1, &4)));\nassert_eq!(iter.next(), Some((&2, &5)));\nassert_eq!(iter.next(), Some((&3, &6)));\nassert_eq!(iter.next(), None);\n```\n\nSince the argument to `zip()` uses [`IntoIterator`], we can pass\nanything that can be converted into an [`Iterator`], not just an\n[`Iterator`] itself. For example, slices (`&[T]`) implement\n[`IntoIterator`], and so can be passed to `zip()` directly:\n\n```\nlet s1 = &[1, 2, 3];\nlet s2 = &[4, 5, 6];\n\nlet mut iter = s1.iter().zip(s2);\n\nassert_eq!(iter.next(), Some((&1, &4)));\nassert_eq!(iter.next(), Some((&2, &5)));\nassert_eq!(iter.next(), Some((&3, &6)));\nassert_eq!(iter.next(), None);\n```\n\n`zip()` is often used to zip an infinite iterator to a finite one.\nThis works because the finite iterator will eventually return [`None`],\nending the zipper. Zipping with `(0..)` can look a lot like [`enumerate`]:\n\n```\nlet enumerate: Vec<_> = \"foo\".chars().enumerate().collect();\n\nlet zipper: Vec<_> = (0..).zip(\"foo\".chars()).collect();\n\nassert_eq!((0, 'f'), enumerate[0]);\nassert_eq!((0, 'f'), zipper[0]);\n\nassert_eq!((1, 'o'), enumerate[1]);\nassert_eq!((1, 'o'), zipper[1]);\n\nassert_eq!((2, 'o'), enumerate[2]);\nassert_eq!((2, 'o'), zipper[2]);\n```\n\nIf both iterators have roughly equivalent syntax, it may be more readable to use [`zip`]:\n\n```\nuse std::iter::zip;\n\nlet a = [1, 2, 3];\nlet b = [2, 3, 4];\n\nlet mut zipped = zip(\n    a.into_iter().map(|x| x * 2).skip(1),\n    b.into_iter().map(|x| x * 2).skip(1),\n);\n\nassert_eq!(zipped.next(), Some((4, 6)));\nassert_eq!(zipped.next(), Some((6, 8)));\nassert_eq!(zipped.next(), None);\n```\n\ncompared to:\n\n```\n# let a = [1, 2, 3];\n# let b = [2, 3, 4];\n#\nlet mut zipped = a\n    .into_iter()\n    .map(|x| x * 2)\n    .skip(1)\n    .zip(b.into_iter().map(|x| x * 2).skip(1));\n#\n# assert_eq!(zipped.next(), Some((4, 6)));\n# assert_eq!(zipped.next(), Some((6, 8)));\n# assert_eq!(zipped.next(), None);\n```\n\n[`enumerate`]: Iterator::enumerate\n[`next`]: Iterator::next\n[`zip`]: crate::iter::zip","links":{"Iterator::enumerate":"2:8962:2045","`Iterator`":"2:8925:160","crate::iter::zip":"2:7987:2668","`None`":"2:47911:178","Iterator::next":"2:8927:933","Iterator::unzip":"2:9135:5419","`IntoIterator`":"2:8724:153"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Zip","id":"2:47216:4952","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8724:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:6050:4266":{"id":"0:6050:4266","crate_id":0,"name":"recognize_float","span":{"filename":"src/number/complete.rs","begin":[1398,0],"end":[1421,1]},"visibility":"public","docs":"Recognizes floating point number in a byte string and returns the corresponding slice.\n\n*Complete version*: Can parse until the end of input.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::recognize_float;\n\nlet parser = |s| {\n  recognize_float(s)\n};\n\nassert_eq!(parser(\"11e-1\"), Ok((\"\", \"11e-1\")));\nassert_eq!(parser(\"123E-02\"), Ok((\"\", \"123E-02\")));\nassert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));\nassert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));\n```","links":{},"attrs":["#[rustfmt::skip]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2671:4206":{"id":"0:2671:4206","crate_id":0,"name":"be_f32","span":{"filename":"src/number/streaming.rs","begin":[1147,0],"end":[1155,1]},"visibility":"public","docs":"Recognizes a big endian 4 bytes floating point number.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_f32;\n\nlet parser = |s| {\n  be_f32::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&[0x40, 0x29, 0x00, 0x00][..]), Ok((&b\"\"[..], 2.640625)));\nassert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"f32"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:4144:1453":{"id":"2:4144:1453","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":"Gets the `TypeId` of `self`.\n\n# Examples\n\n```\nuse std::any::{Any, TypeId};\n\nfn is_string(s: &dyn Any) -> bool {\n    TypeId::of::<String>() == s.type_id()\n}\n\nassert_eq!(is_string(&0), false);\nassert_eq!(is_string(&\"cookie monster\".to_string()), true);\n```","links":{},"attrs":["#[stable(feature = \"get_type_id\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46437:14604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8927:933":{"id":"2:8927:933","crate_id":2,"name":"next","span":null,"visibility":"default","docs":"Advances the iterator and returns the next value.\n\nReturns [`None`] when iteration is finished. Individual iterator\nimplementations may choose to resume iteration, and so calling `next()`\nagain may or may not eventually start returning [`Some(Item)`] again at some\npoint.\n\n[`Some(Item)`]: Some\n\n# Examples\n\nBasic usage:\n\n```\nlet a = [1, 2, 3];\n\nlet mut iter = a.iter();\n\n// A call to next() returns the next value...\nassert_eq!(Some(&1), iter.next());\nassert_eq!(Some(&2), iter.next());\nassert_eq!(Some(&3), iter.next());\n\n// ... and then None once it's over.\nassert_eq!(None, iter.next());\n\n// More calls may or may not return `None`. Here, they always will.\nassert_eq!(None, iter.next());\nassert_eq!(None, iter.next());\n```","links":{"`None`":"2:47911:178","Some":"2:47913:220"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3090:2051":{"id":"0:3090:2051","crate_id":0,"name":"as_bytes","span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4501:2059":{"id":"1:4501:2059","crate_id":1,"name":"lines","span":null,"visibility":"default","docs":"Returns an iterator over the lines of this reader.\n\nThe iterator returned from this function will yield instances of\n<code>[io::Result]<[String]></code>. Each string returned will *not* have a newline\nbyte (the `0xA` byte) or `CRLF` (`0xD`, `0xA` bytes) at the end.\n\n[io::Result]: self::Result \"io::Result\"\n\n# Examples\n\n[`std::io::Cursor`][`Cursor`] is a type that implements `BufRead`. In\nthis example, we use [`Cursor`] to iterate over all the lines in a byte\nslice.\n\n```\nuse std::io::{self, BufRead};\n\nlet cursor = io::Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");\n\nlet mut lines_iter = cursor.lines().map(|l| l.unwrap());\nassert_eq!(lines_iter.next(), Some(String::from(\"lorem\")));\nassert_eq!(lines_iter.next(), Some(String::from(\"ipsum\")));\nassert_eq!(lines_iter.next(), Some(String::from(\"dolor\")));\nassert_eq!(lines_iter.next(), None);\n```\n\n# Errors\n\nEach line of the iterator has the same error semantics as [`BufRead::read_line`].","links":{"self::Result":"1:3801:209","`BufRead::read_line`":"1:4498:60858","`Cursor`":"1:10705:5616","String":"5:8478:221"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:10979:5029","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4165:2548":{"id":"0:4165:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"24"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"1:6216:57735":{"id":"1:6216:57735","crate_id":1,"name":"pre_exec","span":null,"visibility":"default","docs":"Schedules a closure to be run just before the `exec` function is\ninvoked.\n\nThe closure is allowed to return an I/O error whose OS error code will\nbe communicated back to the parent and returned as an error from when\nthe spawn was requested.\n\nMultiple closures can be registered and they will be called in order of\ntheir registration. If a closure returns `Err` then no further closures\nwill be called and the spawn operation will immediately return with a\nfailure.\n\n# Notes and Safety\n\nThis closure will be run in the context of the child process after a\n`fork`. This primarily means that any modifications made to memory on\nbehalf of this closure will **not** be visible to the parent process.\nThis is often a very constrained environment where normal operations\nlike `malloc`, accessing environment variables through [`std::env`]\nor acquiring a mutex are not guaranteed to work (due to\nother threads perhaps still running when the `fork` was run).\n\nFor further details refer to the [POSIX fork() specification]\nand the equivalent documentation for any targeted\nplatform, especially the requirements around *async-signal-safety*.\n\nThis also means that all resources such as file descriptors and\nmemory-mapped regions got duplicated. It is your responsibility to make\nsure that the closure does not violate library invariants by making\ninvalid use of these duplicates.\n\nPanicking in the closure is safe only if all the format arguments for the\npanic message can be safely formatted; this is because although\n`Command` calls [`std::panic::always_abort`](crate::panic::always_abort)\nbefore calling the pre_exec hook, panic will still try to format the\npanic message.\n\nWhen this closure is run, aspects such as the stdio file descriptors and\nworking directory have successfully been changed, so output to these\nlocations might not appear where intended.\n\n[POSIX fork() specification]:\n    https://pubs.opengroup.org/onlinepubs/9699919799/functions/fork.html\n[`std::env`]: mod@crate::env","links":{"crate::panic::always_abort":"1:6917:5275","mod@crate::env":"1:2326:608"},"attrs":["#[stable(feature = \"process_pre_exec\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Command","id":"1:7477:14395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:3370:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3382:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"0:3547":{"id":"0:3547","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}},"items":["0:3549:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3067":{"id":"0:3067","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[143,0],"end":[148,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"20"}},"items":["0:3069:2051"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3481":{"id":"0:3481","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}},"items":["0:3484:2425","0:3485:2548","0:3486:2608","0:3487:2610","0:3488:2612","0:3489:1026","0:3491:2617"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3452:903":{"id":"2:3452:903","crate_id":2,"name":"mul","span":null,"visibility":"default","docs":"Performs the `*` operation.\n\n# Example\n\n```\nassert_eq!(12 * 2, 24);\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["rhs",{"kind":"generic","inner":"Rhs"}]],"output":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Mul","id":"2:3449:4783","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3525:2548":{"id":"0:3525:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"8"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:4447:2610":{"id":"0:4447:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2323:3965":{"id":"0:2323:3965","crate_id":0,"name":"be_u8","span":{"filename":"src/number/complete.rs","begin":[52,0],"end":[64,1]},"visibility":"public","docs":"Recognizes an unsigned 1 byte integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::be_u8;\n\nlet parser = |s| {\n  be_u8(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:137:1988":{"id":"0:137:1988","crate_id":0,"name":"add_context","span":{"filename":"src/error.rs","begin":[194,2],"end":[197,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}],["ctx",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2704:4275":{"id":"0:2704:4275","crate_id":0,"name":"recognize_float_parts","span":{"filename":"src/number/streaming.rs","begin":[1433,0],"end":[1522,1]},"visibility":"public","docs":"Recognizes a floating point number in text format\n\nIt returns a tuple of (`sign`, `integer part`, `fraction part` and `exponent`) of the input\ndata.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"bool"},{"kind":"generic","inner":"T"},{"kind":"generic","inner":"T"},{"kind":"primitive","inner":"i32"}]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeTo","id":"2:46332:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Offset","id":"0:731:2043","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"crate::traits::ParseTo","id":"0:986:2226","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputTake","id":"0:807:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"InputTakeAtPosition","id":"0:840:2225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"AsChar","id":"0:756:2222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Compare","id":"0:903:2227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsBytes","id":"0:743:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:3689:1026":{"id":"0:3689:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23855:1289":{"id":"2:23855:1289","crate_id":2,"name":"simd_gt","span":null,"visibility":"default","docs":"Test if each lane is greater than the corresponding lane in `other`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdPartialEq","id":"2:23264:14720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:4470":{"id":"0:4470","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"u8"}}}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}},"items":["0:4473:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4423:2657":{"id":"0:4423:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"30"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3627":{"id":"0:3627","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"10"}},"items":["0:3629:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6177:2669":{"id":"5:6177:2669","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8478:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8478:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3527:2610":{"id":"0:3527:2610","crate_id":0,"name":"iter_indices","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Iter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4103:2657":{"id":"0:4103:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"22"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4335:2657":{"id":"0:4335:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"28"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23152:61101":{"id":"2:23152:61101","crate_id":2,"name":"is_finite","span":null,"visibility":"default","docs":"Returns true for each lane if its value is neither infinite nor `NaN`.","links":{},"attrs":["#[must_use =\n\"method returns a new mask and does not mutate the original value\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"Mask","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"SimdFloat","id":"2:23138:14719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2808:2094":{"id":"0:2808:2094","crate_id":0,"name":"Eof","span":{"filename":"src/error.rs","begin":[390,2],"end":[390,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2380:4053":{"id":"0:2380:4053","crate_id":0,"name":"le_i16","span":{"filename":"src/number/complete.rs","begin":[608,0],"end":[613,1]},"visibility":"public","docs":"Recognizes a little endian signed 2 bytes integer.\n\n*Complete version*: Returns an error if there is not enough input data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::number::complete::le_i16;\n\nlet parser = |s| {\n  le_i16(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));\nassert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"i16"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:9151:5422":{"id":"2:9151:5422","crate_id":2,"name":"product","span":null,"visibility":"default","docs":"Iterates over the entire iterator, multiplying all the elements\n\nAn empty iterator returns the one value of the type.\n\n# Panics\n\nWhen calling `product()` and a primitive integer type is being returned,\nmethod will panic if the computation overflows and debug assertions are\nenabled.\n\n# Examples\n\n```\nfn factorial(n: u32) -> u32 {\n    (1..=n).product()\n}\nassert_eq!(factorial(0), 1);\nassert_eq!(factorial(1), 1);\nassert_eq!(factorial(5), 120);\n```","links":{},"attrs":["#[stable(feature = \"iter_arith\", since = \"1.11.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"P"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Product","id":"2:8687:4928","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Iterator","id":"2:8925:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4307":{"id":"0:4307","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"27"}},"items":["0:4309:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1345:3081":{"id":"0:1345:3081","crate_id":0,"name":"separated_pair","span":{"filename":"src/sequence/mod.rs","begin":[133,0],"end":[148,1]},"visibility":"public","docs":"Gets an object from the first parser,\nthen matches an object from the sep_parser and discards it,\nthen gets another object from the second parser.\n\n# Arguments\n* `first` The first parser to apply.\n* `sep` The separator parser to apply.\n* `second` The second parser to apply.\n\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\n# use nom::Needed::Size;\nuse nom::sequence::separated_pair;\nuse nom::bytes::complete::tag;\n\nlet mut parser = separated_pair(tag(\"abc\"), tag(\"|\"), tag(\"efg\"));\n\nassert_eq!(parser(\"abc|efg\"), Ok((\"\", (\"abc\", \"efg\"))));\nassert_eq!(parser(\"abc|efghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));\nassert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));\nassert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["first",{"kind":"generic","inner":"F"}],["sep",{"kind":"generic","inner":"G"}],["second",{"kind":"generic","inner":"H"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3624:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"I"}],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"O1"},{"kind":"generic","inner":"O3"}]}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O3","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O1"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"H"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"generic","inner":"O3"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:537:299":{"id":"0:537:299","crate_id":0,"name":"and_then","span":{"filename":"src/internal.rs","begin":[274,2],"end":[284,3]},"visibility":"default","docs":"Applies a second parser over the output of the first one","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"resolved_path","inner":{"name":"AndThen","id":"0:597:2521","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"generic","inner":"G"}},{"type":{"kind":"generic","inner":"O"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"O2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"Parser","id":"0:525:1960","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"O"}},{"type":{"kind":"generic","inner":"O2"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Self"},"bounds":[{"trait_bound":{"trait":{"name":"core::marker::Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:807:2619":{"id":"0:807:2619","crate_id":0,"name":"InputTake","span":{"filename":"src/traits.rs","begin":[328,0],"end":[333,1]},"visibility":"public","docs":"Abstracts slicing operations","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:808:2423","0:809:2622"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3375:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:821","0:835"]}},"0:3636:2236":{"id":"0:3636:2236","crate_id":0,"name":"input_len","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4044:2425":{"id":"0:4044:2425","crate_id":0,"name":"Item","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"u8"}}},"2:13432:61175":{"id":"2:13432:61175","crate_id":2,"name":"into_searcher","span":null,"visibility":"default","docs":"Constructs the associated searcher from\n`self` and the `haystack` to search in.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Pattern","id":"2:13429:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3849:1026":{"id":"0:3849:1026","crate_id":0,"name":"position","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47909:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3621:131","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:798:2223","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:737:968":{"id":"0:737:968","crate_id":0,"name":"offset","span":{"filename":"src/traits.rs","begin":[63,2],"end":[68,3]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["second",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3735:2657":{"id":"0:3735:2657","crate_id":0,"name":"compare","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["t",{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"13"}}]],"output":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:777:2581":{"id":"0:777:2581","crate_id":0,"name":"is_dec_digit","span":{"filename":"src/traits.rs","begin":[220,2],"end":[222,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2732:2016":{"id":"0:2732:2016","crate_id":0,"name":"errors","span":{"filename":"src/error.rs","begin":[154,2],"end":[154,62]},"visibility":"public","docs":"List of errors accumulated by `VerboseError`, containing the affected\npart of input data, and some context","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"crate::lib::std::vec::Vec","id":"5:7897:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"I"},{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]}}],"bindings":[]}}}}},"2:13429:4856":{"id":"2:13429:4856","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13431:5016","2:13432:61175","2:13433:61176","2:13434:61177","2:13435:61179","2:13436:61178","2:13437:61180"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3163":{"id":"0:3163","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[706,16],"end":[706,25]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3378:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CompareResult","id":"0:3154:2228","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2563:3965":{"id":"0:2563:3965","crate_id":0,"name":"be_u8","span":{"filename":"src/number/streaming.rs","begin":[50,0],"end":[62,1]},"visibility":"public","docs":"Recognizes an unsigned 1 byte integer.\n\n*Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.\n```rust\n# use nom::{Err, error::ErrorKind, Needed};\nuse nom::number::streaming::be_u8;\n\nlet parser = |s| {\n  be_u8::<_, (_, ErrorKind)>(s)\n};\n\nassert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));\nassert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"IResult","id":"0:459:2032","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}},{"type":{"kind":"primitive","inner":"u8"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ParseError","id":"0:73:1966","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Slice","id":"0:998:2229","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RangeFrom","id":"2:46312:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"primitive","inner":"u8"}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"InputLength","id":"0:719:2224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:2893":{"id":"0:2893","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[48,16],"end":[48,25]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2920:187","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2894:612"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:4467":{"id":"0:4467","crate_id":0,"name":null,"span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":{"restricted":{"parent":"0:660:1844","path":"::traits"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FindToken","id":"0:938:2671","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}},"for":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"31"}},"items":["0:4469:2673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:516":{"id":"0:516","crate_id":0,"name":null,"span":{"filename":"src/internal.rs","begin":[213,0],"end":[225,1]},"visibility":{"restricted":{"parent":"0:444:1843","path":"::internal"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10652:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Err","id":"0:2901:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:518:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3485:2548":{"id":"0:3485:2548","crate_id":0,"name":"Iter","span":{"filename":"src/traits.rs","begin":[1129,0],"end":[1134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Enumerate","id":"2:47045:2547","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IterElem","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"7"}}}},"trait":{"name":"InputIter","id":"0:798:2223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}}}},"0:834:2617":{"id":"0:834:2617","crate_id":0,"name":"slice_index","span":{"filename":"src/traits.rs","begin":[401,2],"end":[413,3]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48034:209","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"Needed","id":"0:2884:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8795:2046":{"id":"2:8795:2046","crate_id":2,"name":"is_empty","span":null,"visibility":"default","docs":"Returns `true` if the iterator is empty.\n\nThis method has a default implementation using\n[`ExactSizeIterator::len()`], so you don't need to implement it yourself.\n\n# Examples\n\nBasic usage:\n\n```\n#![feature(exact_size_is_empty)]\n\nlet mut one_element = std::iter::once(0);\nassert!(!one_element.is_empty());\n\nassert_eq!(one_element.next(), Some(0));\nassert!(one_element.is_empty());\n\nassert_eq!(one_element.next(), None);\n```","links":{"`ExactSizeIterator::len()`":"2:8794:803"},"attrs":["#[unstable(feature = \"exact_size_is_empty\", issue = \"35428\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2756":{"id":"0:2756","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[159,16],"end":[159,21]},"visibility":{"restricted":{"parent":"0:66:1845","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10645:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VerboseErrorKind","id":"0:2744:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2757:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"6:6954:18144":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:15153:14324":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"19:136:5668":{"crate_id":19,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:15870:4617":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:696:14452":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:7727:14476":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"0:1260:2999":{"crate_id":0,"path":["nom","multi","fold_many1"],"kind":"function"},"18:12250:16053":{"crate_id":18,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:2733:15135":{"crate_id":17,"path":["gimli","common","Format"],"kind":"enum"},"2:3503:4792":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:6768:4933":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:10402:14298":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"0:2844:2111":{"crate_id":0,"path":["nom","error","ErrorKind","ManyMN"],"kind":"variant"},"12:2072:7226":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"6:5216:17801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"12:895:15019":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"18:13247:16342":{"crate_id":18,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:681:15688":{"crate_id":18,"path":["object","read","any","Symbol"],"kind":"struct"},"2:23476:23765":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:50649:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:194:1837":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"0:2326:3971":{"crate_id":0,"path":["nom","number","complete","be_u16"],"kind":"function"},"1:6716:14309":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"12:1147:6957":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:49457:4979":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:6943:18140":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:49030:5435":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"12:162:15031":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:5217:15139":{"crate_id":17,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:10907:5627":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:3265:15388":{"crate_id":17,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"12:764:4995":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:2326:608":{"crate_id":1,"path":["std","env"],"kind":"module"},"0:2862:2120":{"crate_id":0,"path":["nom","error","ErrorKind","Float"],"kind":"variant"},"0:325:2323":{"crate_id":0,"path":["nom","combinator","eof"],"kind":"function"},"0:2155:3553":{"crate_id":0,"path":["nom","character","streaming","anychar"],"kind":"function"},"18:9131:49461":{"crate_id":18,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:15607:15651":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:11127:14318":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"5:4379:4995":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:24453:15654":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"0:1862:3357":{"crate_id":0,"path":["nom","bytes","streaming","escaped_transform"],"kind":"function"},"2:52056:14679":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:3060:14494":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:10666:4716":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:50886:4740":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:48102:182":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:5196:7099":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:14951:14406":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"18:9579:129":{"crate_id":18,"path":["object","read","any","File"],"kind":"struct"},"18:10545:15804":{"crate_id":18,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:15048:14383":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4142:17617":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:11771:5002":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"18:10445:15730":{"crate_id":18,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:3554:4882":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:6902:18131":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:7132:190":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"18:11968:16009":{"crate_id":18,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:7247:15241":{"crate_id":17,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:52132:14668":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"18:11457:15900":{"crate_id":18,"path":["object","elf","Ident"],"kind":"struct"},"17:6035:15246":{"crate_id":17,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"0:1936:412":{"crate_id":0,"path":["nom","character","complete","char"],"kind":"function"},"5:5968:15607":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"15:0:4585":{"crate_id":15,"path":["rustc_demangle"],"kind":"module"},"17:4316:16572":{"crate_id":17,"path":["gimli","constants","DwAte"],"kind":"struct"},"15:250:16848":{"crate_id":15,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:15873:4620":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:12068:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:52330:16988":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"0:1610:3184":{"crate_id":0,"path":["nom","bytes","complete","tag"],"kind":"function"},"2:8248:4910":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:47950:2548":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"18:13281:16345":{"crate_id":18,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:10594:209":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"0:1970:3534":{"crate_id":0,"path":["nom","character","complete","line_ending"],"kind":"function"},"1:2135:7223":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"0:2641:4100":{"crate_id":0,"path":["nom","number","streaming","u24"],"kind":"function"},"18:9361:15678":{"crate_id":18,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:15236:14533":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"0:266:2265":{"crate_id":0,"path":["nom","combinator","map_res"],"kind":"function"},"2:23327:14340":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"0:2022:3641":{"crate_id":0,"path":["nom","character","complete","space0"],"kind":"function"},"2:9615:5288":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:53850:17008":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:50793:16979":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:527:17262":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"18:8902:49455":{"crate_id":18,"path":["object","common","AddressSize"],"kind":"enum"},"0:2632:4069":{"crate_id":0,"path":["nom","number","streaming","le_i128"],"kind":"function"},"18:13361:16367":{"crate_id":18,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:6268:18110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:46288:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:1526:17327":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"0:2748:1979":{"crate_id":0,"path":["nom","error","VerboseErrorKind","Char"],"kind":"variant"},"1:11345:14408":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"0:2149:3541":{"crate_id":0,"path":["nom","character","streaming","newline"],"kind":"function"},"6:4048:17571":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:6159:15210":{"crate_id":17,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:51780:16983":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:52724:14680":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"0:1650:3275":{"crate_id":0,"path":["nom","bytes","complete","take_while_m_n"],"kind":"function"},"17:6490:15265":{"crate_id":17,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:46732:14772":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:12551:14484":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"18:11713:15953":{"crate_id":18,"path":["object","elf","Versym"],"kind":"struct"},"18:13196:16329":{"crate_id":18,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:6568:4849":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"18:11563:15927":{"crate_id":18,"path":["object","elf","Sym64"],"kind":"struct"},"2:3882:4807":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"0:4:807":{"crate_id":0,"path":["nom","lib"],"kind":"module"},"0:2428:734":{"crate_id":0,"path":["nom","number","complete","i128"],"kind":"function"},"0:5924:739":{"crate_id":0,"path":["nom","character","complete","i8"],"kind":"function"},"2:48169:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"0:2182:3613":{"crate_id":0,"path":["nom","character","streaming","oct_digit0"],"kind":"function"},"5:844:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:3007:15381":{"crate_id":17,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:48683:4717":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:3108:14298":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:11952:14361":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:14416:14486":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:8725:14573":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"1:8210:7755":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"1:15872:4619":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"0:1205:2927":{"crate_id":0,"path":["nom","multi","separated_list1"],"kind":"function"},"5:3114:62435":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:10605:135":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"0:2413:739":{"crate_id":0,"path":["nom","number","complete","i8"],"kind":"function"},"0:1850:3336":{"crate_id":0,"path":["nom","bytes","streaming","escaped"],"kind":"function"},"2:51910:14699":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:11785:5005":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:24512:16941":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:6229:18095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"5:444:2221":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:52646:14692":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:24258:14817":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:53888:17010":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"0:6089:3953":{"crate_id":0,"path":["nom","number","Endianness","Little"],"kind":"variant"},"1:15863:4612":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"21:892:15660":{"crate_id":21,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:11242:14538":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"0:2620:4053":{"crate_id":0,"path":["nom","number","streaming","le_i16"],"kind":"function"},"18:13323:16359":{"crate_id":18,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"21:850:143":{"crate_id":21,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"18:10136:15778":{"crate_id":18,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:2765:587":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:5959:15141":{"crate_id":17,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:5186:17784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:7208:15283":{"crate_id":17,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:11042:14437":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"0:2790:2085":{"crate_id":0,"path":["nom","error","ErrorKind","TagClosure"],"kind":"variant"},"2:3109:4755":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"0:2006:3613":{"crate_id":0,"path":["nom","character","complete","oct_digit0"],"kind":"function"},"2:47125:4934":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:48994:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:5154:14525":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:6214:18088":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"19:621:15676":{"crate_id":19,"path":["memchr","cow","Imp"],"kind":"struct"},"0:1818:3287":{"crate_id":0,"path":["nom","bytes","streaming","take_till"],"kind":"function"},"0:2230:3465":{"crate_id":0,"path":["nom","character","is_alphanumeric"],"kind":"function"},"5:6346:4888":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"0:2856:2117":{"crate_id":0,"path":["nom","error","ErrorKind","TooLarge"],"kind":"variant"},"0:1540:1842":{"crate_id":0,"path":["nom","bits","bits"],"kind":"function"},"17:6089:15253":{"crate_id":17,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:24161:14652":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"18:13257:16343":{"crate_id":18,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:5974:17970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"0:2581:3995":{"crate_id":0,"path":["nom","number","streaming","be_i8"],"kind":"function"},"18:13817:16512":{"crate_id":18,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"18:9883:63913":{"crate_id":18,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"18:10660:49647":{"crate_id":18,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:25174:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"18:11547:15922":{"crate_id":18,"path":["object","elf","Sym32"],"kind":"struct"},"1:10900:4911":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:12883:2549":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:14386:18236":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:1600:17368":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"12:2066:7225":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:9874:1126":{"crate_id":2,"path":["core","result"],"kind":"module"},"15:216:47810":{"crate_id":15,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"0:2816:2098":{"crate_id":0,"path":["nom","error","ErrorKind","NoneOf"],"kind":"variant"},"18:13515:16411":{"crate_id":18,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:2981:15391":{"crate_id":17,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:5210:17800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"12:2419:4858":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"0:2170:3592":{"crate_id":0,"path":["nom","character","streaming","digit1"],"kind":"function"},"19:169:5670":{"crate_id":19,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"12:2253:6955":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"0:2629:4065":{"crate_id":0,"path":["nom","number","streaming","le_i64"],"kind":"function"},"2:50645:12897":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"5:5173:668":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:5954:15604":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:5998:15226":{"crate_id":17,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:2141:7224":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:3174:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:5869:193":{"crate_id":17,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"18:10530:15801":{"crate_id":18,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:48421:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"0:66:1845":{"crate_id":0,"path":["nom","error"],"kind":"module"},"0:5974:739":{"crate_id":0,"path":["nom","character","streaming","i8"],"kind":"function"},"2:10121:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:11716:5001":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"18:11002:15863":{"crate_id":18,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:7659:15285":{"crate_id":17,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:6201:1838":{"crate_id":5,"path":["alloc","string"],"kind":"module"},"1:14778:15649":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"0:1242:659":{"crate_id":0,"path":["nom","multi","fill"],"kind":"function"},"18:12406:16097":{"crate_id":18,"path":["object","macho","DylibReference"],"kind":"struct"},"6:3972:17535":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"19:694:15580":{"crate_id":19,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:51577:14677":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:13468:2229":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"0:2152:3546":{"crate_id":0,"path":["nom","character","streaming","tab"],"kind":"function"},"21:833:15578":{"crate_id":21,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"0:2638:1458":{"crate_id":0,"path":["nom","number","streaming","u16"],"kind":"function"},"18:9206:49462":{"crate_id":18,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:9136:14338":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:23469:14298":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:50300:12907":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:0:1353":{"crate_id":1,"path":["std"],"kind":"module"},"2:46716:14770":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:6640:14306":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"0:2704:4275":{"crate_id":0,"path":["nom","number","streaming","recognize_float_parts"],"kind":"function"},"18:13522:16412":{"crate_id":18,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"5:3106:18149":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"18:13887:16527":{"crate_id":18,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"0:161:2041":{"crate_id":0,"path":["nom","error","convert_error"],"kind":"function"},"2:25141:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:49898:4991":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:6873:5284":{"crate_id":17,"path":["gimli","read","op","Location"],"kind":"enum"},"2:51465:16980":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"15:231:1966":{"crate_id":15,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"18:12093:16032":{"crate_id":18,"path":["object","macho","Section64"],"kind":"struct"},"18:10831:15494":{"crate_id":18,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:21:680":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:47134:4945":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:1719:6947":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:5923:15250":{"crate_id":17,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"18:13306:16354":{"crate_id":18,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"18:9836:63915":{"crate_id":18,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:2920:187":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:5567:17952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"0:73:1966":{"crate_id":0,"path":["nom","error","ParseError"],"kind":"trait"},"6:3981:17540":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"0:2227:2599":{"crate_id":0,"path":["nom","character","is_digit"],"kind":"function"},"1:1418:6946":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:1912:43571":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:2754:15134":{"crate_id":17,"path":["gimli","common","Encoding"],"kind":"struct"},"6:4277:17636":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:3915:4732":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:3618:4799":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:14144:139":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"0:2125:3368":{"crate_id":0,"path":["nom","character","streaming","one_of"],"kind":"function"},"0:2034:3661":{"crate_id":0,"path":["nom","character","complete","multispace1"],"kind":"function"},"18:294:15683":{"crate_id":18,"path":["object","read","util","DebugByte"],"kind":"struct"},"18:0:4588":{"crate_id":18,"path":["object"],"kind":"module"},"2:46430:4806":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:3044:14489":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:6643:18116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:3679:4800":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:46398:4803":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"0:2882:2124":{"crate_id":0,"path":["nom","error","error_to_u32"],"kind":"function"},"15:11:16842":{"crate_id":15,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:4660:16582":{"crate_id":17,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:7732:57561":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:14381:18234":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:15036:14378":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:10985:156":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"12:1121:6956":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:1031:14336":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"18:13331:16362":{"crate_id":18,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"9:963:14961":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:14340:61387":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"17:7754:15287":{"crate_id":17,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:6474:18018":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:3444:4786":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"18:12573:16123":{"crate_id":18,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"0:2380:4053":{"crate_id":0,"path":["nom","number","complete","le_i16"],"kind":"function"},"6:4474:17728":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"0:124:2008":{"crate_id":0,"path":["nom","error","make_error"],"kind":"function"},"17:5941:15251":{"crate_id":17,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:3790:4804":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:6173:15257":{"crate_id":17,"path":["gimli","read","line","LineRows"],"kind":"struct"},"18:11514:15916":{"crate_id":18,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"12:2412:17245":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:46829:14864":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"18:10643:15814":{"crate_id":18,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"0:1876:1850":{"crate_id":0,"path":["nom","character"],"kind":"module"},"2:8683:4929":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:47055:4941":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"0:1657:3287":{"crate_id":0,"path":["nom","bytes","complete","take_till"],"kind":"function"},"0:1942:3498":{"crate_id":0,"path":["nom","character","complete","satisfy"],"kind":"function"},"21:1001:15568":{"crate_id":21,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"0:2796:2088":{"crate_id":0,"path":["nom","error","ErrorKind","HexDigit"],"kind":"variant"},"1:12016:14365":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:4411:16575":{"crate_id":17,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:15868:4615":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:32881:61415":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:10648:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:8687:4928":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:3960:7756":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"18:11085:15516":{"crate_id":18,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:4315:17656":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:14845:14398":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:15861:4610":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:11898:17162":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"0:1305:1848":{"crate_id":0,"path":["nom","sequence"],"kind":"module"},"0:2026:3648":{"crate_id":0,"path":["nom","character","complete","space1"],"kind":"function"},"2:5263:7105":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:1108:17025":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:51509:14709":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:11250:14527":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:46949:15616":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"18:11031:49463":{"crate_id":18,"path":["object","read","FileKind"],"kind":"enum"},"21:840:15579":{"crate_id":21,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"0:2650:1457":{"crate_id":0,"path":["nom","number","streaming","u128"],"kind":"function"},"0:2174:3599":{"crate_id":0,"path":["nom","character","streaming","hex_digit0"],"kind":"function"},"6:3896:17481":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:4890:14644":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:5578:4851":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"5:1502:6955":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:3883:17472":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:50346:12914":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"12:559:144":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:4:990":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:3051:15439":{"crate_id":17,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:11256:14546":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:14630:57682":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"18:10586:15809":{"crate_id":18,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:12053:166":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"6:88:42197":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"18:11922:15997":{"crate_id":18,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:3960:17532":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:5747:19514":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:49687:4986":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:4716:15600":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"0:2578:3991":{"crate_id":0,"path":["nom","number","streaming","be_u128"],"kind":"function"},"17:2937:15402":{"crate_id":17,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"18:13167:16321":{"crate_id":18,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"12:1784:15593":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:8455:14875":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:4140:14512":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:48942:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:11275:14298":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"18:12482:16107":{"crate_id":18,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"18:9948:15780":{"crate_id":18,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:14457:60555":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:11678:5000":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:6016:17994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:47909:180":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"18:13129:16310":{"crate_id":18,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:4446:17716":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"18:11754:15965":{"crate_id":18,"path":["object","elf","Verneed"],"kind":"struct"},"2:5318:7106":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:50066:5032":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:8639:17038":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:1727:17453":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"0:6016:1460":{"crate_id":0,"path":["nom","character","streaming","u64"],"kind":"function"},"18:12003:16013":{"crate_id":18,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:7210:4954":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:49206:5583":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"5:984:7437":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:49453:12586":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"21:992:15567":{"crate_id":21,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:6717:15270":{"crate_id":17,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:4198:16570":{"crate_id":17,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:8223:4742":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"0:1250:2991":{"crate_id":0,"path":["nom","multi","fold_many0"],"kind":"function"},"18:11314:15483":{"crate_id":18,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:7449:15216":{"crate_id":17,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"18:11381:15881":{"crate_id":18,"path":["object","archive","Header"],"kind":"struct"},"2:9243:4925":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:4902:14645":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"18:13463:16394":{"crate_id":18,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:47087:4943":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:3407:7695":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"18:10913:15856":{"crate_id":18,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:5948:15376":{"crate_id":17,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:48933:134":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"6:1704:17443":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"18:13908:16533":{"crate_id":18,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"12:843:6945":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:52834:14669":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:49808:4998":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:7309:15211":{"crate_id":17,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:10634:14292":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:3482:4787":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"12:2040:4849":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:2619:7551":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:6549:15224":{"crate_id":17,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:46815:5026":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"19:729:63917":{"crate_id":19,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:5257:15766":{"crate_id":17,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:12039:14559":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"0:2608:4036":{"crate_id":0,"path":["nom","number","streaming","le_u32"],"kind":"function"},"18:10223:15454":{"crate_id":18,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:7281:15212":{"crate_id":17,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:7086:17036":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"0:2010:3620":{"crate_id":0,"path":["nom","character","complete","oct_digit1"],"kind":"function"},"21:705:15676":{"crate_id":21,"path":["memchr","cow","Imp"],"kind":"enum"},"18:13215:16330":{"crate_id":18,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"18:12302:16061":{"crate_id":18,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:8285:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"0:2347:4003":{"crate_id":0,"path":["nom","number","complete","be_i24"],"kind":"function"},"0:5980:736":{"crate_id":0,"path":["nom","character","streaming","i16"],"kind":"function"},"0:2419:4164":{"crate_id":0,"path":["nom","number","complete","i24"],"kind":"function"},"1:10641:14486":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:50172:5020":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:10883:143":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:7637:15284":{"crate_id":17,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:5433:17911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"0:1689:3336":{"crate_id":0,"path":["nom","bytes","complete","escaped"],"kind":"function"},"2:51555:14689":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:15877:4624":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:25075:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"0:1949:3368":{"crate_id":0,"path":["nom","character","complete","one_of"],"kind":"function"},"17:5326:15098":{"crate_id":17,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:49874:2550":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"18:13293:16348":{"crate_id":18,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:8178:9694":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:4402:17699":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:13100:12901":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:12317:4994":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"12:787:6948":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"9:469:47236":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:51661:14702":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"18:12157:16041":{"crate_id":18,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:3474:4790":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:10681:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:7169:15223":{"crate_id":17,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"0:5962:1459":{"crate_id":0,"path":["nom","character","complete","u32"],"kind":"function"},"1:10780:14441":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:8708:4914":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:13449:5014":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:5739:14601":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:11984:14363":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"18:13747:16488":{"crate_id":18,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"18:11068:15486":{"crate_id":18,"path":["object","read","SectionIndex"],"kind":"struct"},"1:15876:4623":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:513:17254":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"5:8247:4849":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"18:12921:16183":{"crate_id":18,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:51531:14697":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:4075:17584":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"18:11956:16007":{"crate_id":18,"path":["object","macho","FatArch64"],"kind":"struct"},"1:14054:5620":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"18:12892:16163":{"crate_id":18,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"0:328:2216":{"crate_id":0,"path":["nom","combinator","complete"],"kind":"function"},"5:3462:7226":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"18:12143:15819":{"crate_id":18,"path":["object","macho","Dylib"],"kind":"struct"},"1:15881:4628":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:47017:4932":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"18:9004:49457":{"crate_id":18,"path":["object","common","ComdatKind"],"kind":"enum"},"0:1636:3257":{"crate_id":0,"path":["nom","bytes","complete","take_while"],"kind":"function"},"2:50394:12915":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:3411:4730":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:11868:14400":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:56721:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:3494:15694":{"crate_id":17,"path":["gimli","arch","Arm"],"kind":"struct"},"2:8484:9184":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"0:1643:3263":{"crate_id":0,"path":["nom","bytes","complete","take_while1"],"kind":"function"},"13:121:47776":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"21:823:15574":{"crate_id":21,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:50048:5031":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"18:12318:16066":{"crate_id":18,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"19:651:15574":{"crate_id":19,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:1592:6956":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"5:7318:4849":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"18:11653:15939":{"crate_id":18,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"18:10364:15523":{"crate_id":18,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"19:837:5016":{"crate_id":19,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:3314:15132":{"crate_id":17,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"12:1162:15027":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:3243:15387":{"crate_id":17,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"18:13428:16383":{"crate_id":18,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:14543:142":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"0:6086:3949":{"crate_id":0,"path":["nom","number","Endianness"],"kind":"enum"},"0:1443:3184":{"crate_id":0,"path":["nom","bits","complete","tag"],"kind":"function"},"1:10513:6960":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:49948:5036":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"11:54:15017":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:3743:16567":{"crate_id":17,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:7941:15609":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:4975:16592":{"crate_id":17,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:7993:15626":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:47185:4936":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"0:2647:1460":{"crate_id":0,"path":["nom","number","streaming","u64"],"kind":"function"},"0:2668:734":{"crate_id":0,"path":["nom","number","streaming","i128"],"kind":"function"},"2:46768:5028":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"0:154:489":{"crate_id":0,"path":["nom","error","context"],"kind":"function"},"21:1057:15572":{"crate_id":21,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"19:829:15568":{"crate_id":19,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"0:2112:412":{"crate_id":0,"path":["nom","character","streaming","char"],"kind":"function"},"2:3888:4809":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:53784:17002":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"0:2674:4212":{"crate_id":0,"path":["nom","number","streaming","be_f64"],"kind":"function"},"18:10104:15549":{"crate_id":18,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:2859:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:4256:5620":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"0:2602:4026":{"crate_id":0,"path":["nom","number","streaming","le_u16"],"kind":"function"},"0:0:1856":{"crate_id":0,"path":["nom"],"kind":"module"},"0:318:2313":{"crate_id":0,"path":["nom","combinator","peek"],"kind":"function"},"2:53903:17011":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"0:2338:3991":{"crate_id":0,"path":["nom","number","complete","be_u128"],"kind":"function"},"21:938:15670":{"crate_id":21,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:25207:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"21:946:15658":{"crate_id":21,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"2:3683:4801":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:53824:17006":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:15882:4629":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:49222:5582":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"0:2389:4065":{"crate_id":0,"path":["nom","number","complete","le_i64"],"kind":"function"},"17:7768:15214":{"crate_id":17,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"18:10464:15491":{"crate_id":18,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:53980:17014":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"21:170:5670":{"crate_id":21,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:1460:6950":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"18:12015:16015":{"crate_id":18,"path":["object","macho","LcStr"],"kind":"struct"},"0:1790:3245":{"crate_id":0,"path":["nom","bytes","streaming","is_a"],"kind":"function"},"0:5986:737":{"crate_id":0,"path":["nom","character","streaming","i32"],"kind":"function"},"18:11591:15931":{"crate_id":18,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:6979:18147":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"0:2416:736":{"crate_id":0,"path":["nom","number","complete","i16"],"kind":"function"},"2:10816:723":{"crate_id":2,"path":["core","hash"],"kind":"module"},"18:11725:15954":{"crate_id":18,"path":["object","elf","Verdef"],"kind":"struct"},"6:157:42263":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:4509:17741":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:4716:16584":{"crate_id":17,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:4942:16591":{"crate_id":17,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:3905:15595":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"18:13794:16499":{"crate_id":18,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:6093:14544":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:11187:14529":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:6026:15203":{"crate_id":17,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"18:12634:16138":{"crate_id":18,"path":["object","macho","IdentCommand"],"kind":"struct"},"18:11305:15877":{"crate_id":18,"path":["object","read","Relocation"],"kind":"struct"},"2:47958:4995":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:2263:6373":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"0:2386:4061":{"crate_id":0,"path":["nom","number","complete","le_i32"],"kind":"function"},"0:2745:2020":{"crate_id":0,"path":["nom","error","VerboseErrorKind","Context"],"kind":"variant"},"1:1477:6952":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"18:10598:15810":{"crate_id":18,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:14440:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"18:10422:15797":{"crate_id":18,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"0:5:1353":{"crate_id":0,"path":["nom","lib","std"],"kind":"module"},"2:8724:153":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:10656:4710":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:46869:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"18:8954:15487":{"crate_id":18,"path":["object","common","SectionKind"],"kind":"enum"},"0:2850:2114":{"crate_id":0,"path":["nom","error","ErrorKind","Verify"],"kind":"variant"},"2:13176:12902":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"0:2139:3516":{"crate_id":0,"path":["nom","character","streaming","crlf"],"kind":"function"},"6:6931:18138":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:3993:17544":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:24051:11438":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"18:10455:15492":{"crate_id":18,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"21:911:15665":{"crate_id":21,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"18:10240:15446":{"crate_id":18,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"0:6050:4266":{"crate_id":0,"path":["nom","number","complete","recognize_float"],"kind":"function"},"0:2449:4254":{"crate_id":0,"path":["nom","number","complete","hex_u32"],"kind":"function"},"2:23138:14719":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"0:2323:3965":{"crate_id":0,"path":["nom","number","complete","be_u8"],"kind":"function"},"0:1982:3367":{"crate_id":0,"path":["nom","character","complete","alpha0"],"kind":"function"},"6:1544:17335":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:5768:14656":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"18:11907:15993":{"crate_id":18,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:5578:14287":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:50613:12889":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:10429:14475":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"19:152:5669":{"crate_id":19,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"0:2772:2077":{"crate_id":0,"path":["nom","error","ErrorKind","IsA"],"kind":"variant"},"2:53766:14673":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"0:1777:3219":{"crate_id":0,"path":["nom","bytes","streaming","tag_no_case"],"kind":"function"},"6:5366:17883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:47394:4914":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:1760:7546":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:1088:4905":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:5488:17926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"18:9920:15779":{"crate_id":18,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"21:137:5668":{"crate_id":21,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:6638:14295":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"0:254:2241":{"crate_id":0,"path":["nom","combinator","rest_len"],"kind":"function"},"1:8932:5280":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:46272:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"0:2852:2115":{"crate_id":0,"path":["nom","error","ErrorKind","TakeTill1"],"kind":"variant"},"6:1551:17337":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:7055:17036":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"18:12282:16060":{"crate_id":18,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:50637:12895":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:49798:4997":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:48909:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"19:637:15658":{"crate_id":19,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"5:3814:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"18:10899:15852":{"crate_id":18,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:53941:17013":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:5398:17896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:4464:17727":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:11643:5007":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:4017:4882":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:5868:15595":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:3907:17489":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:11930:2548":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:50421:12916":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:10928:5580":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:9616:5287":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"21:983:15566":{"crate_id":21,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:11876:18233":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:7379:15230":{"crate_id":17,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"5:2284:7698":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:10454:5647":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:11300:14310":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"0:2566:3971":{"crate_id":0,"path":["nom","number","streaming","be_u16"],"kind":"function"},"3:321:209":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:997:14349":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:1441:4882":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"15:244:16846":{"crate_id":15,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"0:2341:3995":{"crate_id":0,"path":["nom","number","complete","be_i8"],"kind":"function"},"0:2335:3986":{"crate_id":0,"path":["nom","number","complete","be_u64"],"kind":"function"},"12:928:6947":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:48253:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:7592:14401":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:5784:15125":{"crate_id":17,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:5566:14284":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"18:1236:15689":{"crate_id":18,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"21:817:15577":{"crate_id":21,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:51962:14706":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:56708:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:11605:4992":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:4467:16577":{"crate_id":17,"path":["gimli","constants","DwVis"],"kind":"struct"},"0:2198:3641":{"crate_id":0,"path":["nom","character","streaming","space0"],"kind":"function"},"2:50152:5029":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"0:2377:4049":{"crate_id":0,"path":["nom","number","complete","le_i8"],"kind":"function"},"2:25240:4842":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:3082:490":{"crate_id":2,"path":["core","convert"],"kind":"module"},"17:6331:15046":{"crate_id":17,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:23526:14651":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:11224:14318":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"0:2830:2104":{"crate_id":0,"path":["nom","error","ErrorKind","RegexpCaptures"],"kind":"variant"},"18:13763:16492":{"crate_id":18,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"0:1825:3295":{"crate_id":0,"path":["nom","bytes","streaming","take_till1"],"kind":"function"},"0:2864:2121":{"crate_id":0,"path":["nom","error","ErrorKind","Satisfy"],"kind":"variant"},"1:8856:14433":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:15856:4606":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:10785:1972":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:7868:128":{"crate_id":17,"path":["gimli","read","Error"],"kind":"enum"},"18:9756:63906":{"crate_id":18,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"0:6087:3951":{"crate_id":0,"path":["nom","number","Endianness","Big"],"kind":"variant"},"18:13573:16423":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:4209:14609":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:22923:5367":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:8555:4882":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"0:2202:3648":{"crate_id":0,"path":["nom","character","streaming","space1"],"kind":"function"},"2:25042:2446":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:4351:4918":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:25108:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:46695:16958":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:6190:15258":{"crate_id":17,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"0:2806:2093":{"crate_id":0,"path":["nom","error","ErrorKind","LengthValueFn"],"kind":"variant"},"19:801:15565":{"crate_id":19,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"18:11615:15935":{"crate_id":18,"path":["object","elf","Rela32"],"kind":"struct"},"1:3803:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"0:2018:3634":{"crate_id":0,"path":["nom","character","complete","alphanumeric1"],"kind":"function"},"0:2228:2583":{"crate_id":0,"path":["nom","character","is_hex_digit"],"kind":"function"},"5:3104:4751":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:1751:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"18:13584:16427":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:49966:5035":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"18:9291:15677":{"crate_id":18,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:51710:14690":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"12:466:18273":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:4573:16579":{"crate_id":17,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:4012:17557":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"18:10571:15543":{"crate_id":18,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:9236:4728":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"0:2686:641":{"crate_id":0,"path":["nom","number","streaming","f64"],"kind":"function"},"2:50641:12896":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:48972:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"0:2802:2091":{"crate_id":0,"path":["nom","error","ErrorKind","Space"],"kind":"variant"},"1:2123:4885":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:5247:17812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:3155:15383":{"crate_id":17,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:3077:15440":{"crate_id":17,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"21:153:5669":{"crate_id":21,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:1456:6949":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"12:869:4849":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"0:2776:2079":{"crate_id":0,"path":["nom","error","ErrorKind","SeparatedNonEmptyList"],"kind":"variant"},"0:2718:128":{"crate_id":0,"path":["nom","error","Error"],"kind":"struct"},"18:10394:15521":{"crate_id":18,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:53839:17007":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:5426:17910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"18:11797:15981":{"crate_id":18,"path":["object","elf","NoteHeader64"],"kind":"struct"},"0:351:2352":{"crate_id":0,"path":["nom","combinator","value"],"kind":"function"},"0:2680:4222":{"crate_id":0,"path":["nom","number","streaming","le_f64"],"kind":"function"},"17:7051:15273":{"crate_id":17,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:6914:18133":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:4356:17677":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:7323:15229":{"crate_id":17,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"18:13539:16416":{"crate_id":18,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"5:4701:241":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:7532:14397":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"19:866:15571":{"crate_id":19,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:3624:132":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:10662:193":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:1489:6954":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:14648:14400":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:6765:6106":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:4803:16587":{"crate_id":17,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"0:2761:1972":{"crate_id":0,"path":["nom","error","ErrorKind"],"kind":"enum"},"2:24400:16937":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"0:1173:2883":{"crate_id":0,"path":["nom","multi","many0"],"kind":"function"},"1:11071:18231":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"5:1909:15595":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"0:1287:3033":{"crate_id":0,"path":["nom","multi","length_value"],"kind":"function"},"5:8426:14837":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:230:15049":{"crate_id":16,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:11236:14600":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:24616:4841":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:52010:14691":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:4434:17712":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"9:1020:14963":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:48211:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:4143:14513":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"18:11985:16012":{"crate_id":18,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:3199:15385":{"crate_id":17,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:4425:17706":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:4270:14545":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:8442:14874":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"18:11409:15885":{"crate_id":18,"path":["object","elf","FileHeader32"],"kind":"struct"},"0:2234:1851":{"crate_id":0,"path":["nom","number"],"kind":"module"},"0:1106:2781":{"crate_id":0,"path":["nom","branch","alt"],"kind":"function"},"17:7684:15218":{"crate_id":17,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:1387:4995":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"4:0:4579":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:15839:57683":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"12:777:4885":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:10629:14484":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:52770:14684":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:46376:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:7355:15208":{"crate_id":17,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"0:2840:2109":{"crate_id":0,"path":["nom","error","ErrorKind","EscapedTransform"],"kind":"variant"},"1:11274:14313":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"18:11784:15977":{"crate_id":18,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:6099:15254":{"crate_id":17,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:4914:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:7471:15204":{"crate_id":17,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:14366:14315":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:5439:17914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:5698:15122":{"crate_id":17,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:6075:15207":{"crate_id":17,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:48690:4718":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"18:10788:15848":{"crate_id":18,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:6012:15205":{"crate_id":17,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:53190:14713":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"18:13180:16326":{"crate_id":18,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"21:0:1854":{"crate_id":21,"path":["memchr"],"kind":"module"},"0:2818:1979":{"crate_id":0,"path":["nom","error","ErrorKind","Char"],"kind":"variant"},"18:10988:15862":{"crate_id":18,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"0:434:2438":{"crate_id":0,"path":["nom","combinator","success"],"kind":"function"},"6:607:17308":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:7121:15279":{"crate_id":17,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:6967:18145":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:5522:14277":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"18:10166:15792":{"crate_id":18,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:3171:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"18:9064:49459":{"crate_id":18,"path":["object","common","SymbolScope"],"kind":"enum"},"6:4516:17744":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"0:2774:2078":{"crate_id":0,"path":["nom","error","ErrorKind","SeparatedList"],"kind":"variant"},"12:353:17239":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:4180:5623":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:5303:15097":{"crate_id":17,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"0:2194:3634":{"crate_id":0,"path":["nom","character","streaming","alphanumeric1"],"kind":"function"},"1:9962:60371":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:4271:16571":{"crate_id":17,"path":["gimli","constants","DwForm"],"kind":"struct"},"0:2356:4018":{"crate_id":0,"path":["nom","number","complete","be_i128"],"kind":"function"},"12:880:4882":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"12:2045:4882":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"18:10503:15496":{"crate_id":18,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"10:0:4582":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:4538:17754":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:13748:57566":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"0:1101:2075":{"crate_id":0,"path":["nom","branch","Alt"],"kind":"trait"},"2:52800:14687":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:23524:14666":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:5639:15115":{"crate_id":17,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:22989:61271":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:3898:11505":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"18:10476:15495":{"crate_id":18,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:53804:17004":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"18:10489:15799":{"crate_id":18,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:3513:3164":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"9:776:14943":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"12:0:4584":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:50278:12906":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:53690:14688":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:3952:4734":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:547:15119":{"crate_id":17,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"12:1703:15042":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"18:9786:15777":{"crate_id":18,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:3110:62433":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:46979:4930":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:5405:17897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:0:496":{"crate_id":2,"path":["core"],"kind":"module"},"17:3478:15389":{"crate_id":17,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:6679:15418":{"crate_id":17,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:4148:17619":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:3920:17499":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:6460:14277":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"12:1256:6958":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"18:10127:15494":{"crate_id":18,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:1518:6957":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"18:13735:16485":{"crate_id":18,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:6130:15255":{"crate_id":17,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:1748:17460":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:11822:14396":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:52410:14712":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"0:2848:2113":{"crate_id":0,"path":["nom","error","ErrorKind","Permutation"],"kind":"variant"},"2:24595:18156":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:10327:8630":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:853:14456":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:38038:5367":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:3437:974":{"crate_id":2,"path":["core","ops"],"kind":"module"},"1:5500:14280":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:2883:15397":{"crate_id":17,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:13231:14540":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:3533:4796":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:14048:5622":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:53918:17012":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"18:13271:16344":{"crate_id":18,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"0:2858:2118":{"crate_id":0,"path":["nom","error","ErrorKind","Many0Count"],"kind":"variant"},"18:10435:15456":{"crate_id":18,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:22991:61269":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"18:10937:15858":{"crate_id":18,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:47144:4946":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:9617:5286":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:5902:15249":{"crate_id":17,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"8:0:4580":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:4689:16583":{"crate_id":17,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:859:14457":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:1447:6947":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:5201:7100":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"13:0:4578":{"crate_id":13,"path":["std_detect"],"kind":"module"},"18:9087:49460":{"crate_id":18,"path":["object","common","RelocationKind"],"kind":"enum"},"2:50206:5027":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:3466:4784":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:5998:17987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:3405:5609":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"0:2410:1457":{"crate_id":0,"path":["nom","number","complete","u128"],"kind":"function"},"0:2605:4031":{"crate_id":0,"path":["nom","number","streaming","le_u24"],"kind":"function"},"2:48026:192":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:48669:4710":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"9:692:14896":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:2651:184":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:4143:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"12:1183:15028":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:3402:7224":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:50181:5019":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:3498:4791":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:9840:284":{"crate_id":1,"path":["std","alloc"],"kind":"module"},"18:11769:15971":{"crate_id":18,"path":["object","elf","Vernaux"],"kind":"struct"},"2:47116:2515":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:3029:15382":{"crate_id":17,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:10497:19510":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:4321:17659":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:3284:5612":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"0:1214:2936":{"crate_id":0,"path":["nom","multi","many_m_n"],"kind":"function"},"2:49766:4977":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:22951:61221":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"0:6012:1459":{"crate_id":0,"path":["nom","character","streaming","u32"],"kind":"function"},"18:10147:15791":{"crate_id":18,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"0:2132:3374":{"crate_id":0,"path":["nom","character","streaming","none_of"],"kind":"function"},"17:5721:15123":{"crate_id":17,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"0:5970:1457":{"crate_id":0,"path":["nom","character","complete","u128"],"kind":"function"},"0:2614:4046":{"crate_id":0,"path":["nom","number","streaming","le_u128"],"kind":"function"},"18:11433:15899":{"crate_id":18,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11891:2039":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"2:14194:61386":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:1533:6956":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:13915:15647":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:7155:15282":{"crate_id":17,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"9:996:14962":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:5301:17839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:22968:61267":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"0:1811:3275":{"crate_id":0,"path":["nom","bytes","streaming","take_while_m_n"],"kind":"function"},"1:5508:14281":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:1397:4885":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:50120:5034":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:6595:15221":{"crate_id":17,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:8314:4885":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:7364:15595":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:56773:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:10540:7631":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:14617:14304":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:50526:4857":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"12:114:18272":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:10264:15642":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"15:194:47804":{"crate_id":15,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:14424:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"0:2623:4057":{"crate_id":0,"path":["nom","number","streaming","le_i24"],"kind":"function"},"12:1203:15029":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"0:1702:3357":{"crate_id":0,"path":["nom","bytes","complete","escaped_transform"],"kind":"function"},"2:5083:7109":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:5273:15767":{"crate_id":17,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:13846:14396":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:56734:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:7238:15227":{"crate_id":17,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"18:9826:15494":{"crate_id":18,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:5374:15101":{"crate_id":17,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"0:2563:3965":{"crate_id":0,"path":["nom","number","streaming","be_u8"],"kind":"function"},"6:4116:17606":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"0:2766:2074":{"crate_id":0,"path":["nom","error","ErrorKind","MapOpt"],"kind":"variant"},"2:47966:4885":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"0:2210:3661":{"crate_id":0,"path":["nom","character","streaming","multispace1"],"kind":"function"},"18:10975:15861":{"crate_id":18,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"18:10266:15473":{"crate_id":18,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:1740:17456":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:5855:15128":{"crate_id":17,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:4340:17669":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"21:1029:15570":{"crate_id":21,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:3129:15392":{"crate_id":17,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:53728:14708":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"18:11474:15905":{"crate_id":18,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:6482:15411":{"crate_id":17,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"0:2689:4254":{"crate_id":0,"path":["nom","number","streaming","hex_u32"],"kind":"function"},"2:50020:5002":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:1673:4995":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:11114:14591":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:3459:5615":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"0:6004:1461":{"crate_id":0,"path":["nom","character","streaming","u8"],"kind":"function"},"18:9033:49458":{"crate_id":18,"path":["object","common","SymbolKind"],"kind":"enum"},"6:5149:17758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:2969:188":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:3521:16565":{"crate_id":17,"path":["gimli","arch","X86"],"kind":"struct"},"17:4871:16589":{"crate_id":17,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:2359:17030":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"19:744:63918":{"crate_id":19,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"18:9716:63908":{"crate_id":18,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:47421:4920":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"18:11640:15938":{"crate_id":18,"path":["object","elf","Rela64"],"kind":"struct"},"6:6114:18029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:6234:14344":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"0:2392:4069":{"crate_id":0,"path":["nom","number","complete","le_i128"],"kind":"function"},"17:7792:15244":{"crate_id":17,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:46746:14866":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"0:1549:1849":{"crate_id":0,"path":["nom","bits","bytes"],"kind":"function"},"2:46756:14867":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:47412:4918":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"18:12237:16052":{"crate_id":18,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:50002:5004":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:23380:14651":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"0:1844:3324":{"crate_id":0,"path":["nom","bytes","streaming","take_until1"],"kind":"function"},"12:815:6949":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"18:13961:16542":{"crate_id":18,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:46902:14838":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"6:1531:17329":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"0:2232:3479":{"crate_id":0,"path":["nom","character","is_newline"],"kind":"function"},"1:2914:6361":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"18:9873:15778":{"crate_id":18,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:11487:2548":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"18:12417:16099":{"crate_id":18,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"0:2644:1459":{"crate_id":0,"path":["nom","number","streaming","u32"],"kind":"function"},"1:10424:14461":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"18:12660:16140":{"crate_id":18,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:7090:15276":{"crate_id":17,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"18:10253:15449":{"crate_id":18,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:5229:17802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:7054:14871":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:50458:12917":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:47403:4916":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"0:251:2235":{"crate_id":0,"path":["nom","combinator","rest"],"kind":"function"},"2:39194:4754":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:5794:789":{"crate_id":2,"path":["core","iter"],"kind":"module"},"5:383:4745":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"21:866:15580":{"crate_id":21,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:49253:16975":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:49856:5025":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"18:10925:15857":{"crate_id":18,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:6277:15259":{"crate_id":17,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"18:13755:16491":{"crate_id":18,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:10414:57681":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"5:7483:4885":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"19:774:15658":{"crate_id":19,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:4036:15595":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"18:9466:15681":{"crate_id":18,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:49214:16970":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"18:13037:16275":{"crate_id":18,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"18:11256:15874":{"crate_id":18,"path":["object","read","CodeView"],"kind":"struct"},"2:24566:41628":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:6688:18128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"0:2778:2080":{"crate_id":0,"path":["nom","error","ErrorKind","Many0"],"kind":"variant"},"2:2213:1062":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:15869:4616":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"0:2371:4041":{"crate_id":0,"path":["nom","number","complete","le_u64"],"kind":"function"},"6:6135:18035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:3460:4785":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"18:13612:16435":{"crate_id":18,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:3376:4731":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"0:1180:2897":{"crate_id":0,"path":["nom","multi","many1"],"kind":"function"},"18:12070:16026":{"crate_id":18,"path":["object","macho","Section32"],"kind":"struct"},"1:15880:4627":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"0:2437:4217":{"crate_id":0,"path":["nom","number","complete","le_f32"],"kind":"function"},"1:1146:19512":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"5:7073:1528":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"2:2956:181":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:0:4586":{"crate_id":16,"path":["addr2line"],"kind":"module"},"1:4217:5624":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"18:9160:15513":{"crate_id":18,"path":["object","common","FileFlags"],"kind":"enum"},"6:4526:17749":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:50506:5037":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"18:13452:16390":{"crate_id":18,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:6243:18104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:24504:16940":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:5668:15118":{"crate_id":17,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:5447:17916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"0:5958:1458":{"crate_id":0,"path":["nom","character","complete","u16"],"kind":"function"},"6:3933:17509":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"18:12557:16119":{"crate_id":18,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:7025:15142":{"crate_id":17,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:6908:18132":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:7415:15228":{"crate_id":17,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:5240:17810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:618:17313":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:8395:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:32781:61413":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"18:13565:16422":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:5434:14301":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"18:13785:16497":{"crate_id":18,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:48085:4995":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:13444:5015":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:10800:16933":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:8288:14360":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:161:42264":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:47073:9656":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"7:38:47126":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:11493:14422":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:1669:17418":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:973:14477":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"0:2443:640":{"crate_id":0,"path":["nom","number","complete","f32"],"kind":"function"},"1:1113:19511":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:3105:62432":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:50315:12910":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"21:1021:15569":{"crate_id":21,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"0:1990:3578":{"crate_id":0,"path":["nom","character","complete","digit0"],"kind":"function"},"2:9737:4856":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:50329:12913":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:49627:12558":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:6097:18024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:50215:5028":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:6504:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:4439:16576":{"crate_id":17,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:6342:15261":{"crate_id":17,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:52564:14707":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"0:2808:2094":{"crate_id":0,"path":["nom","error","ErrorKind","Eof"],"kind":"variant"},"18:10874:15850":{"crate_id":18,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"0:2166:3578":{"crate_id":0,"path":["nom","character","streaming","digit0"],"kind":"function"},"0:2780:2081":{"crate_id":0,"path":["nom","error","ErrorKind","Many1"],"kind":"variant"},"0:2590:4010":{"crate_id":0,"path":["nom","number","streaming","be_i32"],"kind":"function"},"2:46689:5027":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4160:17628":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:15875:4622":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:5745:15124":{"crate_id":17,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:49706:4988":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"0:2142:3526":{"crate_id":0,"path":["nom","character","streaming","not_line_ending"],"kind":"function"},"0:2446:641":{"crate_id":0,"path":["nom","number","complete","f64"],"kind":"function"},"6:4485:17734":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"0:2350:4010":{"crate_id":0,"path":["nom","number","complete","be_i32"],"kind":"function"},"2:46312:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"18:10028:15786":{"crate_id":18,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4067:17579":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:2911:14485":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"5:2328:7627":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:5395:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:15823:60374":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:5288:17833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:6533:15409":{"crate_id":17,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:49788:4999":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"0:2860:2119":{"crate_id":0,"path":["nom","error","ErrorKind","Many1Count"],"kind":"variant"},"1:6917:5275":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"19:849:15569":{"crate_id":19,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:6569:14312":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:32681:4772":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"0:2846:2112":{"crate_id":0,"path":["nom","error","ErrorKind","Not"],"kind":"variant"},"1:4178:5622":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:4038:17568":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:3987:17541":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:4146:14514":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:2005:4882":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:50190:5018":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"19:857:15570":{"crate_id":19,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:1072:2548":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:10689:14506":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"15:56:15900":{"crate_id":15,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:50483:12919":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"18:8849:15510":{"crate_id":18,"path":["object","common","Architecture"],"kind":"enum"},"6:5390:17895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:11799:5003":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:4476:57619":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"0:311:2307":{"crate_id":0,"path":["nom","combinator","cond"],"kind":"function"},"17:5427:15106":{"crate_id":17,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:5370:5448":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"0:374:2384":{"crate_id":0,"path":["nom","combinator","consumed"],"kind":"function"},"2:46799:14862":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"18:12746:15877":{"crate_id":18,"path":["object","macho","Relocation"],"kind":"struct"},"5:8293:7629":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:6504:15266":{"crate_id":17,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"0:1316:3059":{"crate_id":0,"path":["nom","sequence","pair"],"kind":"function"},"2:25609:4838":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"9:0:4581":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:50617:12890":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:47096:4944":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"0:2118:3498":{"crate_id":0,"path":["nom","character","streaming","satisfy"],"kind":"function"},"12:2059:7224":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:13647:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:5971:14543":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:4383:5592":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:6781:6119":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:3607:4733":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"12:1881:146":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"12:183:15035":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"9:722:14897":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:539:17265":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:46332:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:3402:15137":{"crate_id":17,"path":["gimli","common","SectionId"],"kind":"enum"},"2:48017:5737":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"0:2810:2095":{"crate_id":0,"path":["nom","error","ErrorKind","Switch"],"kind":"variant"},"0:2832:2105":{"crate_id":0,"path":["nom","error","ErrorKind","TakeWhile1"],"kind":"variant"},"2:52307:16987":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:11880:57685":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"6:521:17259":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"18:12496:16110":{"crate_id":18,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:24489:14756":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"12:952:6952":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:601:17305":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:24063:61225":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:7721:15219":{"crate_id":17,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"12:933:6950":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:6472:18016":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:13419:3185":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:46257:4802":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"19:739:15665":{"crate_id":19,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"0:2730:2013":{"crate_id":0,"path":["nom","error","VerboseError"],"kind":"struct"},"2:23227:14721":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:6691:15269":{"crate_id":17,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:4194:14603":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:5289:15206":{"crate_id":17,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:2843:7550":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:6433:15263":{"crate_id":17,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:1055:7438":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:47175:4949":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"0:2788:2084":{"crate_id":0,"path":["nom","error","ErrorKind","LengthValue"],"kind":"variant"},"2:46886:14837":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"13:233:17238":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:13770:14397":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:9387:15639":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:6468:15264":{"crate_id":17,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:3378:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:7131:15280":{"crate_id":17,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"0:2822:2100":{"crate_id":0,"path":["nom","error","ErrorKind","RegexpMatch"],"kind":"variant"},"5:853:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:15828:19513":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:14159:152":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:11504:14423":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"18:13899:16529":{"crate_id":18,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:15351:15058":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"0:2826:2102":{"crate_id":0,"path":["nom","error","ErrorKind","RegexpFind"],"kind":"variant"},"1:783:15641":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"19:720:15660":{"crate_id":19,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"0:1783:3231":{"crate_id":0,"path":["nom","bytes","streaming","is_not"],"kind":"function"},"0:360:963":{"crate_id":0,"path":["nom","combinator","not"],"kind":"function"},"18:10962:15860":{"crate_id":18,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"5:69:4743":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"0:6081:4266":{"crate_id":0,"path":["nom","number","streaming","recognize_float"],"kind":"function"},"5:5:1528":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"6:4454:17721":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"18:13507:16408":{"crate_id":18,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:634:17323":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:6745:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"18:10115:15550":{"crate_id":18,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:48960:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:2510:4904":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:9420:60343":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:15857:4607":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:4467:2042":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:7429:14392":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"12:856:6946":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"0:2359:4021":{"crate_id":0,"path":["nom","number","complete","le_u8"],"kind":"function"},"0:2569:3976":{"crate_id":0,"path":["nom","number","streaming","be_u24"],"kind":"function"},"5:805:1836":{"crate_id":5,"path":["alloc","borrow"],"kind":"module"},"0:2329:3976":{"crate_id":0,"path":["nom","number","complete","be_u24"],"kind":"function"},"0:1838:3319":{"crate_id":0,"path":["nom","bytes","streaming","take_until"],"kind":"function"},"18:13859:16518":{"crate_id":18,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:9432:60346":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"17:5516:15111":{"crate_id":17,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"0:257:852":{"crate_id":0,"path":["nom","combinator","map"],"kind":"function"},"18:9183:15485":{"crate_id":18,"path":["object","common","SectionFlags"],"kind":"enum"},"1:4485:5604":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:2654:183":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:48676:4711":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:2188:4769":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:15860:4609":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"0:1228:2956":{"crate_id":0,"path":["nom","multi","many1_count"],"kind":"function"},"17:4840:16588":{"crate_id":17,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:4373:17688":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"18:10068:15473":{"crate_id":18,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"18:11890:15987":{"crate_id":18,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:8320:4885":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"18:12130:16037":{"crate_id":18,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"18:9930:63910":{"crate_id":18,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:586:17297":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:5853:14535":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"18:12222:16049":{"crate_id":18,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"0:1994:3592":{"crate_id":0,"path":["nom","character","complete","digit1"],"kind":"function"},"6:580:17294":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:3491:2112":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:50621:12891":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:7463:14394":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:24529:41627":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:3470:3162":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"12:2398:17243":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:5348:15099":{"crate_id":17,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:5916:4972":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:14235:191":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:6630:15414":{"crate_id":17,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"21:1068:15573":{"crate_id":21,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:7241:189":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:12417:15622":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"0:2362:4026":{"crate_id":0,"path":["nom","number","complete","le_u16"],"kind":"function"},"17:2959:15380":{"crate_id":17,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"0:2404:1459":{"crate_id":0,"path":["nom","number","complete","u32"],"kind":"function"},"17:7264:198":{"crate_id":17,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:7759:4889":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:14:2005":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:11285:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:15862:4611":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:52108:14686":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"18:13404:16375":{"crate_id":18,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:51740:14678":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:14627:4741":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:13211:5006":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:48295:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:15864:4613":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:13438:5016":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"0:2764:2073":{"crate_id":0,"path":["nom","error","ErrorKind","MapRes"],"kind":"variant"},"0:2050:3108":{"crate_id":0,"path":["nom","character","streaming"],"kind":"module"},"18:12469:16106":{"crate_id":18,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1710:6946":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"18:9958:63912":{"crate_id":18,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"18:12700:16145":{"crate_id":18,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:6250:18107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"0:1558:2216":{"crate_id":0,"path":["nom","bytes","complete"],"kind":"module"},"5:1296:7625":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"21:1038:15571":{"crate_id":21,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"0:2710:662":{"crate_id":0,"path":["nom","number","streaming","float"],"kind":"function"},"18:10198:15794":{"crate_id":18,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:3381:15624":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:3594:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"18:13975:16545":{"crate_id":18,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"0:1196:2919":{"crate_id":0,"path":["nom","multi","separated_list0"],"kind":"function"},"6:545:17268":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:1537:17332":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"0:2178:3606":{"crate_id":0,"path":["nom","character","streaming","hex_digit1"],"kind":"function"},"2:49884:5022":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:5460:15108":{"crate_id":17,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:3370:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"18:9646:63907":{"crate_id":18,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:5347:5378":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:7141:15281":{"crate_id":17,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"0:342:2344":{"crate_id":0,"path":["nom","combinator","verify"],"kind":"function"},"0:2794:2087":{"crate_id":0,"path":["nom","error","ErrorKind","Digit"],"kind":"variant"},"5:8478:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:10624:14278":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"18:9988:49509":{"crate_id":18,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:6007:17993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:15313:18238":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:51817:16984":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"0:2368:4036":{"crate_id":0,"path":["nom","number","complete","le_u32"],"kind":"function"},"2:53644:14670":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:1452:6948":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:626:17318":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"9:749:14898":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"6:4005:17553":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:4381:16574":{"crate_id":17,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:7775:15626":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:3542:4798":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"18:13595:16428":{"crate_id":18,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"19:766:15670":{"crate_id":19,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"18:10340:15525":{"crate_id":18,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:3529:4795":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:10214:17134":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:8572:4883":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:3183:234":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"0:2481:3108":{"crate_id":0,"path":["nom","number","streaming"],"kind":"module"},"2:49868:2551":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:14914:14370":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"18:13774:16496":{"crate_id":18,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:53582:14705":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"5:1729:6948":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"19:678:143":{"crate_id":19,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:50472:12918":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:49678:4987":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:6057:18021":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:8967:17038":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"21:916:63918":{"crate_id":21,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:3876:138":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"0:2665:738":{"crate_id":0,"path":["nom","number","streaming","i64"],"kind":"function"},"5:8277:4885":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:7295:15213":{"crate_id":17,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:15858:4608":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:4135:17615":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"0:1391:1842":{"crate_id":0,"path":["nom","bits"],"kind":"module"},"2:46464:14718":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"0:2473:662":{"crate_id":0,"path":["nom","number","complete","float"],"kind":"function"},"2:47035:4940":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"18:13138:16314":{"crate_id":18,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"0:2434:4212":{"crate_id":0,"path":["nom","number","complete","be_f64"],"kind":"function"},"0:5998:734":{"crate_id":0,"path":["nom","character","streaming","i128"],"kind":"function"},"12:472:18274":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:8412:14873":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:50629:12893":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:10658:4717":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:32729:61414":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"6:4346:17671":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:7449:14393":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"0:2744:2017":{"crate_id":0,"path":["nom","error","VerboseErrorKind"],"kind":"enum"},"0:1956:3374":{"crate_id":0,"path":["nom","character","complete","none_of"],"kind":"function"},"2:50783:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:3441:7696":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"0:2836:2107":{"crate_id":0,"path":["nom","error","ErrorKind","Fix"],"kind":"variant"},"0:1973:3541":{"crate_id":0,"path":["nom","character","complete","newline"],"kind":"function"},"6:6027:17999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"18:11234:15512":{"crate_id":18,"path":["object","read","Export"],"kind":"struct"},"12:979:6954":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:46210:4736":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:6212:14312":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"18:10407:15520":{"crate_id":18,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:13594:14404":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:3877:17471":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:32715:4773":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"18:12620:16137":{"crate_id":18,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:1621:17382":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"0:2677:4217":{"crate_id":0,"path":["nom","number","streaming","le_f32"],"kind":"function"},"2:47004:4939":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"19:712:5367":{"crate_id":19,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"18:11742:15962":{"crate_id":18,"path":["object","elf","Verdaux"],"kind":"struct"},"0:2158:3367":{"crate_id":0,"path":["nom","character","streaming","alpha0"],"kind":"function"},"6:6856:18129":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"18:13472:16397":{"crate_id":18,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:46457:14717":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"18:12585:16125":{"crate_id":18,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:47045:2547":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:2119:2548":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4386:17693":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"0:2146:3534":{"crate_id":0,"path":["nom","character","streaming","line_ending"],"kind":"function"},"1:1601:6957":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"0:1557:1849":{"crate_id":0,"path":["nom","bytes"],"kind":"module"},"1:5752:14602":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"0:2365:4031":{"crate_id":0,"path":["nom","number","complete","le_u24"],"kind":"function"},"0:2762:2072":{"crate_id":0,"path":["nom","error","ErrorKind","Tag"],"kind":"variant"},"2:4832:5592":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"18:13557:16420":{"crate_id":18,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:15021:14377":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:4287:17643":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"18:13345:16364":{"crate_id":18,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"5:8255:7440":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:49916:5000":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:3576:15698":{"crate_id":17,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:53332:14681":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"0:2353:4014":{"crate_id":0,"path":["nom","number","complete","be_i64"],"kind":"function"},"6:4088:17590":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"18:10058:15553":{"crate_id":18,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"0:2235:2216":{"crate_id":0,"path":["nom","number","complete"],"kind":"module"},"5:4317:15595":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:11523:4991":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"0:1797:3257":{"crate_id":0,"path":["nom","bytes","streaming","take_while"],"kind":"function"},"2:13495:12909":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:13137:12903":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:1466:6951":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"19:704:15658":{"crate_id":19,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"18:12758:16154":{"crate_id":18,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:3398:5375":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:5566:15113":{"crate_id":17,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"18:10851:15849":{"crate_id":18,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:50682:14846":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"0:2611:4041":{"crate_id":0,"path":["nom","number","streaming","le_u64"],"kind":"function"},"2:8768:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"18:13549:16419":{"crate_id":18,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:6931:15425":{"crate_id":17,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:49696:4990":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:2286:6372":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:7737:4888":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:39270:5376":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:2376:14880":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:49243:2419":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"18:12209:16047":{"crate_id":18,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"18:1311:15554":{"crate_id":18,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"18:10291:15476":{"crate_id":18,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"0:2866:2122":{"crate_id":0,"path":["nom","error","ErrorKind","Fail"],"kind":"variant"},"0:1384:1443":{"crate_id":0,"path":["nom","sequence","tuple"],"kind":"function"},"0:2828:2103":{"crate_id":0,"path":["nom","error","ErrorKind","RegexpCapture"],"kind":"variant"},"17:5362:15100":{"crate_id":17,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:15878:4625":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"18:11628:15937":{"crate_id":18,"path":["object","elf","Rel64"],"kind":"struct"},"1:3371:5613":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:10652:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:4599:16580":{"crate_id":17,"path":["gimli","constants","DwAddr"],"kind":"struct"},"18:13421:16382":{"crate_id":18,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:51940:14703":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:22936:61221":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:10893:147":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"0:1369:3095":{"crate_id":0,"path":["nom","sequence","Tuple"],"kind":"trait"},"21:884:5367":{"crate_id":21,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:3627:133":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"18:12646:16139":{"crate_id":18,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:4028:17562":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"0:6008:1458":{"crate_id":0,"path":["nom","character","streaming","u16"],"kind":"function"},"6:1626:17384":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:5701:14596":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"0:1877:2216":{"crate_id":0,"path":["nom","character","complete"],"kind":"module"},"0:1118:2786":{"crate_id":0,"path":["nom","branch","permutation"],"kind":"function"},"2:3661:4735":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:12214:11260":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:46995:4931":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:11828:185":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:14456:14808":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:14943:17130":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"18:10304:15479":{"crate_id":18,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:3297:15441":{"crate_id":17,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:3478:4788":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"18:13377:16371":{"crate_id":18,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:8238:7439":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:5685:15121":{"crate_id":17,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:3278:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"18:12348:16085":{"crate_id":18,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"0:2464:4275":{"crate_id":0,"path":["nom","number","complete","recognize_float_parts"],"kind":"function"},"2:50493:12920":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:10595:2042":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:8073:4938":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:23264:14720":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"18:11822:15985":{"crate_id":18,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:5455:17918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"18:11017:128":{"crate_id":18,"path":["object","read","Error"],"kind":"struct"},"1:15871:4618":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:5478:17924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"18:10187:15793":{"crate_id":18,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"18:10775:15846":{"crate_id":18,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"18:11671:15948":{"crate_id":18,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"0:2653:739":{"crate_id":0,"path":["nom","number","streaming","i8"],"kind":"function"},"0:1451:3108":{"crate_id":0,"path":["nom","bits","streaming"],"kind":"module"},"0:2206:3654":{"crate_id":0,"path":["nom","character","streaming","multispace0"],"kind":"function"},"1:12544:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"18:13917:16535":{"crate_id":18,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:3070:14499":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"11:46:17247":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:4638:14325":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:50633:12894":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:24550:41619":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"0:276:2272":{"crate_id":0,"path":["nom","combinator","map_opt"],"kind":"function"},"0:1345:3081":{"crate_id":0,"path":["nom","sequence","separated_pair"],"kind":"function"},"1:10697:5614":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:6310:15260":{"crate_id":17,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:3686:16566":{"crate_id":17,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:3801:209":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"5:1152:15595":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:2152:7226":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"21:1009:5016":{"crate_id":21,"path":["memchr","memmem","Searcher"],"kind":"struct"},"0:175:2208":{"crate_id":0,"path":["nom","error","dbg_dmp"],"kind":"function"},"2:12859:11437":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:2839:15377":{"crate_id":17,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"0:2407:1460":{"crate_id":0,"path":["nom","number","complete","u64"],"kind":"function"},"0:1616:3219":{"crate_id":0,"path":["nom","bytes","complete","tag_no_case"],"kind":"function"},"1:10520:19571":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:47975:5284":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:15362:15058":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:2792:15136":{"crate_id":17,"path":["gimli","common","Register"],"kind":"struct"},"1:4492:5607":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"0:2401:4100":{"crate_id":0,"path":["nom","number","complete","u24"],"kind":"function"},"9:41:14946":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:11971:14362":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"18:13708:16473":{"crate_id":18,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:1405:6945":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:51762:14682":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:14391:14292":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"12:940:6951":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"0:174:2195":{"crate_id":0,"path":["nom","error_node_position"],"kind":"macro"},"1:14869:60557":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:5530:15112":{"crate_id":17,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"0:294:2288":{"crate_id":0,"path":["nom","combinator","flat_map"],"kind":"function"},"2:47105:4953":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:11435:14419":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"0:2477:4291":{"crate_id":0,"path":["nom","number","complete","double"],"kind":"function"},"18:607:15687":{"crate_id":18,"path":["object","read","any","Comdat"],"kind":"struct"},"6:4218:17632":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"18:11603:15932":{"crate_id":18,"path":["object","elf","Rel32"],"kind":"struct"},"18:11102:49464":{"crate_id":18,"path":["object","read","SymbolSection"],"kind":"enum"},"1:15867:4614":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:3525:4794":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"18:10093:15548":{"crate_id":18,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:48008:5285":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:5547:17938":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:14857:14399":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:1747:1428":{"crate_id":2,"path":["core","intrinsics","transmute"],"kind":"function"},"1:14895:17166":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:3486:4789":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:1256:18278":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:4775:16586":{"crate_id":17,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:14446:2020":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:1431:4849":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"18:11282:49465":{"crate_id":18,"path":["object","read","RelocationTarget"],"kind":"enum"},"0:2617:4049":{"crate_id":0,"path":["nom","number","streaming","le_i8"],"kind":"function"},"17:3908:16569":{"crate_id":17,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:8379:6942":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:3755:14443":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:0:284":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:47941:2425":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"18:10390:15493":{"crate_id":18,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"0:127:2009":{"crate_id":0,"path":["nom","error","append_error"],"kind":"function"},"0:2812:2096":{"crate_id":0,"path":["nom","error","ErrorKind","TagBits"],"kind":"variant"},"18:12183:16044":{"crate_id":18,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:7063:15274":{"crate_id":17,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"0:2572:3981":{"crate_id":0,"path":["nom","number","streaming","be_u32"],"kind":"function"},"5:2396:7626":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:6332:14346":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"12:2280:6957":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:49727:4978":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"0:5936:737":{"crate_id":0,"path":["nom","character","complete","i32"],"kind":"function"},"1:4258:5621":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:5516:14282":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:1694:17437":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"0:381:2391":{"crate_id":0,"path":["nom","combinator","cut"],"kind":"function"},"18:11013:15864":{"crate_id":18,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4020:17559":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"18:13953:16539":{"crate_id":18,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:6643:15415":{"crate_id":17,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:6557:15267":{"crate_id":17,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:50844:14807":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:10949:4939":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:2925:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"0:2838:2108":{"crate_id":0,"path":["nom","error","ErrorKind","Escaped"],"kind":"variant"},"2:3180:136":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:2813:15396":{"crate_id":17,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:5176:16593":{"crate_id":17,"path":["gimli","constants","DwOp"],"kind":"struct"},"18:11530:15920":{"crate_id":18,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"21:901:63917":{"crate_id":21,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:11231:14597":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:5982:17975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"19:611:15575":{"crate_id":19,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:1721:17450":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:46516:14734":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"0:2231:3472":{"crate_id":0,"path":["nom","character","is_space"],"kind":"function"},"3:0:439":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:10888:5629":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:6381:15220":{"crate_id":17,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4256:17635":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:48463:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:56786:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:23240:14298":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"15:189:16842":{"crate_id":15,"path":["rustc_demangle","Demangle"],"kind":"struct"},"18:11181:15873":{"crate_id":18,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:6896:18130":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"18:13660:16472":{"crate_id":18,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"0:2768:2075":{"crate_id":0,"path":["nom","error","ErrorKind","Alt"],"kind":"variant"},"1:2397:17032":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:6141:15256":{"crate_id":17,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"0:1505:3184":{"crate_id":0,"path":["nom","bits","streaming","tag"],"kind":"function"},"6:5274:17832":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:28419:4839":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:47165:4948":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:10664:4715":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"0:5966:1460":{"crate_id":0,"path":["nom","character","complete","u64"],"kind":"function"},"0:2398:1458":{"crate_id":0,"path":["nom","number","complete","u16"],"kind":"function"},"17:6407:15262":{"crate_id":17,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"12:2269:6956":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"0:1137:1847":{"crate_id":0,"path":["nom","multi"],"kind":"module"},"2:10116:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"18:13440:16389":{"crate_id":18,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:6857:5592":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:52488:14700":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:49753:4930":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"21:954:15658":{"crate_id":21,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:46822:14863":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:7079:15275":{"crate_id":17,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"0:2683:640":{"crate_id":0,"path":["nom","number","streaming","f32"],"kind":"function"},"5:7966:15613":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:8603:165":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"18:11142:15870":{"crate_id":18,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:47206:4951":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:4392:17696":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:14784:15650":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"12:2052:7223":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:6642:14308":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:6671:18119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:5982:1362":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:23191:14647":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"18:12360:16087":{"crate_id":18,"path":["object","macho","DylibModule32"],"kind":"struct"},"0:6020:1457":{"crate_id":0,"path":["nom","character","streaming","u128"],"kind":"function"},"17:3461:15390":{"crate_id":17,"path":["gimli","common","DwoId"],"kind":"struct"},"5:4287:4849":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:5281:14533":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:7477:14395":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"0:2671:4206":{"crate_id":0,"path":["nom","number","streaming","be_f32"],"kind":"function"},"0:5992:738":{"crate_id":0,"path":["nom","character","streaming","i64"],"kind":"function"},"2:56351:14661":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:7595:14402":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"18:12048:16025":{"crate_id":18,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:23515:14298":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:53813:17005":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"0:2587:4003":{"crate_id":0,"path":["nom","number","streaming","be_i24"],"kind":"function"},"1:8089:14477":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:15879:4626":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:10664:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:12058:14565":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:12063:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"18:9676:63909":{"crate_id":18,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"0:2229:2585":{"crate_id":0,"path":["nom","character","is_oct_digit"],"kind":"function"},"6:4055:17574":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:50102:5033":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"18:13495:16405":{"crate_id":18,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:50857:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"0:1963:3516":{"crate_id":0,"path":["nom","character","complete","crlf"],"kind":"function"},"5:8489:4846":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:4081:17587":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"0:79:1984":{"crate_id":0,"path":["nom","error","ContextError"],"kind":"trait"},"1:8188:2419":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"0:1683:3324":{"crate_id":0,"path":["nom","bytes","complete","take_until1"],"kind":"function"},"2:52178:14672":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:2391:4881":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:56760:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"20:0:1005":{"crate_id":20,"path":["panic_unwind"],"kind":"module"},"0:5954:1461":{"crate_id":0,"path":["nom","character","complete","u8"],"kind":"function"},"18:13073:16304":{"crate_id":18,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:7213:15609":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:11938:14358":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:4036:5628":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:49842:4859":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"18:10039:15787":{"crate_id":18,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"18:12770:16161":{"crate_id":18,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:47064:4942":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"18:10622:15812":{"crate_id":18,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:14507:205":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:14762:15648":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:11566:5006":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"18:12455:16104":{"crate_id":18,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:5495:5592":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"0:1716:3108":{"crate_id":0,"path":["nom","bytes","streaming"],"kind":"module"},"2:1926:1839":{"crate_id":2,"path":["core","mem"],"kind":"module"},"6:1558:17340":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8853:14560":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:1374:2548":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:5396:15102":{"crate_id":17,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"0:6091:3955":{"crate_id":0,"path":["nom","number","Endianness","Native"],"kind":"variant"},"2:11498:4995":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:11008:14322":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:23317:14298":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"21:876:15658":{"crate_id":21,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:7307:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:4179:17629":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:13380:17032":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"0:2656:736":{"crate_id":0,"path":["nom","number","streaming","i16"],"kind":"function"},"5:8472:18151":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"9:27:14945":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:6949:15426":{"crate_id":17,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"18:13233:16338":{"crate_id":18,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:5912:4971":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"18:9561:15488":{"crate_id":18,"path":["object","read","util","StringTable"],"kind":"struct"},"6:4532:17751":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"12:2036:4885":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:24437:18153":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:23857:23784":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:11757:5004":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"18:11168:15871":{"crate_id":18,"path":["object","read","ObjectMap"],"kind":"struct"},"18:12117:16034":{"crate_id":18,"path":["object","macho","Fvmlib"],"kind":"struct"},"0:285:2280":{"crate_id":0,"path":["nom","combinator","map_parser"],"kind":"function"},"2:10645:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:3382:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:4351:16573":{"crate_id":17,"path":["gimli","constants","DwLle"],"kind":"struct"},"18:10082:15547":{"crate_id":18,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:4440:17713":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"9:157:14913":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:10959:4950":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:6129:18034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"0:5948:734":{"crate_id":0,"path":["nom","character","complete","i128"],"kind":"function"},"1:10966:5022":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"18:8929:49456":{"crate_id":18,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:8274:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"18:11494:15915":{"crate_id":18,"path":["object","elf","SectionHeader64"],"kind":"struct"},"18:13721:16479":{"crate_id":18,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:33077:4775":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:3428:7225":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:9505:14521":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"1:14129:5647":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:4538:4885":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"11:0:4583":{"crate_id":11,"path":["adler"],"kind":"module"},"2:8925:160":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:47153:4947":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"18:9587:63911":{"crate_id":18,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:50801:194":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:47387:4912":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"18:2484:49547":{"crate_id":18,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"0:2798:2089":{"crate_id":0,"path":["nom","error","ErrorKind","OctDigit"],"kind":"variant"},"1:5157:14526":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:3770:16568":{"crate_id":17,"path":["gimli","constants","DwChildren"],"kind":"struct"},"12:399:15033":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"0:1986:3570":{"crate_id":0,"path":["nom","character","complete","alpha1"],"kind":"function"},"2:56747:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:3388:2517":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:8500:4847":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:10482:19508":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:6937:18139":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"18:9240:3949":{"crate_id":18,"path":["object","endian","Endianness"],"kind":"enum"},"21:973:15565":{"crate_id":21,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"18:12196:16045":{"crate_id":18,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"0:1113:2113":{"crate_id":0,"path":["nom","branch","Permutation"],"kind":"trait"},"1:13731:14395":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:6080:18022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:7100:15277":{"crate_id":17,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:6286:15047":{"crate_id":17,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:13429:4856":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:46704:14769":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:10705:5616":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:11327:5276":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"0:1622:3231":{"crate_id":0,"path":["nom","bytes","complete","is_not"],"kind":"function"},"0:2751:2023":{"crate_id":0,"path":["nom","error","VerboseErrorKind","Nom"],"kind":"variant"},"9:1056:14956":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"12:1238:15030":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:14051:5624":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"18:9326:15480":{"crate_id":18,"path":["object","endian","U32Bytes"],"kind":"struct"},"18:9517:5022":{"crate_id":18,"path":["object","read","util","Bytes"],"kind":"struct"},"0:1998:3599":{"crate_id":0,"path":["nom","character","complete","hex_digit0"],"kind":"function"},"1:2126:4849":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:4198:17630":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:5689:1331":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"19:754:63919":{"crate_id":19,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:5192:5446":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:8446:14553":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"0:367:2365":{"crate_id":0,"path":["nom","combinator","recognize"],"kind":"function"},"1:10289:15644":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:4362:17680":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:52154:14671":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:4098:17597":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:2481:4903":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"12:2032:2548":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"0:2030:3654":{"crate_id":0,"path":["nom","character","complete","multispace0"],"kind":"function"},"6:6925:18137":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:299:15684":{"crate_id":18,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:12092:14387":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:2905:15379":{"crate_id":17,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"0:2820:2099":{"crate_id":0,"path":["nom","error","ErrorKind","CrLf"],"kind":"variant"},"1:5067:14316":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"18:9396:15679":{"crate_id":18,"path":["object","endian","I16Bytes"],"kind":"struct"},"18:10318:15494":{"crate_id":18,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:2044:5592":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:5204:17797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"18:11354:15481":{"crate_id":18,"path":["object","read","CompressedData"],"kind":"struct"},"6:593:17300":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"19:811:15566":{"crate_id":19,"path":["memchr","memmem","Finder"],"kind":"struct"},"9:809:2419":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"18:13873:16520":{"crate_id":18,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"0:2440:4222":{"crate_id":0,"path":["nom","number","complete","le_f64"],"kind":"function"},"17:7184:15427":{"crate_id":17,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:58061:17021":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:3859:4805":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:46855:14774":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"0:2824:2101":{"crate_id":0,"path":["nom","error","ErrorKind","RegexpMatches"],"kind":"variant"},"6:533:17264":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:7369:15209":{"crate_id":17,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:8180:14477":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"0:2814:2097":{"crate_id":0,"path":["nom","error","ErrorKind","OneOf"],"kind":"variant"},"9:603:47305":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:269:15054":{"crate_id":16,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:2361:17031":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5260:17821":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:15054:14384":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:1588:17360":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:1567:17345":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"14:0:4580":{"crate_id":14,"path":["cfg_if"],"kind":"module"},"2:3375:1968":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"0:1832:2423":{"crate_id":0,"path":["nom","bytes","streaming","take"],"kind":"function"},"0:1235:503":{"crate_id":0,"path":["nom","multi","count"],"kind":"function"},"1:9629:15641":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"17:3177:15384":{"crate_id":17,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:9260:17180":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:8733:4927":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"12:971:6953":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:4127:17610":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:11025:14323":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:4416:17703":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:10203:15688":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"18:12687:16144":{"crate_id":18,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"18:10048:15788":{"crate_id":18,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"19:782:15658":{"crate_id":19,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"0:5942:738":{"crate_id":0,"path":["nom","character","complete","i64"],"kind":"function"},"17:5605:15114":{"crate_id":17,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:3395:2548":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"12:1103:6955":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:5541:17937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:4945:4727":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:12111:14388":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"0:397:2417":{"crate_id":0,"path":["nom","combinator","iterator"],"kind":"function"},"15:47:16842":{"crate_id":15,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:6470:18014":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"18:12731:16151":{"crate_id":18,"path":["object","macho","Nlist64"],"kind":"struct"},"18:12543:16117":{"crate_id":18,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:11162:14320":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"18:11810:15982":{"crate_id":18,"path":["object","elf","HashHeader"],"kind":"struct"},"0:2584:3999":{"crate_id":0,"path":["nom","number","streaming","be_i16"],"kind":"function"},"2:38017:182":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"18:12431:16101":{"crate_id":18,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:49261:16976":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:1662:17414":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"0:335:2336":{"crate_id":0,"path":["nom","combinator","all_consuming"],"kind":"function"},"2:52534:14704":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"18:11937:16002":{"crate_id":18,"path":["object","macho","FatHeader"],"kind":"struct"},"6:1634:17389":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:3103:15393":{"crate_id":17,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:3508:4793":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"0:2599:4021":{"crate_id":0,"path":["nom","number","streaming","le_u8"],"kind":"function"},"2:50836:14806":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"12:1682:15041":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:48927:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:39230:7631":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:6951:9658":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:49231:147":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:10332:8631":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:4219:5625":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:1105:17023":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:4495:16578":{"crate_id":17,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"0:2374:4046":{"crate_id":0,"path":["nom","number","complete","le_u128"],"kind":"function"},"6:4230:17633":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"0:2593:4014":{"crate_id":0,"path":["nom","number","streaming","be_i64"],"kind":"function"},"18:13369:16369":{"crate_id":18,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"0:2782:2082":{"crate_id":0,"path":["nom","error","ErrorKind","ManyTill"],"kind":"variant"},"2:46183:4810":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"18:9539:15511":{"crate_id":18,"path":["object","read","util","ByteString"],"kind":"struct"},"1:11477:14420":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:2422:17033":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:46437:14604":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:2772:15403":{"crate_id":17,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:24329:14818":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:8281:14359":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"9:686:14894":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:10536:17047":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:50874:5800":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:10403:14453":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:10972:4991":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"0:2162:3570":{"crate_id":0,"path":["nom","character","streaming","alpha1"],"kind":"function"},"2:24877:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"5:7557:15595":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"0:2575:3986":{"crate_id":0,"path":["nom","number","streaming","be_u64"],"kind":"function"},"1:8770:14448":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"0:1357:3091":{"crate_id":0,"path":["nom","sequence","delimited"],"kind":"function"},"5:8232:4885":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:4428:5602":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:6120:18031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"0:1296:3045":{"crate_id":0,"path":["nom","multi","length_count"],"kind":"function"},"2:46776:14861":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:3058:14493":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:1161:1841":{"crate_id":1,"path":["std","collections"],"kind":"module"},"2:32721:4774":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:50162:5030":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:1701:6945":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"18:9431:15680":{"crate_id":18,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:46354:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:53442:14701":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"0:1326:3068":{"crate_id":0,"path":["nom","sequence","preceded"],"kind":"function"},"0:1436:2423":{"crate_id":0,"path":["nom","bits","complete","take"],"kind":"function"},"6:4493:17736":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"0:2014:3627":{"crate_id":0,"path":["nom","character","complete","alphanumeric0"],"kind":"function"},"6:1680:17426":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:3187:233":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"5:5616:6106":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"0:1083:377":{"crate_id":0,"path":["nom","branch"],"kind":"module"},"1:69:1042":{"crate_id":1,"path":["std","prelude"],"kind":"module"},"0:2659:4164":{"crate_id":0,"path":["nom","number","streaming","i24"],"kind":"function"},"2:51799:14667":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"19:668:15579":{"crate_id":19,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:12442:16102":{"crate_id":18,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:14447:5603":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:51679:16982":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:11854:14399":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:6656:15416":{"crate_id":17,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:6566:14314":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"18:13352:16366":{"crate_id":18,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:1610:6958":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"9:900:17248":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:6980:15272":{"crate_id":17,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"18:10516:15800":{"crate_id":18,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:47196:4950":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"19:885:15572":{"crate_id":19,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:7415:14391":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:10654:4711":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:2861:15378":{"crate_id":17,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"18:13938:16538":{"crate_id":18,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"21:695:15575":{"crate_id":21,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:4516:2548":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:22970:61272":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:248:15050":{"crate_id":16,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:7200:15225":{"crate_id":17,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:5582:17963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:4208:17631":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:4588:7744":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"18:9259:15766":{"crate_id":18,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:3948:5616":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:6738:14294":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"0:1270:3008":{"crate_id":0,"path":["nom","multi","fold_many_m_n"],"kind":"function"},"18:9275:15767":{"crate_id":18,"path":["object","endian","BigEndian"],"kind":"struct"},"6:6034:18003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"0:2596:4018":{"crate_id":0,"path":["nom","number","streaming","be_i128"],"kind":"function"},"2:3177:150":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:1261:144":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:10775:14440":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"0:2226:3362":{"crate_id":0,"path":["nom","character","is_alphabetic"],"kind":"function"},"1:2420:11260":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:13160:12900":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:11176:14527":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:6060:15247":{"crate_id":17,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:14877:14387":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:14270:16935":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:4242:17634":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"18:12026:16016":{"crate_id":18,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:5331:17862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:15175:14525":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:2909:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:39234:9695":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:3380:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:52086:14683":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:8427:4911":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"12:432:15032":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"0:2786:2083":{"crate_id":0,"path":["nom","error","ErrorKind","TakeUntil"],"kind":"variant"},"0:2186:3620":{"crate_id":0,"path":["nom","character","streaming","oct_digit1"],"kind":"function"},"1:12553:15646":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"18:12512:16112":{"crate_id":18,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:11840:14398":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"18:9796:63914":{"crate_id":18,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"0:2395:1461":{"crate_id":0,"path":["nom","number","complete","u8"],"kind":"function"},"17:6604:15268":{"crate_id":17,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:2502:4737":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"18:2512:15522":{"crate_id":18,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:10660:4718":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:3254:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:52984:14693":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"18:2314:15524":{"crate_id":18,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:8439:14551":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:11474:2548":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:4772:15600":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:7827:14477":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"9:234:14921":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:5498:15110":{"crate_id":17,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:5378:17888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:5127:5444":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"0:1771:3184":{"crate_id":0,"path":["nom","bytes","streaming","tag"],"kind":"function"},"0:82:1993":{"crate_id":0,"path":["nom","error","FromExternalError"],"kind":"trait"},"0:2714:4291":{"crate_id":0,"path":["nom","number","streaming","double"],"kind":"function"},"6:0:808":{"crate_id":6,"path":["libc"],"kind":"module"},"0:1677:3319":{"crate_id":0,"path":["nom","bytes","complete","take_until"],"kind":"function"},"12:2392:17242":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:4379:17691":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:10979:5029":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"18:510:15685":{"crate_id":18,"path":["object","read","any","Segment"],"kind":"struct"},"6:4410:17702":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"0:1976:3546":{"crate_id":0,"path":["nom","character","complete","tab"],"kind":"function"},"2:46793:5027":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"18:10801:15540":{"crate_id":18,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:3825:2548":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:48127:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:4110:17603":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:571:17288":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:15874:4621":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"18:11945:16004":{"crate_id":18,"path":["object","macho","FatArch32"],"kind":"struct"},"17:4903:16590":{"crate_id":17,"path":["gimli","constants","DwLnct"],"kind":"struct"},"18:11689:15949":{"crate_id":18,"path":["object","elf","Dyn32"],"kind":"struct"},"21:926:63919":{"crate_id":21,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:48034:209":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:51639:14698":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:7702:15217":{"crate_id":17,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"18:11130:15869":{"crate_id":18,"path":["object","read","SymbolMap"],"kind":"struct"},"5:4672:15598":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"0:1629:3245":{"crate_id":0,"path":["nom","bytes","complete","is_a"],"kind":"function"},"0:1280:3020":{"crate_id":0,"path":["nom","multi","length_data"],"kind":"function"},"0:2422:737":{"crate_id":0,"path":["nom","number","complete","i32"],"kind":"function"},"2:51864:14711":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:7932:14477":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"6:4061:17576":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"18:13529:16413":{"crate_id":18,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"0:2854:2116":{"crate_id":0,"path":["nom","error","ErrorKind","TakeWhileMN"],"kind":"variant"},"0:1966:3526":{"crate_id":0,"path":["nom","character","complete","not_line_ending"],"kind":"function"},"18:10211:15795":{"crate_id":18,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"0:402:2418":{"crate_id":0,"path":["nom","combinator","ParserIterator"],"kind":"struct"},"18:542:15145":{"crate_id":18,"path":["object","read","any","Section"],"kind":"struct"},"17:6858:15422":{"crate_id":17,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:7826:14717":{"crate_id":17,"path":["gimli","read","value","Value"],"kind":"enum"},"2:48505:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"18:11212:15514":{"crate_id":18,"path":["object","read","Import"],"kind":"struct"},"2:3454:3163":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"19:645:15577":{"crate_id":19,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"18:13840:16513":{"crate_id":18,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:52229:16985":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:24910:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:6907:15271":{"crate_id":17,"path":["gimli","read","op","Piece"],"kind":"struct"},"19:0:1854":{"crate_id":19,"path":["memchr"],"kind":"module"},"1:10503:6959":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:2912:423":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:47432:4922":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"12:750:2548":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"18:13029:16273":{"crate_id":18,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:4308:17655":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:1740:6949":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:48379:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:5731:14599":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"18:10558:15807":{"crate_id":18,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:11395:2419":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:612:17310":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:0:4587":{"crate_id":17,"path":["gimli"],"kind":"module"},"18:12527:16116":{"crate_id":18,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:1606:17370":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:24943:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"0:2804:2092":{"crate_id":0,"path":["nom","error","ErrorKind","MultiSpace"],"kind":"variant"},"21:962:15564":{"crate_id":21,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:1733:14539":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:7741:15286":{"crate_id":17,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"18:11701:15952":{"crate_id":18,"path":["object","elf","Dyn64"],"kind":"struct"},"2:25009:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"18:12262:16054":{"crate_id":18,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:2862:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:5443:15107":{"crate_id":17,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"18:13016:16266":{"crate_id":18,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:5570:14285":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:2277:14641":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"0:2425:738":{"crate_id":0,"path":["nom","number","complete","i64"],"kind":"function"},"17:3340:15133":{"crate_id":17,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:8367:4858":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:8263:62451":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"0:1187:2908":{"crate_id":0,"path":["nom","multi","many_till"],"kind":"function"},"2:3379:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"19:820:15567":{"crate_id":19,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"21:809:15658":{"crate_id":21,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:58082:17022":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"6:5178:17782":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"0:2383:4057":{"crate_id":0,"path":["nom","number","complete","le_i24"],"kind":"function"},"6:565:17285":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:24157:14298":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:3621:131":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:49716:4989":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:6184:18071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:5419:17908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:1547:6958":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:15215:14526":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:11418:14418":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:14613:17047":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"18:12607:16136":{"crate_id":18,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:11091:14590":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"0:304:2297":{"crate_id":0,"path":["nom","combinator","opt"],"kind":"function"},"2:13358:2552":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:3366:15394":{"crate_id":17,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:2884:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:3537:4797":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"0:1979:3553":{"crate_id":0,"path":["nom","character","complete","anychar"],"kind":"function"},"18:13481:16398":{"crate_id":18,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:2917:5601":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:10916:5603":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:46959:16968":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:12582:17115":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"17:4628:16581":{"crate_id":17,"path":["gimli","constants","DwId"],"kind":"struct"},"12:379:15034":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:49046:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"0:2635:1461":{"crate_id":0,"path":["nom","number","streaming","u8"],"kind":"function"},"1:2147:7225":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:5327:5447":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"18:2543:15490":{"crate_id":18,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"0:2626:4061":{"crate_id":0,"path":["nom","number","streaming","le_i32"],"kind":"function"},"6:1712:17444":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:3519:3165":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"18:12957:16214":{"crate_id":18,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:11946:4885":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"0:1498:2423":{"crate_id":0,"path":["nom","bits","streaming","take"],"kind":"function"},"2:24602:4843":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:8490:14554":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:3966:17533":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:12073:14370":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:5238:47881":{"crate_id":17,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:50625:12892":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"0:2834:2106":{"crate_id":0,"path":["nom","error","ErrorKind","Complete"],"kind":"variant"},"18:13147:16315":{"crate_id":18,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:6834:14334":{"crate_id":1,"path":["std","os","net","tcp","TcpStreamExt"],"kind":"trait"},"0:1671:2423":{"crate_id":0,"path":["nom","bytes","complete","take"],"kind":"function"},"5:2266:15597":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:10651:14293":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:2130:4882":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"0:5930:736":{"crate_id":0,"path":["nom","character","complete","i16"],"kind":"function"},"18:13602:16430":{"crate_id":18,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"18:10814:15541":{"crate_id":18,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:3436:7223":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:8720:137":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"19:896:15573":{"crate_id":19,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"12:1666:15040":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"18:9746:15776":{"crate_id":18,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:8793:4926":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:50197:5026":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:48077:2548":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:4410:5600":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:52276:16986":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:9427:15640":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:24976:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:1991:146":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:5428:14303":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:3221:15386":{"crate_id":17,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"18:13155:16316":{"crate_id":18,"path":["object","pe","Guid"],"kind":"struct"},"2:53520:14685":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"18:12674:16143":{"crate_id":18,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:7782:15215":{"crate_id":17,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"0:2332:3981":{"crate_id":0,"path":["nom","number","complete","be_u32"],"kind":"function"},"1:9519:14522":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"0:1221:2948":{"crate_id":0,"path":["nom","multi","many0_count"],"kind":"function"},"7:85:47133":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"0:2784:108":{"crate_id":0,"path":["nom","error","ErrorKind","Count"],"kind":"variant"},"0:2800:2090":{"crate_id":0,"path":["nom","error","ErrorKind","AlphaNumeric"],"kind":"variant"},"12:2404:63904":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:8500:4913":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"19:790:15564":{"crate_id":19,"path":["memchr","memmem","FindIter"],"kind":"struct"},"9:1075:14964":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:1578:6955":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:7110:15278":{"crate_id":17,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:2181:586":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"18:11579:15928":{"crate_id":18,"path":["object","elf","Syminfo32"],"kind":"struct"},"0:2431:4206":{"crate_id":0,"path":["nom","number","complete","be_f32"],"kind":"function"},"2:46471:5445":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"0:1335:3075":{"crate_id":0,"path":["nom","sequence","terminated"],"kind":"function"},"1:1483:6953":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:5556:14283":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"0:388:2404":{"crate_id":0,"path":["nom","combinator","into"],"kind":"function"},"6:1764:17465":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:7897:240":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:9239:4924":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:6205:18085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"18:10610:15811":{"crate_id":18,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:1576:17351":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:11150:14319":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:10928:5605":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:4332:17665":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:5047:7108":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"0:2344:3999":{"crate_id":0,"path":["nom","number","complete","be_i16"],"kind":"function"},"0:2770:2076":{"crate_id":0,"path":["nom","error","ErrorKind","IsNot"],"kind":"variant"},"18:9636:15774":{"crate_id":18,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:3449:4783":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:5412:15105":{"crate_id":17,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:12284:4993":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:53793:17003":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:3439:4749":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:12000:14364":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"0:185:1846":{"crate_id":0,"path":["nom","combinator"],"kind":"module"},"2:23321:14339":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"0:2842:2110":{"crate_id":0,"path":["nom","error","ErrorKind","NonEmpty"],"kind":"variant"},"18:13094:16309":{"crate_id":18,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:5649:15117":{"crate_id":17,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:6691:2519":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"18:11335:15482":{"crate_id":18,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:6153:18045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"18:12716:16147":{"crate_id":18,"path":["object","macho","Nlist32"],"kind":"struct"},"2:48547:13905":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:47216:4952":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:3042:6347":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:51485:16981":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:8538:14563":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"22:0:1855":{"crate_id":22,"path":["minimal_lexical"],"kind":"module"},"5:1276:7549":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"0:2002:3606":{"crate_id":0,"path":["nom","character","complete","hex_digit1"],"kind":"function"},"0:440:2443":{"crate_id":0,"path":["nom","combinator","fail"],"kind":"function"},"0:2662:737":{"crate_id":0,"path":["nom","number","streaming","i32"],"kind":"function"},"2:47026:2546":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:3871:230":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:3838:4995":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:5723:14598":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:4296:17648":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:5273:5445":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:5311:17846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"0:1392:2216":{"crate_id":0,"path":["nom","bits","complete"],"kind":"module"},"2:51609:14710":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"18:9706:15775":{"crate_id":18,"path":["object","read","any","SectionIterator"],"kind":"struct"},"0:1664:3295":{"crate_id":0,"path":["nom","bytes","complete","take_till1"],"kind":"function"},"9:927:47230":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"18:3743:15537":{"crate_id":18,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:50670:14390":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"18:12383:16096":{"crate_id":18,"path":["object","macho","DylibModule64"],"kind":"struct"},"7:0:1506":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:777:16918":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:6665:18117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:1684:4885":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:6518:15222":{"crate_id":17,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"18:4157:15544":{"crate_id":18,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:23852:14653":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:15006:14376":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"18:10015:15785":{"crate_id":18,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:24421:14760":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:49779:4996":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:5293:17834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"0:2190:3627":{"crate_id":0,"path":["nom","character","streaming","alphanumeric0"],"kind":"function"},"1:11278:18003":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"0:173:2191":{"crate_id":0,"path":["nom","error_position"],"kind":"macro"},"2:46836:14865":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"0:2792:2086":{"crate_id":0,"path":["nom","error","ErrorKind","Alpha"],"kind":"variant"},"19:661:15578":{"crate_id":19,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:5887:15130":{"crate_id":17,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:48093:4885":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:11182:14528":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:15298:5792":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:1663:2548":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:9285:979":{"crate_id":2,"path":["core","option"],"kind":"module"},"2:10933:5581":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"0:1804:3263":{"crate_id":0,"path":["nom","bytes","streaming","take_while1"],"kind":"function"},"1:15855:4605":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:46874:14836":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:14404:17128":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:24628:4844":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:53865:17009":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:7987:2668":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:24477:4840":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:672:42597":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:48337:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:4743:16585":{"crate_id":17,"path":["gimli","constants","DwDsc"],"kind":"struct"},"18:12170:16042":{"crate_id":18,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:14674:9632":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"1:13399:18279":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"18:10949:15859":{"crate_id":18,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"18:4008:15692":{"crate_id":18,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:6050:15252":{"crate_id":17,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:32535:4832":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"}},"external_crates":{"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"18":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"14":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"minimal_lexical","html_root_url":null},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"memchr","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":21}