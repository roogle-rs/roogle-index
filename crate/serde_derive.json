{"root":"0:0:1629","crate_version":"1.0.140","includes_private":false,"index":{"2:2847:97":{"id":"2:2847:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2849:1816"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13502:62962":{"id":"2:13502:62962","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15910:2973"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49700:5456","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13388:62943":{"id":"2:13388:62943","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:74:334":{"id":"0:74:334","crate_id":0,"name":"attr","span":{"filename":"src/internals/attr.rs","begin":[1,0],"end":[1952,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:144"],"is_stripped":false}},"2:7905:5246":{"id":"2:7905:5246","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7906:62339","2:7907:62340","2:7908:62337","2:7909:62335","2:7910:62341","2:7911:62338","2:7912:62336"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13743:150":{"id":"2:13743:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13744:181","2:13745:150","2:13746:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13389:304":{"id":"2:13389:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15927:2987","str::as_mut_ptr":"1:15916:2978"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13505:62963":{"id":"2:13505:62963","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15910:2973"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49718:5457","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6964:4657":{"id":"1:6964:4657","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6965:58632"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:58772","1:2579:2956","1:2580:58771","1:2581:58773","1:2582:58448"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8377:136":{"id":"2:8377:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8379:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3398:3450":{"id":"2:3398:3450","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3400:181","2:3401:1229"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9236:3673":{"id":"2:9236:3673","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10507:142":{"id":"2:10507:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10508:715","2:10510:10615"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13384:62942":{"id":"2:13384:62942","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"1:15916:2978"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13387:2711":{"id":"2:13387:2711","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12486:5557"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13407:10844":{"id":"2:13407:10844","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15916:2978"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49684:5454","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3404:5162":{"id":"2:3404:5162","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3406:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13045:5115":{"id":"2:13045:5115","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3500:130":{"id":"2:3500:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3502:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3503:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23424:5240":{"id":"2:23424:5240","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23425:1263","2:23426:1262","2:23427:1260","2:23428:1259"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"2:22836:5301","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1390"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13452:62949":{"id":"2:13452:62949","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3361:5191":{"id":"2:3361:5191","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3363:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13475:62958":{"id":"2:13475:62958","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13045:5115","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3328:5179":{"id":"2:3328:5179","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3330:181","2:3331:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3156:135":{"id":"2:3156:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3158:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3153:149":{"id":"2:3153:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3155:1622"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3262:220":{"id":"2:3262:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13400:62944":{"id":"2:13400:62944","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3562:3245","`str`":"1:15916:2978","str::slice_unchecked":"1:15916:2978"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:10276:119":{"id":"2:10276:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10277:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8579:157":{"id":"2:8579:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8580:1797","2:8581:922","2:8582:4064","2:8585:4065","2:8586:495","2:8588:2111","2:8591:4066","2:8592:4067","2:8593:4068","2:8594:2048","2:8596:2576","2:8598:4069","2:8599:4070","2:8601:841","2:8604:4071","2:8611:2409","2:8613:2405","2:8616:1811","2:8617:2864","2:8618:4072","2:8620:4073","2:8622:4074","2:8625:1301","2:8626:2176","2:8627:4075","2:8631:1798","2:8634:1793","2:8635:4076","2:8636:4077","2:8638:4078","2:8639:1804","2:8641:4079","2:8644:4080","2:8646:4081","2:8656:4082","2:8671:4083","2:8673:4084","2:8677:4085","2:8686:2868","2:8689:4086","2:8691:4087","2:8694:276","2:8701:294","2:8708:2522","2:8715:4088","2:8724:4089","2:8734:1014","2:8741:4090","2:8748:4050","2:8749:4047","2:8750:4052","2:8762:4051","2:8769:4049","2:8781:4048","2:8788:4091","2:8789:4092","2:8794:4093","2:8797:2126","2:8800:4094","2:8801:2869","2:8803:4095","2:8805:415","2:8808:4096","2:8811:997","2:8814:4097","2:8817:604","2:8820:4098","2:8823:907","2:8825:826","2:8827:792","2:8829:713","2:8831:696","2:8833:4099","2:8834:4100","2:8842:4101"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3382:3971":{"id":"2:3382:3971","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3384:181","2:3385:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6464:4696":{"id":"1:6464:4696","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6465:58562","1:6466:8785","1:6467:58563","1:6468:58564","1:6469:58565","1:6470:58566"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13403:2288":{"id":"2:13403:2288","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49371:5438","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1258:1623":{"id":"0:1258:1623","crate_id":0,"name":"Deserialize","span":{"filename":"src/lib.rs","begin":[99,0],"end":[104,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[proc_macro_derive(Deserialize, attributes(serde))]"],"deprecation":null,"kind":"proc_macro","inner":{"kind":"derive","helpers":["serde"]}},"2:10286:189":{"id":"2:10286:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10287:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13404:2282":{"id":"2:13404:2282","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49377:5439","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5833:5606":{"id":"5:5833:5606","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13402:59538":{"id":"2:13402:59538","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"1:15916:2978"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13474:62957":{"id":"2:13474:62957","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23733:5062":{"id":"2:23733:5062","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23734:5239"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23729:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3710:224":{"id":"2:3710:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3711:181","2:3712:5073","2:3713:686","2:3714:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3715:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5652:4712":{"id":"1:5652:4712","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5653:58330","1:5654:3749"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6795:4699":{"id":"1:6795:4699","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6796:57797"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3339:3444":{"id":"2:3339:3444","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:181","2:3342:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13380:2057":{"id":"2:13380:2057","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6866:4702":{"id":"1:6866:4702","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6867:58512"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:153:1802":{"id":"24:153:1802","crate_id":24,"name":"Token","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"24:160:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:117:1815":{"id":"20:117:1815","crate_id":20,"name":"ToTokens","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:118:2451","20:119:2193","20:120:1837"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3629:3256":{"id":"2:3629:3256","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3631:61371","2:3632:61372","2:3633:1879"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10911:214":{"id":"2:10911:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10913:181","2:10914:1842","2:10915:59515","2:10916:59516","2:10917:59517","2:10918:753","2:10919:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10902:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13025:5112":{"id":"2:13025:5112","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13027:5110","2:13028:62302","2:13029:62303","2:13030:62304","2:13031:62306","2:13032:62305","2:13033:62307"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6106:2279":{"id":"5:6106:2279","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15916:2978"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5724:4643":{"id":"1:5724:4643","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5725:57896","1:5726:57898","1:5727:57897","1:5728:57899"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3353:4798":{"id":"2:3353:4798","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3355:1349"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:7800:4874":{"id":"1:7800:4874","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7801:60657"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3503:131":{"id":"2:3503:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13399:4786":{"id":"2:13399:4786","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3558:2238","`str`":"1:15916:2978","str::slice_mut_unchecked":"1:15916:2978"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13440:62947":{"id":"2:13440:62947","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"1:15916:2978","prim@char":"1:15910:2973","self::pattern":"2:13015:5111","str::split":"1:15916:2978"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49469:5444","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3558:2238":{"id":"2:3558:2238","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3560:181","2:3561:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13461:62951":{"id":"2:13461:62951","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13015:5111","prim@char":"1:15910:2973","`DoubleEndedIterator`":"2:8425:120","str::rmatch_indices":"1:15916:2978"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49551:5447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22710:5300":{"id":"2:22710:5300","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22711:5239","2:22712:61817","2:22713:62237","2:22714:62238","2:22715:62239","2:22716:44746","2:22717:62240","2:22718:62241","2:22719:62242","2:22720:62243","2:22721:62244","2:22722:62245","2:22723:62246","2:22724:62247","2:22725:10638","2:22726:62248","2:22727:61857","2:22728:9968","2:22729:61592","2:22730:61591","2:22731:61593","2:22732:61818","2:22733:61819","2:22734:61820","2:22735:61821"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3793:4443":{"id":"2:3793:4443","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3258:218":{"id":"2:3258:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3357:5189":{"id":"2:3357:5189","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3359:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13410:10585":{"id":"2:13410:10585","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49693:5455","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10278:3322":{"id":"2:10278:3322","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10279:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:2858:3296":{"id":"24:2858:3296","crate_id":24,"name":"Peek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"24:2740:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13473:62956":{"id":"2:13473:62956","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9342:4691":{"id":"1:9342:4691","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9343:60585","1:9344:60586","1:9345:60587","1:9346:60588","1:9347:60589","1:9348:41389","1:9349:60584"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:18:3092":{"id":"20:18:3092","crate_id":20,"name":"TokenStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:19:9243","20:21:63921","20:23:63922","20:26:63923"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:44:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8857:4442":{"id":"2:8857:4442","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3250:211":{"id":"2:3250:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3486:3317":{"id":"2:3486:3317","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3487:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3473:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13437:62946":{"id":"2:13437:62946","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:15910:2973","`DoubleEndedIterator`":"2:8425:120","self::pattern":"2:13015:5111","str::rsplit_terminator":"1:15916:2978","str::split":"1:15916:2978"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49451:5443","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13405:4791":{"id":"2:13405:4791","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49387:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13411:1879":{"id":"2:13411:1879","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3163:227":{"id":"2:3163:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3165:127","2:3166:1408"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6690:4642":{"id":"1:6690:4642","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6691:58665","1:6692:8708","1:6693:8709","1:6694:8711","1:6695:8710","1:6696:8712","1:6697:8713","1:6698:8715","1:6699:6977","1:6700:8718","1:6701:8719","1:6702:8720","1:6703:8721","1:6704:8722","1:6705:8723","1:6706:8716","1:6707:8717"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:8:1727":{"id":"0:8:1727","crate_id":0,"name":"ast","span":{"filename":"src/internals/ast.rs","begin":[1,0],"end":[202,1]},"visibility":"public","docs":"A Serde ast, parsed from the Syn ast and ready to generate Rust code.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"2:13490:1861":{"id":"2:13490:1861","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13015:5111","prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3981:68":{"id":"2:3981:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3982:1421"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:13428:58141":{"id":"2:13428:58141","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8425:120","self::pattern":"2:13015:5111","str::split_whitespace":"1:15916:2978","prim@char":"1:15910:2973","str::rsplit":"1:15916:2978"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49401:4740","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22763:5235":{"id":"2:22763:5235","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22764:5239","2:22765:61817","2:22766:1220","2:22767:1221","2:22768:44746","2:22769:61854","2:22770:10803","2:22771:61855","2:22772:61856","2:22773:61857","2:22774:61818","2:22775:61819","2:22776:61820","2:22777:61821","2:22778:61822","2:22779:61823","2:22780:61824"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3318:3259":{"id":"2:3318:3259","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:181","2:3321:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13390:59518":{"id":"2:13390:59518","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15927:2987"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22836:5301":{"id":"2:22836:5301","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22837:5239","2:22838:1240","2:22839:1265"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13420:2522":{"id":"2:13420:2522","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111","`None`":"2:47437:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6091:63588":{"id":"5:6091:63588","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3377:4805":{"id":"2:3377:4805","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:181","2:3380:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3540:4444":{"id":"2:3540:4444","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3542:237","2:3543:206","2:3544:61525"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10269:109":{"id":"2:10269:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10270:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"21:808:3350":{"id":"21:808:3350","crate_id":21,"name":"MultiSpan","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:809:63940"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/internals/attr.rs","begin":[23,0],"end":[23,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"internals::case::RenameRule","name":"RenameRule","id":"0:1286:1826","glob":false}},"2:13728:138":{"id":"2:13728:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13729:181","2:13730:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:63:3093":{"id":"20:63:3093","crate_id":20,"name":"IdentFragment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:64:660","20:65:2061"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:2875:6411":{"id":"24:2875:6411","crate_id":24,"name":"Speculative","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2876:64023"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4713:4737":{"id":"1:4713:4737","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4714:58137","1:4715:58138","1:4716:58139","1:4718:4736","1:4719:58140","1:4721:58141","1:4722:5891"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4631:4662","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3150:74":{"id":"2:3150:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3152:2172"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13443:59549":{"id":"2:13443:59549","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15910:2973","str::rsplitn":"1:15916:2978","self::pattern":"2:13015:5111"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49505:5417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10288:3327":{"id":"2:10288:3327","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10289:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13500:4435":{"id":"2:13500:4435","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13395:59516":{"id":"2:13395:59516","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:5746:4642":{"id":"1:5746:4642","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5747:8363","1:5748:60609","1:5749:6936","1:5750:60610","1:5751:4984","1:5752:4985","1:5753:60611","1:5754:1297","1:5755:60612","1:5756:60613","1:5757:60614","1:5758:60615","1:5759:60616","1:5760:60617","1:5761:60618","1:5762:60619"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3473:116":{"id":"2:3473:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3474:221","2:3475:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13493:62961":{"id":"2:13493:62961","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12954:3257":{"id":"2:12954:3257","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12955:126","2:12956:1954"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3345:5185":{"id":"2:3345:5185","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3346:181","2:3347:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14201:4451":{"id":"2:14201:4451","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14202:58715","2:14203:58716","2:14204:58717","2:14205:58718","2:14206:58719","2:14207:58720","2:14208:4078"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3756:3316":{"id":"2:3756:3316","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5790:4647":{"id":"1:5790:4647","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5791:60609"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4991:4676":{"id":"1:4991:4676","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4992:3236","1:4993:60935"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:2969:1819":{"id":"24:2969:1819","crate_id":24,"name":"Parse","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2970:1818"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3349:3260":{"id":"2:3349:3260","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3351:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6868:4703":{"id":"1:6868:4703","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6869:60713"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5732:4644":{"id":"1:5732:4644","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5733:6936","1:5734:58462","1:5735:58463"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10552:4804":{"id":"2:10552:4804","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10553:146","2:10554:10331","2:10555:61096"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3255:3357":{"id":"2:3255:3357","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13414:59180":{"id":"2:13414:59180","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5658:4710":{"id":"1:5658:4710","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5659:6258","1:5660:2711"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23429:18562":{"id":"2:23429:18562","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23430:61591","2:23431:61592","2:23432:61593"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"2:23424:5240","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"24:2628:2461":{"id":"24:2628:2461","crate_id":24,"name":"Spanned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2629:2061"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13431:10845":{"id":"2:13431:10845","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13015:5111","prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12807:5411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3365:5193":{"id":"2:3365:5193","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3367:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13408:5891":{"id":"2:13408:5891","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49655:4741","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6105:4761":{"id":"5:6105:4761","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5780:4646":{"id":"1:5780:4646","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5781:58302","1:5782:58303","1:5783:58304","1:5784:58305"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8864:5245":{"id":"2:8864:5245","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7905:5246","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4032:4671":{"id":"2:4032:4671","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4033:58448"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3323:3453":{"id":"2:3323:3453","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3325:181","2:3326:1348"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3408:5164":{"id":"2:3408:5164","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3410:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3147:75":{"id":"2:3147:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3149:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8860:5216":{"id":"2:8860:5216","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6084:63586":{"id":"5:6084:63586","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1796","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:4452","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1796","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:4452","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23096:5250":{"id":"2:23096:5250","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23733:5062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23087:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:7:1605":{"id":"0:7:1605","crate_id":0,"name":"internals","span":{"filename":"src/internals/mod.rs","begin":[1,0],"end":[28,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:8:1727","0:74:334","0:409","0:504"],"is_stripped":true}},"2:13434:59547":{"id":"2:13434:59547","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13015:5111","str::split":"1:15916:2978","`DoubleEndedIterator`":"2:8425:120","prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49419:5414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:3083:3287":{"id":"24:3083:3287","crate_id":24,"name":"Parser","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:3084:181","24:3085:2152","24:3086:1818","24:3087:2153"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2850:3261":{"id":"2:2850:3261","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2852:2171"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:601:1734":{"id":"0:601:1734","crate_id":0,"name":"symbol","span":{"filename":"src/internals/symbol.rs","begin":[1,0],"end":[68,1]},"visibility":{"restricted":{"parent":"0:7:1605","path":"::internals"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1311:1830"],"is_stripped":true}},"2:3562:3245":{"id":"2:3562:3245","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3564:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3558:2238","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5837:5608":{"id":"5:5837:5608","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:35468"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13471:62955":{"id":"2:13471:62955","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10219:3326":{"id":"2:10219:3326","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10220:1524","2:10221:58830","2:10223:58013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4631:4662":{"id":"1:4631:4662","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4632:4479","1:4633:60733","1:4635:60734","1:4636:60735","1:4637:4731","1:4638:10192","1:4639:10191","1:4641:60736","1:4642:4078","1:4643:4791","1:4644:2048","1:4646:2176"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6085:1979":{"id":"5:6085:1979","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13381:10636":{"id":"2:13381:10636","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10290:3328":{"id":"2:10290:3328","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10291:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13487:62960":{"id":"2:13487:62960","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13015:5111","prim@char":"1:15910:2973"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1257:1614":{"id":"0:1257:1614","crate_id":0,"name":"Serialize","span":{"filename":"src/lib.rs","begin":[91,0],"end":[96,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[proc_macro_derive(Serialize, attributes(serde))]"],"deprecation":null,"kind":"proc_macro","inner":{"kind":"derive","helpers":["serde"]}},"5:6088:63587":{"id":"5:6088:63587","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3416:5152":{"id":"2:3416:5152","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3418:1227"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3228:115":{"id":"2:3228:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3229:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8340:5175":{"id":"2:8340:5175","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8342:2869"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9237:3672":{"id":"2:9237:3672","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8390:3360":{"id":"2:8390:3360","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8392:2125","2:8394:4062","2:8395:4063"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13393:59515":{"id":"2:13393:59515","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23048:18543":{"id":"2:23048:18543","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23049:7868","2:23050:61747","2:23051:61748"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23041:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4706:4734":{"id":"1:4706:4734","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4707:57807","1:4708:41775","1:4709:57808","1:4710:57809"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2938:177":{"id":"2:2938:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2939:415","2:2940:4050","2:2941:4047","2:2942:4055"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3259:217":{"id":"2:3259:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5794:4648":{"id":"1:5794:4648","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5795:58648"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13469:62954":{"id":"2:13469:62954","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8344:5174":{"id":"2:8344:5174","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8346:4095"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13040:5114":{"id":"2:13040:5114","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13042:4056","2:13043:61804","2:13044:61805"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13034:5110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3392:3448":{"id":"2:3392:3448","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3394:181","2:3395:1226"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2907:124":{"id":"2:2907:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13499:4434":{"id":"2:13499:4434","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13498:4433":{"id":"2:13498:4433","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3412:5166":{"id":"2:3412:5166","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3414:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13496:1818":{"id":"2:13496:1818","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12954:3257","FromStr::Err":"2:12954:3257"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:3257","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:3257","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5802:4650":{"id":"1:5802:4650","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5803:6936"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13478:62959":{"id":"2:13478:62959","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13015:5111","prim@char":"1:15910:2973"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13481:10235":{"id":"2:13481:10235","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13464:62952":{"id":"2:13464:62952","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111","str::match_indices":"1:15916:2978","`DoubleEndedIterator`":"2:8425:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49569:5448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13409:62945":{"id":"2:13409:62945","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49665:5452","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13501:4436":{"id":"2:13501:4436","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13446:59551":{"id":"2:13446:59551","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111","str::splitn":"1:15916:2978"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49523:5418","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/internals/mod.rs","begin":[8,0],"end":[8,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::receiver::replace_receiver","name":"replace_receiver","id":"0:480:1730","glob":false}},"2:13382:62941":{"id":"2:13382:62941","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8425:120":{"id":"2:8425:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8426:4056","2:8427:4057","2:8428:4058","2:8429:4059","2:8433:4060","2:8436:4061"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3333:3423":{"id":"2:3333:3423","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3335:181","2:3336:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10517:146":{"id":"2:10517:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10518:652","2:10519:2591","2:10520:58342","2:10521:58343","2:10522:58344","2:10523:58345","2:10524:58346","2:10525:58347","2:10526:58348","2:10527:58349","2:10528:58350","2:10529:58351","2:10530:58352","2:10531:58353","2:10532:58354","2:10533:1524"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3421:5170":{"id":"2:3421:5170","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3423:1230"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13378":{"id":"2:13378","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12475:1333","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13379:793","2:13380:2057","2:13381:10636","2:13382:62941","2:13384:62942","2:13387:2711","2:13388:62943","2:13389:304","2:13390:59518","2:13391:1842","2:13393:59515","2:13395:59516","2:13397:59517","2:13399:4786","2:13400:62944","2:13401:59537","2:13402:59538","2:13403:2288","2:13404:2282","2:13405:4791","2:13406:10846","2:13407:10844","2:13408:5891","2:13409:62945","2:13410:10585","2:13411:1879","2:13414:59180","2:13417:59182","2:13420:2522","2:13424:4061","2:13428:58141","2:13431:10845","2:13434:59547","2:13437:62946","2:13440:62947","2:13443:59549","2:13446:59551","2:13449:62948","2:13452:62949","2:13455:3053","2:13458:62950","2:13461:62951","2:13464:62952","2:13467:62953","2:13469:62954","2:13471:62955","2:13473:62956","2:13474:62957","2:13475:62958","2:13478:62959","2:13481:10235","2:13484:59553","2:13487:62960","2:13490:1861","2:13493:62961","2:13496:1818","2:13498:4433","2:13499:4434","2:13500:4435","2:13501:4436","2:13502:62962","2:13504:3336","2:13505:62963"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22799:5299":{"id":"2:22799:5299","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22800:61817","2:22801:1220","2:22802:1221","2:22803:61818","2:22804:61819","2:22805:61820","2:22806:61821","2:22807:61822","2:22808:61823","2:22809:61824"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10280:2231":{"id":"2:10280:2231","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10281:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22899:4694":{"id":"2:22899:4694","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22889:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13034:5110":{"id":"2:13034:5110","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13036:5133","2:13037:922","2:13038:61388","2:13039:61389"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3159:228":{"id":"2:3159:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3161:127","2:3162:1409"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/internals/mod.rs","begin":[5,0],"end":[5,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::ctxt::Ctxt","name":"Ctxt","id":"0:1282:1729","glob":false}},"1:6792:4714":{"id":"1:6792:4714","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6793:58135","1:6794:58320"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:0:1629":{"id":"0:0:1629","crate_id":0,"name":"serde_derive","span":{"filename":"src/lib.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"This crate provides Serde's two derive macros.\n\n```edition2018\n# use serde_derive::{Serialize, Deserialize};\n#\n#[derive(Serialize, Deserialize)]\n# struct S;\n#\n# fn main() {}\n```\n\nPlease refer to [https://serde.rs/derive.html] for how to set this up.\n\n[https://serde.rs/derive.html]: https://serde.rs/derive.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/serde_derive/1.0.140\")]","#![allow(unknown_lints, bare_trait_objects)]","#![allow(clippy :: branches_sharing_code, clippy :: cognitive_complexity,\nclippy :: collapsible_match, clippy :: derive_partial_eq_without_eq, clippy ::\nenum_variant_names, clippy :: manual_map, clippy :: match_like_matches_macro,\nclippy :: needless_pass_by_value, clippy :: too_many_arguments, clippy ::\ntrivially_copy_pass_by_ref, clippy :: used_underscore_binding, clippy ::\nwildcard_in_or_patterns, clippy :: unnested_or_patterns,)]","#![allow(clippy :: cast_possible_truncation, clippy :: checked_conversions,\nclippy :: doc_markdown, clippy :: enum_glob_use, clippy :: indexing_slicing,\nclippy :: items_after_statements, clippy :: let_underscore_drop, clippy ::\nmanual_assert, clippy :: map_err_ignore, clippy :: match_same_arms, clippy ::\nmatch_wildcard_for_single_variants, clippy :: module_name_repetitions, clippy\n:: must_use_candidate, clippy :: option_if_let_else, clippy :: similar_names,\nclippy :: single_match_else, clippy :: struct_excessive_bools, clippy ::\ntoo_many_lines, clippy :: unseparated_literal_suffix, clippy :: unused_self,\nclippy :: use_self, clippy :: wildcard_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:1257:1614","0:1258:1623"],"is_stripped":false}},"1:6562:4707":{"id":"1:6562:4707","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6563:58641","1:6564:58642"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12462:5596":{"id":"2:12462:5596","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12463:1797","2:12464:2932"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2872:104":{"id":"2:2872:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2873:408","2:2874:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2902:183":{"id":"2:2902:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2904:604","2:2905:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13458:62950":{"id":"2:13458:62950","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8425:120","prim@char":"1:15910:2973","str::matches":"1:15916:2978","self::pattern":"2:13015:5111"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49623:5451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10284:3330":{"id":"2:10284:3330","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10285:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13504:3336":{"id":"2:13504:3336","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15910:2973"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49709:3337","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6103:63589":{"id":"5:6103:63589","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1079:2244":{"id":"1:1079:2244","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:1990","1:1081:4433","1:1082:2279","1:1083:2278","1:1084:4434","1:1085:4435","1:1086:4436"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3715:137":{"id":"2:3715:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3717:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14127:141":{"id":"2:14127:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14128:277","2:14129:518","2:14130:280","2:14131:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13417:59182":{"id":"2:13417:59182","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:15910:2973","self::pattern":"2:13015:5111"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6442:4699":{"id":"1:6442:4699","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6443:4984","1:6444:4985","1:6445:57796","1:6446:60979","1:6448:60983","1:6450:60980","1:6451:60981","1:6453:60982"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1311:1830":{"id":"0:1311:1830","crate_id":0,"name":"Symbol","span":{"filename":"src/internals/symbol.rs","begin":[5,0],"end":[5,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13401:59537":{"id":"2:13401:59537","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"1:15916:2978"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:1990","5:785:1863","5:786:4103"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13467:62953":{"id":"2:13467:62953","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13397:59517":{"id":"2:13397:59517","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3721:5073":{"id":"2:3721:5073","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3723:57157"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13449:62948":{"id":"2:13449:62948","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13484:59553":{"id":"2:13484:59553","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13015:5111","prim@char":"1:15910:2973"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8381:151":{"id":"2:8381:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8382:1797","2:8383:3235","2:8384:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6104:63590":{"id":"5:6104:63590","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1796","`String`":"5:8359:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1796","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:4452","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13406:10846":{"id":"2:13406:10846","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15916:2978"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49675:5453","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3370:5153":{"id":"2:3370:5153","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3371:181","2:3372:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3260:106":{"id":"2:3260:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10282:3329":{"id":"2:10282:3329","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10283:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3387:4806":{"id":"2:3387:4806","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3389:181","2:3390:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13455:3053":{"id":"2:13455:3053","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15916:2978","self::pattern":"2:13015:5111","`DoubleEndedIterator`":"2:8425:120","prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49605:5450","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3497:2177":{"id":"2:3497:2177","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3498:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6107:2278":{"id":"5:6107:2278","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15916:2978"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3698:5513":{"id":"2:3698:5513","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3629:3256","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13424:4061":{"id":"2:13424:4061","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47437:176","self::pattern":"2:13015:5111","prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:5112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13391:1842":{"id":"2:13391:1842","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8450:3359":{"id":"2:8450:3359","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8451:793","2:8452:2057"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"24:2126:6408":{"id":"24:2126:6408","crate_id":24,"name":"IdentExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2127:64125","24:2128:64126","24:2129:1860"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"24:2144:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1333","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:63586","5:6085:1979","5:6088:63587","5:6091:63588","5:6103:63589","5:6104:63590","5:6105:4761","5:6106:2279","5:6107:2278"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13379:793":{"id":"2:13379:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15910:2973"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6864:4658":{"id":"1:6864:4658","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6865:57968"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4764:4441":{"id":"2:4764:4441","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4765:1797","2:4766:61908","2:4767:4065"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3085:5199":{"id":"2:3085:5199","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3084:4661","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3506:132":{"id":"2:3506:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3508:181","2:3509:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2948:184":{"id":"2:2948:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2950:997","2:2951:826","2:2952:792","2:2953:713","2:2954:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:3357","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4688:3326":{"id":"1:4688:3326","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4689:2591","1:4690:58010","1:4692:58011","1:4693:5815","1:4694:58012","1:4695:10279","1:4696:58013","1:4705:4078"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5740:4645":{"id":"1:5740:4645","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5741:6936","1:5742:9247"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3291:3358":{"id":"2:3291:3358","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"paths":{"16:3772:7620":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:4060:8287":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:7905:5246":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:45887:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:1584:8063":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:10266:6327":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"24:5700:3114":{"crate_id":24,"path":["syn","expr","ExprArray"],"kind":"struct"},"1:15934:2994":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:670:42065":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:3892:8192":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:7928:2531":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:49523:5418":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:994:5677":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:6591:6082":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:1486:4562":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:3228:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:11115:3240":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"24:5836:3146":{"crate_id":24,"path":["syn","expr","ExprTuple"],"kind":"struct"},"1:12061:3235":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:22523:61248":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"21:1251:3345":{"crate_id":21,"path":["proc_macro","bridge","client","SourceFile"],"kind":"struct"},"24:6046:3160":{"crate_id":24,"path":["syn","lit","LitByteStr"],"kind":"struct"},"17:10236:6289":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:1596:8071":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:52735:5297":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:11386:8707":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:50117:5467":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"21:478:4606":{"crate_id":21,"path":["proc_macro","bridge","rpc","PanicMessage"],"kind":"enum"},"2:3540:4444":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:1630:8092":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"24:661:64019":{"crate_id":24,"path":["syn","expr","parsing","Precedence"],"kind":"enum"},"20:528:3967":{"crate_id":20,"path":["quote","__private","IdentFragmentAdapter"],"kind":"struct"},"1:8415:5683":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"6:4262:8338":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"24:6418:2182":{"crate_id":24,"path":["syn","path","QSelf"],"kind":"struct"},"17:13331:7409":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"24:5995:3155":{"crate_id":24,"path":["syn","generics","PredicateLifetime"],"kind":"struct"},"6:4358:8390":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"21:3160:2459":{"crate_id":21,"path":["proc_macro","Literal"],"kind":"struct"},"2:48525:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"24:3665:3389":{"crate_id":24,"path":["syn","token","Final"],"kind":"struct"},"6:5185:8500":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:11058:4764":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"18:754:63912":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:15326:4970":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:903:4199":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:14091:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"24:4784:3419":{"crate_id":24,"path":["syn","token","CaretEq"],"kind":"struct"},"20:431:3853":{"crate_id":20,"path":["quote","__private","RepInterp"],"kind":"struct"},"12:1253:4854":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:14021:6666":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"9:157:5729":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"17:10599:48803":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"12:930:4846":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:12247:7101":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"24:299:1749":{"crate_id":24,"path":["syn","ident","Ident"],"kind":"function"},"1:5658:4710":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"24:6363:2183":{"crate_id":24,"path":["syn","ty","ReturnType"],"kind":"enum"},"15:0:2951":{"crate_id":15,"path":["addr2line"],"kind":"module"},"24:5888:1757":{"crate_id":24,"path":["syn","generics","Generics"],"kind":"struct"},"16:7392:6031":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"24:3467:1796":{"crate_id":24,"path":["syn","token","Box"],"kind":"struct"},"1:5965:5034":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:8097:4452":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:681:1830":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:6691:6084":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:607:48588":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:823:6660":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:3412:5166":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:23729:4661":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:5561:5932":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:51015:5293":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:3345:4936":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:46376:5581":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:10943:4750":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"24:6003:1825":{"crate_id":24,"path":["syn","lit","Lit"],"kind":"enum"},"24:5492:3110":{"crate_id":24,"path":["syn","data","VisCrate"],"kind":"struct"},"17:13356:7417":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"22:986:2459":{"crate_id":22,"path":["proc_macro2","Literal"],"kind":"struct"},"2:56277:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:53472:9022":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:5582:5247":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:7446:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"12:2009:3235":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:47742:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:3392:3448":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"14:231:2275":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"18:782:6783":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:5978:8697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:2948:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:50180:5533":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"16:6780:6085":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"24:972:3157":{"crate_id":24,"path":["syn","generics","Turbofish"],"kind":"struct"},"1:11990:9239":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"2:56303:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9649:48597":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"24:5848:3149":{"crate_id":24,"path":["syn","expr","ExprUnsafe"],"kind":"struct"},"16:6219:6072":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:5011:2162":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:4517:8454":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:5746:4642":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:2816:6210":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"24:2496:2397":{"crate_id":24,"path":["syn","punctuated","Pair"],"kind":"enum"},"2:55906:5058":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"24:5499:2180":{"crate_id":24,"path":["syn","expr","Expr"],"kind":"enum"},"16:4671:7634":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:5652:4712":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:14040:5477":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"18:620:9140":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:4902:3320":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:2753:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"12:2309:7868":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:10028:48652":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:6124:8750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:9296:6866":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:9956:5398":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:531:7966":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:12494:7158":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"24:5052:3437":{"crate_id":24,"path":["syn","token","Or"],"kind":"struct"},"1:13875:4869":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"24:4888:3426":{"crate_id":24,"path":["syn","token","Dot"],"kind":"struct"},"16:6166:6069":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:9633:6657":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"6:591:8003":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13377:7421":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:10288:3327":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"24:3015:2733":{"crate_id":24,"path":["syn","parse","Unexpected"],"kind":"enum"},"16:5595:5934":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:10673:48806":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:8335:5640":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:11967:4871":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"12:429:5847":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13192:7375":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13620:7483":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:11665:6990":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:3333:3423":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"18:837:5110":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:4425:8416":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:3370:5153":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:46931:9223":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:8857:4442":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:6644:6083":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:3739:5209":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:3287:6202":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:12005:57792":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"24:5712:3117":{"crate_id":24,"path":["syn","expr","ExprAsync"],"kind":"struct"},"1:13336:4977":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:10652:13344":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:5273:5960":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:1161:13346":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:8860:5216":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:14715:9514":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:2543:6290":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:37569:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:45802:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"24:5945:2184":{"crate_id":24,"path":["syn","generics","TypeParamBound"],"kind":"enum"},"17:12456:7153":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:10282:3329":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:4823:7639":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:46960:9224":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:47910:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:32118:5545":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"18:667:6392":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:2938:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:5815:5946":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:12234:7099":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:53457:9021":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:1597:3236":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"22:365:3250":{"crate_id":22,"path":["proc_macro2","imp","LexError"],"kind":"enum"},"16:3064:6253":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"24:6088:3165":{"crate_id":24,"path":["syn","mac","MacroDelimiter"],"kind":"enum"},"24:5729:3121":{"crate_id":24,"path":["syn","expr","ExprBox"],"kind":"struct"},"16:3018:6195":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:3341:5633":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:4395:8405":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:6072:5912":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:45818:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:7737:4869":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:48207:3322":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"14:47:9508":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:5790:4647":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:13520:7460":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:12552:7168":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:10637:13341":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"12:2039:4802":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:12917:7216":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:53378:9016":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:2484:48697":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:4293:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:4721:5196":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:10253:6328":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"20:117:1815":{"crate_id":20,"path":["quote","to_tokens","ToTokens"],"kind":"trait"},"5:3370:4800":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:15917:2979":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"24:4999:3433":{"crate_id":24,"path":["syn","token","Le"],"kind":"struct"},"1:12045:3236":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:6085:8733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:10200:48666":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:3048:57784":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:14544:4733":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:12176:5002":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:22495:4046":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"24:4842:3423":{"crate_id":24,"path":["syn","token","Div"],"kind":"struct"},"2:50337:5475":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"24:5458:3108":{"crate_id":24,"path":["syn","data","FieldsNamed"],"kind":"struct"},"24:4982:3432":{"crate_id":24,"path":["syn","token","Gt"],"kind":"struct"},"2:3150:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:10609:4185":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:9342:4691":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:50301:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:1432:3240":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:3715:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:6792:4714":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:12733:5445":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"24:2071:64189":{"crate_id":24,"path":["syn","buffer","empty","UnsafeSyncEntry"],"kind":"struct"},"17:9440:6869":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"24:3449:3383":{"crate_id":24,"path":["syn","token","Become"],"kind":"struct"},"12:160:5846":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:3375:5634":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11482:1749":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:13394:7424":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:9088:48594":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:11835:7034":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"24:6316:3172":{"crate_id":24,"path":["syn","ty","TypeGroup"],"kind":"struct"},"17:9404:6868":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:11194:4686":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:10701:4665":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"17:10407:6325":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:14964:4795":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"6:3957:8237":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:1015:3235":{"crate_id":22,"path":["proc_macro2","token_stream","IntoIter"],"kind":"struct"},"24:3083:3287":{"crate_id":24,"path":["syn","parse","Parser"],"kind":"trait"},"2:2203:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:13547:7467":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:5015:3302":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:6324:4981":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:3549:7618":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:22710:5300":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"22:865:1749":{"crate_id":22,"path":["proc_macro2","imp","Ident"],"kind":"enum"},"1:1623:4851":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"24:4205:3408":{"crate_id":24,"path":["syn","token","Use"],"kind":"struct"},"17:10081:6269":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"22:792:2459":{"crate_id":22,"path":["proc_macro2","fallback","Literal"],"kind":"struct"},"6:4120:8317":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:4651:4723":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:3335:4931":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:13240:9513":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"1:11191:4685":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"5:3329:3236":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"24:5417:3106":{"crate_id":24,"path":["syn","attr","MetaList"],"kind":"struct"},"1:10800:4655":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"24:964:3156":{"crate_id":24,"path":["syn","generics","ImplGenerics"],"kind":"struct"},"17:2314:6330":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"18:801:6378":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:51086:5261":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:12598:7175":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:3793:4443":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"12:1651:5854":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:56342:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1527:8032":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:11015:48883":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:13924:61332":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"16:4535:7631":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:12582:7171":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:6702:8720":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:5130:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:49665:5452":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:51384:5295":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:7804:6035":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:7185:6092":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:10807:4656":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"24:5737:3123":{"crate_id":24,"path":["syn","expr","ExprCall"],"kind":"struct"},"24:6373:2424":{"crate_id":24,"path":["syn","path","PathSegment"],"kind":"struct"},"5:3396:1786":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:6413:5860":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:24526:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:6731:6229":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"22:786:1749":{"crate_id":22,"path":["proc_macro2","fallback","Ident"],"kind":"struct"},"17:13221:7383":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:4436:4758":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:11539:6968":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:2968:6194":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"20:357:2461":{"crate_id":20,"path":["quote","spanned","Spanned"],"kind":"trait"},"2:53419:9019":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:11231:6320":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:6636:6042":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:3349:3260":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:8112:5678":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:9809:63892":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:3250:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:1908:43036":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"24:5784:3134":{"crate_id":24,"path":["syn","expr","ExprLoop"],"kind":"struct"},"2:48988:5588":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:1663:4844":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:13306:7400":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:3259:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:3756:3316":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:5359:8592":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:13733:7528":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:12671:7191":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:11131:4741":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"24:5764:3129":{"crate_id":24,"path":["syn","expr","ExprGroup"],"kind":"struct"},"16:3091:6254":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"24:5911:2399":{"crate_id":24,"path":["syn","generics","TypeParam"],"kind":"struct"},"17:11993:7061":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"12:396:5848":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"24:5139:3443":{"crate_id":24,"path":["syn","token","LArrow"],"kind":"struct"},"1:9626:58277":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:46241:5353":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"9:234:5737":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:52185:5276":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:22508:61248":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:12408:7148":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:12028:7065":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:13540:7466":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:5228:8517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:3894:5684":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:49605:5450":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"5:4515:5650":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"16:4734:7636":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:3041:6196":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:10962:48859":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:6718:6228":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:10611:48804":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"24:6347:3181":{"crate_id":24,"path":["syn","ty","TypeTraitObject"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"6:6864:8826":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"24:3130:9527":{"crate_id":24,"path":["syn","print","TokensOrDefault"],"kind":"struct"},"2:23994:5344":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:4040:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:11885:5433":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"16:6152:6025":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:9236:3673":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:12182:7093":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:4005:8262":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:15929:2989":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:4359:4947":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:3361:5191":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:11001:48856":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:14:2591":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:6357:6075":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:11822:7033":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:13837:4867":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"5:3839:6613":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:6366:5861":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:49344:5524":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"24:2549:1991":{"crate_id":24,"path":["syn","parse_quote"],"kind":"module"},"6:6239:8813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"21:3089:3345":{"crate_id":21,"path":["proc_macro","SourceFile"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:9745:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:52311:5268":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:5740:4645":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:5973:5036":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:46333:3337":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:45910:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:6807:6086":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:50125:5470":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:47700:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:8359:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:5274:8538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:14157:4758":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:14930:4870":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:45994:2531":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:6488:5092":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:13564:7471":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"24:4223:3409":{"crate_id":24,"path":["syn","token","Virtual"],"kind":"struct"},"24:5429:1825":{"crate_id":24,"path":["syn","attr","NestedMeta","Lit"],"kind":"foreign_type"},"24:5792:3136":{"crate_id":24,"path":["syn","expr","ExprMatch"],"kind":"struct"},"24:2053:3293":{"crate_id":24,"path":["syn","buffer","TokenBuffer"],"kind":"struct"},"24:3791:3395":{"crate_id":24,"path":["syn","token","Loop"],"kind":"struct"},"24:2146:6765":{"crate_id":24,"path":["syn","ext","private","PeekFn"],"kind":"struct"},"24:5257:3452":{"crate_id":24,"path":["syn","token","Star"],"kind":"struct"},"24:3971:206":{"crate_id":24,"path":["syn","token","Return"],"kind":"struct"},"5:3488:4562":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:10558:48801":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"24:6302:3170":{"crate_id":24,"path":["syn","ty","TypeArray"],"kind":"struct"},"1:6868:4703":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:5707:5937":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"9:963:5777":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:7291:57786":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:49804:5116":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:13573:2121":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:1501:4845":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"12:112:63869":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:46693:5085":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"24:940:64122":{"crate_id":24,"path":["syn","generics","LifetimesMut"],"kind":"struct"},"1:7668:4866":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:6126:6068":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:1091:6613":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"21:3009:3339":{"crate_id":21,"path":["proc_macro","ExpandError"],"kind":"struct"},"24:5742:3124":{"crate_id":24,"path":["syn","expr","ExprCast"],"kind":"struct"},"1:3623:6640":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:13819:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:3256:3315":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"12:2331:3271":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"22:24:9254":{"crate_id":22,"path":["proc_macro2","marker","ProcMacroAutoTraits"],"kind":"struct"},"17:9769:63907":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:15911:2974":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:3416:5152":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:23901:5489":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:5753:5943":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:5469:8630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:157:41735":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:5945:8674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"22:0:1604":{"crate_id":22,"path":["proc_macro2"],"kind":"module"},"2:46395:5358":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:50360:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:5346:6024":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:11164:4680":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"1:13501:58271":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:10586:4174":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"24:5824:3143":{"crate_id":24,"path":["syn","expr","ExprStruct"],"kind":"struct"},"16:6032:5961":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:1522:8030":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:14030:4447":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"24:1160:2038":{"crate_id":24,"path":["syn","lifetime","Lifetime"],"kind":"struct"},"2:49211:5423":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:5379:8600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:11226:1813":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:46232:9210":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:49230:5425":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"24:5040:3436":{"crate_id":24,"path":["syn","token","Ne"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:7682:4867":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"24:6054:3162":{"crate_id":24,"path":["syn","lit","LitFloat"],"kind":"struct"},"24:5011:3434":{"crate_id":24,"path":["syn","token","Lt"],"kind":"struct"},"16:7823:6037":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:7980:6642":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"24:5093:3440":{"crate_id":24,"path":["syn","token","Pound"],"kind":"struct"},"5:1457:4853":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:6100:8738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:51038:5281":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"24:3737:3392":{"crate_id":24,"path":["syn","token","Impl"],"kind":"struct"},"1:13948:4868":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:11962:7054":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:5415:4723":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"24:924:64123":{"crate_id":24,"path":["syn","generics","TypeParamsMut"],"kind":"struct"},"5:6257:4568":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:6238:6028":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:3291:3358":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"5:7815:6626":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"24:0:1603":{"crate_id":24,"path":["syn"],"kind":"module"},"20:296:2038":{"crate_id":20,"path":["quote","__private","push_lifetime","Lifetime"],"kind":"struct"},"6:4133:8321":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"24:6350:3182":{"crate_id":24,"path":["syn","ty","TypeTuple"],"kind":"struct"},"5:7633:4569":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:13685:7527":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:6442:4699":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:11283:4964":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"24:6385:2116":{"crate_id":24,"path":["syn","path","GenericArgument"],"kind":"enum"},"17:12699:7195":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:9065:4997":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:23429:18562":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"24:4796:3420":{"crate_id":24,"path":["syn","token","Colon"],"kind":"struct"},"24:5725:3120":{"crate_id":24,"path":["syn","expr","ExprBlock"],"kind":"struct"},"1:13853:58276":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:3345:5185":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:7840:6630":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:5488:5928":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:47994:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:9638:58273":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"1:9732:4957":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"24:4825:3422":{"crate_id":24,"path":["syn","token","Comma"],"kind":"struct"},"1:15127:4782":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"7:38:46567":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:7420:6046":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"16:7146:6089":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:7937:58272":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"6:6200:8798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:2366:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"18:811:6379":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:11918:5434":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:11947:7049":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:50145:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:8913:4246":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:6101:6021":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:11416:5420":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:12486:5557":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:11726:7004":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:8381:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"24:3647:3388":{"crate_id":24,"path":["syn","token","Extern"],"kind":"struct"},"24:153:1802":{"crate_id":24,"path":["syn","token","Token"],"kind":"trait"},"24:4187:3407":{"crate_id":24,"path":["syn","token","Unsized"],"kind":"struct"},"11:46:7872":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"18:829:6381":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:10692:9514":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"5:923:5676":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:14235:4185":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:3997:8260":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:7453:6026":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:2381:3318":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"24:932:64119":{"crate_id":24,"path":["syn","generics","Lifetimes"],"kind":"struct"},"2:22542:61276":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:50133:5469":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:9280:6865":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:12155:7089":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:2889:6211":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"24:5221:3449":{"crate_id":24,"path":["syn","token","ShlEq"],"kind":"struct"},"2:24181:5550":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:6704:8722":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"24:3611:3387":{"crate_id":24,"path":["syn","token","Else"],"kind":"struct"},"24:2550:1991":{"crate_id":24,"path":["syn","parse_quote"],"kind":"macro"},"2:46554:5093":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:53534:9024":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:14869:6669":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:11183:5411":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:51945:5296":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:53442:9020":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:8198:6642":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"21:300:9299":{"crate_id":21,"path":["proc_macro","bridge","fxhash","FxHasher"],"kind":"struct"},"2:24662:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"24:4133:3405":{"crate_id":24,"path":["syn","token","Typeof"],"kind":"struct"},"1:4991:4676":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:46493:6632":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:32459:61603":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"6:6812:8823":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:6518:6079":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:50990:8952":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:12171:4879":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:8902:48589":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:4008:48779":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:24196:5506":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:3990:8256":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:6887:8832":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"24:6331:2185":{"crate_id":24,"path":["syn","ty","TypePath"],"kind":"struct"},"16:3429:5958":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10106:6360":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:10160:6876":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:46001:5054":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:4023:8271":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:1153:13343":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"12:784:4844":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:10424:61967":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:6864:4658":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:1235:5662":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:13574:7474":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:10911:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:1602:8073":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:1700:8146":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:53280:5292":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:2777:5665":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:1011:3236":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:8121:4564":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:7884:6033":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:8294:4186":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:15096:4780":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:10279:6269":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:8929:48590":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:3163:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"15:248:5864":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:10552:4804":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:11260:5413":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"20:44:4661":{"crate_id":20,"path":["quote","ext","private","Sealed"],"kind":"trait"},"5:1653:4843":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:12191:4794":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"22:823:1606":{"crate_id":22,"path":["proc_macro2","imp","TokenStream"],"kind":"enum"},"17:11254:6318":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:12807:5411":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:4157:6355":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:7337:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"24:3521:105":{"crate_id":24,"path":["syn","token","Continue"],"kind":"struct"},"2:22893:4692":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"15:230:5863":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:11767:7014":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:13205:7380":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"24:2449:3242":{"crate_id":24,"path":["syn","punctuated","PrivateIterMut"],"kind":"struct"},"2:49193:5421":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"24:5245:3451":{"crate_id":24,"path":["syn","token","ShrEq"],"kind":"struct"},"6:4494:8444":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:11588:6979":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:1045:4188":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:5505:5929":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:6091:8735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:48753:5151":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:49240:5426":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:2200:6615":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:2253:4491":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:11933:4868":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"24:6319:3173":{"crate_id":24,"path":["syn","ty","TypeImplTrait"],"kind":"struct"},"1:14847:6667":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:5717:5939":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:50113:5465":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:11331:4678":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:48214:3329":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"21:3000:1606":{"crate_id":21,"path":["proc_macro","TokenStream"],"kind":"struct"},"24:5768:3130":{"crate_id":24,"path":["syn","expr","ExprIf"],"kind":"struct"},"6:624:8021":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:5384:5920":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:7620:4863":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:10635:6879":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"24:5751:3126":{"crate_id":24,"path":["syn","expr","ExprContinue"],"kind":"struct"},"16:3145:6206":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:2181:4801":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:52878:5265":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:24832:5492":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:1442:3235":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:3497:2177":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:8493:4907":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:13799:7551":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:6893:8833":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:543:7971":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"24:3881:3398":{"crate_id":24,"path":["syn","token","Mut"],"kind":"struct"},"24:3431:3382":{"crate_id":24,"path":["syn","token","Await"],"kind":"struct"},"16:3714:7619":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:50378:4669":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"24:948:64120":{"crate_id":24,"path":["syn","generics","ConstParams"],"kind":"struct"},"1:15146:4789":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:45973:4672":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"24:5844:3148":{"crate_id":24,"path":["syn","expr","ExprUnary"],"kind":"struct"},"2:6611:61933":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"24:6128:1962":{"crate_id":24,"path":["syn","derive","DataUnion"],"kind":"struct"},"1:15914:2976":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:48762:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:46532:4665":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"24:5421:3107":{"crate_id":24,"path":["syn","attr","MetaNameValue"],"kind":"struct"},"2:51708:5256":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"9:722:5713":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"17:11696:7000":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"24:5777:3132":{"crate_id":24,"path":["syn","expr","ExprLet"],"kind":"struct"},"6:4341:8379":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:3647:4742":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:9332:6277":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:11161:4679":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"5:4215:4564":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:22799:5299":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:10140:6296":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:3408:5164":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:11051:4763":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:7073:6088":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"24:5760:3128":{"crate_id":24,"path":["syn","expr","ExprForLoop"],"kind":"struct"},"23:0:3075":{"crate_id":23,"path":["unicode_ident"],"kind":"module"},"16:7870:6032":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:5314:6864":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:10272:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:10219:3326":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:2733:5914":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:563:7988":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:14160:4754":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"24:5820:3142":{"crate_id":24,"path":["syn","expr","ExprReturn"],"kind":"struct"},"17:13590:7477":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:10284:3330":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:12783:7207":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:5231:7646":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:7856:6102":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:46254:5354":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:6136:6064":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:5927:5950":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"24:2801:6415":{"crate_id":24,"path":["syn","thread","ThreadBound"],"kind":"struct"},"17:9065:48593":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:10517:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:8479:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"24:5303:3455":{"crate_id":24,"path":["syn","token","Tilde"],"kind":"struct"},"5:6475:4564":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:6221:8810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:49709:3337":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:9245:6276":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:12142:7086":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:50137:5463":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"24:5426:1821":{"crate_id":24,"path":["syn","attr","NestedMeta","Meta"],"kind":"foreign_type"},"11:54:5832":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:5428:8620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:5833:5606":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:9237:3672":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"21:1220:1606":{"crate_id":21,"path":["proc_macro","bridge","client","TokenStream"],"kind":"struct"},"2:5082:3308":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:51612:5267":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"24:3845:3396":{"crate_id":24,"path":["syn","token","Mod"],"kind":"struct"},"1:8393:4823":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"6:5459:8628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:0:2952":{"crate_id":16,"path":["gimli"],"kind":"module"},"20:63:3093":{"crate_id":20,"path":["quote","ident_fragment","IdentFragment"],"kind":"trait"},"2:12954:3257":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:10543:6918":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:2991:6205":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:49310:5431":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:14719:4713":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"18:0:2954":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:13924:7584":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"12:812:4845":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"24:5168:3445":{"crate_id":24,"path":["syn","token","RemEq"],"kind":"struct"},"6:88:41669":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"5:5875:6621":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:12287:7106":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:13898:7575":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"22:920:1814":{"crate_id":22,"path":["proc_macro2","TokenTree"],"kind":"enum"},"1:11939:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"24:4663:3259":{"crate_id":24,"path":["syn","token","Add"],"kind":"struct"},"2:46601:9218":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:6688:5618":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:6569:6225":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"3:300:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:3882:3292":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:7571:6022":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:22540:61278":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:2262:5664":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:49700:5456":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:7373:3235":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:10269:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"24:5490:3111":{"crate_id":24,"path":["syn","data","VisPublic"],"kind":"struct"},"17:9961:48603":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:49387:2724":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:13245:41354":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:8644:4988":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:8194:3235":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"22:740:3250":{"crate_id":22,"path":["proc_macro2","fallback","LexError"],"kind":"struct"},"21:1356:1813":{"crate_id":21,"path":["proc_macro","bridge","client","Span"],"kind":"struct"},"1:10591:4183":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:12040:7067":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:10975:48858":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:12664:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"24:5812:3140":{"crate_id":24,"path":["syn","expr","ExprReference"],"kind":"struct"},"6:1622:8087":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:24080:8853":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:4477:7629":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:9600:63893":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:49469:5444":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:9476:6870":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:10571:48802":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"9:686:5710":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:24106:41122":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:48784:9227":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:23041:4661":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:50129:5468":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"12:925:4843":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:56264:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:45843:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"18:660:6391":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:10788:48778":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:5166:3312":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:9759:48599":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:6690:4642":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"2:48200:2231":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:11915:7039":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:2751:4666":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:4506:7630":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:45864:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:1419:3236":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:5255:8536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:7216:6095":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:15003:4794":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"24:5127:3442":{"crate_id":24,"path":["syn","token","RArrow"],"kind":"struct"},"1:8808:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:10218:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:49997:5129":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"24:4958:3430":{"crate_id":24,"path":["syn","token","EqEq"],"kind":"struct"},"2:52102:5291":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:10365:1830":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:8157:3301":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"24:6083:2133":{"crate_id":24,"path":["syn","mac","Macro"],"kind":"struct"},"21:3114:3251":{"crate_id":21,"path":["proc_macro","Delimiter"],"kind":"enum"},"2:8344:5174":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:49377:5439":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:4306:3240":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:49220:5424":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:25202:5360":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"22:959:2143":{"crate_id":22,"path":["proc_macro2","Punct"],"kind":"struct"},"24:5788:3135":{"crate_id":24,"path":["syn","expr","ExprMacro"],"kind":"struct"},"6:4431:8419":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:8137:4186":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"5:4599:6616":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"1:5935:5031":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:5802:4650":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"24:5291:3454":{"crate_id":24,"path":["syn","token","SubEq"],"kind":"struct"},"6:632:8026":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:5975:6066":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:2159:3236":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:10821:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:5269:8537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:3881:8184":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:12756:7203":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:1492:4843":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:4386:7626":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:24458:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"12:1688:5856":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:6644:8822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:5146:3311":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:1441:4851":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:57617:9031":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"17:13296:7399":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:6562:4707":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10988:48857":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:51534:5275":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:4733:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"7:0:1472":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:11572:6974":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:4448:7628":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:1540:8038":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:10814:6351":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:1939:4562":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:12051:7068":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:46624:5080":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"24:3809:2133":{"crate_id":24,"path":["syn","token","Macro"],"kind":"struct"},"17:294:63895":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:8695:4991":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"24:5470:3113":{"crate_id":24,"path":["syn","data","Visibility"],"kind":"enum"},"17:13780:7546":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:23087:4661":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:24798:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"24:4929:3429":{"crate_id":24,"path":["syn","token","DotDotEq"],"kind":"struct"},"24:4709:3414":{"crate_id":24,"path":["syn","token","AndAnd"],"kind":"struct"},"2:46362:5579":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:9034:48592":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:7761:6100":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:6964:3669":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:4127:8319":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:51336:8955":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:6964:4657":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"21:3094:1814":{"crate_id":21,"path":["proc_macro","TokenTree"],"kind":"enum"},"1:2163:3235":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:2907:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:5189:3313":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:45966:5210":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:3317:4464":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:4272:8345":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:47470:1797":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"18:790:6377":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:3278:4040":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:49419:5414":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"9:0:2946":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:10557:5150":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:10926:48880":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:10795:4923":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:14484:9240":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:15245:4687":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:11140:4740":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:46270:5356":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12221:7097":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:15876:9321":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:46563:5074":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:15140:4788":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:7122:3660":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:4032:4671":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:6935:8841":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:8084:4763":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:45754:4445":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:1311:6366":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"24:6307:3171":{"crate_id":24,"path":["syn","ty","TypeBareFn"],"kind":"struct"},"2:47556:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"24:5781:3133":{"crate_id":24,"path":["syn","expr","ExprLit"],"kind":"struct"},"6:5159:8485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"24:6410:2130":{"crate_id":24,"path":["syn","path","Constraint"],"kind":"struct"},"6:4215:8335":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:49781:5113":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:13282:7398":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:15404:5872":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:48792:9228":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:8321:5639":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:53495:9023":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:51660:5252":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"24:3557:115":{"crate_id":24,"path":["syn","token","Default"],"kind":"struct"},"2:24128:41114":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"24:5180:3446":{"crate_id":24,"path":["syn","token","FatArrow"],"kind":"struct"},"1:10675:14301":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:15915:2977":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:50121:5466":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"6:5386:8601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"24:3755:3393":{"crate_id":24,"path":["syn","token","In"],"kind":"struct"},"21:3074:3344":{"crate_id":21,"path":["proc_macro","LineColumn"],"kind":"struct"},"17:11779:7017":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"22:770:1813":{"crate_id":22,"path":["proc_macro2","fallback","Span"],"kind":"struct"},"21:2961:3348":{"crate_id":21,"path":["proc_macro","diagnostic","Diagnostic"],"kind":"struct"},"6:5241:8526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"12:1667:5855":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:6214:8807":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"18:720:6784":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"12:747:3236":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:4013:8265":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"24:6328:3177":{"crate_id":24,"path":["syn","ty","TypeParen"],"kind":"struct"},"6:5528:8642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:2187:4802":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"24:6056:3158":{"crate_id":24,"path":["syn","lit","LitBool"],"kind":"struct"},"2:3365:5193":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:4399:4757":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:2598:9515":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"24:4859:3424":{"crate_id":24,"path":["syn","token","DivEq"],"kind":"struct"},"1:4265:4765":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"1:7654:4865":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:3743:6348":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:6155:8776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:569:7991":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"24:3503:2131":{"crate_id":24,"path":["syn","token","Const"],"kind":"struct"},"2:10280:2231":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:2773:6217":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:10839:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:2492:4446":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:48221:3330":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"13:120:46910":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:11458:6952":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:9358:5112":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:11388:5418":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"18:857:6383":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"18:820:6380":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:14494:4655":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"22:856:1738":{"crate_id":22,"path":["proc_macro2","imp","Group"],"kind":"enum"},"20:191:3699":{"crate_id":20,"path":["quote","__private","HasIterator"],"kind":"struct"},"22:874:2459":{"crate_id":22,"path":["proc_macro2","imp","Literal"],"kind":"enum"},"24:5990:2429":{"crate_id":24,"path":["syn","generics","PredicateType"],"kind":"struct"},"16:3800:7621":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:6949:6236":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:9849:63903":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:7264:6041":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"24:1278:6424":{"crate_id":24,"path":["syn","lit","LitFloatRepr"],"kind":"struct"},"6:5292:8550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:53241:5272":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"18:766:6793":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:3558:2238":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:3503:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"24:6370:185":{"crate_id":24,"path":["syn","path","Path"],"kind":"struct"},"2:38813:4041":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:6068:8728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:4762:7637":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:50293:8950":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"24:6360:3183":{"crate_id":24,"path":["syn","ty","Variadic"],"kind":"struct"},"1:11527:4824":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"24:4259:3411":{"crate_id":24,"path":["syn","token","While"],"kind":"struct"},"1:6866:4702":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"24:2126:6408":{"crate_id":24,"path":["syn","ext","IdentExt"],"kind":"trait"},"12:1100:4851":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:47495:3235":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:12756:5446":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:1563:8048":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:7512:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:8141:61455":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"21:2970:6407":{"crate_id":21,"path":["proc_macro","diagnostic","Children"],"kind":"struct"},"17:10801:48777":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:5960:5952":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:11199:6929":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:13062:7328":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:4614:7632":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"12:1118:4852":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:1505:4846":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:51760:8962":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:1450:4841":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:46316:5577":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:12067:4908":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:13272:7397":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"24:4970:3431":{"crate_id":24,"path":["syn","token","Ge"],"kind":"struct"},"24:1274:6423":{"crate_id":24,"path":["syn","lit","LitIntRepr"],"kind":"struct"},"17:9368:6867":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:13180:7370":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:48078:5523":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:49569:5448":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:9068:4883":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:9264:6864":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"12:0:2949":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:49850:5123":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"24:2385:3238":{"crate_id":24,"path":["syn","punctuated","PrivateIter"],"kind":"struct"},"21:1728:1830":{"crate_id":21,"path":["proc_macro","bridge","symbol","Symbol"],"kind":"struct"},"5:3336:4801":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:13054:7326":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:10938:4889":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:49301:5430":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:6464:6038":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:8289:5638":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:8930:5010":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:51635:5270":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"14:244:9188":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:11714:7001":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:6881:8831":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"24:2144:4661":{"crate_id":24,"path":["syn","ext","private","Sealed"],"kind":"trait"},"1:10863:3292":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:51255:5262":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:510:48587":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"24:5209:3448":{"crate_id":24,"path":["syn","token","Shl"],"kind":"struct"},"24:3701:3390":{"crate_id":24,"path":["syn","token","For"],"kind":"struct"},"1:15916:2978":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"12:892:5834":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"24:2333:3234":{"crate_id":24,"path":["syn","punctuated","IntoPairs"],"kind":"struct"},"21:251:4304":{"crate_id":21,"path":["proc_macro","bridge","closure","Closure"],"kind":"struct"},"12:877:4562":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"14:0:2950":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:1717:8153":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"24:3935:3401":{"crate_id":24,"path":["syn","token","Pub"],"kind":"struct"},"17:13258:7392":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:9528:2724":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"18:644:6390":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:5790:5945":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"22:935:1738":{"crate_id":22,"path":["proc_macro2","Group"],"kind":"struct"},"2:3698:5513":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:8382:5613":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:4365:4949":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:46713:5091":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:1522:4848":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"5:5837:5608":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"24:956:64124":{"crate_id":24,"path":["syn","generics","ConstParamsMut"],"kind":"struct"},"21:2744:1749":{"crate_id":21,"path":["proc_macro","bridge","Ident"],"kind":"struct"},"1:10564:4661":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:8340:5175":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:2401:14296":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:2847:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:7477:6047":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:3318:3259":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:11091:3236":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:23424:5240":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:4083:8299":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"24:6322:3174":{"crate_id":24,"path":["syn","ty","TypeInfer"],"kind":"struct"},"6:6185:8793":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:12100:4910":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:52528:5277":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"24:5747:3125":{"crate_id":24,"path":["syn","expr","ExprClosure"],"kind":"struct"},"6:4347:8382":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:6014:6067":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:49623:5451":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:3486:3317":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:15660:6670":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:1744:8163":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:11952:4870":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"24:4917:3428":{"crate_id":24,"path":["syn","token","Dot3"],"kind":"struct"},"17:11147:9147":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:13446:7437":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:8954:6286":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:1736:8159":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10435:48708":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:32307:61602":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"17:12521:7162":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:5536:5617":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:8437:4562":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:46915:9222":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:10584:6354":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:3268:2381":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"12:949:4848":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:10507:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"14:189:9508":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:11357:4964":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:15925:2985":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:8167:5605":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:11111:4738":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:15913:2975":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:11289:4965":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"12:1762:6611":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"24:5856:3151":{"crate_id":24,"path":["syn","expr","ExprYield"],"kind":"struct"},"16:3522:6795":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:12431:7149":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:22561:61281":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:6391:6076":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12467:7154":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:23830:5487":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:11738:7005":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"24:5940:3152":{"crate_id":24,"path":["syn","generics","BoundLifetimes"],"kind":"struct"},"17:13488:7449":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"24:4169:3406":{"crate_id":24,"path":["syn","token","Unsafe"],"kind":"struct"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:15041:4877":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:6208:6071":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"21:3155:1749":{"crate_id":21,"path":["proc_macro","Ident"],"kind":"struct"},"24:5320:2452":{"crate_id":24,"path":["syn","token","Brace"],"kind":"struct"},"2:46633:5094":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:9896:63899":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:49976:5127":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:2330:5663":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:46523:5089":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:5522:8641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:5456:5924":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:24764:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:51317:5251":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"9:469:9300":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:9770:6659":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"24:3575:3385":{"crate_id":24,"path":["syn","token","Do"],"kind":"struct"},"24:5733:3122":{"crate_id":24,"path":["syn","expr","ExprBreak"],"kind":"struct"},"24:5720:3119":{"crate_id":24,"path":["syn","expr","ExprBinary"],"kind":"struct"},"1:9717:4956":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"17:12343:7118":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:15910:2973":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:15415:5872":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:6942:4704":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"9:692:5712":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"4:0:2944":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:3040:8843":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"24:3247:3235":{"crate_id":24,"path":["syn","error","IntoIter"],"kind":"struct"},"2:13778:61334":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"24:160:4661":{"crate_id":24,"path":["syn","token","private","Sealed"],"kind":"trait"},"17:13598:7478":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:3721:5073":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"22:755:3344":{"crate_id":22,"path":["proc_macro2","fallback","LineColumn"],"kind":"struct"},"12:1159:5842":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:1021:4186":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:22899:4694":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:47658:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:6464:4696":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"18:729:6762":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"24:2740:4661":{"crate_id":24,"path":["syn","sealed","lookahead","Sealed"],"kind":"trait"},"17:13453:7438":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:6999:6087":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:5197:8504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:8254:3272":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"24:4813:3421":{"crate_id":24,"path":["syn","token","Colon2"],"kind":"struct"},"1:1136:4673":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:4449:8430":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10516:6298":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:7260:57786":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"12:2005:3236":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:13091:5118":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"24:4733:3416":{"crate_id":24,"path":["syn","token","At"],"kind":"struct"},"1:11982:4872":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:4183:8332":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:13942:7590":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:3323:3453":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:7342:6058":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:5360:5919":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:32258:4265":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"21:0:1037":{"crate_id":21,"path":["proc_macro"],"kind":"module"},"2:46410:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:161:41736":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:11333:5415":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"24:5772:3131":{"crate_id":24,"path":["syn","expr","ExprIndex"],"kind":"struct"},"1:897:4198":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:15924:2984":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"9:27:5761":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:10278:3322":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:5282:8543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:3084:4661":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:4706:4734":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"18:636:6783":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:4523:8457":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"21:3013:3235":{"crate_id":21,"path":["proc_macro","token_stream","IntoIter"],"kind":"struct"},"21:553:6607":{"crate_id":21,"path":["proc_macro","bridge","scoped_cell","replace","PutBackOnDrop"],"kind":"struct"},"17:11628:6984":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"18:650:6387":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:15380:9103":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:13627:7485":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"24:3342:3456":{"crate_id":24,"path":["syn","token","Underscore"],"kind":"struct"},"17:13163:7368":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:4377:8398":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:51431:5283":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:5167:8487":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:1694:5659":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:6028:8725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"24:6098:1607":{"crate_id":24,"path":["syn","derive","DeriveInput"],"kind":"struct"},"24:3206:127":{"crate_id":24,"path":["syn","error","Error"],"kind":"struct"},"24:4151:1786":{"crate_id":24,"path":["syn","token","Union"],"kind":"struct"},"1:11101:4665":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:11328:7204":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"12:1235:5845":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:3357:5189":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:12010:7064":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"24:3395:3380":{"crate_id":24,"path":["syn","token","Async"],"kind":"struct"},"1:4045:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"24:3359:3378":{"crate_id":24,"path":["syn","token","Abstract"],"kind":"struct"},"21:3139:1812":{"crate_id":21,"path":["proc_macro","Spacing"],"kind":"enum"},"2:7733:5098":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:4387:8401":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:10095:6359":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:50109:5462":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:2178:4264":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:3382:3971":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"24:2360:3235":{"crate_id":24,"path":["syn","punctuated","IntoIter"],"kind":"struct"},"24:3629:1762":{"crate_id":24,"path":["syn","token","Enum"],"kind":"struct"},"18:774:6783":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"24:5464:1766":{"crate_id":24,"path":["syn","data","Field"],"kind":"struct"},"5:69:4453":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:13045:5115":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:8486:4906":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:11614:4829":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:47479:3236":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:52342:5271":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"24:5233:3450":{"crate_id":24,"path":["syn","token","Shr"],"kind":"struct"},"16:3604:6799":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"24:5972:1884":{"crate_id":24,"path":["syn","generics","WherePredicate"],"kind":"enum"},"6:4371:8395":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:3972:8244":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:10623:48805":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:13154:7364":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:1195:63776":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:12095:7078":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:46428:5519":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:5020:3303":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:5863:5028":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:10790:4717":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:4033:8274":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:12462:5596":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"24:2063:3292":{"crate_id":24,"path":["syn","buffer","Cursor"],"kind":"struct"},"24:5828:3144":{"crate_id":24,"path":["syn","expr","ExprTry"],"kind":"struct"},"17:12208:7096":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:3218:6199":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"22:542:3250":{"crate_id":22,"path":["proc_macro2","LexError"],"kind":"struct"},"24:5274:3453":{"crate_id":24,"path":["syn","token","Sub"],"kind":"struct"},"1:8385:4186":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"2:3339:3444":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:6768:6232":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:10149:48601":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:10468:6293":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:12671:4923":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"24:6050:3161":{"crate_id":24,"path":["syn","lit","LitChar"],"kind":"struct"},"5:1674:4845":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:3262:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:4419:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:12673:6665":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:6795:4699":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:8454:4563":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:13034:5110":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:14154:4756":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:11970:7056":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:49451:5443":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:3421:5170":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:14956:58340":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"21:2236:4598":{"crate_id":21,"path":["proc_macro","bridge","Marked"],"kind":"struct"},"17:9005:48591":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:7467:6027":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:10864:6914":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:14732:4872":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:32293:4266":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:4362:4948":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:9765:6658":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"5:3044:3398":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"9:1075:5780":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:2902:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:9839:6296":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:3524:4746":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:53358:9014":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:12018:6638":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:23048:18543":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:4459:8431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:9574:6287":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:4047:4670":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"20:0:1066":{"crate_id":20,"path":["quote"],"kind":"module"},"21:3060:1813":{"crate_id":21,"path":["proc_macro","Span"],"kind":"struct"},"6:5371:8599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"21:3109:1738":{"crate_id":21,"path":["proc_macro","Group"],"kind":"struct"},"17:10502:9145":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"9:1056:5772":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:3951:4562":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:10229:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:11555:6972":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"24:2189:1743":{"crate_id":24,"path":["syn","punctuated","Punctuated"],"kind":"struct"},"12:1180:5843":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:51581:5263":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:4511:8452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:5389:5574":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:4325:8371":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:13819:7554":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:2399:14295":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:12132:4912":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:4604:4723":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:3970:6613":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:1528:4849":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:10052:48654":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:6672:5617":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:11597:3236":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:12946:7236":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:52264:5264":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"20:305:2038":{"crate_id":20,"path":["quote","__private","push_lifetime_spanned","Lifetime"],"kind":"struct"},"16:5855:5947":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"24:5406:1823":{"crate_id":24,"path":["syn","attr","Meta","NameValue"],"kind":"foreign_type"},"2:53347:9013":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"24:6052:3163":{"crate_id":24,"path":["syn","lit","LitInt"],"kind":"struct"},"1:10658:4808":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:9162:6319":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:51173:5286":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:3500:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:11277:6930":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:6087:4972":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:3862:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:15933:2993":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"6:6106:8739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"24:6376:2113":{"crate_id":24,"path":["syn","path","PathArguments"],"kind":"enum"},"2:45726:5071":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:22836:5301":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:28013:5244":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"24:3413:3381":{"crate_id":24,"path":["syn","token","Auto"],"kind":"struct"},"6:4364:8393":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:4193:8333":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:11519:6967":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:8137:62531":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:4095:8305":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:13609:7482":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:24209:5505":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:1676:8129":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:976:4850":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"24:5804:2013":{"crate_id":24,"path":["syn","expr","ExprPath"],"kind":"struct"},"22:780:1738":{"crate_id":22,"path":["proc_macro2","fallback","Group"],"kind":"struct"},"2:3255:3357":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:10211:48665":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:1760:8168":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:7611:4568":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:48774:4823":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:14537:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:4852:7640":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:5420:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:12156:4996":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1723:8156":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:8450:3359":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:24027:8849":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"21:2947:3349":{"crate_id":21,"path":["proc_macro","diagnostic","Level"],"kind":"enum"},"17:11616:6983":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"24:5334:3578":{"crate_id":24,"path":["syn","token","Bracket"],"kind":"struct"},"5:432:1796":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:15267:4962":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:8864:5245":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:6087:6023":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:3172:6197":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:3613:4747":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"24:6356:3169":{"crate_id":24,"path":["syn","ty","BareFnArg"],"kind":"struct"},"2:48984:5587":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"24:3377:3379":{"crate_id":24,"path":["syn","token","As"],"kind":"struct"},"2:46940:4307":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:2166:4564":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:7111:6626":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"17:11186:9148":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:15881:13348":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:7158:6090":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:3200:4731":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"18:694:6393":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:7771:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:51278:5266":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:1215:5661":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:10426:6661":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:5580:5933":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"18:866:6384":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:8844:57790":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:525:7963":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:51224:5274":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:12073:7077":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:24088:8854":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:4417:7627":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:1194:13347":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:6110:6063":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:14469:4716":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:4331:8373":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:51150:5282":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:1533:8035":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:2218:5636":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:22812:4661":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"12:2018:4562":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:12118:7084":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:13119:7363":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13986:7597":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"0:1257:1616":{"crate_id":0,"path":["serde_derive","Serialize"],"kind":"proc_derive"},"2:3398:3450":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:24174:9204":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:14507:9248":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:2267:5200":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:48440:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:11678:6991":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"24:5151:3444":{"crate_id":24,"path":["syn","token","Rem"],"kind":"struct"},"16:6577:6081":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:7894:6061":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:12480:7156":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:537:7968":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:13497:7452":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"24:6344:3180":{"crate_id":24,"path":["syn","ty","TypeSlice"],"kind":"struct"},"6:5191:8503":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"12:2013:4564":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:13482:14306":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:46744:5088":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"12:968:4849":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:24492:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"5:1644:4842":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:52071:5288":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:7279:6241":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:47437:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:49266:5427":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:4439:8424":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:12181:4895":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"24:5870:61":{"crate_id":24,"path":["syn","expr","parsing","raw"],"kind":"struct"},"17:10403:6295":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:49142:5416":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:57638:9032":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:22889:4661":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:6852:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"24:3917:3400":{"crate_id":24,"path":["syn","token","Priv"],"kind":"struct"},"16:3488:6204":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"12:2032:4801":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:11338:5032":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:5330:6865":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:13912:7582":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"21:1313:3348":{"crate_id":21,"path":["proc_macro","bridge","client","Diagnostic"],"kind":"struct"},"24:4115:1735":{"crate_id":24,"path":["syn","token","Type"],"kind":"struct"},"1:11435:3661":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:11082:6285":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:1729:4976":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:12186:4896":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:13041:7319":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"24:968:2808":{"crate_id":24,"path":["syn","generics","TypeGenerics"],"kind":"struct"},"16:3392:6208":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:13386:7422":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:7212:4564":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:7333:6044":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:584:8000":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:9860:6660":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:49718:5457":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:12771:7204":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:2794:5957":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"9:1020:5779":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:6614:8819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:48458:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"17:11118:48606":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:5724:4643":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"24:4721:3415":{"crate_id":24,"path":["syn","token","AndEq"],"kind":"struct"},"6:4401:8406":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"24:916:64121":{"crate_id":24,"path":["syn","generics","TypeParams"],"kind":"struct"},"6:4470:8437":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:14489:9242":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:2850:3261":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5998:8703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"24:2274:3232":{"crate_id":24,"path":["syn","punctuated","Pairs"],"kind":"struct"},"16:7042:6240":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"24:2969:1819":{"crate_id":24,"path":["syn","parse","Parse"],"kind":"trait"},"2:46008:3309":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:12087:4909":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"24:66:1985":{"crate_id":24,"path":["syn","token"],"kind":"module"},"17:13318:7403":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:10448:6294":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:4890:7641":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:4995:7644":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:11587:4826":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:1690:8140":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"12:774:3235":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:11544:4825":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:7236:6097":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"24:3204:205":{"crate_id":24,"path":["syn","error","Result"],"kind":"typedef"},"2:49505:5417":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:10855:4748":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:13788:7547":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11604:6980":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"21:3005:3250":{"crate_id":21,"path":["proc_macro","LexError"],"kind":"struct"},"6:5953:8679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:3506:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:45933:3265":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"12:354:9190":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:13025:5112":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:11402:5419":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:12632:7188":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:14201:4451":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:3978:8247":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:7800:4874":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:24628:4191":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"24:6414:3184":{"crate_id":24,"path":["syn","path","ParenthesizedGenericArguments"],"kind":"struct"},"16:3320:6255":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"21:1189:4626":{"crate_id":21,"path":["proc_macro","bridge","client","FreeFunctions"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"2:13743:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:4350:7625":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"24:5393:3104":{"crate_id":24,"path":["syn","attr","AttrStyle"],"kind":"enum"},"17:10458:6777":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"21:3134:2143":{"crate_id":21,"path":["proc_macro","Punct"],"kind":"struct"},"1:1476:4564":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"24:2628:2461":{"crate_id":24,"path":["syn","spanned","Spanned"],"kind":"trait"},"5:8370:5612":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:9179:57790":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:10224:48669":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"24:4079:2225":{"crate_id":24,"path":["syn","token","Trait"],"kind":"struct"},"16:6021:6190":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:8129:5679":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:11067:4733":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"14:56:1749":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:6176:6070":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:2437:14306":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"24:3989:3402":{"crate_id":24,"path":["syn","token","SelfType"],"kind":"struct"},"16:5522:5930":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:49359:5303":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"5:4242:6613":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:2843:6191":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"24:5923:3153":{"crate_id":24,"path":["syn","generics","ConstParam"],"kind":"struct"},"17:10317:6275":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"24:5816:3141":{"crate_id":24,"path":["syn","expr","ExprRepeat"],"kind":"struct"},"1:11167:4684":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"6:4410:8409":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12659:7190":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"24:4871:3425":{"crate_id":24,"path":["syn","token","Dollar"],"kind":"struct"},"24:6326:3176":{"crate_id":24,"path":["syn","ty","TypeNever"],"kind":"struct"},"1:6700:8718":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:13978:7594":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:3945:8235":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:8353:8844":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"17:9133:48595":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:4478:8439":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:2793:4667":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:15930:2990":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:3338:5954":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:13040:5114":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:5608:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:4043:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"20:193:3698":{"crate_id":20,"path":["quote","__private","ThereIsNoIteratorInRepetition"],"kind":"struct"},"5:1635:4841":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"24:5867:2238":{"crate_id":24,"path":["syn","expr","Index"],"kind":"struct"},"9:900:7923":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"24:5852:3150":{"crate_id":24,"path":["syn","expr","ExprWhile"],"kind":"struct"},"5:6764:4723":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:4304:7624":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:48503:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:4281:8350":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:56290:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:6636:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:4438:4759":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:46545:5090":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"21:1507:191":{"crate_id":21,"path":["proc_macro","bridge","client","ProcMacro"],"kind":"enum"},"24:5969:2098":{"crate_id":24,"path":["syn","generics","WhereClause"],"kind":"struct"},"24:6406:2128":{"crate_id":24,"path":["syn","path","Binding"],"kind":"struct"},"2:53068:5269":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:4112:8313":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"24:5348:2132":{"crate_id":24,"path":["syn","token","Paren"],"kind":"struct"},"17:11159:6928":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"24:3899:3399":{"crate_id":24,"path":["syn","token","Override"],"kind":"struct"},"24:6401:2440":{"crate_id":24,"path":["syn","path","AngleBracketedGenericArguments"],"kind":"struct"},"22:832:9139":{"crate_id":22,"path":["proc_macro2","imp","DeferredTokenStream"],"kind":"struct"},"1:10847:4943":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"21:165:4628":{"crate_id":21,"path":["proc_macro","bridge","client","Bridge"],"kind":"struct"},"16:7119:5962":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:6005:8707":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:2192:1786":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:2062:4723":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:519:7960":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"24:4043:1764":{"crate_id":24,"path":["syn","token","Struct"],"kind":"struct"},"2:47564:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:3039:63833":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:2462:14312":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:12307:7112":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"14:194:46938":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:12373:7137":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"24:3539:3384":{"crate_id":24,"path":["syn","token","Crate"],"kind":"struct"},"22:846:1813":{"crate_id":22,"path":["proc_macro2","imp","Span"],"kind":"enum"},"1:7634:4864":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:13933:7588":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:13348:7414":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:13015:5111":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:2945:6216":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:12211:4795":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:6204:4980":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"24:4750:3417":{"crate_id":24,"path":["syn","token","Bang"],"kind":"struct"},"9:996:5778":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:8978:4893":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:10331:6296":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:7406:6029":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"9:749:5714":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:11246:57791":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:10844:6296":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:48577:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:3981:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"5:8159:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:7514:6045":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:46339:5578":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:3258:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:51840:8964":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:51864:8965":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:10489:6297":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"24:5860:1772":{"crate_id":24,"path":["syn","expr","Member"],"kind":"enum"},"1:7797:4873":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:11363:4983":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"19:117:6779":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"5:1607:3240":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"24:5192:3447":{"crate_id":24,"path":["syn","token","Semi"],"kind":"struct"},"17:12327:7113":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:1486:4854":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:11809:7029":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"9:41:5762":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"5:1618:3235":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:4501:8447":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"24:2988:3280":{"crate_id":24,"path":["syn","parse","StepCursor"],"kind":"struct"},"17:12725:7197":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:5889:6624":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:9951:5397":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:49551:5447":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:6910:8838":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11750:7006":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:53194:5254":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"18:610:6388":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:4699:6618":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:14863:6668":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:22952:5239":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:4643:6618":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"24:6048:3159":{"crate_id":24,"path":["syn","lit","LitByte"],"kind":"struct"},"2:49962:5126":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:4764:4441":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"22:965:1812":{"crate_id":22,"path":["proc_macro2","Spacing"],"kind":"enum"},"6:4145:8330":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:11640:6987":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:49279:5428":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:5092:3309":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:616:8016":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:4397:4756":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"24:2864:6409":{"crate_id":24,"path":["syn","lookahead","TokenMarker"],"kind":"enum"},"2:4866:3319":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:47868:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:5996:1779":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:5407:8614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:4066:8289":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:10477:6292":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:1658:8117":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:6870:8827":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"12:937:4847":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:53131:5289":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:1944:2179":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:15112:4781":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:11382:4715":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"24:3683:130":{"crate_id":24,"path":["syn","token","Fn"],"kind":"struct"},"17:10304:6272":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:49819:5119":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:4230:7623":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:9466:9517":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:11981:7059":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"13:232:7867":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:23635:61252":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:9144:3665":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:46592:5077":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:11118:2724":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:12231:4796":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"18:169:54919":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:12507:7159":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"21:2921:4604":{"crate_id":21,"path":["proc_macro","bridge","ExpnGlobals"],"kind":"struct"},"2:10902:4661":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:5347:8587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:24560:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"18:739:63915":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"14:216:46944":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:49401:4740":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:7932:4184":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"17:11653:6989":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:6605:6040":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"24:5999:3154":{"crate_id":24,"path":["syn","generics","PredicateEq"],"kind":"struct"},"2:3260:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:6269:6074":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:10938:48881":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:24144:41123":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:7295:6043":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:10117:6361":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:4649:4732":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:15389:58714":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:13098:7358":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:13429:7430":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:2866:6192":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:4241:8337":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:8651:4990":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:4359:3235":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:10912:48871":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:14520:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:4052:8282":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:5736:5940":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"24:4241:3410":{"crate_id":24,"path":["syn","token","Where"],"kind":"struct"},"16:6424:6077":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:5780:4646":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:6176:8790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:8304:5519":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13772:7543":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:2912:6193":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:24730:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"21:200:4634":{"crate_id":21,"path":["proc_macro","bridge","client","Client"],"kind":"struct"},"1:12053:4905":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"24:6334:3178":{"crate_id":24,"path":["syn","ty","TypePtr"],"kind":"struct"},"2:8377:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"24:6044:1953":{"crate_id":24,"path":["syn","lit","LitStr"],"kind":"struct"},"17:10887:6915":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:5436:8622":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"24:6226:1735":{"crate_id":24,"path":["syn","ty","Type"],"kind":"enum"},"17:11358:6279":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:7738:2084":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:9799:48600":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:15909:2972":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:51063:5273":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:374:4455":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:24052:5339":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10950:48882":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:14000:7600":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"24:3773:3394":{"crate_id":24,"path":["syn","token","Let"],"kind":"struct"},"2:3353:4798":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:1665:8121":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:7024:6239":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:8106:3235":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"20:47:2809":{"crate_id":20,"path":["quote","format_ident"],"kind":"macro"},"2:6870:5095":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:49292:5429":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:5788:6613":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"21:2795:2459":{"crate_id":21,"path":["proc_macro","bridge","Literal"],"kind":"struct"},"18:896:6386":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46295:5583":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"24:5387:2084":{"crate_id":24,"path":["syn","attr","Attribute"],"kind":"struct"},"17:13963:7593":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:15926:2986":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:4955:7643":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:1497:4844":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:3038:1990":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"12:2323:7870":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12610:7177":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:8425:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:15935:2995":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"24:6216:3167":{"crate_id":24,"path":["syn","op","UnOp"],"kind":"enum"},"16:3506:6203":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:542:5963":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"12:2303:1738":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:50969:8951":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:49675:5453":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:12195:7094":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:6415:5078":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:49371:5438":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:50390:4450":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"21:2844:1814":{"crate_id":21,"path":["proc_macro","bridge","TokenTree"],"kind":"enum"},"2:49833:5122":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"24:4905:3427":{"crate_id":24,"path":["syn","token","Dot2"],"kind":"struct"},"5:1472:4852":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"24:5494:3112":{"crate_id":24,"path":["syn","data","VisRestricted"],"kind":"struct"},"1:15033:9249":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:605:8011":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:5312:8566":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:10286:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:5732:4644":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:11222:5412":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"18:744:63913":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:10529:9146":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:14943:4871":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:3362:4802":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:7843:6101":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:13506:7453":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13240:7384":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:1637:4852":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"8:0:2945":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:11100:6322":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:4101:8308":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"24:3103:3291":{"crate_id":24,"path":["syn","parse","Nothing"],"kind":"struct"},"17:1236:48667":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:11197:4811":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"5:2310:5691":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:50167:4799":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"24:5716:3118":{"crate_id":24,"path":["syn","expr","ExprAwait"],"kind":"struct"},"1:13700:4876":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"21:523:63962":{"crate_id":21,"path":["proc_macro","bridge","scoped_cell","RefMutL"],"kind":"struct"},"16:5295:47015":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:6491:6078":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:7205:6094":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:23098:5239":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:9971:63894":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:1572:8054":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:46445:5520":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"15:269:5868":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"18:136:54917":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"24:5400:185":{"crate_id":24,"path":["syn","attr","Meta","Path"],"kind":"foreign_type"},"5:1843:6613":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:4164:8331":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"24:4025:2502":{"crate_id":24,"path":["syn","token","Static"],"kind":"struct"},"1:5379:4963":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"24:5081:3439":{"crate_id":24,"path":["syn","token","OrOr"],"kind":"struct"},"2:51192:8953":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:1463:4842":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:13402:7426":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:49320:5432":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:2512:6326":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:10041:48653":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:47608:3236":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:47784:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12385:7139":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:15923:2983":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"12:866:4564":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:1547:8040":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"24:5840:3147":{"crate_id":24,"path":["syn","expr","ExprType"],"kind":"struct"},"1:11269:9238":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:46583:5076":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:2460:6435":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:49898:5124":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"10:0:2947":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:5472:5927":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"24:2306:3233":{"crate_id":24,"path":["syn","punctuated","PairsMut"],"kind":"struct"},"1:11079:4735":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:50010:9354":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"2:3710:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:10576:58713":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:46672:5083":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:11294:4966":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:11026:48604":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"5:7257:6613":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:511:1739":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"24:2973:3279":{"crate_id":24,"path":["syn","parse","ParseBuffer"],"kind":"struct"},"1:8032:4186":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:13728:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:3377:4805":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:48745:9226":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:6858:8825":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"24:3863:3397":{"crate_id":24,"path":["syn","token","Move"],"kind":"struct"},"1:5794:4648":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:7647:2576":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"12:2025:4800":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"24:6104:1754":{"crate_id":24,"path":["syn","derive","Data"],"kind":"enum"},"2:49693:5455":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:9186:6284":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:48737:4858":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:32299:4267":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"6:4306:8361":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:3387:4806":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:56316:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9886:48601":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"24:5893:2181":{"crate_id":24,"path":["syn","generics","GenericParam"],"kind":"enum"},"1:2175:4800":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:11932:7045":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1079:2244":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"12:761:3240":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:4475:4754":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:6899:8834":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:7786:6036":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:4317:8367":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:53338:9012":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:51485:5290":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"24:5704:3115":{"crate_id":24,"path":["syn","expr","ExprAssign"],"kind":"struct"},"2:56329:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"24:5438:1763":{"crate_id":24,"path":["syn","data","Variant"],"kind":"struct"},"1:4697:58829":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"12:1144:4853":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:1646:4853":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"12:2045:1786":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:11434:6938":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:10071:6365":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"24:5362:1738":{"crate_id":24,"path":["syn","token","Group"],"kind":"struct"},"24:4097:224":{"crate_id":24,"path":["syn","token","Try"],"kind":"struct"},"17:13554:7468":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:51808:8963":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:10353:6331":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"24:3257:3236":{"crate_id":24,"path":["syn","error","Iter"],"kind":"struct"},"2:10276:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"21:808:3350":{"crate_id":21,"path":["proc_macro","diagnostic","MultiSpan"],"kind":"trait"},"16:7378:6030":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:51119:5294":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"12:463:63870":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:13582:7475":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:10420:6324":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"18:704:6783":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:48473:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:10179:6878":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:4203:8334":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:10377:6329":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"24:6353:3168":{"crate_id":24,"path":["syn","ty","Abi"],"kind":"struct"},"2:8390:3360":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:14554:58336":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"22:717:3292":{"crate_id":22,"path":["proc_macro2","parse","Cursor"],"kind":"struct"},"1:15931:2991":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"24:4277:237":{"crate_id":24,"path":["syn","token","Yield"],"kind":"struct"},"24:4007:3403":{"crate_id":24,"path":["syn","token","SelfValue"],"kind":"struct"},"24:161:4114":{"crate_id":24,"path":["syn","token","private","WithSpan"],"kind":"struct"},"2:46355:5456":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:47633:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"24:5800:3138":{"crate_id":24,"path":["syn","expr","ExprParen"],"kind":"struct"},"1:15927:2987":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:0:2953":{"crate_id":17,"path":["object"],"kind":"module"},"17:11304:48607":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"24:454:64022":{"crate_id":24,"path":["syn","bigint","BigInt"],"kind":"struct"},"16:5632:5935":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:10656:6881":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:12568:7169":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:13810:7552":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:11349:4975":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:49202:5422":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:13172:7369":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12795:7214":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"7:85:46574":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"12:469:63866":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:3918:8212":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:13865:7568":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:3939:7622":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"9:603:9310":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:10451:6663":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:46681:5084":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:7226:6096":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:5561:13349":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:7303:6099":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:5400:8612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:12275:7105":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:10827:6352":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:4790:7638":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"21:107:4605":{"crate_id":21,"path":["proc_macro","bridge","buffer","Buffer"],"kind":"struct"},"2:23733:5062":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"24:5808:3139":{"crate_id":24,"path":["syn","expr","ExprRange"],"kind":"struct"},"1:10376:9518":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"24:5069:3438":{"crate_id":24,"path":["syn","token","OrEq"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:12168:6886":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:578:7997":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:12772:5449":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"24:2858:3296":{"crate_id":24,"path":["syn","lookahead","Peek"],"kind":"trait"},"24:5110:3441":{"crate_id":24,"path":["syn","token","Question"],"kind":"struct"},"2:4709:5195":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:5969:8691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:5210:8505":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:12262:7104":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"24:658:6760":{"crate_id":24,"path":["syn","expr","parsing","AllowStruct"],"kind":"struct"},"16:5029:7645":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:15920:2980":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:699:4201":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"24:4680:3412":{"crate_id":24,"path":["syn","token","AddEq"],"kind":"struct"},"1:4713:4737":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"22:837:55147":{"crate_id":22,"path":["proc_macro2","imp","TokenTreeIter"],"kind":"enum"},"17:9943:63905":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:48464:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:11137:4678":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"0:1258:1624":{"crate_id":0,"path":["serde_derive","Deserialize"],"kind":"proc_derive"},"1:15305:4963":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:299:63900":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:5986:5037":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:50283:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:4443:3236":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:8743:5000":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"5:8271:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"24:3953:3309":{"crate_id":24,"path":["syn","token","Ref"],"kind":"struct"},"16:7174:6091":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:5407:5921":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13465:7444":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"24:5461:3109":{"crate_id":24,"path":["syn","data","FieldsUnnamed"],"kind":"struct"},"24:1271:6422":{"crate_id":24,"path":["syn","lit","LitRepr"],"kind":"struct"},"2:46724:4738":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:2754:5956":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:8241:3271":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:1554:8043":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"24:2872:1818":{"crate_id":24,"path":["syn","parse"],"kind":"module"},"2:46503:14921":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:3153:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:1708:8147":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:12116:4911":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:4300:8358":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:46308:5457":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:4704:7635":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:3997:4891":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:15921:2981":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:12645:7189":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:9593:6656":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:610:8013":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:47624:3235":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:4946:3294":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10128:6362":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:53367:9015":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"22:736:1606":{"crate_id":22,"path":["proc_macro2","fallback","TokenStream"],"kind":"struct"},"2:48561:4130":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:12012:9098":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"21:2446:4600":{"crate_id":21,"path":["proc_macro","bridge","LitKind"],"kind":"enum"},"2:2171:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:46644:5081":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"21:2657:4603":{"crate_id":21,"path":["proc_macro","bridge","DelimSpan"],"kind":"struct"},"17:13884:7573":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:12685:7192":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:51297:8954":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:6923:8839":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:7835:5067":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"24:3485:98":{"crate_id":24,"path":["syn","token","Break"],"kind":"struct"},"17:11378:6278":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:11337:6280":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:4227:8336":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"21:1282:3350":{"crate_id":21,"path":["proc_macro","bridge","client","MultiSpan"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:4922:7642":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:610:1384":{"crate_id":1,"path":["std","thread"],"kind":"module"},"5:2553:5666":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:7250:6098":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:22763:5235":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"24:6131:3166":{"crate_id":24,"path":["syn","op","BinOp"],"kind":"enum"},"24:5399:1821":{"crate_id":24,"path":["syn","attr","Meta"],"kind":"enum"},"13:0:2943":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:3473:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:46615:5079":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:3629:3256":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:11504:4823":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"24:6324:3175":{"crate_id":24,"path":["syn","ty","TypeMacro"],"kind":"struct"},"6:4255:4982":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:23972:8847":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:14983:9102":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"24:4941:124":{"crate_id":24,"path":["syn","token","Eq"],"kind":"struct"},"1:3194:4924":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:5957:5033":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"21:2718:2143":{"crate_id":21,"path":["proc_macro","bridge","Punct"],"kind":"struct"},"24:3719:3391":{"crate_id":24,"path":["syn","token","If"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:3905:8202":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"24:4692:3413":{"crate_id":24,"path":["syn","token","And"],"kind":"struct"},"22:744:3345":{"crate_id":22,"path":["proc_macro2","fallback","SourceFile"],"kind":"struct"},"24:5708:3116":{"crate_id":24,"path":["syn","expr","ExprAssignOp"],"kind":"struct"},"22:909:1606":{"crate_id":22,"path":["proc_macro2","TokenStream"],"kind":"struct"},"2:49655:4741":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"9:927:46671":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:14127:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"21:2685:1738":{"crate_id":21,"path":["proc_macro","bridge","Group"],"kind":"struct"},"17:13477:7445":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"24:6339:3179":{"crate_id":24,"path":["syn","ty","TypeReference"],"kind":"struct"},"2:23623:4693":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:9719:48598":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:15932:2992":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:3118:6207":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:6252:6073":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:48491:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"18:885:6385":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:4572:4307":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:53319:5257":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:6554:6080":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:12982:7267":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:13746:7534":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:1156:13345":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46369:5580":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"24:5028:3435":{"crate_id":24,"path":["syn","token","MulEq"],"kind":"struct"},"2:49925:5125":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:7195:6093":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"9:809:4823":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:24696:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"11:0:2948":{"crate_id":11,"path":["adler"],"kind":"module"},"24:3593:3386":{"crate_id":24,"path":["syn","token","Dyn"],"kind":"struct"},"17:11406:6934":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:52989:5285":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:4073:8292":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:0:1324":{"crate_id":1,"path":["std"],"kind":"module"},"5:6954:5600":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"24:5963:2434":{"crate_id":24,"path":["syn","generics","TraitBoundModifier"],"kind":"enum"},"12:840:4841":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:3319:4927":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:5137:3310":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:11124:4740":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:37593:4046":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"22:939:3251":{"crate_id":22,"path":["proc_macro2","Delimiter"],"kind":"enum"},"2:23096:5250":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"21:344:63964":{"crate_id":21,"path":["proc_macro","bridge","handle","OwnedStore"],"kind":"struct"},"12:181:5850":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:10061:48668":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"18:712:4046":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:48036:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"22:981:1749":{"crate_id":22,"path":["proc_macro2","Ident"],"kind":"struct"},"16:5672:5936":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:46734:5087":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:15908:2971":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:11847:7037":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:9238:3671":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:8188:3235":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:47547:4459":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:1655:4854":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"24:4061:3404":{"crate_id":24,"path":["syn","token","Super"],"kind":"struct"},"16:3264:6201":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:3772:3240":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:50346:5476":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:53404:9018":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13842:7567":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:12696:5442":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"14:250:7822":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:8579:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:47616:3240":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:53393:9017":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"24:2377:3236":{"crate_id":24,"path":["syn","punctuated","Iter"],"kind":"struct"},"17:13637:7490":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:3147:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"12:377:5849":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"24:3827:2458":{"crate_id":24,"path":["syn","token","Match"],"kind":"struct"},"17:9729:63891":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:12442:7151":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:1534:4850":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:47504:3669":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:6744:6230":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6620:6223":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:1511:4847":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:3951:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"24:5403:1822":{"crate_id":24,"path":["syn","attr","Meta","List"],"kind":"foreign_type"},"5:8151:3235":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:11408:4701":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:15928:2988":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"18:849:6382":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"24:2442:3240":{"crate_id":24,"path":["syn","punctuated","IterMut"],"kind":"struct"},"2:46285:5582":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:46415:5518":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"24:5425:1824":{"crate_id":24,"path":["syn","attr","NestedMeta"],"kind":"enum"},"2:3404:5162":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:46653:5096":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"14:11:9508":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:3159:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:3085:5199":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:46226:3337":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:46922:4246":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:3966:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:47538:3670":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:47487:3240":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:12712:7196":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:52377:5253":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:2170:4562":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:3328:5179":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:9933:48602":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:3241:6200":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:11499:6957":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:8849:6316":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:12741:7199":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:2872:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:15922:2982":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:3333:4930":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:5421:5922":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"24:5443:1805":{"crate_id":24,"path":["syn","data","Fields"],"kind":"enum"},"1:11994:58338":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:9659:63902":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:47952:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:11603:4828":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:51683:5255":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:1617:8085":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:3759:3236":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:3195:6198":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:11374:5417":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:47826:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:10696:1905":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:38750:4668":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:4688:3326":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:3701:4749":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"24:5918:2439":{"crate_id":24,"path":["syn","generics","LifetimeDef"],"kind":"struct"},"2:13854:35471":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"24:5755:3127":{"crate_id":24,"path":["syn","expr","ExprField"],"kind":"struct"},"2:24065:5340":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"22:914:1813":{"crate_id":22,"path":["proc_macro2","Span"],"kind":"struct"},"17:11045:48605":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:11343:5035":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:46573:5075":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:11453:4813":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"24:5958:2431":{"crate_id":24,"path":["syn","generics","TraitBound"],"kind":"struct"},"6:3868:8175":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:7549:6034":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"24:5832:3145":{"crate_id":24,"path":["syn","expr","ExprTryBlock"],"kind":"struct"},"18:152:54918":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"24:6120:1958":{"crate_id":24,"path":["syn","derive","DataStruct"],"kind":"struct"},"6:6051:8726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"5:7444:6613":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:46662:5082":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:5414:8615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:46949:8938":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:4477:4755":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:3365:5955":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:52024:5284":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:5376:4962":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:599:8008":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:11295:5414":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:5221:8513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"9:776:5759":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:2276:4490":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:46053:5323":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:13370:7419":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:9551:6317":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"20:18:3092":{"crate_id":20,"path":["quote","ext","TokenStreamExt"],"kind":"trait"},"2:51462:5287":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:12334:6435":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:24594:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:6682:6039":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"12:1200:5844":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:49987:5128":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:786:6660":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:3727:5072":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:4631:4662":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"12:2315:63871":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:5987:8698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:49684:5454":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:3197:4479":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:10933:4888":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"12:853:4842":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"6:5563:8667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11794:7023":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"24:3208:6412":{"crate_id":24,"path":["syn","error","ErrorMessage"],"kind":"struct"},"2:46703:5086":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"24:2971:1820":{"crate_id":24,"path":["syn","parse","ParseStream"],"kind":"typedef"},"2:9740:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"24:4767:3418":{"crate_id":24,"path":["syn","token","Caret"],"kind":"struct"},"1:5503:4970":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"24:2875:6411":{"crate_id":24,"path":["syn","parse","discouraged","Speculative"],"kind":"trait"},"2:3562:3245":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:5548:8656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12537:7164":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:24011:9201":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:50141:5464":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4046:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:9689:63904":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"24:6124:1960":{"crate_id":24,"path":["syn","derive","DataEnum"],"kind":"struct"},"0:0:1629":{"crate_id":0,"path":["serde_derive"],"kind":"module"},"17:9210:48596":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:5433:5923":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:10001:48651":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:10565:4200":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:13760:7540":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:10290:3328":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"24:5796:3137":{"crate_id":24,"path":["syn","expr","ExprMethodCall"],"kind":"struct"},"1:15892:58339":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:32359:61601":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:22563:61279":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:5766:5944":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"24:176:4107":{"crate_id":24,"path":["syn","token","CustomToken"],"kind":"trait"},"1:10668:4855":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"16:4641:7633":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:13532:7463":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:547:5941":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"}},"external_crates":{"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"21":{"name":"proc_macro","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"syn","html_root_url":"https://docs.rs/syn/1.0.98/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"quote","html_root_url":"https://docs.rs/quote/1.0.20/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"unicode_ident","html_root_url":null},"22":{"name":"proc_macro2","html_root_url":"https://docs.rs/proc-macro2/1.0.40/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}