{"root":"0:0:1638","crate_version":"1.0.143","includes_private":false,"index":{"0:8:1738":{"id":"0:8:1738","crate_id":0,"name":"ast","span":{"filename":"src/internals/ast.rs","begin":[1,0],"end":[202,1]},"visibility":"public","docs":"A Serde ast, parsed from the Syn ast and ready to generate Rust code.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"2:13644:58125":{"id":"2:13644:58125","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984","str::splitn":"1:15992:2989"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49713:5442","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13582:62732":{"id":"2:13582:62732","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15992:2989"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13702:3348":{"id":"2:13702:3348","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15986:2984"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49899:3349","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13600:58112":{"id":"2:13600:58112","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15992:2989"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3431:5095":{"id":"2:3431:5095","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13608:33341":{"id":"2:13608:33341","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49883:5478","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23933:5120":{"id":"2:23933:5120","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23934:5119"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23929:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3358:3456":{"id":"2:3358:3456","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13653:3064":{"id":"2:13653:3064","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984","str::matches":"1:15992:2989","`DoubleEndedIterator`":"2:8591:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49795:5473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5741:4685":{"id":"1:5741:4685","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:60895","1:5743:60897","1:5744:60896","1:5745:60898"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4748:4757":{"id":"1:4748:4757","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:57791","1:4750:57792","1:4751:57794","1:4753:4756","1:4754:57793","1:4756:57795","1:4757:5918"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:4699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:117:1826":{"id":"20:117:1826","crate_id":20,"name":"ToTokens","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:118:2462","20:119:2204","20:120:1848"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13656:62740":{"id":"2:13656:62740","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8591:120","str::matches":"1:15992:2989","self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49813:5474","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8547:151":{"id":"2:8547:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8548:1808","2:8549:3246","2:8550:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3740:5074":{"id":"2:3740:5074","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:56790"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13700:62752":{"id":"2:13700:62752","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15986:2984"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49890:5479","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3376:5176":{"id":"2:3376:5176","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3423:5091":{"id":"2:3423:5091","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8591:120":{"id":"2:8591:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8592:4068","2:8593:4069","2:8594:4070","2:8595:4071","2:8599:4072","2:8602:4073"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13212:5193":{"id":"2:13212:5193","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13214:5195","2:13215:62043","2:13216:62048","2:13217:62044","2:13218:62046","2:13219:62045","2:13220:62047"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6814:4671":{"id":"1:6814:4671","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6815:57763"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10447:119":{"id":"2:10447:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10448:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5797:4689":{"id":"1:5797:4689","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:57773","1:5799:57774","1:5800:57775","1:5801:57776"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3364:5172":{"id":"2:3364:5172","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8543:136":{"id":"2:8543:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8545:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1311:1841":{"id":"0:1311:1841","crate_id":0,"name":"Symbol","span":{"filename":"src/internals/symbol.rs","begin":[5,0],"end":[5,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:23624:5122":{"id":"2:23624:5122","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23625:1270","2:23626:1269","2:23627:1267","2:23628:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23036:5121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10390:3338":{"id":"2:10390:3338","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10391:1533","2:10392:60644","2:10394:60642"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22999:5311":{"id":"2:22999:5311","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23000:61360","2:23001:1227","2:23002:1228","2:23003:61361","2:23004:61362","2:23005:61363","2:23006:61364","2:23007:61365","2:23008:61366","2:23009:61367"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23012:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"24:2881:6437":{"id":"24:2881:6437","crate_id":24,"name":"Speculative","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2882:64062"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3581:3256":{"id":"2:3581:3256","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:2249","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6092:1990":{"id":"5:6092:1990","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13691:62751":{"id":"2:13691:62751","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4051:4733":{"id":"2:4051:4733","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:60675"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13926:138":{"id":"2:13926:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13927:181","2:13928:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5811:4691":{"id":"1:5811:4691","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5812:59620"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13587:304":{"id":"2:13587:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15992:2989","`u8`":"1:16003:2998"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13141:3269":{"id":"2:13141:3269","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13142:126","2:13143:1965"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/internals/mod.rs","begin":[5,0],"end":[5,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::ctxt::Ctxt","name":"Ctxt","id":"0:1282:1740","glob":false}},"2:8748:157":{"id":"2:8748:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8749:1808","2:8750:922","2:8751:4076","2:8754:4077","2:8755:495","2:8757:2122","2:8760:4078","2:8761:4079","2:8762:4080","2:8763:2059","2:8765:2587","2:8767:4081","2:8768:4082","2:8770:841","2:8773:4083","2:8780:2420","2:8782:2416","2:8785:1822","2:8786:2875","2:8787:4084","2:8789:4085","2:8791:4086","2:8794:1308","2:8795:2187","2:8796:4087","2:8800:1809","2:8803:1804","2:8804:4088","2:8805:4089","2:8807:4090","2:8808:1815","2:8810:4091","2:8813:4092","2:8815:4093","2:8825:4094","2:8840:4095","2:8842:4096","2:8846:4097","2:8855:2879","2:8858:4098","2:8860:4099","2:8863:276","2:8870:294","2:8877:2533","2:8884:4100","2:8893:4101","2:8903:1014","2:8910:4102","2:8917:4062","2:8918:4059","2:8919:4064","2:8931:4063","2:8938:4061","2:8950:4060","2:8957:4103","2:8958:4104","2:8963:4105","2:8966:2137","2:8969:4106","2:8970:4107","2:8972:2880","2:8974:4108","2:8976:415","2:8979:4109","2:8982:997","2:8985:4110","2:8988:604","2:8991:4111","2:8994:907","2:8996:826","2:8998:792","2:9000:713","2:9002:696","2:9004:4112","2:9005:4113","2:9013:4114"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:601:1745":{"id":"0:601:1745","crate_id":0,"name":"symbol","span":{"filename":"src/internals/symbol.rs","begin":[1,0],"end":[68,1]},"visibility":{"restricted":{"parent":"0:7:1614","path":"::internals"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1311:1841"],"is_stripped":true}},"2:13602:2293":{"id":"2:13602:2293","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49567:5462","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4741:4754":{"id":"1:4741:4754","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:60690","1:4743:40902","1:4744:60691","1:4745:60692"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13605:33346":{"id":"2:13605:33346","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15992:2989"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49874:5477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13595:58091":{"id":"2:13595:58091","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:10449:3334":{"id":"2:10449:3334","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10450:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13672:62747":{"id":"2:13672:62747","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/internals/mod.rs","begin":[8,0],"end":[8,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::receiver::replace_receiver","name":"replace_receiver","id":"0:480:1741","glob":false}},"2:13685:62750":{"id":"2:13685:62750","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15986:2984","self::pattern":"2:13202:5192"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6090":{"id":"5:6090","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6091:63387","5:6092:1990","5:6095:63388","5:6098:63389","5:6110:63390","5:6111:63391","5:6112:4781","5:6113:2290","5:6114:2289"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:7819:4916":{"id":"1:7819:4916","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7820:60593"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13597:4859":{"id":"2:13597:4859","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3577:2249","str::slice_mut_unchecked":"1:15992:2989","`str`":"1:15992:2989"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13580:62731":{"id":"2:13580:62731","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13591:58089":{"id":"2:13591:58089","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47628:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13576":{"id":"2:13576","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12662:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13577:793","2:13578:2068","2:13579:62730","2:13580:62731","2:13582:62732","2:13585:2722","2:13586:62733","2:13587:304","2:13588:58092","2:13589:1853","2:13591:58089","2:13593:58090","2:13595:58091","2:13597:4859","2:13598:62734","2:13599:58111","2:13600:58112","2:13601:2299","2:13602:2293","2:13603:4864","2:13604:33356","2:13605:33346","2:13606:5918","2:13607:62735","2:13608:33341","2:13609:1890","2:13612:58127","2:13615:58128","2:13618:2533","2:13622:4073","2:13626:57795","2:13629:33213","2:13632:58121","2:13635:62736","2:13638:62737","2:13641:58123","2:13644:58125","2:13647:62738","2:13650:62739","2:13653:3064","2:13656:62740","2:13659:62741","2:13662:62742","2:13665:62743","2:13667:62744","2:13669:62745","2:13671:62746","2:13672:62747","2:13673:62748","2:13676:62749","2:13679:15902","2:13682:58129","2:13685:62750","2:13688:1872","2:13691:62751","2:13694:1829","2:13696:4451","2:13697:4452","2:13698:4453","2:13699:4454","2:13700:62752","2:13702:3348","2:13703:62753"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6112:4781":{"id":"5:6112:4781","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3417:3462":{"id":"2:3417:3462","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:3384:5180":{"id":"2:3384:5180","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3347:5166":{"id":"2:3347:5166","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8556:3372":{"id":"2:8556:3372","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8558:2136","2:8560:4074","2:8561:4075"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13629:33213":{"id":"2:13629:33213","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15986:2984","self::pattern":"2:13202:5192"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12994:5435","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5763:4688":{"id":"1:5763:4688","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5764:8390","1:5765:59780","1:5766:6963","1:5767:59781","1:5768:5006","1:5769:5007","1:5770:59782","1:5771:1304","1:5772:59783","1:5773:59784","1:5774:59785","1:5775:59786","1:5776:59787","1:5777:59788","1:5778:59789","1:5779:59790"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3577:2249":{"id":"2:3577:2249","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13671:62746":{"id":"2:13671:62746","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:4062","2:2960:4059","2:2961:4067"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/internals/attr.rs","begin":[23,0],"end":[23,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"internals::case::RenameRule","name":"RenameRule","id":"0:1286:1837","glob":false}},"2:23248:17386":{"id":"2:23248:17386","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23249:7895","2:23250:61241","2:23251:61242"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23241:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22910:5116":{"id":"2:22910:5116","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22911:5119","2:22912:61360","2:22913:61574","2:22914:61575","2:22915:61576","2:22916:43889","2:22917:61577","2:22918:61578","2:22919:61579","2:22920:61580","2:22921:61581","2:22922:61582","2:22923:61583","2:22924:61584","2:22925:61585","2:22926:61586","2:22927:61399","2:22928:61587","2:22929:61588","2:22930:61589","2:22931:61590","2:22932:61361","2:22933:61362","2:22934:61363","2:22935:61364"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23012:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13647:62738":{"id":"2:13647:62738","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10723:4817":{"id":"2:10723:4817","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10724:146","2:10725:34669","2:10726:61023"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5669:4665":{"id":"1:5669:4665","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5670:57770","1:5671:3761"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13688:1872":{"id":"2:13688:1872","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15986:2984","self::pattern":"2:13202:5192"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8510:5142":{"id":"2:8510:5142","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8512:4108"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6418:223":{"id":"5:6418:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6419:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6111:63391":{"id":"5:6111:63391","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1807","`String`":"5:8368:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1807","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8113:4470","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13679:15902":{"id":"2:13679:15902","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15986:2984","self::pattern":"2:13202:5192"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3337:3271":{"id":"2:3337:3271","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14401:4469":{"id":"2:14401:4469","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14402:60014","2:14403:60015","2:14404:60016","2:14405:60017","2:14406:60018","2:14407:60019","2:14408:4090"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3775:3328":{"id":"2:3775:3328","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"5:6113:2290":{"id":"5:6113:2290","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15992:2989"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13232:5196":{"id":"2:13232:5196","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6114:2289":{"id":"5:6114:2289","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15992:2989"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3372:4936":{"id":"2:3372:4936","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6885:4675":{"id":"1:6885:4675","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6886:60159"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13612:58127":{"id":"2:13612:58127","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13694:1829":{"id":"2:13694:1829","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13141:3269","`FromStr`":"2:13141:3269"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47753:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13141:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13141:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13599:58111":{"id":"2:13599:58111","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15992:2989"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13703:62753":{"id":"2:13703:62753","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15986:2984"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49908:5480","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13638:62737":{"id":"2:13638:62737","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:15986:2984","str::split_terminator":"1:15992:2989","self::pattern":"2:13202:5192","str::split":"1:15992:2989"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49659:5467","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10678:142":{"id":"2:10678:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10679:715","2:10681:60136"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5757:4687":{"id":"1:5757:4687","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5758:6963","1:5759:9285"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13227:5191":{"id":"2:13227:5191","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13229:4068","2:13230:61886","2:13231:61887"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13221:5195","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:9028:4460":{"id":"2:9028:4460","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3352:3435":{"id":"2:3352:3435","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13577:793":{"id":"2:13577:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:5074","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13696:4451":{"id":"2:13696:4451","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13579:62730":{"id":"2:13579:62730","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13941:150":{"id":"2:13941:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13942:181","2:13943:150","2:13944:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1257:1623":{"id":"0:1257:1623","crate_id":0,"name":"Serialize","span":{"filename":"src/lib.rs","begin":[91,0],"end":[96,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[proc_macro_derive(Serialize, attributes(serde))]"],"deprecation":null,"kind":"proc_macro","inner":{"kind":"derive","helpers":["serde"]}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:3089:3299":{"id":"24:3089:3299","crate_id":24,"name":"Parser","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:3090:181","24:3091:2163","24:3092:1829","24:3093:2164"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10451:2242":{"id":"2:10451:2242","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10452:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6983:4672":{"id":"1:6983:4672","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6984:60463"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13659:62741":{"id":"2:13659:62741","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13202:5192","`DoubleEndedIterator`":"2:8591:120","prim@char":"1:15986:2984","str::rmatch_indices":"1:15992:2989"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49741:5470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13699:4454":{"id":"2:13699:4454","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5008:4711":{"id":"1:5008:4711","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:3247","1:5010:60453"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:153:1813":{"id":"24:153:1813","crate_id":24,"name":"Token","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"24:160:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3389:5082":{"id":"2:3389:5082","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10440:109":{"id":"2:10440:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10441:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:74:334":{"id":"0:74:334","crate_id":0,"name":"attr","span":{"filename":"src/internals/attr.rs","begin":[1,0],"end":[1952,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:144"],"is_stripped":false}},"5:5837:5627":{"id":"5:5837:5627","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:34425"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13698:4453":{"id":"2:13698:4453","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13618:2533":{"id":"2:13618:2533","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15986:2984","`None`":"2:47628:176","self::pattern":"2:13202:5192"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6883:4673":{"id":"1:6883:4673","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6884:57994"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5819:4684":{"id":"1:5819:4684","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5820:6963"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:11082:214":{"id":"2:11082:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11084:181","2:11085:1853","2:11086:58089","2:11087:58090","2:11088:58091","2:11089:753","2:11090:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11073:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23629:17405":{"id":"2:23629:17405","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23630:61589","2:23631:61588","2:23632:61590"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23624:5122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13615:58128":{"id":"2:13615:58128","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13669:62745":{"id":"2:13669:62745","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:2634:2472":{"id":"24:2634:2472","crate_id":24,"name":"Spanned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2635:2072"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8506:5143":{"id":"2:8506:5143","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8508:2880"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13622:4073":{"id":"2:13622:4073","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13202:5192","`None`":"2:47628:176","prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"21:808:3362":{"id":"21:808:3362","crate_id":21,"name":"MultiSpan","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:809:63976"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:63387":{"id":"5:6091:63387","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1807","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8113:4470","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1807","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8113:4470","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3648:3268":{"id":"2:3648:3268","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:61463","2:3651:61464","2:3652:1890"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13606:5918":{"id":"2:13606:5918","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49845:4761","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13673:62748":{"id":"2:13673:62748","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13232:5196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3427:5093":{"id":"2:3427:5093","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2866:3273":{"id":"2:2866:3273","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:2182"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6461:4671":{"id":"1:6461:4671","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6462:5006","1:6463:5007","1:6464:57513","1:6465:57514","1:6467:57518","1:6469:57515","1:6470:57516","1:6472:57517"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13662:62742":{"id":"2:13662:62742","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15986:2984","`DoubleEndedIterator`":"2:8591:120","str::match_indices":"1:15992:2989","self::pattern":"2:13202:5192"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49759:5471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13603:4864":{"id":"2:13603:4864","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49577:2735","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13665:62743":{"id":"2:13665:62743","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23036:5121":{"id":"2:23036:5121","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23037:5119","2:23038:1247","2:23039:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:2132:6438":{"id":"24:2132:6438","crate_id":24,"name":"IdentExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2133:64169","24:2134:64170","24:2135:1871"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"24:2150:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13635:62736":{"id":"2:13635:62736","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984","`DoubleEndedIterator`":"2:8591:120","str::split":"1:15992:2989","str::rsplit_terminator":"1:15992:2989"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49641:5466","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10453:3341":{"id":"2:10453:3341","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10454:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13626:57795":{"id":"2:13626:57795","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8591:120","prim@char":"1:15986:2984","str::split_whitespace":"1:15992:2989","str::rsplit":"1:15992:2989","self::pattern":"2:13202:5192"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49591:4760","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:2183"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13578:2068":{"id":"2:13578:2068","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6483:4703":{"id":"1:6483:4703","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6484:60473","1:6485:8812","1:6486:60474","1:6487:60475","1:6488:60476","1:6489:60477"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23296:5262":{"id":"2:23296:5262","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23933:5120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23287:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3401:3983":{"id":"2:3401:3983","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:2001","5:785:1874","5:786:4116"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10461:3340":{"id":"2:10461:3340","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10462:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3411:3460":{"id":"2:3411:3460","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13585:2722":{"id":"2:13585:2722","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12673:5585"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13601:2299":{"id":"2:13601:2299","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49561:5461","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9367:4706":{"id":"1:9367:4706","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9368:60573","1:9369:60574","1:9370:60575","1:9371:60576","1:9372:60577","1:9373:40499","1:9374:60572"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:63:3104":{"id":"20:63:3104","crate_id":20,"name":"IdentFragment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:64:660","20:65:2072"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3516:2188":{"id":"2:3516:2188","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8071:5231":{"id":"2:8071:5231","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8072:61901","2:8073:61902","2:8074:61906","2:8075:61904","2:8076:61903","2:8077:61907","2:8078:61905"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5833:5629":{"id":"5:5833:5629","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10459:3339":{"id":"2:10459:3339","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10460:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13641:58123":{"id":"2:13641:58123","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15986:2984","str::rsplitn":"1:15992:2989","self::pattern":"2:13202:5192"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49695:5441","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4723:3338":{"id":"1:4723:3338","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:2602","1:4725:60775","1:4727:60776","1:4728:5842","1:4729:60777","1:4730:60778","1:4731:60642","1:4740:4090"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13682:58129":{"id":"2:13682:58129","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3342:3465":{"id":"2:3342:3465","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12649:5620":{"id":"2:12649:5620","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12650:1808","2:12651:2943"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13650:62739":{"id":"2:13650:62739","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13667:62744":{"id":"2:13667:62744","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3368:3272":{"id":"2:3368:3272","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"24:2975:1830":{"id":"24:2975:1830","crate_id":24,"name":"Parse","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:2976:1829"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5675:4663":{"id":"1:5675:4663","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5676:6304","1:5677:2722"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6095:63388":{"id":"5:6095:63388","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:2864:3308":{"id":"24:2864:3308","crate_id":24,"name":"Peek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"24:2746:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13593:58090":{"id":"2:13593:58090","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3717:5536":{"id":"2:3717:5536","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:3268","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3435:5097":{"id":"2:3435:5097","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13589:1853":{"id":"2:13589:1853","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47628:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47628:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10457:189":{"id":"2:10457:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10458:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6709:4688":{"id":"1:6709:4688","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6710:60509","1:6711:8735","1:6712:8736","1:6713:8738","1:6714:8737","1:6715:8739","1:6716:8740","1:6717:8742","1:6718:7004","1:6719:8745","1:6720:8746","1:6721:8747","1:6722:8748","1:6723:8749","1:6724:8750","1:6725:8743","1:6726:8744"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10455:3342":{"id":"2:10455:3342","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10456:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3559:4462":{"id":"2:3559:4462","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:61757"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:1827"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:3369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:4666:4699":{"id":"1:4666:4699","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:4497","1:4668:59855","1:4670:59856","1:4671:59857","1:4672:4751","1:4673:59858","1:4674:57764","1:4676:59859","1:4677:4090","1:4678:4864","1:4679:2059","1:4681:2187"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13586:62733":{"id":"2:13586:62733","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13609:1890":{"id":"2:13609:1890","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3406:4829":{"id":"2:3406:4829","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10688:146":{"id":"2:10688:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10689:652","2:10690:2602","2:10691:59657","2:10692:59658","2:10693:59659","2:10694:59660","2:10695:59661","2:10696:59662","2:10697:59663","2:10698:59664","2:10699:59665","2:10700:59666","2:10701:59667","2:10702:59668","2:10703:59669","2:10704:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6098:63389":{"id":"5:6098:63389","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6581:4660":{"id":"1:6581:4660","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6582:60502","1:6583:60503"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4783:4459":{"id":"2:4783:4459","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:1808","2:4785:62126","2:4786:4077"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:1075:2255":{"id":"1:1075:2255","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:2001","1:1077:4451","1:1078:2290","1:1079:2289","1:1080:4452","1:1081:4453","1:1082:4454"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8616:3371":{"id":"2:8616:3371","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8617:793","2:8618:2068"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13607:62735":{"id":"2:13607:62735","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49855:5475","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3104:5190":{"id":"2:3104:5190","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13697:4452":{"id":"2:13697:4452","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13604:33356":{"id":"2:13604:33356","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15992:2989"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49865:5476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13598:62734":{"id":"2:13598:62734","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3581:3256","str::slice_unchecked":"1:15992:2989","`str`":"1:15992:2989"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13676:62749":{"id":"2:13676:62749","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13202:5192","prim@char":"1:15986:2984"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6110:63390":{"id":"5:6110:63390","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6811:4669":{"id":"1:6811:4669","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6812:8850","1:6813:59757"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10589:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:5555","1:2575:60967","1:2576:60968","1:2577:60675"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:7:1614":{"id":"0:7:1614","crate_id":0,"name":"internals","span":{"filename":"src/internals/mod.rs","begin":[1,0],"end":[28,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:8:1738","0:74:334","0:409","0:504"],"is_stripped":true}},"0:1258:1632":{"id":"0:1258:1632","crate_id":0,"name":"Deserialize","span":{"filename":"src/lib.rs","begin":[99,0],"end":[104,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[proc_macro_derive(Deserialize, attributes(serde))]"],"deprecation":null,"kind":"proc_macro","inner":{"kind":"derive","helpers":["serde"]}},"20:18:3103":{"id":"20:18:3103","crate_id":20,"name":"TokenStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["20:19:9281","20:21:63955","20:23:63956","20:26:63957"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"20:44:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5807:4690":{"id":"1:5807:4690","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5808:59780"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3505:3329":{"id":"2:3505:3329","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9031:5114":{"id":"2:9031:5114","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3380:5178":{"id":"2:3380:5178","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5749:4686":{"id":"1:5749:4686","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5750:6963","1:5751:57961","1:5752:57962"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:0:1638":{"id":"0:0:1638","crate_id":0,"name":"serde_derive","span":{"filename":"src/lib.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"This crate provides Serde's two derive macros.\n\n```edition2018\n# use serde_derive::{Serialize, Deserialize};\n#\n#[derive(Serialize, Deserialize)]\n# struct S;\n#\n# fn main() {}\n```\n\nPlease refer to [https://serde.rs/derive.html] for how to set this up.\n\n[https://serde.rs/derive.html]: https://serde.rs/derive.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/serde_derive/1.0.143\")]","#![allow(unknown_lints, bare_trait_objects)]","#![allow(clippy :: branches_sharing_code, clippy :: cognitive_complexity,\nclippy :: collapsible_match, clippy :: derive_partial_eq_without_eq, clippy ::\nenum_variant_names, clippy :: manual_map, clippy :: match_like_matches_macro,\nclippy :: needless_pass_by_value, clippy :: too_many_arguments, clippy ::\ntrivially_copy_pass_by_ref, clippy :: used_underscore_binding, clippy ::\nwildcard_in_or_patterns, clippy :: unnested_or_patterns,)]","#![allow(clippy :: cast_possible_truncation, clippy :: checked_conversions,\nclippy :: doc_markdown, clippy :: enum_glob_use, clippy :: indexing_slicing,\nclippy :: items_after_statements, clippy :: let_underscore_drop, clippy ::\nmanual_assert, clippy :: map_err_ignore, clippy :: match_same_arms, clippy ::\nmatch_wildcard_for_single_variants, clippy :: module_name_repetitions, clippy\n:: must_use_candidate, clippy :: option_if_let_else, clippy :: similar_names,\nclippy :: single_match_else, clippy :: struct_excessive_bools, clippy ::\ntoo_many_lines, clippy :: unseparated_literal_suffix, clippy :: unused_self,\nclippy :: use_self, clippy :: wildcard_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:1257:1623","0:1258:1632"],"is_stripped":false}},"2:3310:3370":{"id":"2:3310:3370","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14325:141":{"id":"2:14325:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14326:277","2:14327:518","2:14328:280","2:14329:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9407:3685":{"id":"2:9407:3685","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13632:58121":{"id":"2:13632:58121","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"1:15992:2989","self::pattern":"2:13202:5192","`DoubleEndedIterator`":"2:8591:120","prim@char":"1:15986:2984"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49609:5438","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:5193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:5191","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9408:3684":{"id":"2:9408:3684","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3396:4828":{"id":"2:3396:4828","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:1631"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3440:5100":{"id":"2:3440:5100","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3812:4461":{"id":"2:3812:4461","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22963:5327":{"id":"2:22963:5327","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22964:5119","2:22965:61360","2:22966:1227","2:22967:1228","2:22968:43889","2:22969:61395","2:22970:61396","2:22971:61397","2:22972:61398","2:22973:61399","2:22974:61361","2:22975:61362","2:22976:61363","2:22977:61364","2:22978:61365","2:22979:61366","2:22980:61367"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23012:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3274:3369":{"id":"2:3274:3369","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9035:5230":{"id":"2:9035:5230","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8071:5231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13221:5195":{"id":"2:13221:5195","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13223:5214","2:13224:922","2:13225:61196","2:13226:61197"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13588:58092":{"id":"2:13588:58092","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16003:2998"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6887:4676":{"id":"1:6887:4676","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6888:60956"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23099:4709":{"id":"2:23099:4709","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23089:4666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"2:45917:5080":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:47113:4258":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"20:117:1826":{"crate_id":20,"path":["quote","to_tokens","ToTokens"],"kind":"trait"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:5797:4689":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:48950:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:53583:9056":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:2813:6237":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:3352:3435":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"24:4013:3415":{"crate_id":24,"path":["syn","token","SelfValue"],"kind":"struct"},"6:4270:5004":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:46051:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:11354:6322":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:1704:8173":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:13202:5192":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:7673:4907":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7090:6058":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:11822:7064":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:8137:4582":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"21:251:4322":{"crate_id":21,"path":["proc_macro","bridge","closure","Closure"],"kind":"struct"},"22:922:54607":{"crate_id":22,"path":["proc_macro2","imp","TokenTreeIter"],"kind":"enum"},"6:1727:8183":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11890:7066":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:6679:6259":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:50496:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:10223:6296":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"21:3089:1825":{"crate_id":21,"path":["proc_macro","TokenTree"],"kind":"enum"},"2:50478:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"12:940:4803":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:5390:8626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:2330:5702":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"20:18:3103":{"crate_id":20,"path":["quote","ext","TokenStreamExt"],"kind":"trait"},"2:50569:4731":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"18:857:6410":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"16:6717:6052":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:672:41194":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:51180:8988":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:923:5690":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:46678:13686":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:9958:63941":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:13073:7385":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:5303:6009":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"12:1238:5872":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"24:6322:3183":{"crate_id":24,"path":["syn","ty","TypeGroup"],"kind":"struct"},"6:1588:8090":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:10291:6317":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"22:877:2470":{"crate_id":22,"path":["proc_macro2","fallback","Literal"],"kind":"struct"},"24:299:1760":{"crate_id":24,"path":["syn","ident","Ident"],"kind":"function"},"16:5698:6027":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"21:1191:4644":{"crate_id":21,"path":["proc_macro","bridge","client","FreeFunctions"],"kind":"struct"},"1:4394:4969":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:13961:7624":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:4885:3331":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:11713:7032":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"24:5399:3115":{"crate_id":24,"path":["syn","attr","AttrStyle"],"kind":"enum"},"17:11002:48341":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:4256:8364":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"24:6369:2194":{"crate_id":24,"path":["syn","ty","ReturnType"],"kind":"enum"},"6:5288:8564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4148:8348":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:2777:5704":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:23248:17386":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:46621:5543":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:22963:5327":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:4379:8420":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"14:47:9544":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"24:5280:3465":{"crate_id":24,"path":["syn","token","Sub"],"kind":"struct"},"2:46872:5149":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"24:5818:3151":{"crate_id":24,"path":["syn","expr","ExprReference"],"kind":"struct"},"16:5745:6029":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"24:6328:3185":{"crate_id":24,"path":["syn","ty","TypeInfer"],"kind":"struct"},"2:24781:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:9004:48049":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"1:11439:4986":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"2:22761:61872":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"12:869:4582":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:6811:4669":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:53636:9059":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"24:3743:3404":{"crate_id":24,"path":["syn","token","Impl"],"kind":"struct"},"22:871:1760":{"crate_id":22,"path":["proc_macro2","fallback","Ident"],"kind":"struct"},"6:5378:8619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"24:3797:3407":{"crate_id":24,"path":["syn","token","Loop"],"kind":"struct"},"15:248:5891":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:24101:5512":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:10643:6908":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"18:712:4058":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:6671:8849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:11089:4783":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:46925:5153":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:7819:4916":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:11628:7016":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:3104:5190":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"14:0:2961":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:1428:3251":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:6461:4671":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:22740:61875":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:8714:5013":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:7155:6064":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:7379:5990":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:4300:4785":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"9:469:9339":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:53137:5297":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"24:2556:2002":{"crate_id":24,"path":["syn","parse_quote"],"kind":"macro"},"2:10728:5243":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:13196:7410":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:2594:9550":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"6:4005:8283":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:50539:5499":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:50039:5204":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:11769:7050":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:3314:6209":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:1633:4808":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11653:7018":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:12406:7176":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:10028:48111":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:11197:4714":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"16:7415:5988":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:12921:7263":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:3576:6826":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:12994:5435":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:13932:57944":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"5:3772:3251":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"24:5500:3123":{"crate_id":24,"path":["syn","data","VisRestricted"],"kind":"struct"},"2:56455:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:1507:4803":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:53479:9048":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"24:6325:3184":{"crate_id":24,"path":["syn","ty","TypeImplTrait"],"kind":"struct"},"17:510:48045":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:10068:6314":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:24388:5529":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:4628:7661":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"24:2077:64206":{"crate_id":24,"path":["syn","buffer","empty","UnsafeSyncEntry"],"kind":"struct"},"18:668:6419":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:13212:5193":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"24:5951:2195":{"crate_id":24,"path":["syn","generics","TypeParamBound"],"kind":"enum"},"17:12157:7120":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"24:5846:3158":{"crate_id":24,"path":["syn","expr","ExprType"],"kind":"struct"},"2:47628:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:46815:5144":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:7701:4909":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:9183:6326":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:48980:9266":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"18:837:5195":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:22910:5116":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:7896:5103":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:3648:4767":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:22763:61870":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:50552:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:1441:4807":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:6153:8777":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"24:3348:3468":{"crate_id":24,"path":["syn","token","Underscore"],"kind":"struct"},"2:24261:5372":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:8362:8880":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"6:1576:8081":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:9409:3683":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:52679:5289":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:32535:61865":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"6:3883:8202":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13708:7555":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:6114:8760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:13873:7602":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"24:1160:2049":{"crate_id":24,"path":["syn","lifetime","Lifetime"],"kind":"struct"},"17:9873:48059":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:3896:8211":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:48266:5546":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:11624:4881":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"12:466:63905":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:50199:5551":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:15993:2990":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:6418:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"18:720:6811":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:6691:6051":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:10266:6314":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:6856:8859":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"24:4229:3421":{"crate_id":24,"path":["syn","token","Virtual"],"kind":"struct"},"24:5198:3459":{"crate_id":24,"path":["syn","token","Semi"],"kind":"struct"},"17:13755:7573":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:9651:57952":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:681:1841":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:5395:4984":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"22:1044:2154":{"crate_id":22,"path":["proc_macro2","Punct"],"kind":"struct"},"5:4215:4582":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"24:3653:3400":{"crate_id":24,"path":["syn","token","Extern"],"kind":"struct"},"17:9920:48060":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:9885:6687":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:15985:2983":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4081:8316":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"21:1508:191":{"crate_id":21,"path":["proc_macro","bridge","client","ProcMacro"],"kind":"enum"},"1:15992:2989":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:5675:4663":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"24:6054:3170":{"crate_id":24,"path":["syn","lit","LitByte"],"kind":"struct"},"17:13573:7505":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:5186:8514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:3993:8274":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:7768:5975":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:4400:4971":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"24:2366:3246":{"crate_id":24,"path":["syn","punctuated","IntoIter"],"kind":"struct"},"2:51304:5306":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:14617:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:47151:9262":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:49430:5450":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:6184:8803":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:48652:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:7310:57758":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:11376:4988":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:6581:4660":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:12189:4843":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:46574:5335":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:25381:5384":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"22:959:2470":{"crate_id":22,"path":["proc_macro2","imp","Literal"],"kind":"enum"},"12:1121:4808":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:7792:6004":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"24:5866:1783":{"crate_id":24,"path":["syn","expr","Member"],"kind":"enum"},"2:3358:3456":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"5:3038:2001":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:4510:4774":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:9033:48050":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:13129:7391":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:24682:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:49469:5451":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"12:928:4799":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:1497:4801":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:11335:6323":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:6887:4676":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:3199:6226":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:4607:4325":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"24:5046:3448":{"crate_id":24,"path":["syn","token","Ne"],"kind":"struct"},"2:4066:4732":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"12:1256:4810":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"22:931:1824":{"crate_id":22,"path":["proc_macro2","imp","Span"],"kind":"enum"},"6:1567:8075":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"12:787:4800":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"12:971:4805":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:38941:4730":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:6937:8869":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"24:2634:2472":{"crate_id":24,"path":["syn","spanned","Spanned"],"kind":"trait"},"24:6313:3182":{"crate_id":24,"path":["syn","ty","TypeBareFn"],"kind":"struct"},"1:6723:8749":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:10476:6336":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:12135:3246":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:4439:7656":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"16:5238:46472":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"12:777:3246":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:10489:9183":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"12:2412:7897":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:5426:8641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:9163:3677":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:9646:63925":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:5478:8655":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"20:44:4666":{"crate_id":20,"path":["quote","ext","private","Sealed"],"kind":"trait"},"2:5584:12057":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:10874:6942":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:1472:4582":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:14232:4778":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:53560:9055":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:7956:57938":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:6190:6040":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:6012:5966":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:10589:4666":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:4485:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:10861:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"12:2045:4580":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"6:618:8043":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13016:7346":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"24:4964:3442":{"crate_id":24,"path":["syn","token","EqEq"],"kind":"struct"},"6:6643:8846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:7627:4586":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:5763:4688":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:11615:7014":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:3287:2392":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:12205:4844":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:9491:9552":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:5247:8544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:51781:5279":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:3516:2188":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:5902:6032":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:4775:7666":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:46235:5351":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:1733:4998":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:15456:9139":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:5952:5053":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"14:231:2286":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:4296:8377":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:13653:2132":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"24:1274:6450":{"crate_id":24,"path":["syn","lit","LitIntRepr"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:10838:4946":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:11425:5057":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"23:0:3086":{"crate_id":23,"path":["unicode_ident"],"kind":"module"},"24:3779:3406":{"crate_id":24,"path":["syn","token","Let"],"kind":"struct"},"1:16001:2996":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:49176:5624":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:4088:8319":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:10449:3334":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"24:4121:1746":{"crate_id":24,"path":["syn","token","Type"],"kind":"struct"},"2:8748:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"18:849:6409":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:9716:63929":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:3040:8879":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:7653:4906":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:6885:4675":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"24:956:64160":{"crate_id":24,"path":["syn","generics","ConstParamsMut"],"kind":"struct"},"17:13345:7446":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:9911:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:12770:7241":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11102:48064":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:10451:6688":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:6980:6054":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:23298:5119":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"9:1075:5807":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:5887:6207":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:12117:7113":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:15987:2985":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:49409:5448":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11547:7001":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:1680:8156":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:1203:5871":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:5408:5601":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:10389:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"16:5566:6021":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:24322:40217":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:7816:4915":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:11797:7060":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"22:917:9177":{"crate_id":22,"path":["proc_macro2","imp","DeferredTokenStream"],"kind":"struct"},"17:11234:6353":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"24:4085:2236":{"crate_id":24,"path":["syn","token","Trait"],"kind":"struct"},"17:12543:7196":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:5396:6014":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"18:611:6415":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:13529:7495":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:161:40863":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:13515:7493":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:49908:5480":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:32831:4281":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:5039:3315":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:1091:6640":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"24:5757:3137":{"crate_id":24,"path":["syn","expr","ExprContinue"],"kind":"struct"},"17:12302:7140":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:49695:5441":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"18:896:6413":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:2162:4582":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:8498:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"24:5783:3143":{"crate_id":24,"path":["syn","expr","ExprLet"],"kind":"struct"},"5:3362:4827":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:9396:6895":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:5208:3325":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:13278:5199":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:3364:5172":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:8827:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:5536:5649":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:11640:7017":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:24367:9242":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"24:948:64159":{"crate_id":24,"path":["syn","generics","ConstParams"],"kind":"struct"},"1:1415:3247":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:6129:8765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"24:5075:3450":{"crate_id":24,"path":["syn","token","OrEq"],"kind":"struct"},"2:24715:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:3275:3327":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:13428:7465":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:6060:6007":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:56416:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:23629:17405":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:15998:2993":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:32483:61868":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"6:5229:8532":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:53215:5281":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:10451:2242":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"24:2383:3247":{"crate_id":24,"path":["syn","punctuated","Iter"],"kind":"struct"},"1:3325:4949":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:9706:48056":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:5185:3324":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:7131:6062":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:8591:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:45944:4463":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"21:3001:3262":{"crate_id":21,"path":["proc_macro","LexError"],"kind":"struct"},"2:47694:3681":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:5990:5058":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:4740:5187":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:14812:4914":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:5605:5182":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"0:1258:1633":{"crate_id":0,"path":["serde_derive","Deserialize"],"kind":"proc_derive"},"24:4865:3436":{"crate_id":24,"path":["syn","token","DivEq"],"kind":"struct"},"24:3527:105":{"crate_id":24,"path":["syn","token","Continue"],"kind":"struct"},"2:50008:5200":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:11031:48063":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:48713:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:47685:3246":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:12093:7111":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:10127:5422":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:47727:3682":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:5974:8701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:53613:9058":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"22:827:3262":{"crate_id":22,"path":["proc_macro2","fallback","LexError"],"kind":"struct"},"17:13155:7397":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"24:4976:3443":{"crate_id":24,"path":["syn","token","Ge"],"kind":"struct"},"24:4686:3424":{"crate_id":24,"path":["syn","token","AddEq"],"kind":"struct"},"5:4599:6643":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:12442:7181":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:32469:4279":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"15:269:5895":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:46884:5150":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"12:399:5875":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:1518:4804":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:13141:3269":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"24:5726:3130":{"crate_id":24,"path":["syn","expr","ExprBinary"],"kind":"struct"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:5415:4743":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:5210:8530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:49567:5462":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:13180:7407":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:13233:7419":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:10601:57740":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"6:4362:8409":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:1236:48125":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"5:8462:4581":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:2839:6218":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"12:2032:3247":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"12:2072:1797":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:1619:4807":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:6035:6006":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:5178:8512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:9259:6891":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:12585:7204":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:545:7998":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:22742:61873":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"21:2445:4618":{"crate_id":21,"path":["proc_macro","bridge","LitKind"],"kind":"enum"},"2:11262:3247":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:2218:5645":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"24:968:2819":{"crate_id":24,"path":["syn","generics","TypeGenerics"],"kind":"struct"},"24:6350:3191":{"crate_id":24,"path":["syn","ty","TypeSlice"],"kind":"struct"},"1:12281:4933":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:46541:5606":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:3155:6224":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:547:6202":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10093:6387":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"24:3725:3403":{"crate_id":24,"path":["syn","token","If"],"kind":"struct"},"1:4512:4775":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"21:3070:3356":{"crate_id":21,"path":["proc_macro","LineColumn"],"kind":"struct"},"17:12527:7195":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:8345:5667":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:6016:8725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:4728:5186":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"24:3941:3413":{"crate_id":24,"path":["syn","token","Pub"],"kind":"struct"},"1:9367:4706":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:13167:7402":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:3323:4482":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"24:5405:1832":{"crate_id":24,"path":["syn","attr","Meta"],"kind":"enum"},"6:5455:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:3341:4953":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:49855:5475":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:10390:3338":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:7782:5976":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:13908:7615":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:1597:3247":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:47131:4325":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:3648:3268":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:10571:6381":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:16005:3000":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:10688:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:51494:5263":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:3561:4766":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:24913:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"24:4669:3271":{"crate_id":24,"path":["syn","token","Add"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"24:4802:3432":{"crate_id":24,"path":["syn","token","Colon"],"kind":"struct"},"17:9786:48058":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:13481:7480":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4526:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:13221:5195":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:10826:4944":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:8512:4839":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:8949:5032":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"6:4061:8306":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:46736:5131":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:2397:13058":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"9:996:5805":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:4008:48237":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"22:817:9176":{"crate_id":22,"path":["proc_macro2","rcvec","RcVecIntoIter"],"kind":"struct"},"2:3274:3369":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:4434:8442":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:51971:8999":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:13247:7424":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:2905:6220":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:7121:6061":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:46605:5542":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"24:5464:3119":{"crate_id":24,"path":["syn","data","FieldsNamed"],"kind":"struct"},"1:9663:57941":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:37785:4058":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"21:3104:1749":{"crate_id":21,"path":["proc_macro","Group"],"kind":"struct"},"1:12043:4913":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"24:6308:3181":{"crate_id":24,"path":["syn","ty","TypeArray"],"kind":"struct"},"24:5876:61":{"crate_id":24,"path":["syn","expr","parsing","raw"],"kind":"struct"},"6:6097:8755":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:1011:3247":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"14:216:46401":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:13565:7504":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:50375:5562":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"15:0:2962":{"crate_id":15,"path":["addr2line"],"kind":"module"},"21:2840:1825":{"crate_id":21,"path":["proc_macro","bridge","TokenTree"],"kind":"enum"},"1:11161:4760":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"24:3109:3303":{"crate_id":24,"path":["syn","parse","Nothing"],"kind":"struct"},"17:13495:7487":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:13602:7512":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:593:8030":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"12:2040:4582":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"14:250:7849":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:32435:4278":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:9746:48057":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:14228:4465":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:49641:5466":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:3882:3304":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"24:4211:3420":{"crate_id":24,"path":["syn","token","Use"],"kind":"struct"},"1:9742:4978":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:50306:5485":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"17:13539:7498":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:4689:7663":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"18:866:6411":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:10976:4900":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"24:3253:3246":{"crate_id":24,"path":["syn","error","IntoIter"],"kind":"struct"},"6:4308:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:7356:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:46183:5246":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:1311:6393":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"18:829:6408":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"24:3212:127":{"crate_id":24,"path":["syn","error","Error"],"kind":"struct"},"24:4756:3429":{"crate_id":24,"path":["syn","token","Bang"],"kind":"struct"},"17:11314:6324":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:51705:5287":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:12673:5585":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"12:1666:5881":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"24:5263:3464":{"crate_id":24,"path":["syn","token","Star"],"kind":"struct"},"6:4116:8335":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12469:7185":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:4903:7670":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:11701:7031":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:3987:8271":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:8313:4199":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:51827:5264":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:6902:8861":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:46863:5148":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"24:2870:6435":{"crate_id":24,"path":["syn","lookahead","TokenMarker"],"kind":"enum"},"17:12700:7224":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"24:4988:3444":{"crate_id":24,"path":["syn","token","Gt"],"kind":"struct"},"22:831:3357":{"crate_id":22,"path":["proc_macro2","fallback","SourceFile"],"kind":"struct"},"6:4242:8363":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:12205:6665":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:51657:5302":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:10616:4196":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"24:5814:3150":{"crate_id":24,"path":["syn","expr","ExprRange"],"kind":"struct"},"16:6141:6038":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"12:1784:6638":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:6221:5002":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:10902:3304":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"24:2195:1754":{"crate_id":24,"path":["syn","punctuated","Punctuated"],"kind":"struct"},"17:10610:48263":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"22:908:1615":{"crate_id":22,"path":["proc_macro2","imp","TokenStream"],"kind":"enum"},"17:13029:7353":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:12742:6692":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:6264:4586":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:1600:8098":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"24:6005:3165":{"crate_id":24,"path":["syn","generics","PredicateEq"],"kind":"struct"},"2:46031:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:11223:4717":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"16:5998:5939":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:49172:5625":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:13138:7395":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"24:2994:3292":{"crate_id":24,"path":["syn","parse","StepCursor"],"kind":"struct"},"16:3177:6225":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"24:4923:3440":{"crate_id":24,"path":["syn","token","Dot3"],"kind":"struct"},"21:808:3362":{"crate_id":21,"path":["proc_macro","diagnostic","MultiSpan"],"kind":"trait"},"2:3396:4828":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"24:5406:185":{"crate_id":24,"path":["syn","attr","Meta","Path"],"kind":"foreign_type"},"21:3084:3357":{"crate_id":21,"path":["proc_macro","SourceFile"],"kind":"struct"},"6:6229:8825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"12:1162:5869":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"24:4935:3441":{"crate_id":24,"path":["syn","token","DotDotEq"],"kind":"struct"},"1:14096:6693":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:9240:6291":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:14795:9549":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:3758:5078":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"24:2339:3245":{"crate_id":24,"path":["syn","punctuated","IntoPairs"],"kind":"struct"},"21:3056:1824":{"crate_id":21,"path":["proc_macro","Span"],"kind":"struct"},"24:2280:3243":{"crate_id":24,"path":["syn","punctuated","Pairs"],"kind":"struct"},"2:22695:4058":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:46073:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:4783:4459":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:12069:57460":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:24946:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:4157:6382":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:10801:6378":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:50219:5552":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"24:6362:3180":{"crate_id":24,"path":["syn","ty","BareFnArg"],"kind":"struct"},"2:49883:5478":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:6135:8766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6656:6257":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:10925:48339":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:15185:4854":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:11068:6327":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:12883:5465":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"12:2036:3246":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"24:6382:2124":{"crate_id":24,"path":["syn","path","PathArguments"],"kind":"enum"},"16:6286:5888":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:9539:6352":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:22999:5311":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"24:3599:3398":{"crate_id":24,"path":["syn","token","Dyn"],"kind":"struct"},"1:15059:9138":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"24:6058:3174":{"crate_id":24,"path":["syn","lit","LitInt"],"kind":"struct"},"2:46714:5129":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:15986:2984":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:1674:4801":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:24374:5579":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:539:7995":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:46512:3349":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:10457:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:46792:9256":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:56429:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"24:4739:3428":{"crate_id":24,"path":["syn","token","At"],"kind":"struct"},"1:15170:4853":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:6774:61572":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:57777:9068":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:5101:3320":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:46190:3321":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"24:4831:3434":{"crate_id":24,"path":["syn","token","Comma"],"kind":"struct"},"21:200:4652":{"crate_id":21,"path":["proc_macro","bridge","client","Client"],"kind":"struct"},"16:6482:6252":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"22:623:3262":{"crate_id":22,"path":["proc_macro2","LexError"],"kind":"struct"},"2:46408:3349":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:4495:7658":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"18:645:6417":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:4392:8425":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:3039:62606":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:12196:7124":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"24:3214:6439":{"crate_id":24,"path":["syn","error","ErrorMessage"],"kind":"struct"},"1:1041:4201":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:1663:4800":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:7295:5974":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:11354:5435":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"24:5873:2249":{"crate_id":24,"path":["syn","expr","Index"],"kind":"struct"},"6:571:8018":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:13215:7411":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:10660:48264":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:1635:4797":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:10590:4212":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:2433:13068":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:11413:4713":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:12242:4922":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:51250:5285":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"9:234:5764":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:4639:4743":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"22:841:3356":{"crate_id":22,"path":["proc_macro2","fallback","LineColumn"],"kind":"struct"},"5:2262:5703":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:1694:8167":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:12892:7243":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:4921:3332":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"5:7219:4582":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:7118:6653":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"21:2236:4616":{"crate_id":21,"path":["proc_macro","bridge","Marked"],"kind":"struct"},"2:32635:61866":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"6:5311:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"21:478:4624":{"crate_id":21,"path":["proc_macro","bridge","rpc","PanicMessage"],"kind":"enum"},"2:49659:5467":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:49759:5471":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:10848:4698":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:4356:8406":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:6057:8752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:1662:8144":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:8122:3246":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"24:3455:3395":{"crate_id":24,"path":["syn","token","Become"],"kind":"struct"},"24:454:64207":{"crate_id":24,"path":["syn","bigint","BigInt"],"kind":"struct"},"1:16002:2997":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:6591:5139":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:2792:5956":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:4684:4752":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:50531:5498":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"18:790:6404":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"12:1703:5883":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:8323:3313":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:51226:5293":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:4509:8471":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:2861:6219":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11117:4755":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:6533:6250":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:4741:4754":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:11013:48062":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"12:2404:63900":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:11280:4867":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"17:9087:48052":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:6089:6035":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:9131:48053":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:23099:4709":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:6771:4743":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:13926:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"12:750:3247":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:5639:6023":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"5:1843:6640":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:8257:3283":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"12:952:4804":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:3340:6210":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:11174:4713":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:11130:9185":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:5948:6217":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"0:0:1638":{"crate_id":0,"path":["serde_derive"],"kind":"module"},"2:3440:5100":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:48628:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:5982:8706":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:10949:48317":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:46176:2542":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:3197:4497":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:53519:9052":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:47972:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:10455:6333":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"24:5735:3132":{"crate_id":24,"path":["syn","expr","ExprBox"],"kind":"struct"},"2:48395:3334":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:12141:4840":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"22:448:3262":{"crate_id":22,"path":["proc_macro2","imp","LexError"],"kind":"enum"},"17:11212:6355":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"5:8128:5692":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:5837:5627":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:6027:8730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:32475:4280":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:24649:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:3384:5180":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"24:5393:2095":{"crate_id":24,"path":["syn","attr","Attribute"],"kind":"struct"},"1:10700:4812":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:12183:7123":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:3372:4936":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:3686:7646":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:5498:6019":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:3029:6223":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:46588:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:4699:6645":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"24:5412:1834":{"crate_id":24,"path":["syn","attr","Meta","NameValue"],"kind":"foreign_type"},"17:12318:7145":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"14:189:9544":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:8332:5666":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"22:1005:1825":{"crate_id":22,"path":["proc_macro2","TokenTree"],"kind":"enum"},"16:5374:6013":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:53508:9051":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:10975:48315":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"22:865:1749":{"crate_id":22,"path":["proc_macro2","fallback","Group"],"kind":"struct"},"17:9587:63924":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:51457:5278":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:49399:5447":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:6858:6263":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:299:63935":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:1457:4809":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"18:744:63948":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:46668:6659":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"12:472:63901":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:45991:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"24:5157:3456":{"crate_id":24,"path":["syn","token","Rem"],"kind":"struct"},"17:11579:7007":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:11603:7011":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:3966:8263":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"5:7460:6640":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:4110:8332":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:10459:3339":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:49501:5454":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:24209:9239":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:11474:6984":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"18:152:54376":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:1459:4798":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:4716:7664":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"22:950:1760":{"crate_id":22,"path":["proc_macro2","imp","Ident"],"kind":"enum"},"17:2512:6361":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:46915:4758":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"24:5368:1749":{"crate_id":24,"path":["syn","token","Group"],"kind":"struct"},"24:5748:3135":{"crate_id":24,"path":["syn","expr","ExprCast"],"kind":"struct"},"17:11181:6956":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:8167:3246":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"24:6379:2435":{"crate_id":24,"path":["syn","path","PathSegment"],"kind":"struct"},"24:5787:3144":{"crate_id":24,"path":["syn","expr","ExprLit"],"kind":"struct"},"2:32295:5574":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:8390:5640":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:5293:8565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"24:5251:3463":{"crate_id":24,"path":["syn","token","ShrEq"],"kind":"struct"},"2:50165:5208":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:13557:7502":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"21:3009:3246":{"crate_id":21,"path":["proc_macro","token_stream","IntoIter"],"kind":"struct"},"16:4803:7667":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"24:6376:185":{"crate_id":24,"path":["syn","path","Path"],"kind":"struct"},"16:6173:6039":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:48402:3341":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:6504:6048":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"12:432:5874":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:2310:5718":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:7756:4911":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:11138:4727":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:6961:4677":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:13747:7570":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:10476:6690":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"13:120:46367":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:15107:9287":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:7687:4908":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:11286:3251":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:6343:5003":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:14027:4910":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:53598:9057":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:11433:6979":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"22:1020:1749":{"crate_id":22,"path":["proc_macro2","Group"],"kind":"struct"},"18:729:6789":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:48933:9264":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:7369:5970":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:12920:5468":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:10684:12052":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:46495:5604":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:8556:3372":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"24:2152:6792":{"crate_id":24,"path":["syn","ext","private","PeekFn"],"kind":"struct"},"12:1103:4807":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:50581:4468":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:3329:3247":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"21:1358:1824":{"crate_id":21,"path":["proc_macro","bridge","client","Span"],"kind":"struct"},"6:5301:8570":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:7999:6669":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"6:3907:8219":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:11420:5054":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"12:933:4802":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:1017:4199":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:4316:7652":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:47796:3247":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"21:2792:2470":{"crate_id":21,"path":["proc_macro","bridge","Literal"],"kind":"struct"},"16:5176:7673":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"12:880:4580":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:10122:5421":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:7659:6066":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:49993:5197":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:14229:4776":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:11810:7061":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"24:6420:3195":{"crate_id":24,"path":["syn","path","ParenthesizedGenericArguments"],"kind":"struct"},"17:13887:7609":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:16010:3005":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"22:1050:1823":{"crate_id":22,"path":["proc_macro2","Spacing"],"kind":"enum"},"12:2052:4825":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:46935:5105":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:46465:5609":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"24:6134:1973":{"crate_id":24,"path":["syn","derive","DataUnion"],"kind":"struct"},"2:3423:5091":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:10598:48262":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:50186:5210":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:11381:6961":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:6268:8840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:2866:3273":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:52105:5308":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"14:194:46395":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:11489:4674":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:12431:7180":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"24:5427:3118":{"crate_id":24,"path":["syn","attr","MetaNameValue"],"kind":"struct"},"12:162:5873":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:2171:4825":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:12417:7178":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:10707:13063":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:9636:48055":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:3339:4952":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:9198:57745":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:8071:5231":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:10732:4727":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"5:6695:5650":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:13094:7390":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:50322:5493":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:3920:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:46095:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:14926:6694":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:7264:6640":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:1764:8195":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:46894:5151":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:8302:5665":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:10831:4697":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:7200:5986":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:47660:1808":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:24979:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:15021:4913":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:4198:7650":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:12496:7189":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"24:3689:130":{"crate_id":24,"path":["syn","token","Fn"],"kind":"struct"},"17:13257:7425":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"21:0:1037":{"crate_id":21,"path":["proc_macro"],"kind":"module"},"21:3155:2470":{"crate_id":21,"path":["proc_macro","Literal"],"kind":"struct"},"24:5969:2445":{"crate_id":24,"path":["syn","generics","TraitBoundModifier"],"kind":"enum"},"17:12383:7175":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:10878:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"24:5862:3162":{"crate_id":24,"path":["syn","expr","ExprYield"],"kind":"struct"},"24:5409:1833":{"crate_id":24,"path":["syn","attr","Meta","List"],"kind":"foreign_type"},"1:14581:9286":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:53675:9060":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"20:47:2820":{"crate_id":20,"path":["quote","format_ident"],"kind":"macro"},"2:49890:5479":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:12957:7294":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:46534:5479":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:9035:5230":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"24:5467:3120":{"crate_id":24,"path":["syn","data","FieldsUnnamed"],"kind":"struct"},"24:4265:3423":{"crate_id":24,"path":["syn","token","While"],"kind":"struct"},"17:12250:7132":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"24:2069:3304":{"crate_id":24,"path":["syn","buffer","Cursor"],"kind":"struct"},"2:48388:2242":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"11:0:2959":{"crate_id":11,"path":["adler"],"kind":"module"},"6:580:8024":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:7323:5989":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"11:54:5859":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"22:0:1613":{"crate_id":22,"path":["proc_macro2"],"kind":"module"},"16:6026:5964":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:46904:5152":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:14310:4198":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:23036:5121":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"20:528:3979":{"crate_id":20,"path":["quote","__private","IdentFragmentAdapter"],"kind":"struct"},"16:5326:6010":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:3435:5097":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:5260:8553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:13306:7436":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:14543:4679":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:15041:4933":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:2177:4826":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"24:940:64158":{"crate_id":24,"path":["syn","generics","LifetimesMut"],"kind":"struct"},"16:6518:5983":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:1530:4806":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:11305:7231":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:6130:6037":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:2062:4743":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:3427:5093":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"24:4947:124":{"crate_id":24,"path":["syn","token","Eq"],"kind":"struct"},"2:51751:5275":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:3265:6229":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:1712:8174":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"24:5186:3458":{"crate_id":24,"path":["syn","token","FatArrow"],"kind":"struct"},"24:5842:3157":{"crate_id":24,"path":["syn","expr","ExprTuple"],"kind":"struct"},"2:12072:5456":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:8285:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:12127:4837":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"24:3707:3402":{"crate_id":24,"path":["syn","token","For"],"kind":"struct"},"18:782:6810":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:13916:4909":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:10364:6362":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:3960:8262":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"18:169:54377":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:2269:4509":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:52419:5276":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:1651:4810":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"24:4894:3438":{"crate_id":24,"path":["syn","token","Dot"],"kind":"struct"},"17:13331:7444":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:3770:7648":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"13:232:7894":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:9087:4926":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:24400:5528":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:14017:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:7754:6068":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:4471:4778":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:3894:5686":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"24:3617:3399":{"crate_id":24,"path":["syn","token","Else"],"kind":"struct"},"6:4218:8361":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:10015:48110":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:2395:13057":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"21:1222:1615":{"crate_id":21,"path":["proc_macro","bridge","client","TokenStream"],"kind":"struct"},"24:5714:3127":{"crate_id":24,"path":["syn","expr","ExprAssignOp"],"kind":"struct"},"16:7110:6060":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"12:114:63904":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:5427:6016":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:5034:3314":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:2159:3246":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:48182:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:6050:6034":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:4467:7657":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:11209:4715":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:13595:7510":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:4160:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:24880:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:46723:4727":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:5274:8563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:8379:5639":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:15989:2986":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"18:0:2965":{"crate_id":18,"path":["memchr"],"kind":"module"},"24:2864:3308":{"crate_id":24,"path":["syn","lookahead","Peek"],"kind":"trait"},"2:24814:4204":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13361:7449":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:5331:8593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13507:7490":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:8954:6328":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"24:3815:2144":{"crate_id":24,"path":["syn","token","Macro"],"kind":"struct"},"6:4464:8457":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"21:1729:1841":{"crate_id":21,"path":["proc_macro","bridge","symbol","Symbol"],"kind":"struct"},"5:8183:5638":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:46754:5133":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:5749:4686":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:10814:6379":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"21:2716:2154":{"crate_id":21,"path":["proc_macro","bridge","Punct"],"kind":"struct"},"2:56481:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1558:8070":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:8175:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"9:41:5789":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:542:5945":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:610:1391":{"crate_id":1,"path":["std","thread"],"kind":"module"},"1:6721:8747":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:9795:6686":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"16:6159:5971":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:9561:6329":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:9790:6685":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"2:53534:9053":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:47804:3251":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:5788:6640":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"24:2312:3244":{"crate_id":24,"path":["syn","punctuated","PairsMut"],"kind":"struct"},"16:7449:5977":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:47821:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"21:2966:6434":{"crate_id":21,"path":["proc_macro","diagnostic","Children"],"kind":"struct"},"1:3351:4958":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:5240:8540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:4098:8326":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:11246:4718":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"5:3336:4826":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:2981:6232":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:5443:6017":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"21:107:4623":{"crate_id":21,"path":["proc_macro","bridge","buffer","Buffer"],"kind":"struct"},"1:6883:4673":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:5819:4684":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"24:6424:2193":{"crate_id":24,"path":["syn","path","QSelf"],"kind":"struct"},"24:4067:3416":{"crate_id":24,"path":["syn","token","Super"],"kind":"struct"},"17:13953:7621":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:5412:6015":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:6873:3681":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:10586:48261":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:7856:6657":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"12:2066:4827":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:48972:9265":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"12:1183:5870":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:6034:8734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:5216:8531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:3310:3370":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:13584:7509":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:5289:5967":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:5008:4711":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:23823:4708":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"24:3021:2744":{"crate_id":24,"path":["syn","parse","Unexpected"],"kind":"enum"},"16:6381:5981":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:8849:6351":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:3431:5095":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:13452:7472":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:5741:4685":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"12:856:4798":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4416:8433":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:51374:8989":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:7247:6001":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:4432:4776":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:8932:4258":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:11256:6957":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:46783:5136":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:10166:6905":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:4397:4970":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:6679:5649":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:23012:4666":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:51873:5268":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:3877:8201":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:12674:7222":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:9408:3684":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:2508:4464":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:14235:4774":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"21:553:6634":{"crate_id":21,"path":["proc_macro","bridge","scoped_cell","replace","PutBackOnDrop"],"kind":"struct"},"21:344:63998":{"crate_id":21,"path":["proc_macro","bridge","handle","OwnedStore"],"kind":"struct"},"16:3908:7649":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:15491:5899":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:8250:4783":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:11082:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"24:4877:3437":{"crate_id":24,"path":["syn","token","Dollar"],"kind":"struct"},"6:5541:8668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:8210:3246":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:10198:48123":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:8001:5185":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:46698:5130":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"9:0:2957":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:586:8027":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12130:7116":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:4942:7671":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:47753:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:14942:6695":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:4386:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:5721:6028":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:12105:5457":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:13785:7579":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:9948:48061":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"24:5946:3163":{"crate_id":24,"path":["syn","generics","BoundLifetimes"],"kind":"struct"},"2:46593:5541":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:10530:6945":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:15997:2992":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:46853:5147":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"21:1253:3357":{"crate_id":21,"path":["proc_macro","bridge","client","SourceFile"],"kind":"struct"},"24:3959:3321":{"crate_id":24,"path":["syn","token","Ref"],"kind":"struct"},"16:5516:6200":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:4198:8359":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:10318:6335":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:51334:5294":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"24:4175:3418":{"crate_id":24,"path":["syn","token","Unsafe"],"kind":"struct"},"5:6482:4582":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:49845:4761":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:6604:6050":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:9084:5019":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:6104:4994":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"14:244:9226":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:6120:8762":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:49713:5442":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:49456:5130":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:15991:2988":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:46423:5330":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:2883:6238":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:1132:4735":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:52229:5300":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"24:3833:2469":{"crate_id":24,"path":["syn","token","Match"],"kind":"struct"},"6:1634:8119":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"24:972:3168":{"crate_id":24,"path":["syn","generics","Turbofish"],"kind":"struct"},"6:6214:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:13763:7574":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"24:160:4666":{"crate_id":24,"path":["syn","token","private","Sealed"],"kind":"trait"},"16:7079:6057":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:1642:4809":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:50087:5205":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"18:820:6407":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"24:6337:2196":{"crate_id":24,"path":["syn","ty","TypePath"],"kind":"struct"},"24:5810:2024":{"crate_id":24,"path":["syn","expr","ExprPath"],"kind":"struct"},"17:12687:7223":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:8670:5012":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:2155:3247":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:53461:5269":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:24030:5510":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:10390:1841":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"24:5718:3128":{"crate_id":24,"path":["syn","expr","ExprAsync"],"kind":"struct"},"2:24249:5371":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:3839:6640":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:7141:6063":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4127:8340":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:7741:6067":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:10775:48236":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:6331:5887":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:46451:5333":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:4230:8362":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:39004:4053":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:3103:6234":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:10937:48340":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"21:2742:1760":{"crate_id":21,"path":["proc_macro","bridge","Ident"],"kind":"struct"},"1:7951:4197":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"2:49795:5473":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:46555:5608":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:11666:4882":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:14634:57465":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:11922:7076":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:4515:5677":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"2:23287:4666":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13293:7430":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:10443:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"16:3007:6222":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:894:4210":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:5419:8639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:11431:5437":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"24:5722:3129":{"crate_id":24,"path":["syn","expr","ExprAwait"],"kind":"struct"},"2:56442:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:15199:4855":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:23835:61750":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:53423:5304":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:2458:13074":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:12482:7186":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:14568:4697":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"24:6126:1969":{"crate_id":24,"path":["syn","derive","DataStruct"],"kind":"struct"},"6:4208:8360":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"24:5731:3131":{"crate_id":24,"path":["syn","expr","ExprBlock"],"kind":"struct"},"6:6007:8724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:527:7990":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:48661:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:51160:8987":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:4028:8292":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"24:4698:3425":{"crate_id":24,"path":["syn","token","And"],"kind":"struct"},"17:12758:7234":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:49874:5477":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:14238:5500":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:3461:6231":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:10401:9553":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"18:811:6406":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:7531:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"24:6110:1765":{"crate_id":24,"path":["syn","derive","Data"],"kind":"enum"},"2:11311:4760":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"24:5761:3138":{"crate_id":24,"path":["syn","expr","ExprField"],"kind":"struct"},"24:924:64157":{"crate_id":24,"path":["syn","generics","TypeParamsMut"],"kind":"struct"},"2:52341:5288":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"24:5431:1835":{"crate_id":24,"path":["syn","attr","NestedMeta"],"kind":"enum"},"2:52529:5265":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12573:7202":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:1488:4799":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:10455:3342":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:13917:7617":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:6003:5059":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"10:0:2958":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:22723:61752":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"9:692:5739":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:15990:2987":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:7465:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:28191:5249":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"24:5476:3124":{"crate_id":24,"path":["syn","data","Visibility"],"kind":"enum"},"17:10240:6287":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"24:5505:2191":{"crate_id":24,"path":["syn","expr","Expr"],"kind":"enum"},"22:941:1749":{"crate_id":22,"path":["proc_macro2","imp","Group"],"kind":"enum"},"6:1626:8114":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"24:2746:4666":{"crate_id":24,"path":["syn","sealed","lookahead","Sealed"],"kind":"trait"},"16:5923:1790":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"24:5432:1832":{"crate_id":24,"path":["syn","attr","NestedMeta","Meta"],"kind":"foreign_type"},"24:6050:1964":{"crate_id":24,"path":["syn","lit","LitStr"],"kind":"struct"},"2:48098:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"11:46:7899":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"6:6205:8817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:6925:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:51405:5286":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:1944:2190":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:49813:5474":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:5668:6025":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"9:963:5804":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"21:3150:1760":{"crate_id":21,"path":["proc_macro","Ident"],"kind":"struct"},"17:11725:7033":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:46156:4734":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:10678:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:50151:5207":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:14799:4667":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:11607:4880":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"20:193:3710":{"crate_id":20,"path":["quote","__private","ThereIsNoIteratorInRepetition"],"kind":"struct"},"12:2059:4826":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:11393:5436":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:48140:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:10611:4187":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:15009:4912":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:1537:8062":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:15736:6697":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:626:8048":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:11148:4758":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:46824:5140":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"24:5753:3136":{"crate_id":24,"path":["syn","expr","ExprClosure"],"kind":"struct"},"24:3905:3411":{"crate_id":24,"path":["syn","token","Override"],"kind":"struct"},"6:5204:8527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:13369:7451":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:48646:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"5:3759:3247":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:10723:9549":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"24:4031:2513":{"crate_id":24,"path":["syn","token","Static"],"kind":"struct"},"17:10464:6332":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:5685:6026":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:11352:9276":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"24:5894:1768":{"crate_id":24,"path":["syn","generics","Generics"],"kind":"struct"},"6:4373:8417":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:51204:5305":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:6967:8875":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:1551:8067":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"24:3089:3299":{"crate_id":24,"path":["syn","parse","Parser"],"kind":"trait"},"2:56403:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:4474:8458":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"24:3977:206":{"crate_id":24,"path":["syn","token","Return"],"kind":"struct"},"2:14289:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:15078:4849":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:10595:61740":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:820:6687":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:46806:5137":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:22708:61752":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"22:158:54614":{"crate_id":22,"path":["proc_macro2","rcvec","RcVecBuilder"],"kind":"struct"},"16:4351:7653":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:3970:6640":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:4599:7660":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:16004:2999":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:4332:8394":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:15480:5899":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"24:5802:3148":{"crate_id":24,"path":["syn","expr","ExprMethodCall"],"kind":"struct"},"17:9517:2735":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:2733:5941":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:6949:6267":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"24:5975:2109":{"crate_id":24,"path":["syn","generics","WhereClause"],"kind":"struct"},"1:8051:4199":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"17:13859:7600":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:8404:4199":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"24:6356:3193":{"crate_id":24,"path":["syn","ty","TypeTuple"],"kind":"struct"},"16:5784:6030":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"18:136:54375":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"24:6340:3189":{"crate_id":24,"path":["syn","ty","TypePtr"],"kind":"struct"},"6:5439:8645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:6630:6255":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:51803:5282":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11105:4753":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"24:2807:6442":{"crate_id":24,"path":["syn","thread","ThreadBound"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:6643:6256":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4340:8398":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:5669:4665":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:5362:6012":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"18:885:6412":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"21:300:9338":{"crate_id":21,"path":["proc_macro","bridge","fxhash","FxHasher"],"kind":"struct"},"6:5398:8627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:4287:8372":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:12015:7094":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"24:6062:3169":{"crate_id":24,"path":["syn","lit","LitBool"],"kind":"struct"},"17:9836:63931":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:5447:8647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:12048:7104":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:51559:5307":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:12160:4841":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:49741:5470":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:47736:4477":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:10988:48314":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:10723:4817":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"20:357:2472":{"crate_id":20,"path":["quote","spanned","Spanned"],"kind":"trait"},"21:2683:1749":{"crate_id":21,"path":["proc_macro","bridge","Group"],"kind":"struct"},"17:13323:7441":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:565:8015":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:16011:3006":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:12247:5024":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:4306:3251":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:48691:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:3951:4580":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:5165:3323":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:10690:4811":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:10039:48112":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:8153:62531":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:2456:6462":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:8510:5142":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"24:3923:3412":{"crate_id":24,"path":["syn","token","Priv"],"kind":"struct"},"17:13975:7627":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:1524:4805":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:3972:8264":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:50363:4937":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:49899:3349":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:8505:4838":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:5959:5959":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:23624:5122":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:12222:7128":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:9756:63933":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:23089:4666":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:1472:4808":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:16007:3002":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:4271:7651":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"24:5340:3590":{"crate_id":24,"path":["syn","token","Bracket"],"kind":"struct"},"6:6908:8862":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:10187:48124":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"22:155:9175":{"crate_id":22,"path":["proc_macro2","rcvec","RcVec"],"kind":"struct"},"6:607:8038":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"24:1278:6451":{"crate_id":24,"path":["syn","lit","LitFloatRepr"],"kind":"struct"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:14558:9278":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"24:6407:2451":{"crate_id":24,"path":["syn","path","AngleBracketedGenericArguments"],"kind":"struct"},"1:4032:4902":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"24:5798:3147":{"crate_id":24,"path":["syn","expr","ExprMatch"],"kind":"struct"},"1:11534:4869":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:5366:8614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"19:117:6806":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"17:11907:7072":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"24:3491:98":{"crate_id":24,"path":["syn","token","Break"],"kind":"struct"},"2:10400:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:11096:4784":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"21:3129:2154":{"crate_id":21,"path":["proc_macro","Punct"],"kind":"struct"},"1:15211:4861":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:12209:7126":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"24:4773:3430":{"crate_id":24,"path":["syn","token","Caret"],"kind":"struct"},"7:85:45730":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:11168:4761":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:12070:7105":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:24284:8890":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:13549:7501":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:10894:4768":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"24:161:4127":{"crate_id":24,"path":["syn","token","private","WithSpan"],"kind":"struct"},"2:47106:9260":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"12:764:3251":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"21:2996:1615":{"crate_id":21,"path":["proc_macro","TokenStream"],"kind":"struct"},"24:5996:2440":{"crate_id":24,"path":["syn","generics","PredicateType"],"kind":"struct"},"2:2283:5257":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:7639:4905":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:13938:7620":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"24:2455:3253":{"crate_id":24,"path":["syn","punctuated","PrivateIterMut"],"kind":"struct"},"17:9988:48109":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"5:69:4471":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:10104:6388":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"24:5297:3466":{"crate_id":24,"path":["syn","token","SubEq"],"kind":"struct"},"24:6009:1836":{"crate_id":24,"path":["syn","lit","Lit"],"kind":"enum"},"1:3200:4751":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:5941:6033":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:8506:5143":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:1446:4797":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"24:3401:3392":{"crate_id":24,"path":["syn","token","Async"],"kind":"struct"},"24:5087:3451":{"crate_id":24,"path":["syn","token","OrOr"],"kind":"struct"},"24:6353:3192":{"crate_id":24,"path":["syn","ty","TypeTraitObject"],"kind":"struct"},"5:1607:3251":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:9028:4460":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:7141:3672":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"22:1100:3246":{"crate_id":22,"path":["proc_macro2","token_stream","IntoIter"],"kind":"struct"},"17:10082:6386":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:1544:8065":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"24:4193:3419":{"crate_id":24,"path":["syn","token","Unsized"],"kind":"struct"},"17:607:48046":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"24:5978:1895":{"crate_id":24,"path":["syn","generics","WherePredicate"],"kind":"enum"},"2:46117:3277":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"24:4103:224":{"crate_id":24,"path":["syn","token","Try"],"kind":"struct"},"16:7471:5965":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:12257:4931":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:13721:7561":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:12649:5620":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"24:5850:3159":{"crate_id":24,"path":["syn","expr","ExprUnary"],"kind":"struct"},"16:6907:6053":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:13472:7479":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"24:6391:2127":{"crate_id":24,"path":["syn","path","GenericArgument"],"kind":"enum"},"16:3221:6227":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:6514:5138":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:7826:2542":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:10253:6290":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"24:6089:2144":{"crate_id":24,"path":["syn","mac","Macro"],"kind":"struct"},"1:8762:5022":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"18:651:6414":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:5875:6648":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"16:5530:6020":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"22:999:1824":{"crate_id":22,"path":["proc_macro2","Span"],"kind":"struct"},"24:2391:3249":{"crate_id":24,"path":["syn","punctuated","PrivateIter"],"kind":"struct"},"9:927:45827":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:8113:4470":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"13:0:2954":{"crate_id":13,"path":["std_detect"],"kind":"module"},"24:5435:1836":{"crate_id":24,"path":["syn","attr","NestedMeta","Lit"],"kind":"foreign_type"},"2:49491:5453":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:2543:6331":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:3406:4829":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:3342:3465":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:50314:5490":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"6:6688:8858":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:14948:6696":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:4402:8428":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"12:353:9228":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:6931:8868":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:24338:40226":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:50176:5209":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:3581:3256":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:4516:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:15373:4985":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:12716:7226":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:49511:5455":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:5273:6892":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4075:8314":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:10304:6320":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:7721:5980":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:11466:5438":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"9:1056:5799":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:13404:7457":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"9:686:5737":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:12011:4910":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"24:4157:1797":{"crate_id":24,"path":["syn","token","Union"],"kind":"struct"},"24:5790:3145":{"crate_id":24,"path":["syn","expr","ExprLoop"],"kind":"struct"},"6:4055:8304":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"24:2448:3251":{"crate_id":24,"path":["syn","punctuated","IterMut"],"kind":"struct"},"17:13660:7554":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:7649:4587":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"24:6330:3186":{"crate_id":24,"path":["syn","ty","TypeMacro"],"kind":"struct"},"1:5982:5056":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:3366:6235":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:50022:5203":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:53545:9054":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"24:5739:3133":{"crate_id":24,"path":["syn","expr","ExprBreak"],"kind":"struct"},"2:10453:3341":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:3658:6667":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:15996:2991":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:46844:5146":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:6310:6042":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:12087:9134":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"7:38:45723":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:8997:4904":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:13954:4911":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:53385:5284":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:10127:6335":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:3380:5178":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:12403:6462":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:12455:7183":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:48056:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"24:5964:2442":{"crate_id":24,"path":["syn","generics","TraitBound"],"kind":"struct"},"1:12029:4912":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"24:6412:2139":{"crate_id":24,"path":["syn","path","Binding"],"kind":"struct"},"2:52495:5283":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:12262:7133":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"24:5326:2463":{"crate_id":24,"path":["syn","token","Brace"],"kind":"struct"},"6:4038:8298":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"12:2398:7895":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"9:603:9349":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:1486:4810":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"24:2878:1829":{"crate_id":24,"path":["syn","parse"],"kind":"module"},"16:6342:6043":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:4051:4733":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:900:4211":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:11463:4670":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:7702:5978":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:9064:48051":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:50342:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:8412:4879":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"12:0:2960":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:7033:5141":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"24:3383:3391":{"crate_id":24,"path":["syn","token","As"],"kind":"struct"},"1:8863:57745":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"24:5743:3134":{"crate_id":24,"path":["syn","expr","ExprCall"],"kind":"struct"},"22:1071:2470":{"crate_id":22,"path":["proc_macro2","Literal"],"kind":"struct"},"2:3103:4666":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:13774:7578":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"12:2419:3283":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:13522:7494":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"14:56:1760":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:10390:6334":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:4020:8289":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:15465:57739":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:50330:5492":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:4440:8443":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:10886:4965":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:12634:7217":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"24:6332:3187":{"crate_id":24,"path":["syn","ty","TypeNever"],"kind":"struct"},"21:2957:3360":{"crate_id":21,"path":["proc_macro","diagnostic","Diagnostic"],"kind":"struct"},"2:3559:4462":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:11168:9186":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:52465:5280":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:1493:4800":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"12:843:4797":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:7355:5969":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:11494:6994":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:294:63939":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:1740:8186":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:2751:4728":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"24:6001:3166":{"crate_id":24,"path":["syn","generics","PredicateLifetime"],"kind":"struct"},"24:6060:3173":{"crate_id":24,"path":["syn","lit","LitFloat"],"kind":"struct"},"6:4425:8436":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:50488:8986":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:4748:4757":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:1157:12054":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"24:5133:3454":{"crate_id":24,"path":["syn","token","RArrow"],"kind":"struct"},"5:1644:4798":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:6709:4688":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:3077:6281":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:11263:4719":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:14624:4753":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:88:40796":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"24:6416:2141":{"crate_id":24,"path":["syn","path","Constraint"],"kind":"struct"},"1:2188:1797":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:3368:3272":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"24:4283:237":{"crate_id":24,"path":["syn","token","Yield"],"kind":"struct"},"1:12017:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:6665:8847":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"21:1315:3360":{"crate_id":21,"path":["proc_macro","bridge","client","Diagnostic"],"kind":"struct"},"6:4012:8287":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"24:5449:1816":{"crate_id":24,"path":["syn","data","Fields"],"kind":"enum"},"2:7810:2587":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:9826:6335":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:5649:6024":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:10851:6941":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"24:5215:3460":{"crate_id":24,"path":["syn","token","Shl"],"kind":"struct"},"24:3887:3410":{"crate_id":24,"path":["syn","token","Mut"],"kind":"struct"},"24:964:3167":{"crate_id":24,"path":["syn","generics","ImplGenerics"],"kind":"struct"},"2:14:2602":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:4410:8432":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:6595:5982":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:5567:8683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:4732:60641":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:24301:40225":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:49971:5194":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:2397:3330":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:11514:6995":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:23933:5120":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:11085:6357":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:15984:2982":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:4840:7668":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13899:7611":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"24:5706:3125":{"crate_id":24,"path":["syn","expr","ExprArray"],"kind":"struct"},"18:754:63946":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:1152:12053":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:12262:4849":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:1215:5700":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:24276:8889":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:47812:3246":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:48925:4818":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:23093:4707":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:4443:3247":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:49482:5452":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"24:4819:3433":{"crate_id":24,"path":["syn","token","Colon2"],"kind":"struct"},"16:7309:5972":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:11371:4987":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:24748:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:4532:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:46548:5607":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:10447:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"15:230:5890":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"24:2881:6437":{"crate_id":24,"path":["syn","parse","discouraged","Speculative"],"kind":"trait"},"2:48765:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"20:63:3104":{"crate_id":20,"path":["quote","ident_fragment","IdentFragment"],"kind":"trait"},"1:2183:4827":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:46414:9248":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:11671:7027":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:12252:4930":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:9529:5193":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"24:2132:6438":{"crate_id":24,"path":["syn","ext","IdentExt"],"kind":"trait"},"14:11:9544":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"22:823:1615":{"crate_id":22,"path":["proc_macro2","fallback","TokenStream"],"kind":"struct"},"24:3419:3393":{"crate_id":24,"path":["syn","token","Auto"],"kind":"struct"},"5:1694:5698":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"21:3005:3351":{"crate_id":21,"path":["proc_macro","ExpandError"],"kind":"struct"},"24:5227:3461":{"crate_id":24,"path":["syn","token","ShlEq"],"kind":"struct"},"2:3297:4052":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:10440:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"22:799:3304":{"crate_id":22,"path":["proc_macro2","parse","Cursor"],"kind":"struct"},"6:6914:8863":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:6549:5985":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:49609:5438":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:5111:3321":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:4411:7655":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:4346:8400":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:48962:4879":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"24:3365:3390":{"crate_id":24,"path":["syn","token","Abstract"],"kind":"struct"},"24:5899:2192":{"crate_id":24,"path":["syn","generics","GenericParam"],"kind":"enum"},"1:12740:4944":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:8156:4199":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"24:5498:3121":{"crate_id":24,"path":["syn","data","VisCrate"],"kind":"struct"},"24:5423:3117":{"crate_id":24,"path":["syn","attr","MetaList"],"kind":"struct"},"2:4965:3306":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"24:5917:2410":{"crate_id":24,"path":["syn","generics","TypeParam"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:10422:48166":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"12:2269:4808":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:13227:5191":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:48679:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:47669:3247":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:12119:3247":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:6250:8837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:15313:4720":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:4666:4699":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:12348:7164":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:13463:7476":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:7279:57758":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:23296:5262":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:51272:5273":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:5833:5629":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:10669:12049":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:1669:8148":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:6659:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:4538:8484":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:9930:63926":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:5030:2173":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:7025:5960":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:14593:4946":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"24:3761:3405":{"crate_id":24,"path":["syn","token","In"],"kind":"struct"},"24:6334:3188":{"crate_id":24,"path":["syn","ty","TypeParen"],"kind":"struct"},"5:5889:6651":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"16:4660:7662":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:9618:6683":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:1653:4799":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"18:637:6810":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:10058:6392":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:4434:4777":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:8145:5693":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"24:4727:3427":{"crate_id":24,"path":["syn","token","AndEq"],"kind":"struct"},"17:9431:6896":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:52002:9000":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:3402:5957":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:11563:7006":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:5460:6018":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:6557:6049":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:51356:5298":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"24:5854:3160":{"crate_id":24,"path":["syn","expr","ExprUnsafe"],"kind":"struct"},"24:3851:3408":{"crate_id":24,"path":["syn","token","Mod"],"kind":"struct"},"24:6232:1746":{"crate_id":24,"path":["syn","ty","Type"],"kind":"enum"},"6:1748:8190":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:6896:8860":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:16000:2995":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"24:5099:3452":{"crate_id":24,"path":["syn","token","Pound"],"kind":"struct"},"17:12746:7231":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:50334:5486":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:7208:6065":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:513:1750":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:533:7993":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:5522:4992":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:46007:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:11504:5439":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:46149:5079":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:10727:1916":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:6433:6045":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"20:431:3865":{"crate_id":20,"path":["quote","__private","RepInterp"],"kind":"struct"},"1:1075:2255":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:5605:6022":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:3396:1797":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:4142:8346":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:10558:48260":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:15968:57461":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:12557:7198":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:3375:5643":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:12080:57751":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"1:5757:4687":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"24:5929:3164":{"crate_id":24,"path":["syn","generics","ConstParam"],"kind":"struct"},"1:3736:4769":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:1149:12051":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:8434:5685":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:9676:63927":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:11516:3673":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"24:916:64161":{"crate_id":24,"path":["syn","generics","TypeParams"],"kind":"struct"},"1:15952:9360":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:56046:5253":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:2959:6221":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:53488:9049":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:11467:8734":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:11591:7010":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:521:7987":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:5974:5055":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:6277:6041":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:4473:4779":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:3775:3328":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:12646:7218":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:3717:5536":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10913:48338":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:15115:4919":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:5257:6891":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:8445:4580":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:11545:5441":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"18:661:6418":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:5433:8642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"24:5116:3453":{"crate_id":24,"path":["syn","token","Question"],"kind":"struct"},"2:3411:3460":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"24:2975:1830":{"crate_id":24,"path":["syn","parse","Parse"],"kind":"trait"},"17:10503:6337":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:15033:57458":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:49330:5440":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:13976:61646":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:12943:5469":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:14401:4469":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:15957:12056":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:51512:8991":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10981:4770":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:50338:5487":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:5547:8669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:6979:8877":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:3981:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"24:5239:3462":{"crate_id":24,"path":["syn","token","Shr"],"kind":"struct"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:53027:5277":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:1438:3246":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:12057:4914":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:49381:5445":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:46764:5134":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:11409:6965":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6931:6266":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:10147:6903":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:13232:5196":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:13735:7567":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:4321:8388":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"12:815:4801":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:10899:48329":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:46774:5135":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:2793:4729":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:13585:57946":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"24:658:6787":{"crate_id":24,"path":["syn","expr","parsing","AllowStruct"],"kind":"struct"},"2:23241:4666":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"24:4715:3426":{"crate_id":24,"path":["syn","token","AndAnd"],"kind":"struct"},"17:11530:6999":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:13421:7464":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"24:4911:3439":{"crate_id":24,"path":["syn","token","Dot2"],"kind":"struct"},"16:5855:6031":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:51435:5274":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:11985:7091":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"24:2059:3305":{"crate_id":24,"path":["syn","buffer","TokenBuffer"],"kind":"struct"},"1:11584:4879":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"22:24:9293":{"crate_id":22,"path":["proc_macro2","marker","ProcMacroAutoTraits"],"kind":"struct"},"9:157:5756":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:49561:5461":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:11142:6955":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:0:2964":{"crate_id":17,"path":["object"],"kind":"module"},"24:5145:3455":{"crate_id":24,"path":["syn","token","LArrow"],"kind":"struct"},"2:5156:3322":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"24:3210:205":{"crate_id":24,"path":["syn","error","Result"],"kind":"typedef"},"2:50114:5206":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:3740:5074":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:3494:6822":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:53499:9050":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:46475:5610":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:6719:8745":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:2484:48155":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:3044:3410":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:3389:5082":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:10461:3340":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:7831:6653":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:6483:4703":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:47846:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:13281:7427":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:3376:5176":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:7637:2095":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:1621:8112":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:49390:5446":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:13430:109":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:9757:4979":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:53339:5266":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"24:3869:3409":{"crate_id":24,"path":["syn","token","Move"],"kind":"struct"},"6:4454:8451":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:2200:6642":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"9:776:5786":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:49577:2735":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:1235:5701":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:12771:57754":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"1:13420:4999":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"24:6094:3176":{"crate_id":24,"path":["syn","mac","MacroDelimiter"],"kind":"enum"},"1:1501:4802":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:5149:8488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:11945:7083":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"21:3134:1823":{"crate_id":21,"path":["proc_macro","Spacing"],"kind":"enum"},"1:5811:4691":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"24:5710:3126":{"crate_id":24,"path":["syn","expr","ExprAssign"],"kind":"struct"},"16:7169:5984":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:6099:6036":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:3194:4945":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:5880:5050":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"2:14122:61693":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"17:8902:48047":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:12731:7230":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:5085:4868":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"12:183:5877":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:11365:4986":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:1606:8100":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:47888:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"18:694:6420":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:47745:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"24:4049:1775":{"crate_id":24,"path":["syn","token","Struct"],"kind":"struct"},"1:15999:2994":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"18:704:6810":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:13779:4918":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"4:0:2955":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:51605:5295":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:4871:7669":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:2754:6211":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"24:6345:3190":{"crate_id":24,"path":["syn","ty","TypeReference"],"kind":"struct"},"1:14601:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:15394:4992":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:7063:6056":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:8547:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:11676:3247":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:10545:48259":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"18:739:63949":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:8663:5010":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"24:5766:3139":{"crate_id":24,"path":["syn","expr","ExprForLoop"],"kind":"struct"},"2:11559:5442":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"18:766:6820":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:52885:5309":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:3337:3271":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"24:3995:3414":{"crate_id":24,"path":["syn","token","SelfType"],"kind":"struct"},"16:4975:7672":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:11445:5005":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"24:3136:9562":{"crate_id":24,"path":["syn","print","TokensOrDefault"],"kind":"struct"},"1:6814:4671":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:48749:4143":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"24:4790:3431":{"crate_id":24,"path":["syn","token","CaretEq"],"kind":"struct"},"24:3635:1773":{"crate_id":24,"path":["syn","token","Enum"],"kind":"struct"},"2:49419:5449":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:10971:4899":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"24:3263:3247":{"crate_id":24,"path":["syn","error","Iter"],"kind":"struct"},"24:3581:3397":{"crate_id":24,"path":["syn","token","Do"],"kind":"struct"},"16:6407:6044":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:14563:9280":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:49535:5547":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:12065:9277":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"6:4493:8466":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:46835:5145":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:3478:6230":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:5582:8694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:4277:8365":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:994:5691":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:601:8035":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:12300:4934":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:56468:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"24:6104:1616":{"crate_id":24,"path":["syn","derive","DeriveInput"],"kind":"struct"},"9:900:7950":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:12620:7216":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:11573:5443":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"9:27:5788":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:48941:5244":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:16006:3001":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4048:8301":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:12360:7166":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:8616:3371":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"5:1618:3246":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"9:1020:5806":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:1195:63871":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"24:5354:2143":{"crate_id":24,"path":["syn","token","Paren"],"kind":"struct"},"17:12003:7092":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:48409:3342":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"24:5005:3445":{"crate_id":24,"path":["syn","token","Le"],"kind":"struct"},"24:6056:3172":{"crate_id":24,"path":["syn","lit","LitChar"],"kind":"struct"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:13794:7581":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:2194:4277":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:4743:7665":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:1721:8180":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:12228:5018":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:49591:4760":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:3051:6280":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:3933:8239":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:3370:4825":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12512:7191":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:52183:5296":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:10641:4198":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:10048:48126":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:11754:7044":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:11784:7056":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:8307:61972":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"16:2772:6244":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:10445:6804":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"21:3109:3263":{"crate_id":21,"path":["proc_macro","Delimiter"],"kind":"enum"},"1:11693:4885":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"24:5794:3146":{"crate_id":24,"path":["syn","expr","ExprMacro"],"kind":"struct"},"2:46518:5605":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"24:6366:3194":{"crate_id":24,"path":["syn","ty","Variadic"],"kind":"struct"},"2:47930:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"12:979:4806":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"12:379:5876":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:9796:63938":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:51635:5299":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:14325:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:6954:8874":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:13566:13068":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:10211:48127":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:4446:8446":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:11329:57464":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"18:774:6810":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"9:809:4879":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"24:5826:3153":{"crate_id":24,"path":["syn","expr","ExprReturn"],"kind":"struct"},"24:2502:2408":{"crate_id":24,"path":["syn","punctuated","Pair"],"kind":"enum"},"1:8217:6669":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:51475:8990":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:12026:7095":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"24:2977:1831":{"crate_id":24,"path":["syn","parse","ParseStream"],"kind":"typedef"},"20:305:2049":{"crate_id":20,"path":["quote","__private","push_lifetime_spanned","Lifetime"],"kind":"struct"},"24:5496:3122":{"crate_id":24,"path":["syn","data","VisPublic"],"kind":"struct"},"5:3488:4580":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:13037:7355":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"18:801:6405":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:12173:4842":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:10340:6364":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:5998:8718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:49865:5476":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"22:1066:1760":{"crate_id":22,"path":["proc_macro2","Ident"],"kind":"struct"},"16:7281:5973":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:8269:3284":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"24:5017:3446":{"crate_id":24,"path":["syn","token","Lt"],"kind":"struct"},"17:2314:6363":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:3743:7647":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:9407:3685":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"24:3509:2142":{"crate_id":24,"path":["syn","token","Const"],"kind":"struct"},"24:6137:3177":{"crate_id":24,"path":["syn","op","BinOp"],"kind":"enum"},"1:1482:4580":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:3401:3983":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:432:1807":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:50326:5491":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"20:0:1066":{"crate_id":20,"path":["quote"],"kind":"module"},"17:10435:6298":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:52025:9001":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13612:7517":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:24225:8885":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:6961:5633":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"24:5838:3156":{"crate_id":24,"path":["syn","expr","ExprTryBlock"],"kind":"struct"},"2:47677:3251":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:16008:3003":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"24:2979:3291":{"crate_id":24,"path":["syn","parse","ParseBuffer"],"kind":"struct"},"8:0:2956":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"24:661:64057":{"crate_id":24,"path":["syn","expr","parsing","Precedence"],"kind":"enum"},"17:3743:6375":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:5807:4690":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"24:5774:3141":{"crate_id":24,"path":["syn","expr","ExprIf"],"kind":"struct"},"6:1531:8059":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:14052:34428":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"24:3473:1807":{"crate_id":24,"path":["syn","token","Box"],"kind":"struct"},"16:0:2963":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:10394:6360":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:5398:4985":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"21:1284:3362":{"crate_id":21,"path":["proc_macro","bridge","client","MultiSpan"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:11587:5444":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:9883:63936":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"24:5822:3152":{"crate_id":24,"path":["syn","expr","ExprRepeat"],"kind":"struct"},"17:10962:48316":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"24:6130:1971":{"crate_id":24,"path":["syn","derive","DataEnum"],"kind":"struct"},"5:3341:5642":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"5:4643:6645":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:612:8040":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:13147:7396":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"24:5924:2450":{"crate_id":24,"path":["syn","generics","LifetimeDef"],"kind":"struct"},"17:10831:6335":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"0:1257:1625":{"crate_id":0,"path":["serde_derive","Serialize"],"kind":"proc_derive"},"17:13352:7448":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"24:5470:1777":{"crate_id":24,"path":["syn","data","Field"],"kind":"struct"},"12:1147:4809":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:52259:5303":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:6243:8834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"20:296:2049":{"crate_id":20,"path":["quote","__private","push_lifetime","Lifetime"],"kind":"struct"},"2:3417:3462":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:46435:5331":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:7100:6059":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:13271:7426":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"5:7386:3246":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"12:2280:4809":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:13377:7453":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"24:5058:3449":{"crate_id":24,"path":["syn","token","Or"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:7238:5987":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:3347:5166":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:9466:6897":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:9361:6894":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:13817:7594":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"24:5858:3161":{"crate_id":24,"path":["syn","expr","ExprWhile"],"kind":"struct"},"17:10136:48059":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:1939:4580":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:6080:8753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:13440:7471":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:9658:6684":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:4670:4743":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:4723:3338":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"22:994:1615":{"crate_id":22,"path":["proc_macro2","TokenStream"],"kind":"struct"},"17:9206:48054":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"24:932:64162":{"crate_id":24,"path":["syn","generics","Lifetimes"],"kind":"struct"},"6:4135:8344":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"24:6052:3171":{"crate_id":24,"path":["syn","lit","LitByteStr"],"kind":"struct"},"2:48224:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:3521:7645":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:8204:3246":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:47140:8974":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:3505:3329":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:783:6687":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:50310:5488":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"24:4848:3435":{"crate_id":24,"path":["syn","token","Div"],"kind":"struct"},"16:3129:6233":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:11282:48065":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:2553:5705":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"24:2555:2002":{"crate_id":24,"path":["syn","parse_quote"],"kind":"module"},"1:11309:1824":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:13941:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:3297:6282":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:5405:8628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:4179:8358":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"24:3671:3401":{"crate_id":24,"path":["syn","token","Final"],"kind":"struct"},"17:12170:7121":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:48014:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:13840:7595":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"24:5444:1774":{"crate_id":24,"path":["syn","data","Variant"],"kind":"struct"},"24:1271:6449":{"crate_id":24,"path":["syn","lit","LitRepr"],"kind":"struct"},"2:53277:5301":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:57756:9067":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"16:4381:7654":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:23152:5119":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:2292:4508":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:16009:3004":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:3243:6228":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:11073:4666":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:11968:7088":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:8543:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46487:5480":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:47122:9261":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:12959:5472":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:157:40862":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"12:2392:1749":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:4315:8385":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:11682:4884":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:24172:8883":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"21:523:63978":{"crate_id":21,"path":["proc_macro","bridge","scoped_cell","RefMutL"],"kind":"struct"},"1:12733:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:4242:6640":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:50318:5489":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:46745:5132":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:696:4213":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"24:153:1813":{"crate_id":24,"path":["syn","token","Token"],"kind":"trait"},"22:855:1824":{"crate_id":22,"path":["proc_macro2","fallback","Span"],"kind":"struct"},"24:66:1996":{"crate_id":24,"path":["syn","token"],"kind":"module"},"6:5488:8657":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4067:8309":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:12143:6913":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:7051:6055":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:4378:3246":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:11689:7028":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:51924:8998":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:1190:12055":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:10115:6389":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"18:621:9178":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"24:6359:3179":{"crate_id":24,"path":["syn","ty","Abi"],"kind":"struct"},"21:2655:4621":{"crate_id":21,"path":["proc_macro","bridge","DelimSpan"],"kind":"struct"},"1:11155:2735":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:12660:7219":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"24:4139:3417":{"crate_id":24,"path":["syn","token","Typeof"],"kind":"struct"},"5:7787:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:3048:57449":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"24:5174:3457":{"crate_id":24,"path":["syn","token","RemEq"],"kind":"struct"},"9:722:5740":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:15217:4862":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:10821:4700":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:9326:6321":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:10622:6906":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:12237:7131":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11956:7086":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"24:5309:3467":{"crate_id":24,"path":["syn","token","Tilde"],"kind":"struct"},"20:191:3711":{"crate_id":20,"path":["quote","__private","HasIterator"],"kind":"struct"},"12:895:5861":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"24:4247:3422":{"crate_id":24,"path":["syn","token","Where"],"kind":"struct"},"16:7684:5979":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:49549:5126":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:16003:2998":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:11937:7081":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:3682:4762":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:24847:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"6:1526:8057":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"24:2150:4666":{"crate_id":24,"path":["syn","ext","private","Sealed"],"kind":"trait"},"17:10516:9184":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:5348:6011":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"21:165:4646":{"crate_id":21,"path":["proc_macro","bridge","client","Bridge"],"kind":"struct"},"2:23929:4666":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:634:8053":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"24:3437:3394":{"crate_id":24,"path":["syn","token","Await"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"24:5034:3447":{"crate_id":24,"path":["syn","token","MulEq"],"kind":"struct"},"2:3577:2249":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"12:2253:4807":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:12282:7139":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:3812:4461":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"24:0:1612":{"crate_id":24,"path":["syn"],"kind":"module"},"24:6222:3178":{"crate_id":24,"path":["syn","op","UnOp"],"kind":"enum"},"16:7184:6268":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"9:749:5741":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"17:8929:48048":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"24:5834:3155":{"crate_id":24,"path":["syn","expr","ExprTry"],"kind":"struct"},"16:6468:6046":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"24:5830:3154":{"crate_id":24,"path":["syn","expr","ExprStruct"],"kind":"struct"},"1:6983:4672":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:11431:4997":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:5217:6212":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:6075:5968":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"24:5770:3140":{"crate_id":24,"path":["syn","expr","ExprGroup"],"kind":"struct"},"2:9031:5114":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:15335:4984":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"21:2917:4622":{"crate_id":21,"path":["proc_macro","bridge","ExpnGlobals"],"kind":"struct"},"17:9160:6354":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"5:374:4473":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"12:1682:5882":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"24:3545:3396":{"crate_id":24,"path":["syn","token","Crate"],"kind":"struct"},"2:24193:5376":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:10788:48235":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"24:5778:3142":{"crate_id":24,"path":["syn","expr","ExprIndex"],"kind":"struct"},"17:11457:1760":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"24:3563:115":{"crate_id":24,"path":["syn","token","Default"],"kind":"struct"},"2:25012:5515":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"6:1912:42168":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:11742:7041":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"24:176:4120":{"crate_id":24,"path":["syn","token","CustomToken"],"kind":"trait"},"16:2937:6243":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:9275:6892":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"24:5806:3149":{"crate_id":24,"path":["syn","expr","ExprParen"],"kind":"struct"},"22:1024:3263":{"crate_id":22,"path":["proc_macro2","Delimiter"],"kind":"enum"},"5:8316:5542":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:9916:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:37761:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:6490:6047":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:4573:7659":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:3746:5077":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:9291:6893":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"21:2943:3361":{"crate_id":21,"path":["proc_macro","diagnostic","Level"],"kind":"enum"},"17:12607:7215":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:6943:8870":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:2166:4580":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:10407:6359":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:51849:5267":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"}},"external_crates":{"21":{"name":"proc_macro","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"quote","html_root_url":"https://docs.rs/quote/1.0.21/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"syn","html_root_url":"https://docs.rs/syn/1.0.99/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"unicode_ident","html_root_url":null},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"proc_macro2","html_root_url":"https://docs.rs/proc-macro2/1.0.43/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}