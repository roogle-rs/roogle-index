{"root":"0:0:1886","crate_version":"0.21.5","includes_private":false,"index":{"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:486:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[75,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:203:1037"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[200,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3425:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_read_vectored","bytes","read_buf_exact","read_to_end","by_ref","take","chain","read_exact","read_vectored","read_buf","read_to_string"],"trait":{"name":"Read","id":"1:3425:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:124:1867"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:393:2031":{"id":"0:393:2031","crate_id":0,"name":"STANDARD","span":{"filename":"src/alphabet.rs","begin":[165,0],"end":[167,2]},"visibility":"public","docs":"The standard alphabet (uses `+` and `/`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-3).","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:394:2625":{"id":"0:394:2625","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/alphabet.rs","begin":[172,0],"end":[174,2]},"visibility":"public","docs":"The URL safe alphabet (uses `-` and `_`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-4).","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:574:1881":{"id":"0:574:1881","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[10,0],"end":[28,1]},"visibility":"public","docs":"Errors that can occur while decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:575:2149","0:579:2151","0:581:2152","0:585:2153"],"impls":["a:2:32518:3482-0:574:1881","a:2:42146:3431-0:574:1881","a:2:32436:243-0:574:1881","a:2:42147:3430-0:574:1881","a:2:2949:253-0:574:1881","b:2:2737-0:574:1881","b:2:3496-0:574:1881","b:2:2427-0:574:1881","b:2:2424-0:574:1881","b:2:2742-0:574:1881","b:2:2727-0:574:1881","b:2:2731-0:574:1881","b:5:687-0:574:1881","b:5:5809-0:574:1881","0:444","0:587","0:589","0:592","0:595","0:591","0:594","0:442","0:449"]}}},"0:610":{"id":"0:610","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,34],"end":[47,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12855:25846":{"id":"2:12855:25846","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:527:2517":{"id":"b:2:2742-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:3482-0:489:2034":{"id":"a:2:32518:3482-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:498:2504":{"id":"0:498:2504","crate_id":0,"name":"DecodePaddingMode","span":{"filename":"src/engine/mod.rs","begin":[441,0],"end":[448,1]},"visibility":"public","docs":"Controls how pad bytes are handled when decoding.\n\nEach [Engine] must support at least the behavior indicated by\n[DecodePaddingMode::RequireCanonical], and may support other modes.","links":{"DecodePaddingMode::RequireCanonical":"0:501:2508","Engine":"0:331:1870"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:499:2506","0:501:2508","0:503:2510"],"impls":["a:2:32518:3482-0:498:2504","a:2:42146:3431-0:498:2504","a:2:32436:243-0:498:2504","a:2:42147:3430-0:498:2504","a:2:2949:253-0:498:2504","b:2:2737-0:498:2504","b:2:3496-0:498:2504","b:2:2427-0:498:2504","b:2:2424-0:498:2504","b:2:2742-0:498:2504","b:2:2727-0:498:2504","b:2:2731-0:498:2504","b:5:687-0:498:2504","0:513","0:505","0:510","0:508","0:514","0:511","0:507"]}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[99,0],"end":[103,1]},"visibility":"default","docs":"As for io::Write, `StrConsumer` is implemented automatically for `&mut S`.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:2186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"S"}}},"items":["0:214:2337"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,9],"end":[136,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:479:2033":{"id":"b:2:2731-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:331:1870":{"id":"0:331:1870","crate_id":0,"name":"Engine","span":{"filename":"src/engine/mod.rs","begin":[39,0],"end":[407,1]},"visibility":"public","docs":"An `Engine` provides low-level encoding and decoding operations that all other higher-level parts of the API use. Users of the library will generally not need to implement this.\n\nDifferent implementations offer different characteristics. The library currently ships with\n[GeneralPurpose] that offers good speed and works on any CPU, with more choices\ncoming later, like a constant-time one when side channel resistance is called for, and vendor-specific vectorized ones for more speed.\n\nSee [general_purpose::STANDARD_NO_PAD] if you just want standard base64. Otherwise, when possible, it's\nrecommended to store the engine in a `const` so that references to it won't pose any lifetime\nissues, and to avoid repeating the cost of engine setup.\n\nSince almost nobody will need to implement `Engine`, docs for internal methods are hidden.","links":{"GeneralPurpose":"0:479:2033","general_purpose::STANDARD_NO_PAD":"0:323:2622"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:332:1997","0:333:2369","0:337:2019","0:338:656","0:342:2069","0:346:2255","0:350:585","0:354:2466","0:358:2480","0:364:2487"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:296"]}}},"b:2:2742-0:541:2737":{"id":"b:2:2742-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:253-0:561:1876":{"id":"a:2:2949:253-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5554:25845":{"id":"5:5554:25845","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12858:25843"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[83,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3482:2219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:157:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2427-0:85:2094":{"id":"b:2:2427-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:527:2517":{"id":"b:2:2727-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12828:33207":{"id":"2:12828:33207","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:717":{"id":"0:509:717","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[440,22],"end":[440,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:574:1881":{"id":"b:2:2737-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[96,0],"end":[246,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3482:2219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:162:1037","0:165:2124","0:170:2161"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2424-0:541:2737":{"id":"b:2:2424-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:489:2034":{"id":"0:489:2034","crate_id":0,"name":"GeneralPurposeConfig","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[245,0],"end":[249,1]},"visibility":"public","docs":"Contains configuration parameters for base64 encoding and decoding.\n\n```\n# use base64::engine::GeneralPurposeConfig;\nlet config = GeneralPurposeConfig::new()\n    .with_encode_padding(false);\n    // further customize using `.with_*` methods as needed\n```\n\nThe constants [PAD] and [NO_PAD] cover most use cases.\n\nTo specify the characters used, see [Alphabet].","links":{"PAD":"0:326:2035","Alphabet":"0:527:2517","NO_PAD":"0:327:2623"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:313","a:2:32518:3482-0:489:2034","a:2:42146:3431-0:489:2034","a:2:32436:243-0:489:2034","a:2:42147:3430-0:489:2034","a:2:2949:253-0:489:2034","b:2:2737-0:489:2034","b:2:3496-0:489:2034","b:2:2427-0:489:2034","b:2:2424-0:489:2034","b:2:2742-0:489:2034","b:2:2727-0:489:2034","b:2:2731-0:489:2034","b:5:687-0:489:2034","0:320","0:495","0:493","0:496","0:318"]}}},"0:590:717":{"id":"0:590:717","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:717":{"id":"0:446:717","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[58,4],"end":[63,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12764:31390":{"id":"2:12764:31390","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12763:31385"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44201:3695","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:140:2184":{"id":"a:2:32436:243-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2949:253-0:140:2184":{"id":"a:2:2949:253-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12757:33198":{"id":"2:12757:33198","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12038:1536","crate::ops::IndexMut":"2:3162:3095","str::slice_unchecked":"2:12756:33197"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:584:1752":{"id":"0:584:1752","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[24,29],"end":[24,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:598:1881":{"id":"0:598:1881","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[50,4],"end":[50,28]},"visibility":"default","docs":"A [DecodeError] occurred","links":{"DecodeError":"0:574:1881"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:600:1751"]},"discriminant":null}}},"2:12831:33209":{"id":"2:12831:33209","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:1997":{"id":"0:297:1997","crate_id":0,"name":"Config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[45,4],"end":[45,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2737-0:489:2034":{"id":"b:2:2737-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:85:2094":{"id":"b:2:3496-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:473-0:331:1870":{"id":"0:473-0:331:1870","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[15,0],"end":[15,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::Engine","name":"Engine","id":"0:331:1870","glob":false}}},"2:12758:26042":{"id":"2:12758:26042","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12759:26043"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3482-0:574:1881":{"id":"a:2:32518:3482-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:477-0:325:2627":{"id":"0:477-0:325:2627","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[20,0],"end":[20,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::URL_SAFE_NO_PAD","name":"BASE64_URL_SAFE_NO_PAD","id":"0:325:2627","glob":false}}},"2:12777:3634":{"id":"2:12777:3634","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42020:197","prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12857:25847":{"id":"2:12857:25847","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:2337":{"id":"0:216:2337","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[107,4],"end":[109,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:444":{"id":"0:444","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[44,0],"end":[44,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","description","cause","provide"],"trait":{"name":"Error","id":"2:2789:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12853:33215":{"id":"2:12853:33215","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12393:133","`FromStr`":"2:12392:3104"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12392:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12392:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474-0:322:2031":{"id":"0:474-0:322:2031","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[17,0],"end":[17,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::STANDARD","name":"BASE64_STANDARD","id":"0:322:2031","glob":false}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,16],"end":[244,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2424-0:527:2517":{"id":"b:2:2424-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42147:3430-0:574:1881":{"id":"a:2:42147:3430-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42147:3430-0:140:2184":{"id":"a:2:42147:3430-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2727-0:561:1876":{"id":"b:2:2727-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:590:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:568":{"id":"0:568","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[144,23],"end":[144,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:516:2395":{"id":"b:2:2731-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:3482-0:47:2078":{"id":"a:2:32518:3482-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3496-0:541:2737":{"id":"b:2:3496-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:585:2153":{"id":"0:585:2153","crate_id":0,"name":"InvalidPadding","span":{"filename":"src/decode.rs","begin":[27,4],"end":[27,18]},"visibility":"default","docs":"The nature of the padding was not as configured: absent or incorrect when it must be\ncanonical, or present when it must be absent, etc.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:214:2337":{"id":"0:214:2337","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[100,4],"end":[102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3431-0:516:2395":{"id":"a:2:42146:3431-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2424-0:597:1882":{"id":"b:2:2424-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:386:1037":{"id":"0:386:1037","crate_id":0,"name":"new","span":{"filename":"src/alphabet.rs","begin":[78,4],"end":[124,5]},"visibility":"public","docs":"Create an `Alphabet` from a string of 64 unique printable ASCII bytes.\n\nThe `=` byte is not allowed as it is used for padding.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alphabet",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:358:2480":{"id":"0:358:2480","crate_id":0,"name":"decode_slice","span":{"filename":"src/engine/mod.rs","begin":[344,4],"end":[370,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nReturns the number of bytes written to the slice, or an error if `output` is smaller than\nthe estimated decoded length.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice_unchecked] for a version that panics instead of returning an error\nif the output buffer is too small.","links":{"crate::decoded_len_estimate":"0:462:1880","Engine::decode_slice_unchecked":"0:364:2487"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:321:2020":{"id":"0:321:2020","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[326,4],"end":[328,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:1037":{"id":"0:110:1037","crate_id":0,"name":"new","span":{"filename":"src/read/decoder.rs","begin":[76,4],"end":[89,5]},"visibility":"public","docs":"Create a new decoder that will read from the provided reader `r`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["reader",{"generic":"R"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:717":{"id":"0:497:717","crate_id":0,"name":"fmt","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,22],"end":[244,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337:2019":{"id":"0:337:2019","crate_id":0,"name":"config","span":{"filename":"src/engine/mod.rs","begin":[99,4],"end":[99,38]},"visibility":"default","docs":"Returns the config for this engine.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:331:1870","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12754:26019":{"id":"2:12754:26019","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12737:2132":{"id":"2:12737:2132","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,27],"end":[53,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[67,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","description","cause","provide"],"trait":{"name":"Error","id":"2:2789:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:448:2893"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494:455":{"id":"0:494:455","crate_id":0,"name":"clone","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3431-0:527:2517":{"id":"a:2:42146:3431-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:354:2466":{"id":"0:354:2466","crate_id":0,"name":"decode_vec","span":{"filename":"src/engine/mod.rs","begin":[299,4],"end":[330,5]},"visibility":"default","docs":"Decode the `input` into the supplied `buffer`.\n\nWrites into the supplied `Vec`, which may allocate if its internal buffer isn't big enough.\nReturns a `Result` containing an empty tuple, aka `()`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::PAD);\n\nfn main() {\n    use base64::Engine;\n    let mut buffer = Vec::<u8>::new();\n    // with the default engine\n    general_purpose::STANDARD\n        .decode_vec(\"aGVsbG8gd29ybGR+Cg==\", &mut buffer,).unwrap();\n    println!(\"{:?}\", buffer);\n\n    buffer.clear();\n\n    // with a custom engine\n    CUSTOM_ENGINE.decode_vec(\n        \"aGVsbG8gaW50ZXJuZXR-Cg==\",\n        &mut buffer,\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["buffer",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6959:269","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:2598":{"id":"0:315:2598","crate_id":0,"name":"with_encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[276,4],"end":[281,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `padding` setting.\n\nIf `padding` is `true`, encoding will append either 1 or 2 `=` padding characters as needed\nto produce an output whose length is a multiple of 4.\n\nPadding is not needed for correct decoding and only serves to waste bytes, but it's in the\n[spec](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2).\n\nFor new applications, consider not using padding if the decoders you're using don't require\npadding to be present.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["padding",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:544:2744":{"id":"0:544:2744","crate_id":0,"name":"DuplicatedByte","span":{"filename":"src/alphabet.rs","begin":[141,4],"end":[141,22]},"visibility":"default","docs":"All bytes must be unique","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:546:1751"]},"discriminant":null}}},"0:466-0:456:1878":{"id":"0:466-0:456:1878","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,47],"end":[170,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine_vec","name":"decode_engine_vec","id":"0:456:1878","glob":false}}},"2:12847:33213":{"id":"2:12847:33213","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12774:26064":{"id":"2:12774:26064","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:468-0:459:1879":{"id":"0:468-0:459:1879","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,24],"end":[172,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine_slice","name":"decode_engine_slice","id":"0:459:1879","glob":false}}},"0:392":{"id":"0:392","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[160,0],"end":[160,43]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","description","cause","provide"],"trait":{"name":"Error","id":"2:2789:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2727-0:498:2504":{"id":"b:2:2727-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:516:2395":{"id":"b:2:2427-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5809-0:47:2078":{"id":"b:5:5809-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:597:1882":{"id":"0:597:1882","crate_id":0,"name":"DecodeSliceError","span":{"filename":"src/decode.rs","begin":[48,0],"end":[55,1]},"visibility":"public","docs":"Errors that can occur while decoding into a slice.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:598:1881","0:601:2433"],"impls":["a:2:32518:3482-0:597:1882","a:2:42146:3431-0:597:1882","a:2:32436:243-0:597:1882","a:2:42147:3430-0:597:1882","a:2:2949:253-0:597:1882","b:2:2737-0:597:1882","b:2:3496-0:597:1882","b:2:2427-0:597:1882","b:2:2424-0:597:1882","b:2:2742-0:597:1882","b:2:2727-0:597:1882","b:2:2731-0:597:1882","b:5:687-0:597:1882","b:5:5809-0:597:1882","0:605","0:608","0:603","0:611","0:447","0:607","0:610","0:449","0:445"]}}},"a:2:32436:243-0:574:1881":{"id":"a:2:32436:243-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32436:243-0:479:2033":{"id":"a:2:32436:243-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12760:6555":{"id":"2:12760:6555","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12032:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43888:3101","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:498:2504":{"id":"b:2:3496-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:140:2184":{"id":"b:2:2727-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209:2307":{"id":"0:209:2307","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder_string_writer.rs","begin":[87,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:546:1751":{"id":"0:546:1751","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[141,19],"end":[141,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:562:2433":{"id":"0:562:2433","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/encode.rs","begin":[147,4],"end":[147,23]},"visibility":"default","docs":"The provided slice is too small.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12750:26017":{"id":"2:12750:26017","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42020:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:533:717":{"id":"0:533:717","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[53,16],"end":[53,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:541:2737":{"id":"b:2:2737-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:448:2893":{"id":"0:448:2893","crate_id":0,"name":"source","span":{"filename":"src/decode.rs","begin":[68,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2789:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:189:2185":{"id":"b:2:2737-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:541:2737":{"id":"b:2:2427-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:577:1751":{"id":"0:577:1751","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[13,16],"end":[13,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:503:2510":{"id":"0:503:2510","crate_id":0,"name":"RequireNone","span":{"filename":"src/engine/mod.rs","begin":[447,4],"end":[447,15]},"visibility":"default","docs":"Padding must be absent -- for when you want predictable padding, without any wasted bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2427-0:489:2034":{"id":"b:2:2427-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:561:1876":{"id":"b:2:2731-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:165:2124":{"id":"0:165:2124","crate_id":0,"name":"finish","span":{"filename":"src/write/encoder.rs","begin":[126,4],"end":[138,5]},"visibility":"public","docs":"Encode all remaining buffered data and write it, including any trailing incomplete input\ntriples and associated padding.\n\nOnce this succeeds, no further writes or calls to this method are allowed.\n\nThis may write to the delegate writer multiple times if the delegate writer does not accept\nall input provided to its `write` each invocation.\n\nIf you don't care about error handling, it is not necessary to call this function, as the\nequivalent finalization is done by the Drop impl.\n\nReturns the writer that this was constructed around.\n\n# Errors\n\nThe first error that is not of `ErrorKind::Interrupted` will be returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[440,29],"end":[440,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:512:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:609:661":{"id":"0:609:661","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[47,23],"end":[47,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:583:1751":{"id":"0:583:1751","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[24,22],"end":[24,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:376:1871":{"id":"0:376:1871","crate_id":0,"name":"alphabet","span":{"filename":"src/alphabet.rs","begin":[1,0],"end":[272,1]},"visibility":"public","docs":"Provides [Alphabet] and constants for alphabets commonly used in the wild.","links":{"Alphabet":"0:527:2517"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:527:2517","0:541:2737","0:393:2031","0:394:2625","0:395:2762","0:396:2765","0:397:2769","0:398:2773"],"is_stripped":false}}},"2:12745:33196":{"id":"2:12745:33196","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12818:33203":{"id":"2:12818:33203","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12432:3108","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::rmatch_indices":"2:12821:33204"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44068:3689","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:47:2078":{"id":"b:2:2737-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[440,40],"end":[440,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12785:26050":{"id":"2:12785:26050","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12432:3108","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::split_whitespace":"2:12763:31385","str::rsplit":"2:12791:26054"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43918:3171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3430-0:489:2034":{"id":"a:2:42147:3430-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42147:3430-0:189:2185":{"id":"a:2:42147:3430-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32518:3482-0:561:1876":{"id":"a:2:32518:3482-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:687-0:574:1881":{"id":"b:5:687-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3654","5:690:3655","5:691:3656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:47:2078":{"id":"b:2:2742-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12756:33197":{"id":"2:12756:33197","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12038:1536","str::slice_mut_unchecked":"2:12757:33198","crate::ops::Index":"2:39598:3094"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12806:26060":{"id":"2:12806:26060","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:607":{"id":"0:607","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,23],"end":[47,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42147:3430-0:527:2517":{"id":"a:2:42147:3430-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:540:661":{"id":"0:540:661","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[53,27],"end":[53,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429-0:413:1873":{"id":"0:429-0:413:1873","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,47],"end":[163,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine_string","name":"encode_engine_string","id":"0:413:1873","glob":false}}},"b:5:5809-0:574:1881":{"id":"b:5:5809-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:527:2517":{"id":"b:2:2737-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:475-0:323:2622":{"id":"0:475-0:323:2622","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[18,0],"end":[18,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::STANDARD_NO_PAD","name":"BASE64_STANDARD_NO_PAD","id":"0:323:2622","glob":false}}},"0:389:1617":{"id":"0:389:1617","crate_id":0,"name":"try_from","span":{"filename":"src/alphabet.rs","begin":[130,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2711:263","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:541:2737":{"id":"a:2:2949:253-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[55,0],"end":[73,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:198:2328","0:199:2161"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:184:634":{"id":"0:184:634","crate_id":0,"name":"drop","span":{"filename":"src/write/encoder.rs","begin":[401,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:498:2504":{"id":"a:2:32436:243-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2424-0:561:1876":{"id":"b:2:2424-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12860:27252":{"id":"2:12860:27252","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35418"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,16],"end":[136,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:433-0:561:1876":{"id":"0:433-0:561:1876","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,58],"end":[165,74]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::EncodeSliceError","name":"EncodeSliceError","id":"0:561:1876","glob":false}}},"0:506:455":{"id":"0:506:455","crate_id":0,"name":"clone","span":{"filename":"src/engine/mod.rs","begin":[440,9],"end":[440,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12824:33205":{"id":"2:12824:33205","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12826:33206":{"id":"2:12826:33206","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12861:27253":{"id":"2:12861:27253","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35418"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12856:27249":{"id":"2:12856:27249","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39967:27208","Self::is_ascii":"2:12855:25846"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39967:27208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[251,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:314:1037","0:315:2598","0:316:2606","0:317:2617"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12838:26065":{"id":"2:12838:26065","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:479:2033":{"id":"b:2:2424-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:510":{"id":"0:510","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[440,29],"end":[440,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32436:243-0:189:2185":{"id":"a:2:32436:243-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:326:2035":{"id":"0:326:2035","crate_id":0,"name":"PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[347,0],"end":[347,66]},"visibility":"public","docs":"Include padding bytes when encoding, and require that they be present when decoding.\n\nThis is the standard per the base64 RFC, but consider using [NO_PAD] instead as padding serves\nlittle purpose in practice.","links":{"NO_PAD":"0:327:2623"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:42147:3430-0:541:2737":{"id":"a:2:42147:3430-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32518:3482-0:516:2395":{"id":"a:2:32518:3482-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:47:2078":{"id":"b:2:2731-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:253-0:516:2395":{"id":"a:2:2949:253-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12744:2734":{"id":"2:12744:2734","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11987:2024"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523":{"id":"0:523","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[451,20],"end":[451,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12741:33195":{"id":"2:12741:33195","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12739:33194"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:472:1168":{"id":"0:472:1168","crate_id":0,"name":"prelude","span":{"filename":"src/prelude.rs","begin":[1,0],"end":[20,82]},"visibility":"public","docs":"Preconfigured engines for common use cases.\n\nThese are re-exports of `const` engines in [crate::engine::general_purpose], renamed with a `BASE64_`\nprefix for those who prefer to `use` the entire path to a name.\n\n# Examples\n\n```\nuse base64::prelude::{Engine as _, BASE64_STANDARD_NO_PAD};\n\nassert_eq!(\"c29tZSBieXRlcw\", &BASE64_STANDARD_NO_PAD.encode(b\"some bytes\"));\n```","links":{"crate::engine::general_purpose":"0:242:2032"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:473-0:331:1870","0:474-0:322:2031","0:475-0:323:2622","0:476-0:324:2625","0:477-0:325:2627"],"is_stripped":false}}},"0:140:2184":{"id":"0:140:2184","crate_id":0,"name":"EncoderWriter","span":{"filename":"src/write/encoder.rs","begin":[63,0],"end":[81,1]},"visibility":"public","docs":"A `Write` implementation that base64 encodes data before delegating to the wrapped writer.\n\nBecause base64 has special handling for the end of the input data (padding, etc), there's a\n`finish()` method on this type that encodes any leftover input bytes and adds padding if\nappropriate. It's called automatically when deallocated (see the `Drop` implementation), but\nany error that occurs when invoking the underlying writer will be suppressed. If you want to\nhandle such errors, call `finish()` yourself.\n\n# Examples\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\n// use a vec as the simplest possible `Write` -- in real code this is probably a file, etc.\nlet mut enc = base64::write::EncoderWriter::new(Vec::new(), &general_purpose::STANDARD);\n\n// handle errors as you normally would\nenc.write_all(b\"asdf\").unwrap();\n\n// could leave this out to be called by Drop, if you don't care\n// about handling errors or getting the delegate writer back\nlet delegate = enc.finish().unwrap();\n\n// base64 was written to the writer\nassert_eq!(b\"YXNkZg==\", &delegate[..]);\n\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Errors\n\nBase64 encoding itself does not generate errors, but errors from the wrapped writer will be\nreturned as per the contract of `Write`.\n\n# Performance\n\nIt has some minor performance loss compared to encoding slices (a couple percent).\nIt does not do any heap allocation.\n\n# Limitations\n\nOwing to the specification of the `write` and `flush` methods on the `Write` trait and their\nimplications for a buffering implementation, these methods may not behave as expected. In\nparticular, calling `write_all` on this interface may fail with `io::ErrorKind::WriteZero`.\nSee the documentation of the `Write` trait implementation for further details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3482:2219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:158","a:2:32518:3482-0:140:2184","a:2:42146:3431-0:140:2184","a:2:32436:243-0:140:2184","a:2:42147:3430-0:140:2184","a:2:2949:253-0:140:2184","b:2:2737-0:140:2184","b:2:3496-0:140:2184","b:2:2427-0:140:2184","b:2:2424-0:140:2184","b:2:2742-0:140:2184","b:2:2727-0:140:2184","b:2:2731-0:140:2184","0:171","0:153","0:180"]}}},"b:2:2742-0:479:2033":{"id":"b:2:2742-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:372:1880":{"id":"0:372:1880","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/engine/mod.rs","begin":[433,4],"end":[433,44]},"visibility":"default","docs":"Returns a conservative (err on the side of too big) estimate of the decoded length to use\nfor pre-allocating buffers, etc.\n\nThe estimate must be no larger than the next largest complete triple of decoded bytes.\nThat is, the final quad of tokens to decode may be assumed to be complete with no padding.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:3498:1632":{"id":"2:3498:1632","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39780:6597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3431-0:541:2737":{"id":"a:2:42146:3431-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12791:26054":{"id":"2:12791:26054","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12432:3108","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::split":"2:12785:26050"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43936:3682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:47:2078":{"id":"a:2:2949:253-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:157:717":{"id":"0:157:717","crate_id":0,"name":"fmt","span":{"filename":"src/write/encoder.rs","begin":[84,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,16],"end":[136,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:512:661":{"id":"0:512:661","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[440,29],"end":[440,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:601:2433":{"id":"0:601:2433","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/decode.rs","begin":[54,4],"end":[54,23]},"visibility":"default","docs":"The provided slice _may_ be too small.\n\nThe check is conservative (assumes the last triplet of output bytes will all be needed).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[318,0],"end":[323,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:319:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:559":{"id":"0:559","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,20],"end":[136,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:560:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2427-0:561:1876":{"id":"b:2:2427-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12830:33208":{"id":"2:12830:33208","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:597:1882":{"id":"a:2:2949:253-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:72:1867":{"id":"0:72:1867","crate_id":0,"name":"read","span":{"filename":"src/read/mod.rs","begin":[1,0],"end":[6,18]},"visibility":"public","docs":"Implementations of `io::Read` to transparently decode base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:126-0:85:2094"],"is_stripped":false}}},"b:2:2427-0:189:2185":{"id":"b:2:2427-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:253-0:527:2517":{"id":"a:2:2949:253-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:327:2623":{"id":"0:327:2623","crate_id":0,"name":"NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[350,0],"end":[352,62]},"visibility":"public","docs":"Don't add padding when encoding, and require no padding when decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12767:31389":{"id":"2:12767:31389","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44210:3691","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[106,0],"end":[110,1]},"visibility":"default","docs":"Pushes the str onto the end of the String","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:2186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:2337"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:421:1875":{"id":"0:421:1875","crate_id":0,"name":"encoded_len","span":{"filename":"src/encode.rs","begin":[97,0],"end":[124,1]},"visibility":"public","docs":"Calculate the base64 encoded length for a given input length, optionally including any\nappropriate padding bytes.\n\nReturns `None` if the encoded length can't be represented in `usize`. This will happen for\ninput lengths in approximately the top quarter of the range of `usize`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes_len",{"primitive":"usize"}],["padding",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:604:455":{"id":"0:604:455","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[47,9],"end":[47,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126-0:85:2094":{"id":"0:126-0:85:2094","crate_id":0,"name":null,"span":{"filename":"src/read/mod.rs","begin":[3,0],"end":[3,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::decoder::DecoderReader","name":"DecoderReader","id":"0:85:2094","glob":false}}},"2:12803:26058":{"id":"2:12803:26058","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12032:451","str::splitn":"2:12800:26056","self::pattern":"2:12432:3108"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44040:3685","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3482-0:498:2504":{"id":"a:2:32518:3482-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:570:661":{"id":"0:570:661","crate_id":0,"name":"eq","span":{"filename":"src/encode.rs","begin":[144,23],"end":[144,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5809-0:597:1882":{"id":"b:5:5809-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:527:2517":{"id":"b:2:3496-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:62:717":{"id":"0:62:717","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"fmt::Error","id":"2:43071:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:455":{"id":"0:488:455","crate_id":0,"name":"clone","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,16],"end":[23,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499:2506":{"id":"0:499:2506","crate_id":0,"name":"Indifferent","span":{"filename":"src/engine/mod.rs","begin":[443,4],"end":[443,15]},"visibility":"default","docs":"Canonical padding is allowed, but any fewer padding bytes than that is also allowed.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:687-0:498:2504":{"id":"b:5:687-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3654","5:690:3655","5:691:3656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12821:33204":{"id":"2:12821:33204","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12432:3108","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::match_indices":"2:12818:33203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44086:3690","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:140:2184":{"id":"b:2:2424-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:398:2773":{"id":"0:398:2773","crate_id":0,"name":"BIN_HEX","span":{"filename":"src/alphabet.rs","begin":[198,0],"end":[200,2]},"visibility":"public","docs":"The alphabet used in BinHex 4.0 files.\n\nSee [BinHex 4.0 Definition](http://files.stairways.com/other/binhex-40-specs-info.txt)","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:42147:3430-0:498:2504":{"id":"a:2:42147:3430-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42146:3431-0:597:1882":{"id":"a:2:42146:3431-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:342:2069":{"id":"0:342:2069","crate_id":0,"name":"encode_string","span":{"filename":"src/engine/mod.rs","begin":[158,4],"end":[171,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied `String`.\nWrites into the supplied `String`, which may allocate if its internal buffer isn't big enough.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nfn main() {\n    let mut buf = String::new();\n    general_purpose::STANDARD.encode_string(b\"hello world~\", &mut buf);\n    println!(\"{}\", buf);\n\n    buf.clear();\n    CUSTOM_ENGINE.encode_string(b\"hello internet~\", &mut buf);\n    println!(\"{}\", buf);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:2606":{"id":"0:316:2606","crate_id":0,"name":"with_decode_allow_trailing_bits","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[290,4],"end":[295,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_allow_trailing_bits` setting.\n\nMost users will not need to configure this. It's useful if you need to decode base64\nproduced by a buggy encoder that has bits set in the unused space on the last base64\ncharacter as per [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).\nIf invalid trailing bits are present and this is `true`, those bits will\nbe silently ignored, else `DecodeError::InvalidLastSymbol` will be emitted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["allow",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:479:2033":{"id":"0:479:2033","crate_id":0,"name":"GeneralPurpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[24,0],"end":[28,1]},"visibility":"public","docs":"A general-purpose base64 engine.\n\n- It uses no vector CPU instructions, so it will work on any system.\n- It is reasonably fast (~2-3GiB/s).\n- It is not constant-time, though, so it is vulnerable to timing side-channel attacks. For loading cryptographic keys, etc, it is suggested to use the forthcoming constant-time implementation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:294","a:2:32518:3482-0:479:2033","a:2:42146:3431-0:479:2033","a:2:32436:243-0:479:2033","a:2:42147:3430-0:479:2033","a:2:2949:253-0:479:2033","b:2:2737-0:479:2033","b:2:3496-0:479:2033","b:2:2427-0:479:2033","b:2:2424-0:479:2033","b:2:2742-0:479:2033","b:2:2727-0:479:2033","b:2:2731-0:479:2033","b:5:687-0:479:2033","0:487","0:485","0:296"]}}},"a:2:32436:243-0:47:2078":{"id":"a:2:32436:243-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[76,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:450:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32518:3482-0:597:1882":{"id":"a:2:32518:3482-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:324:2625":{"id":"0:324:2625","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[338,0],"end":[338,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [PAD] config.","links":{"PAD":"0:326:2035","alphabet::URL_SAFE":"0:394:2625","GeneralPurpose":"0:479:2033"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:501:2508":{"id":"0:501:2508","crate_id":0,"name":"RequireCanonical","span":{"filename":"src/engine/mod.rs","begin":[445,4],"end":[445,20]},"visibility":"default","docs":"Padding must be canonical (0, 1, or 2 `=` as needed to produce a 4 byte suffix).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2949:253-0:479:2033":{"id":"a:2:2949:253-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:552:1751":{"id":"0:552:1751","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[145,17],"end":[145,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:539":{"id":"0:539","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,27],"end":[53,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:540:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32436:243-0:541:2737":{"id":"a:2:32436:243-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32436:243-0:561:1876":{"id":"a:2:32436:243-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2742-0:516:2395":{"id":"b:2:2742-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57:1037":{"id":"0:57:1037","crate_id":0,"name":"new","span":{"filename":"src/display.rs","begin":[25,4],"end":[30,5]},"visibility":"public","docs":"Create a `Base64Display` with the provided engine.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5551:33892":{"id":"5:5551:33892","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535":{"id":"5:5535","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5536:33889","5:5537:2868","5:5540:33890","5:5543:33891","5:5551:33892","5:5552:33893","5:5553:2928","5:5554:25845","5:5555:25844"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[248,0],"end":[398,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3482:2219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","write_all","write_vectored","write_all_vectored","write_fmt","by_ref"],"trait":{"name":"Write","id":"1:3482:2219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:175:1868","0:179:2307"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:364:2487":{"id":"0:364:2487","crate_id":0,"name":"decode_slice_unchecked","span":{"filename":"src/engine/mod.rs","begin":[387,4],"end":[406,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nReturns the number of bytes written to the slice.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice] for a version that returns an error instead of panicking if the output\nbuffer is too small.\n\n# Panics\n\nPanics if the provided output buffer is too small for the decoded data.","links":{"crate::decoded_len_estimate":"0:462:1880","Engine::decode_slice":"0:358:2480"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:541:2737":{"id":"b:2:2727-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:561:1876":{"id":"b:2:3496-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:3482-0:479:2033":{"id":"a:2:32518:3482-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:521:661":{"id":"0:521:661","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[451,9],"end":[451,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12747:26020":{"id":"2:12747:26020","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12049:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12781:3600":{"id":"2:12781:3600","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42020:197","prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3431-0:574:1881":{"id":"a:2:42146:3431-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:453:1877":{"id":"0:453:1877","crate_id":0,"name":"decode_engine","span":{"filename":"src/decode.rs","begin":[97,0],"end":[102,1]},"visibility":"public","docs":" Decode from string reference as octets using the specified [Engine].\n\n See [Engine::decode].\nReturns a `Result` containing a `Vec<u8>`.","links":{"Engine::decode":"0:350:585","Engine":"0:331:1870"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:6959:269","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:531:455":{"id":"0:531:455","crate_id":0,"name":"clone","span":{"filename":"src/alphabet.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5540:33890":{"id":"5:5540:33890","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[82,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","write_all","write_vectored","write_all_vectored","write_fmt","by_ref"],"trait":{"name":"Write","id":"1:3482:2219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:208:1868","0:209:2307"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:547:2740":{"id":"0:547:2740","crate_id":0,"name":"UnprintableByte","span":{"filename":"src/alphabet.rs","begin":[143,4],"end":[143,23]},"visibility":"default","docs":"All bytes must be printable (in the range `[32, 126]`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:549:1751"]},"discriminant":null}}},"b:2:2731-0:541:2737":{"id":"b:2:2731-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12739:33194":{"id":"2:12739:33194","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5809-0:541:2737":{"id":"b:5:5809-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:479:2033":{"id":"b:5:687-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3654","5:690:3655","5:691:3656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:498:2504":{"id":"b:2:2424-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:516:2395":{"id":"b:2:3496-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:581:2152":{"id":"0:581:2152","crate_id":0,"name":"InvalidLastSymbol","span":{"filename":"src/decode.rs","begin":[24,4],"end":[24,32]},"visibility":"default","docs":"The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\nThis is indicative of corrupted or truncated Base64.\nUnlike `InvalidByte`, which reports symbols that aren't in the alphabet, this error is for\nsymbols that are in the alphabet but represent nonsensical encodings.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:583:1751","0:584:1752"]},"discriminant":null}}},"b:2:2731-0:498:2504":{"id":"b:2:2731-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338:656":{"id":"0:338:656","crate_id":0,"name":"encode","span":{"filename":"src/engine/mod.rs","begin":[118,4],"end":[134,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 using the provided `Engine`.\nReturns a `String`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\n\nlet b64 = general_purpose::STANDARD.encode(b\"hello world~\");\nprintln!(\"{}\", b64);\n\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nlet b64_url = CUSTOM_ENGINE.encode(b\"hello internet~\");","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:606:717":{"id":"0:606:717","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[47,16],"end":[47,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:561:1876":{"id":"b:5:687-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3654","5:690:3655","5:691:3656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:1886":{"id":"0:0:1886","crate_id":0,"name":"base64","span":{"filename":"src/lib.rs","begin":[1,0],"end":[179,26]},"visibility":"public","docs":"# Getting started\n\n1. Perhaps one of the preconfigured engines in [engine::general_purpose] will suit, e.g.\n[engine::general_purpose::STANDARD_NO_PAD].\n    - These are re-exported in [prelude] with a `BASE64_` prefix for those who prefer to\n      `use base64::prelude::*` or equivalent, e.g. [prelude::BASE64_STANDARD_NO_PAD]\n1. If not, choose which alphabet you want. Most usage will want [alphabet::STANDARD] or [alphabet::URL_SAFE].\n1. Choose which [Engine] implementation you want. For the moment there is only one: [engine::GeneralPurpose].\n1. Configure the engine appropriately using the engine's `Config` type.\n    - This is where you'll select whether to add padding (when encoding) or expect it (when\n    decoding). If given the choice, prefer no padding.\n1. Build the engine using the selected alphabet and config.\n\nFor more detail, see below.\n\n## Alphabets\n\nAn [alphabet::Alphabet] defines what ASCII symbols are used to encode to or decode from.\n\nConstants in [alphabet] like [alphabet::STANDARD] or [alphabet::URL_SAFE] provide commonly used\nalphabets, but you can also build your own custom [alphabet::Alphabet] if needed.\n\n## Engines\n\nOnce you have an `Alphabet`, you can pick which `Engine` you want. A few parts of the public\nAPI provide a default, but otherwise the user must provide an `Engine` to use.\n\nSee [Engine] for more.\n\n## Config\n\nIn addition to an `Alphabet`, constructing an `Engine` also requires an [engine::Config]. Each\n`Engine` has a corresponding `Config` implementation since different `Engine`s may offer different\nlevels of configurability.\n\n# Encoding\n\nSeveral different encoding methods on [Engine] are available to you depending on your desire for\nconvenience vs performance.\n\n| Method                   | Output                       | Allocates                      |\n| ------------------------ | ---------------------------- | ------------------------------ |\n| [Engine::encode]         | Returns a new `String`       | Always                         |\n| [Engine::encode_string]  | Appends to provided `String` | Only if `String` needs to grow |\n| [Engine::encode_slice]   | Writes to provided `&[u8]`   | Never - fastest                |\n\nAll of the encoding methods will pad as per the engine's config.\n\n# Decoding\n\nJust as for encoding, there are different decoding methods available.\n\n| Method                   | Output                        | Allocates                      |\n| ------------------------ | ----------------------------- | ------------------------------ |\n| [Engine::decode]         | Returns a new `Vec<u8>`       | Always                         |\n| [Engine::decode_vec]     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |\n| [Engine::decode_slice]   | Writes to provided `&[u8]`    | Never - fastest                |\n\nUnlike encoding, where all possible input is valid, decoding can fail (see [DecodeError]).\n\nInput can be invalid because it has invalid characters or invalid padding. The nature of how\npadding is checked depends on the engine's config.\nWhitespace in the input is invalid, just like any other non-base64 byte.\n\n# `Read` and `Write`\n\nTo decode a [std::io::Read] of b64 bytes, wrap a reader (file, network socket, etc) with\n[read::DecoderReader].\n\nTo write raw bytes and have them b64 encoded on the fly, wrap a [std::io::Write] with\n[write::EncoderWriter].\n\nThere is some performance overhead (15% or so) because of the necessary buffer shuffling --\nstill fast enough that almost nobody cares. Also, these implementations do not heap allocate.\n\n# `Display`\n\nSee [display] for how to transparently base64 data via a `Display` implementation.\n\n# Examples\n\n## Using predefined engines\n\n```\nuse base64::{Engine as _, engine::general_purpose};\n\nlet orig = b\"data\";\nlet encoded: String = general_purpose::STANDARD_NO_PAD.encode(orig);\nassert_eq!(\"ZGF0YQ\", encoded);\nassert_eq!(orig.as_slice(), &general_purpose::STANDARD_NO_PAD.decode(encoded).unwrap());\n\n// or, URL-safe\nlet encoded_url = general_purpose::URL_SAFE_NO_PAD.encode(orig);\n```\n\n## Custom alphabet, config, and engine\n\n```\nuse base64::{engine, alphabet, Engine as _};\n\n// bizarro-world base64: +/ as the first symbols instead of the last\nlet alphabet =\n    alphabet::Alphabet::new(\"+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\")\n    .unwrap();\n\n// a very weird config that encodes with padding but requires no padding when decoding...?\nlet crazy_config = engine::GeneralPurposeConfig::new()\n    .with_decode_allow_trailing_bits(true)\n    .with_encode_padding(true)\n    .with_decode_padding_mode(engine::DecodePaddingMode::RequireNone);\n\nlet crazy_engine = engine::GeneralPurpose::new(&alphabet, crazy_config);\n\nlet encoded = crazy_engine.encode(b\"abc 123\");\n\n```\n\n# Panics\n\nIf length calculations result in overflowing `usize`, a panic will result.","links":{"alphabet::URL_SAFE":"0:394:2625","Engine::encode_slice":"0:346:2255","Engine":"0:331:1870","Engine::decode":"0:350:585","Engine::encode":"0:338:656","std::io::Read":"1:3425:2113","engine::GeneralPurpose":"0:479:2033","alphabet::Alphabet":"0:527:2517","engine::Config":"0:369:1997","Engine::decode_slice":"0:358:2480","prelude::BASE64_STANDARD_NO_PAD":"0:323:2622","prelude":"0:472:1168","alphabet":"0:376:1871","DecodeError":"0:574:1881","alphabet::STANDARD":"0:393:2031","engine::general_purpose":"0:242:2032","read::DecoderReader":"0:85:2094","std::io::Write":"1:3482:2219","write::EncoderWriter":"0:140:2184","Engine::encode_string":"0:342:2069","engine::general_purpose::STANDARD_NO_PAD":"0:323:2622","Engine::decode_vec":"0:354:2466","display":"0:38:1866"},"attrs":["#![deny(missing_docs, trivial_casts, trivial_numeric_casts,\nunused_extern_crates, unused_import_braces, unused_results,\nvariant_size_differences, warnings)]","#![forbid(unsafe_code)]","#![allow(clippy::single_component_path_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:38:1866","0:72:1867","0:127:1868","0:229:1869","0:376:1871","0:472:1168","0:375-0:331:1870","0:427-0:408:656","0:428-0:410:1872","0:429-0:413:1873","0:431-0:416:1874","0:432-0:421:1875","0:433-0:561:1876","0:464-0:451:585","0:465-0:453:1877","0:466-0:456:1878","0:468-0:459:1879","0:469-0:462:1880","0:470-0:574:1881","0:471-0:597:1882"],"is_stripped":false}}},"0:516:2395":{"id":"0:516:2395","crate_id":0,"name":"DecodeMetadata","span":{"filename":"src/engine/mod.rs","begin":[452,0],"end":[457,1]},"visibility":"public","docs":"Metadata about the result of a decode operation","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32518:3482-0:516:2395","a:2:42146:3431-0:516:2395","a:2:32436:243-0:516:2395","a:2:42147:3430-0:516:2395","a:2:2949:253-0:516:2395","b:2:2737-0:516:2395","b:2:3496-0:516:2395","b:2:2427-0:516:2395","b:2:2424-0:516:2395","b:2:2742-0:516:2395","b:2:2727-0:516:2395","b:2:2731-0:516:2395","0:523","0:525","0:522","0:520","0:519"]}}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[159,0],"end":[159,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","description","cause","provide"],"trait":{"name":"Error","id":"2:2789:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5811:1594":{"id":"5:5811:1594","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12859:25842":{"id":"2:12859:25842","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:579:2151":{"id":"0:579:2151","crate_id":0,"name":"InvalidLength","span":{"filename":"src/decode.rs","begin":[19,4],"end":[19,17]},"visibility":"default","docs":"The length of the input is invalid.\nA typical cause of this is stray trailing whitespace or other separator bytes.\nIn the case where excess trailing bytes have produced an invalid length *and* the last byte\nis also an invalid base64 symbol (as would be the case for whitespace, etc), `InvalidByte`\nwill be emitted instead of `InvalidLength` to make the issue easier to debug.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12768:26062":{"id":"2:12768:26062","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[148,0],"end":[157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2727-0:47:2078":{"id":"b:2:2727-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170:2161":{"id":"0:170:2161","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder.rs","begin":[241,4],"end":[245,5]},"visibility":"public","docs":"Unwraps this `EncoderWriter`, returning the base writer it writes base64 encoded output\nto.\n\nNormally this method should not be needed, since `finish()` returns the inner writer if\nit completes successfully. That will also ensure all data has been flushed, which the\n`into_inner()` function does *not* do.\n\nCalling this method after `finish()` has completed successfully will panic, since the\nwriter has already been returned.\n\nThis method may be useful if the writer implements additional APIs beyond the `Write`\ntrait. Note that the inner writer might be in an error state or have an incomplete\nbase64 string written to it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:574:1881":{"id":"a:2:2949:253-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:526:717":{"id":"0:526:717","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[451,24],"end":[451,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:85:2094":{"id":"b:2:2424-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:350:585":{"id":"0:350:585","crate_id":0,"name":"decode","span":{"filename":"src/engine/mod.rs","begin":[247,4],"end":[265,5]},"visibility":"default","docs":"Decode the input into a new `Vec`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\n\nlet bytes = general_purpose::STANDARD\n    .decode(\"aGVsbG8gd29ybGR+Cg==\").unwrap();\nprintln!(\"{:?}\", bytes);\n\n// custom engine setup\nlet bytes_url = engine::GeneralPurpose::new(\n             &alphabet::URL_SAFE,\n             general_purpose::NO_PAD)\n    .decode(\"aGVsbG8gaW50ZXJuZXR-Cg\").unwrap();\nprintln!(\"{:?}\", bytes_url);\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:6959:269","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:549:1751":{"id":"0:549:1751","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[143,20],"end":[143,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:330-0:489:2034":{"id":"0:330-0:489:2034","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,42],"end":[22,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"general_purpose::GeneralPurposeConfig","name":"GeneralPurposeConfig","id":"0:489:2034","glob":false}}},"b:2:2727-0:597:1882":{"id":"b:2:2727-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:413:1873":{"id":"0:413:1873","crate_id":0,"name":"encode_engine_string","span":{"filename":"src/encode.rs","begin":[38,0],"end":[44,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied `String`.\n\n See [Engine::encode_string].","links":{"Engine::encode_string":"0:342:2069"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_string\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_string"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:489:2034":{"id":"b:2:2727-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5555:25844":{"id":"5:5555:25844","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12859:25842"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:498:2504":{"id":"b:2:2427-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:489:2034":{"id":"b:2:2742-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:410:1872":{"id":"0:410:1872","crate_id":0,"name":"encode_engine","span":{"filename":"src/encode.rs","begin":[28,0],"end":[30,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the provided `Engine` into a new `String`.\n\n See [Engine::encode].","links":{"Engine::encode":"0:338:656"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"alloc::string::String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:595":{"id":"0:595","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12797:33201":{"id":"2:12797:33201","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12432:3108","str::split":"2:12785:26050","prim@char":"1:12032:451","str::split_terminator":"2:12794:33200"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43986:3683","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:717":{"id":"0:443:717","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[31,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[325,0],"end":[329,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Config","id":"0:369:1997","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:321:2020"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2427-0:140:2184":{"id":"b:2:2427-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:513":{"id":"0:513","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[440,40],"end":[440,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2424-0:47:2078":{"id":"b:2:2424-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2429:25759":{"id":"2:2429:25759","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12800:26056":{"id":"2:12800:26056","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108","str::rsplitn":"2:12803:26058"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44022:3686","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:592":{"id":"0:592","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:593:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32436:243-0:489:2034":{"id":"a:2:32436:243-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:53":{"id":"0:53","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[23,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["0:57:1037"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32518:3482-0:527:2517":{"id":"a:2:32518:3482-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12835:33211":{"id":"2:12835:33211","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:489:2034":{"id":"b:2:3496-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:542:2151":{"id":"0:542:2151","crate_id":0,"name":"InvalidLength","span":{"filename":"src/alphabet.rs","begin":[139,4],"end":[139,17]},"visibility":"default","docs":"Alphabets must be 64 ASCII bytes","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:451:585":{"id":"0:451:585","crate_id":0,"name":"decode","span":{"filename":"src/decode.rs","begin":[87,0],"end":[89,1]},"visibility":"public","docs":"Decode base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::decode].","links":{"STANDARD":"0:322:2031","Engine::decode":"0:350:585"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:6959:269","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5543:33891":{"id":"5:5543:33891","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:717":{"id":"0:486:717","crate_id":0,"name":"fmt","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:597:1882":{"id":"b:2:3496-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:489:2034":{"id":"b:2:2731-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12866:33217":{"id":"2:12866:33217","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4668:33217"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44235:3694","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,23],"end":[47,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:609:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12763:31385":{"id":"2:12763:31385","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12764:31390"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44192:3680","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12815:33202":{"id":"2:12815:33202","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12432:3108","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::matches":"2:12812:3059"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44140:3688","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:525":{"id":"0:525","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[451,24],"end":[451,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:526:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:210:2186":{"id":"0:210:2186","crate_id":0,"name":"StrConsumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[93,0],"end":[96,1]},"visibility":"public","docs":"An abstraction around consuming `str`s produced by base64 encoding.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:211:2337"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:212","0:215"]}}},"0:476-0:324:2625":{"id":"0:476-0:324:2625","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[19,0],"end":[19,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::URL_SAFE","name":"BASE64_URL_SAFE","id":"0:324:2625","glob":false}}},"b:2:2427-0:527:2517":{"id":"b:2:2427-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[451,20],"end":[451,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,20],"end":[136,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2727-0:516:2395":{"id":"b:2:2727-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:119:2161":{"id":"0:119:2161","crate_id":0,"name":"into_inner","span":{"filename":"src/read/decoder.rs","begin":[195,4],"end":[197,5]},"visibility":"public","docs":"Unwraps this `DecoderReader`, returning the base reader which it reads base64 encoded\ninput from.\n\nBecause `DecoderReader` performs internal buffering, the state of the inner reader is\nunspecified. This function is mainly provided because the inner reader type may provide\nadditional functionality beyond the `Read` implementation which may still be useful.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3431-0:479:2033":{"id":"a:2:42146:3431-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:550:2741":{"id":"0:550:2741","crate_id":0,"name":"ReservedByte","span":{"filename":"src/alphabet.rs","begin":[145,4],"end":[145,20]},"visibility":"default","docs":"`=` cannot be used","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:552:1751"]},"discriminant":null}}},"0:416:1874":{"id":"0:416:1874","crate_id":0,"name":"encode_engine_slice","span":{"filename":"src/encode.rs","begin":[51,0],"end":[57,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied slice.\n\nSee [Engine::encode_slice].","links":{"Engine::encode_slice":"0:346:2255"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_slice"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[150,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:424:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322:2031":{"id":"0:322:2031","crate_id":0,"name":"STANDARD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[332,0],"end":[332,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [PAD] config.","links":{"PAD":"0:326:2035","GeneralPurpose":"0:479:2033","alphabet::STANDARD":"0:393:2031"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:2949:253-0:189:2185":{"id":"a:2:2949:253-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12794:33200":{"id":"2:12794:33200","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12432:3108","str::split":"2:12785:26050","prim@char":"1:12032:451","`DoubleEndedIterator`":"2:7826:127","str::rsplit_terminator":"2:12797:33201"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43968:3684","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:2369":{"id":"0:333:2369","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[43,4],"end":[43,40]},"visibility":"default","docs":"The decode estimate used by this engine","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"DecodeEstimate","id":"0:371:2369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"2:2733:744":{"id":"2:2733:744","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12736:873":{"id":"2:12736:873","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12032:451"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:489:2034":{"id":"a:2:2949:253-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12850:33214":{"id":"2:12850:33214","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12858:25843":{"id":"2:12858:25843","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,16],"end":[23,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:488:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12788:26052":{"id":"2:12788:26052","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12248:3696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3431-0:498:2504":{"id":"a:2:42146:3431-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:611":{"id":"0:611","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,34],"end":[47,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:140:2184":{"id":"b:2:2742-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:574:1881":{"id":"b:2:3496-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464-0:451:585":{"id":"0:464-0:451:585","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,24],"end":[170,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode","name":"decode","id":"0:451:585","glob":false}}},"2:12841:26066":{"id":"2:12841:26066","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:2094":{"id":"0:85:2094","crate_id":0,"name":"DecoderReader","span":{"filename":"src/read/decoder.rs","begin":[33,0],"end":[58,1]},"visibility":"public","docs":"A `Read` implementation that decodes base64 data read from an underlying reader.\n\n# Examples\n\n```\nuse std::io::Read;\nuse std::io::Cursor;\nuse base64::engine::general_purpose;\n\n// use a cursor as the simplest possible `Read` -- in real code this is probably a file, etc.\nlet mut wrapped_reader = Cursor::new(b\"YXNkZg==\");\nlet mut decoder = base64::read::DecoderReader::new(\n    &mut wrapped_reader,\n    &general_purpose::STANDARD);\n\n// handle errors as you normally would\nlet mut result = Vec::new();\ndecoder.read_to_end(&mut result).unwrap();\n\nassert_eq!(b\"asdf\", &result[..]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3425:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:106","a:2:32518:3482-0:85:2094","a:2:42146:3431-0:85:2094","a:2:32436:243-0:85:2094","a:2:42147:3430-0:85:2094","a:2:2949:253-0:85:2094","b:2:2737-0:85:2094","b:2:3496-0:85:2094","b:2:2427-0:85:2094","b:2:2424-0:85:2094","b:2:2742-0:85:2094","b:2:2727-0:85:2094","b:2:2731-0:85:2094","0:101","0:120"]}}},"2:12863:33216":{"id":"2:12863:33216","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4670:33216"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44217:3692","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375-0:331:1870":{"id":"0:375-0:331:1870","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[156,0],"end":[156,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"engine::Engine","name":"Engine","id":"0:331:1870","glob":false}}},"0:395:2762":{"id":"0:395:2762","crate_id":0,"name":"CRYPT","span":{"filename":"src/alphabet.rs","begin":[179,0],"end":[181,2]},"visibility":"public","docs":"The `crypt(3)` alphabet (uses `.` and `/` as the first two values).\n\nNot standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:2949:253-0:498:2504":{"id":"a:2:2949:253-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:314:1037":{"id":"0:314:1037","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[257,4],"end":[264,5]},"visibility":"public","docs":"Create a new config with `padding` = `true`, `decode_allow_trailing_bits` = `false`, and\n`decode_padding_mode = DecodePaddingMode::RequireCanonicalPadding`.\n\nThis probably matches most people's expectations, but consider disabling padding to save\na few bytes unless you specifically need it for compatibility with some legacy system.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12762:2010":{"id":"2:12762:2010","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43904:3170","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:574:1881":{"id":"b:2:2424-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:597:1882":{"id":"b:2:2742-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:588:455":{"id":"0:588:455","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2746:1617":{"id":"2:2746:1617","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:571":{"id":"0:571","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[144,34],"end":[144,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32436:243-0:597:1882":{"id":"a:2:32436:243-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:427-0:408:656":{"id":"0:427-0:408:656","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,24],"end":[163,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode","name":"encode","id":"0:408:656","glob":false}}},"0:370:2020":{"id":"0:370:2020","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/mod.rs","begin":[419,4],"end":[419,37]},"visibility":"default","docs":"Returns `true` if padding should be added after the encoded output.\n\nPadding is added outside the engine's encode() since the engine may be used\nto encode only a chunk of the overall output, so it can't always know when\nthe output is \"done\" and would therefore need padding (if configured).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:369:1997":{"id":"0:369:1997","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[410,0],"end":[420,1]},"visibility":"public","docs":"The minimal level of configuration that engines must support.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:370:2020"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:320"]}}},"b:2:2731-0:527:2517":{"id":"b:2:2731-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3431-0:489:2034":{"id":"a:2:42146:3431-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:690:3655":{"id":"5:690:3655","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3482-0:541:2737":{"id":"a:2:32518:3482-0:541:2737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:569":{"id":"0:569","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[144,23],"end":[144,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:570:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:388:134":{"id":"0:388:134","crate_id":0,"name":"Error","span":{"filename":"src/alphabet.rs","begin":[128,4],"end":[128,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:298:2369":{"id":"0:298:2369","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[46,4],"end":[46,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GeneralPurposeEstimate","id":"0:267:2520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[127,0],"end":[133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:134","0:389:1617"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[440,22],"end":[440,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:509:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:470-0:574:1881":{"id":"0:470-0:574:1881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,67],"end":[172,78]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::DecodeError","name":"DecodeError","id":"0:574:1881","glob":false}}},"b:2:2727-0:479:2033":{"id":"b:2:2727-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:574:1881":{"id":"b:2:2742-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12844:33212":{"id":"2:12844:33212","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[74,0],"end":[198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3425:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:110:1037","0:119:2161"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32518:3482-0:140:2184":{"id":"a:2:32518:3482-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42147:3430-0:516:2395":{"id":"a:2:42147:3430-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:295:1037":{"id":"0:295:1037","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[35,4],"end":[41,5]},"visibility":"public","docs":"Create a `GeneralPurpose` engine from an [Alphabet].\n\nWhile not very expensive to initialize, ideally these should be cached\nif the engine will be used repeatedly.","links":{"Alphabet":"0:527:2517"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alphabet",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["config",{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428-0:410:1872":{"id":"0:428-0:410:1872","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,32],"end":[163,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine","name":"encode_engine","id":"0:410:1872","glob":false}}},"2:2730:2481":{"id":"2:2730:2481","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2704:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:554:717":{"id":"0:554:717","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[136,9],"end":[136,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[60,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3425:2113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:105:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:189:2185":{"id":"b:2:2742-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3431-0:47:2078":{"id":"a:2:42146:3431-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2727-0:85:2094":{"id":"b:2:2727-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12862:27254":{"id":"2:12862:27254","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35418"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:516:2395":{"id":"b:2:2424-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3431-0:561:1876":{"id":"a:2:42146:3431-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:432-0:421:1875":{"id":"0:432-0:421:1875","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,45],"end":[165,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encoded_len","name":"encoded_len","id":"0:421:1875","glob":false}}},"2:2745:134":{"id":"2:2745:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32366:3236","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:242:2032":{"id":"0:242:2032","crate_id":0,"name":"general_purpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[1,0],"end":[352,62]},"visibility":"public","docs":"Provides the [GeneralPurpose] engine and associated config types.","links":{"GeneralPurpose":"0:479:2033"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:479:2033","0:489:2034","0:322:2031","0:323:2622","0:324:2625","0:325:2627","0:326:2035","0:327:2623"],"is_stripped":false}}},"2:2741:1619":{"id":"2:2741:1619","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346:2255":{"id":"0:346:2255","crate_id":0,"name":"encode_slice","span":{"filename":"src/engine/mod.rs","begin":[197,4],"end":[225,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied slice.\nWrites into the supplied output buffer.\n\nThis is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident\nor statically-allocated buffer).\n\n# Example\n\n```\nuse base64::{Engine as _, engine::general_purpose};\nlet s = b\"hello internet!\";\nlet mut buf = Vec::new();\n// make sure we'll have a slice big enough for base64 + padding\nbuf.resize(s.len() * 4 / 3 + 4, 0);\n\nlet bytes_written = general_purpose::STANDARD.encode_slice(s, &mut buf).unwrap();\n\n// shorten our vec down to just what was written\nbuf.truncate(bytes_written);\n\nassert_eq!(s, general_purpose::STANDARD.decode(&buf).unwrap().as_slice());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3430-0:561:1876":{"id":"a:2:42147:3430-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32518:3482-0:189:2185":{"id":"a:2:32518:3482-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12752:26018":{"id":"2:12752:26018","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:85:2094":{"id":"b:2:2742-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:561:1876":{"id":"0:561:1876","crate_id":0,"name":"EncodeSliceError","span":{"filename":"src/encode.rs","begin":[145,0],"end":[148,1]},"visibility":"public","docs":"Errors that can occur while encoding into a slice.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:562:2433"],"impls":["a:2:32518:3482-0:561:1876","a:2:42146:3431-0:561:1876","a:2:32436:243-0:561:1876","a:2:42147:3430-0:561:1876","a:2:2949:253-0:561:1876","b:2:2737-0:561:1876","b:2:3496-0:561:1876","b:2:2427-0:561:1876","b:2:2424-0:561:1876","b:2:2742-0:561:1876","b:2:2727-0:561:1876","b:2:2731-0:561:1876","b:5:687-0:561:1876","b:5:5809-0:561:1876","0:425","0:571","0:569","0:572","0:564","0:566","0:568","0:423"]}}},"0:459:1879":{"id":"0:459:1879","crate_id":0,"name":"decode_engine_slice","span":{"filename":"src/decode.rs","begin":[121,0],"end":[127,1]},"visibility":"public","docs":"Decode the input into the provided output slice.\n\nSee [Engine::decode_slice].","links":{"Engine::decode_slice":"0:358:2480"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_slice"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12865:9257":{"id":"2:12865:9257","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4671:9257"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44226:3693","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2740:134":{"id":"2:2740:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:124:1867":{"id":"0:124:1867","crate_id":0,"name":"read","span":{"filename":"src/read/decoder.rs","begin":[213,4],"end":[315,5]},"visibility":"default","docs":"Decode input from the wrapped reader.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nwritten in `buf`.\n\nWhere possible, this function buffers base64 to minimize the number of read() calls to the\ndelegate reader.\n\n# Errors\n\nAny errors emitted by the delegate reader are returned. Decoding errors due to invalid\nbase64 are also possible, and will have `io::ErrorKind::InvalidData`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471-0:597:1882":{"id":"0:471-0:597:1882","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,80],"end":[172,96]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::DecodeSliceError","name":"DecodeSliceError","id":"0:597:1882","glob":false}}},"0:105:717":{"id":"0:105:717","crate_id":0,"name":"fmt","span":{"filename":"src/read/decoder.rs","begin":[61,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:47:2078":{"id":"b:2:2427-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38:1866":{"id":"0:38:1866","crate_id":0,"name":"display","span":{"filename":"src/display.rs","begin":[1,0],"end":[88,1]},"visibility":"public","docs":"Enables base64'd output anywhere you might use a `Display` implementation, like a format string.\n\n```\nuse base64::{display::Base64Display, engine::general_purpose::STANDARD};\n\nlet data = vec![0x0, 0x1, 0x2, 0x3];\nlet wrapper = Base64Display::new(&data, &STANDARD);\n\nassert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:47:2078"],"is_stripped":false}}},"b:2:2727-0:189:2185":{"id":"b:2:2727-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:534":{"id":"0:534","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,23],"end":[53,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:127:1868":{"id":"0:127:1868","crate_id":0,"name":"write","span":{"filename":"src/write/mod.rs","begin":[1,0],"end":[11,18]},"visibility":"public","docs":"Implementations of `io::Write` to transparently handle base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:225-0:140:2184","0:227-0:189:2185","0:228-0:210:2186"],"is_stripped":false}}},"2:12761:6675":{"id":"2:12761:6675","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12032:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43894:3679","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:565:455":{"id":"0:565:455","crate_id":0,"name":"clone","span":{"filename":"src/encode.rs","begin":[144,9],"end":[144,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:2617":{"id":"0:317:2617","crate_id":0,"name":"with_decode_padding_mode","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[310,4],"end":[315,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_padding_mode` setting.\n\nPadding is not useful in terms of representing encoded data -- it makes no difference to\nthe decoder if padding is present or not, so if you have some un-padded input to decode, it\nis perfectly fine to use `DecodePaddingMode::Indifferent` to prevent errors from being\nemitted.\n\nHowever, since in practice\n[people who learned nothing from BER vs DER seem to expect base64 to have one canonical encoding](https://eprint.iacr.org/2022/361),\nthe default setting is the stricter `DecodePaddingMode::RequireCanonicalPadding`.\n\nOr, if \"canonical\" in your circumstance means _no_ padding rather than padding to the\nnext multiple of four, there's `DecodePaddingMode::RequireNoPadding`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["mode",{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12746:339":{"id":"2:12746:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12747:26020","`u8`":"1:12049:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12766:33199":{"id":"2:12766:33199","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44182:3681","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12759:26043":{"id":"2:12759:26043","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12758:26042"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:479:2033":{"id":"b:2:2737-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42147:3430-0:85:2094":{"id":"a:2:42147:3430-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:479:2033":{"id":"b:2:2427-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:408:656":{"id":"0:408:656","crate_id":0,"name":"encode","span":{"filename":"src/encode.rs","begin":[18,0],"end":[20,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::encode].","links":{"STANDARD":"0:322:2031","Engine::encode":"0:338:656"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"alloc::string::String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:498:2504":{"id":"b:2:2737-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:567:717":{"id":"0:567:717","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[144,16],"end":[144,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:516:2395":{"id":"b:2:2737-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:574:1881":{"id":"b:2:2731-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:162:1037":{"id":"0:162:1037","crate_id":0,"name":"new","span":{"filename":"src/write/encoder.rs","begin":[98,4],"end":[108,5]},"visibility":"public","docs":"Create a new encoder that will write to the provided delegate writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["delegate",{"generic":"W"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:597:1882":{"id":"b:2:2737-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[57,0],"end":[64,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:446:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:396:2765":{"id":"0:396:2765","crate_id":0,"name":"BCRYPT","span":{"filename":"src/alphabet.rs","begin":[184,0],"end":[186,2]},"visibility":"public","docs":"The bcrypt alphabet.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2424-0:189:2185":{"id":"b:2:2424-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3431-0:189:2185":{"id":"a:2:42146:3431-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42147:3430-0:597:1882":{"id":"a:2:42147:3430-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:527:2517":{"id":"b:5:687-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3654","5:690:3655","5:691:3656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:541:2737":{"id":"0:541:2737","crate_id":0,"name":"ParseAlphabetError","span":{"filename":"src/alphabet.rs","begin":[137,0],"end":[146,1]},"visibility":"public","docs":"Possible errors when constructing an [Alphabet] from a `str`.","links":{"Alphabet":"0:527:2517"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:542:2151","0:544:2744","0:547:2740","0:550:2741"],"impls":["a:2:32518:3482-0:541:2737","a:2:42146:3431-0:541:2737","a:2:32436:243-0:541:2737","a:2:42147:3430-0:541:2737","a:2:2949:253-0:541:2737","b:2:2737-0:541:2737","b:2:3496-0:541:2737","b:2:2427-0:541:2737","b:2:2424-0:541:2737","b:2:2742-0:541:2737","b:2:2727-0:541:2737","b:2:2731-0:541:2737","b:5:5809-0:541:2737","0:556","0:559","0:390","0:392","0:558","0:555","0:553"]}}},"b:2:2727-0:574:1881":{"id":"b:2:2727-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2481"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:687-0:597:1882":{"id":"b:5:687-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3654","5:690:3655","5:691:3656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:519":{"id":"0:519","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[451,9],"end":[451,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:442":{"id":"0:442","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[30,0],"end":[41,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:443:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:494:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:575:2149":{"id":"0:575:2149","crate_id":0,"name":"InvalidByte","span":{"filename":"src/decode.rs","begin":[13,4],"end":[13,26]},"visibility":"default","docs":"An invalid byte was found in the input. The offset and offending byte are provided.\nPadding characters (`=`) interspersed in the encoded form will be treated as invalid bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:577:1751","0:578:1752"]},"discriminant":null}}},"0:179:2307":{"id":"0:179:2307","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder.rs","begin":[391,4],"end":[397,5]},"visibility":"default","docs":"Because this is usually treated as OK to call multiple times, it will *not* flush any\nincomplete chunks of input or write padding.\n# Errors\n\nThe first error that is not of [`ErrorKind::Interrupted`] will be returned.","links":{"`ErrorKind::Interrupted`":"1:8082:2274"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530":{"id":"0:530","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:531:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:211:2337":{"id":"0:211:2337","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[95,4],"end":[95,37]},"visibility":"default","docs":"Consume the base64 encoded data in `buf`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:32436:243-0:516:2395":{"id":"a:2:32436:243-0:516:2395","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:391:717":{"id":"0:391:717","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[149,4],"end":[156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12771:26063":{"id":"2:12771:26063","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:560:661":{"id":"0:560:661","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[136,20],"end":[136,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:2737","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:47:2078":{"id":"0:47:2078","crate_id":0,"name":"Base64Display","span":{"filename":"src/display.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"A convenience wrapper for base64'ing bytes into a format string without heap allocation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:53","a:2:32518:3482-0:47:2078","a:2:42146:3431-0:47:2078","a:2:32436:243-0:47:2078","a:2:42147:3430-0:47:2078","a:2:2949:253-0:47:2078","b:2:2737-0:47:2078","b:2:3496-0:47:2078","b:2:2427-0:47:2078","b:2:2424-0:47:2078","b:2:2742-0:47:2078","b:2:2727-0:47:2078","b:2:2731-0:47:2078","b:5:5809-0:47:2078","0:58"]}}},"a:2:42147:3430-0:47:2078":{"id":"a:2:42147:3430-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:574:1881":{"id":"b:2:2427-0:574:1881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:371:2369":{"id":"0:371:2369","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[427,0],"end":[434,1]},"visibility":"public","docs":"The decode estimate used by an engine implementation. Users do not need to interact with this;\nit is only for engine implementors.\n\nImplementors may store relevant data here when constructing this to avoid having to calculate\nthem again during actual decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:372:1880"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2742-0:561:1876":{"id":"b:2:2742-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3431-0:140:2184":{"id":"a:2:42146:3431-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:208:1868":{"id":"0:208:1868","crate_id":0,"name":"write","span":{"filename":"src/write/encoder_string_writer.rs","begin":[83,4],"end":[85,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[400,0],"end":[407,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3482:2219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3123:2308","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:184:634"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32436:243-0:85:2094":{"id":"a:2:32436:243-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:520":{"id":"0:520","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[451,9],"end":[451,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:516:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:521:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:189:2185":{"id":"b:2:3496-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12748:26016":{"id":"2:12748:26016","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42020:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:532":{"id":"0:532","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,16],"end":[53,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:533:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12765:29328":{"id":"2:12765:29328","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44172:3167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:527:2517":{"id":"a:2:32436:243-0:527:2517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,22],"end":[244,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:497:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:203:1037":{"id":"0:203:1037","crate_id":0,"name":"new","span":{"filename":"src/write/encoder_string_writer.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will encode into a new `String` with the provided config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[58,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:386:1037"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:456:1878":{"id":"0:456:1878","crate_id":0,"name":"decode_engine_vec","span":{"filename":"src/decode.rs","begin":[109,0],"end":[115,1]},"visibility":"public","docs":"Decode from string reference as octets.\n\nSee [Engine::decode_vec].","links":{"Engine::decode_vec":"0:354:2466"},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_vec\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_vec"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["buffer",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:6959:269","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2695:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:572":{"id":"0:572","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[144,34],"end":[144,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,23],"end":[53,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:593:661":{"id":"0:593:661","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3431-0:85:2094":{"id":"a:2:42146:3431-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3431","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42147:3430-0:479:2033":{"id":"a:2:42147:3430-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[38,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["0:62:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12809:26061":{"id":"2:12809:26061","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:3673","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12832:33210":{"id":"2:12832:33210","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3108"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12457:3672","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:691:3656":{"id":"5:691:3656","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:47:2078":{"id":"b:2:3496-0:47:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2078","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:85:2094":{"id":"b:2:2731-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:228-0:210:2186":{"id":"0:228-0:210:2186","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,49],"end":[7,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder_string_writer::StrConsumer","name":"StrConsumer","id":"0:210:2186","glob":false}}},"0:527:2517":{"id":"0:527:2517","crate_id":0,"name":"Alphabet","span":{"filename":"src/alphabet.rs","begin":[54,0],"end":[56,1]},"visibility":"public","docs":"An alphabet defines the 64 ASCII characters (symbols) used for base64.\n\nCommon alphabets are provided as constants, and custom alphabets\ncan be made via `from_str` or the `TryFrom<str>` implementation.\n\n# Examples\n\nBuilding and using a custom Alphabet:\n\n```\nlet custom = base64::alphabet::Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n\nlet engine = base64::engine::GeneralPurpose::new(\n    &custom,\n    base64::engine::general_purpose::PAD);\n```\n\nBuilding a const:\n\n```\nuse base64::alphabet::Alphabet;\n\nstatic CUSTOM: Alphabet = {\n    // Result::unwrap() isn't const yet, but panic!() is OK\n    match Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\") {\n        Ok(x) => x,\n        Err(_) => panic!(\"creation of alphabet failed\"),\n    }\n};\n```\n\nBuilding a lazy_static:\n\n```\nuse base64::{\n    alphabet::Alphabet,\n    engine::{general_purpose::GeneralPurpose, GeneralPurposeConfig},\n};\n\nlazy_static::lazy_static! {\n    static ref CUSTOM: Alphabet = Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:383","a:2:32518:3482-0:527:2517","a:2:42146:3431-0:527:2517","a:2:32436:243-0:527:2517","a:2:42147:3430-0:527:2517","a:2:2949:253-0:527:2517","b:2:2737-0:527:2517","b:2:3496-0:527:2517","b:2:2427-0:527:2517","b:2:2424-0:527:2517","b:2:2742-0:527:2517","b:2:2727-0:527:2517","b:2:2731-0:527:2517","b:5:687-0:527:2517","0:539","0:532","0:387","0:534","0:530","0:535","0:538"]}}},"0:587":{"id":"0:587","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:588:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5536:33889":{"id":"5:5536:33889","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:3098","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:3098","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469-0:462:1880":{"id":"0:469-0:462:1880","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,45],"end":[172,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decoded_len_estimate","name":"decoded_len_estimate","id":"0:462:1880","glob":false}}},"0:189:2185":{"id":"0:189:2185","crate_id":0,"name":"EncoderStringWriter","span":{"filename":"src/write/encoder_string_writer.rs","begin":[51,0],"end":[53,1]},"visibility":"public","docs":"A `Write` implementation that base64-encodes data using the provided config and accumulates the\nresulting base64 utf8 `&str` in a [StrConsumer] implementation (typically `String`), which is\nthen exposed via `into_inner()`.\n\n# Examples\n\nBuffer base64 in a new String:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut enc = base64::write::EncoderStringWriter::new(&general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// get the resulting String\nlet b64_string = enc.into_inner();\n\nassert_eq!(\"YXNkZg==\", &b64_string);\n```\n\nOr, append to an existing `String`, which implements `StrConsumer`:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut buf = String::from(\"base64: \");\n\nlet mut enc = base64::write::EncoderStringWriter::from_consumer(\n    &mut buf,\n    &general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// release the &mut reference on buf\nlet _ = enc.into_inner();\n\nassert_eq!(\"base64: YXNkZg==\", &buf);\n```\n\n# Performance\n\nBecause it has to validate that the base64 is UTF-8, it is about 80% as fast as writing plain\nbytes to a `io::Write`.","links":{"StrConsumer":"0:210:2186"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:194","0:200","a:2:32518:3482-0:189:2185","a:2:42146:3431-0:189:2185","a:2:32436:243-0:189:2185","a:2:42147:3430-0:189:2185","a:2:2949:253-0:189:2185","b:2:2737-0:189:2185","b:2:3496-0:189:2185","b:2:2427-0:189:2185","b:2:2424-0:189:2185","b:2:2742-0:189:2185","b:2:2727-0:189:2185","b:2:2731-0:189:2185","0:204"]}}},"0:225-0:140:2184":{"id":"0:225-0:140:2184","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[6,4],"end":[6,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder::EncoderWriter","name":"EncoderWriter","id":"0:140:2184","glob":false}}},"0:605":{"id":"0:605","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,16],"end":[47,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:606:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12812:3059":{"id":"2:12812:3059","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12432:3108","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::rmatches":"2:12815:33202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44122:3687","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:140:2184":{"id":"b:2:3496-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:594":{"id":"0:594","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:189:2185":{"id":"b:2:2731-0:189:2185","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2185","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:323:2622":{"id":"0:323:2622","crate_id":0,"name":"STANDARD_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[335,0],"end":[335,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [NO_PAD] config.","links":{"NO_PAD":"0:327:2623","GeneralPurpose":"0:479:2033","alphabet::STANDARD":"0:393:2031"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:600:1751":{"id":"0:600:1751","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[50,16],"end":[50,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12738:33193":{"id":"2:12738:33193","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2426:3048":{"id":"2:2426:3048","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332:1997":{"id":"0:332:1997","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[41,4],"end":[41,24]},"visibility":"default","docs":"The config type used by this engine","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Config","id":"0:369:1997","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:564":{"id":"0:564","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[144,9],"end":[144,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:565:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2737-0:85:2094":{"id":"b:2:2737-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:253-0:85:2094":{"id":"a:2:2949:253-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[440,16],"end":[440,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5809-0:561:1876":{"id":"b:5:5809-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:3482-0:85:2094":{"id":"a:2:32518:3482-0:85:2094","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3482","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:329-0:479:2033":{"id":"0:329-0:479:2033","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,26],"end":[22,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"general_purpose::GeneralPurpose","name":"GeneralPurpose","id":"0:479:2033","glob":false}}},"5:689:3654":{"id":"5:689:3654","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:397:2769":{"id":"0:397:2769","crate_id":0,"name":"IMAP_MUTF7","span":{"filename":"src/alphabet.rs","begin":[191,0],"end":[193,2]},"visibility":"public","docs":"The alphabet used in IMAP-modified UTF-7 (uses `+` and `,`).\n\nSee [RFC 3501](https://tools.ietf.org/html/rfc3501#section-5.1.3)","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:527:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"5:5537:2868":{"id":"5:5537:2868","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:3096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:597:1882":{"id":"b:2:2731-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[30,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:1037"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:140:2184":{"id":"b:2:2731-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:479:2033":{"id":"b:2:3496-0:479:2033","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:603":{"id":"0:603","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,9],"end":[47,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:604:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:227-0:189:2185":{"id":"0:227-0:189:2185","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,28],"end":[7,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder_string_writer::EncoderStringWriter","name":"EncoderStringWriter","id":"0:189:2185","glob":false}}},"0:175:1868":{"id":"0:175:1868","crate_id":0,"name":"write","span":{"filename":"src/write/encoder.rs","begin":[265,4],"end":[384,5]},"visibility":"default","docs":"Encode input and then write to the delegate writer.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nof `input` consumed. The value may be `0`, which interacts poorly with `write_all`, which\ninterprets `Ok(0)` as an error, despite it being allowed by the contract of `write`. See\n<https://github.com/rust-lang/rust/issues/56889> for more on that.\n\nIf the previous call to `write` provided more (encoded) data than the delegate writer could\naccept in a single call to its `write`, the remaining data is buffered. As long as buffered\ndata is present, subsequent calls to `write` will try to write the remaining buffered data\nto the delegate and return either `Ok(0)` -- and therefore not consume any of `input` -- or\nan error.\n\n# Errors\n\nAny errors emitted by the delegate writer are returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:578:1752":{"id":"0:578:1752","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:319:60":{"id":"0:319:60","crate_id":0,"name":"default","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[320,4],"end":[322,5]},"visibility":"default","docs":"Delegates to [GeneralPurposeConfig::new].","links":{"GeneralPurposeConfig::new":"0:314:1037"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:1869":{"id":"0:229:1869","crate_id":0,"name":"engine","span":{"filename":"src/engine/mod.rs","begin":[1,0],"end":[466,1]},"visibility":"public","docs":"Provides the [Engine] abstraction and out of the box implementations.","links":{"Engine":"0:331:1870"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:242:2032","0:329-0:479:2033","0:330-0:489:2034","0:331:1870","0:369:1997","0:371:2369","0:498:2504","0:516:2395"],"is_stripped":false}}},"0:325:2627":{"id":"0:325:2627","crate_id":0,"name":"URL_SAFE_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[341,0],"end":[341,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [NO_PAD] config.","links":{"alphabet::URL_SAFE":"0:394:2625","GeneralPurpose":"0:479:2033","NO_PAD":"0:327:2623"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:5:687-0:489:2034":{"id":"b:5:687-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3654","5:690:3655","5:691:3656"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:561:1876":{"id":"b:2:2737-0:561:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:424:717":{"id":"0:424:717","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[151,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:597:1882":{"id":"b:2:2427-0:597:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:597:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:25759"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198:2328":{"id":"0:198:2328","crate_id":0,"name":"from_consumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[57,4],"end":[61,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will append to the provided `StrConsumer`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["str_consumer",{"generic":"S"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:566":{"id":"0:566","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[144,16],"end":[144,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:561:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:567:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:465-0:453:1877":{"id":"0:465-0:453:1877","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,32],"end":[170,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine","name":"decode_engine","id":"0:453:1877","glob":false}}},"b:2:2424-0:489:2034":{"id":"b:2:2424-0:489:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:489:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3048"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[440,9],"end":[440,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:506:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:462:1880":{"id":"0:462:1880","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/decode.rs","begin":[147,0],"end":[151,1]},"visibility":"public","docs":"Returns a conservative estimate of the decoded size of `encoded_len` base64 symbols (rounded up\nto the next group of 3 decoded bytes).\n\nThe resulting length will be a safe choice for the size of a decode buffer, but may have up to\n2 trailing bytes that won't end up being needed.\n\n# Examples\n\n```\nuse base64::decoded_len_estimate;\n\nassert_eq!(3, decoded_len_estimate(1));\nassert_eq!(3, decoded_len_estimate(2));\nassert_eq!(3, decoded_len_estimate(3));\nassert_eq!(3, decoded_len_estimate(4));\n// start of the next quad of encoded symbols\nassert_eq!(6, decoded_len_estimate(5));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["encoded_len",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5552:33893":{"id":"5:5552:33893","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:3098","`String`":"5:7534:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:3098","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:498:2504":{"id":"b:2:2742-0:498:2504","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:498:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:305:2019":{"id":"0:305:2019","crate_id":0,"name":"config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[187,4],"end":[189,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:331:1870","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:450:744":{"id":"0:450:744","crate_id":0,"name":"from","span":{"filename":"src/decode.rs","begin":[77,4],"end":[79,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"DecodeError","id":"0:574:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12735":{"id":"2:12735","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12736:873","2:12737:2132","2:12738:33193","2:12739:33194","2:12741:33195","2:12744:2734","2:12745:33196","2:12746:339","2:12747:26020","2:12748:26016","2:12750:26017","2:12752:26018","2:12754:26019","2:12756:33197","2:12757:33198","2:12758:26042","2:12759:26043","2:12760:6555","2:12761:6675","2:12762:2010","2:12763:31385","2:12764:31390","2:12765:29328","2:12766:33199","2:12767:31389","2:12768:26062","2:12771:26063","2:12774:26064","2:12777:3634","2:12781:3600","2:12785:26050","2:12788:26052","2:12791:26054","2:12794:33200","2:12797:33201","2:12800:26056","2:12803:26058","2:12806:26060","2:12809:26061","2:12812:3059","2:12815:33202","2:12818:33203","2:12821:33204","2:12824:33205","2:12826:33206","2:12828:33207","2:12830:33208","2:12831:33209","2:12832:33210","2:12835:33211","2:12838:26065","2:12841:26066","2:12844:33212","2:12847:33213","2:12850:33214","2:12853:33215","2:12855:25846","2:12856:27249","2:12857:25847","2:12858:25843","2:12859:25842","2:12860:27252","2:12861:27253","2:12862:27254","2:12863:33216","2:12865:9257","2:12866:33217"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:199:2161":{"id":"0:199:2161","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder_string_writer.rs","begin":[67,4],"end":[72,5]},"visibility":"public","docs":"Encode all remaining buffered data, including any trailing incomplete input triples and\nassociated padding.\n\nReturns the base64-encoded form of the accumulated written data.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"S"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[44,0],"end":[190,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["encode","encode_string","decode_vec","encode_slice","decode_slice","decode","decode_slice_unchecked"],"trait":{"name":"Engine","id":"0:331:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:479:2033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:1997","0:298:2369","0:305:2019"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2737-0:140:2184":{"id":"b:2:2737-0:140:2184","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2184","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:431-0:416:1874":{"id":"0:431-0:416:1874","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,24],"end":[165,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine_slice","name":"encode_engine_slice","id":"0:416:1874","glob":false}}},"5:5553:2928":{"id":"5:5553:2928","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:1514:7677":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:1301:6394":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"0:393:2031":{"crate_id":0,"path":["base64","alphabet","STANDARD"],"kind":"constant"},"2:10948:3686":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:40646:6605":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:6540:4612":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:4915:9412":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:8904:9448":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:9872:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:47010:6731":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:1562:6405":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:15184:5642":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:44217:3692":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:7067:6202":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6600:21548":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:4898:419":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:8292:6864":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:41222:3816":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:588:7661":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:7597:34587":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:2504:5944":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:4028:9362":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:569:7651":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:5763:6516":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:15733:5804":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11439:4945":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:3155:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:15855:5151":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"16:6929:6178":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:3123:2308":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:10319:4198":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:4737:14678":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:13097:5137":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:1632:7756":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:6426:3816":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:44725:14863":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:4860:8037":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:6107:8336":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:15311:5677":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:1546:7693":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:43832:6664":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:40411:4560":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"7:31:20519":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:1576:7712":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:2202:6800":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:10520:34594":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:11307:4935":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:7534:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:4906:9411":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"12:0:2954":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:12273:5105":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:4150:14611":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:4309:3128":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:10968:28521":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:533:4211":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:12663:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:46263:6712":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:6059:8315":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:914:6384":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:3166:7124":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:21227:31707":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:3394:3147":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"18:582:3571":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:15961:5163":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:43750:6658":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"11:1582:6401":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:22682:31464":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:3339:14659":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"5:3191:6404":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:43894:3679":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:5392:3831":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:6079:8323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"5:7316:34139":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:40534:4571":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:4523:7916":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:212:4130":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:42086:3806":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:7915:6848":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:30580:3217":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:14057:5328":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:10796:6546":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:12057:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:8920:9447":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:13504:5229":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:11321:4886":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:15301:5674":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:4388:7841":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:6013:15056":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:9467:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:5661:6001":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:12828:5105":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:10521:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:10962:3685":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"9:357:20548":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:7782:6305":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"0:544:2744":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","DuplicatedByte"],"kind":"variant"},"5:7523:4165":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:6560:4120":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:7563:4218":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"5:6530:4132":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:8973:6891":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:23179:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:2154:6480":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:43269:6641":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"9:450:20533":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:5344:4132":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:1743:658":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:5240:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:43822:6663":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:15671:5791":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"11:2304:6205":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:2465:462":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:45955:6699":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:7855:6844":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:4666:7973":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:4764:7992":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:5982:8266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:38299:14762":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:11194:21644":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:16016:5876":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:4:1113":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:6484:3085":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:4351:7814":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"0:376:1871":{"crate_id":0,"path":["base64","alphabet"],"kind":"module"},"6:5052:8135":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:2421:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5023:8121":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:8097:6357":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:3230:34134":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:10155:4618":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"11:2423:3226":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:46578:6721":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:5121:4405":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:7503:3195":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:4514:3130":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:7828:6313":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:0:878":{"crate_id":6,"path":["libc"],"kind":"module"},"17:13856:5298":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:357:6785":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:10831:28936":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:10432:34593":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:5431:6818":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:11497:4959":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:640:6790":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:43028:6332":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:7788:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:1682:7786":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"5:1527:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:9878:3118":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:13754:5283":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:15589:5774":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:1873:3968":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:8001:6849":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:4928:4774":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"6:6159:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:5015:8116":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:15003:5600":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:44022:3686":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:1496:7669":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:6658:8398":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"11:1910:6404":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"11:1883:3805":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:12046:796":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:7784:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:5648:5996":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:12930:21618":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:11388:8696":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:46980:6730":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:44478:6679":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:5632:4224":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:6889:8512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:7865:6845":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:10762:8692":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"11:1917:6405":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:42094:3226":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:5867:8211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:12396:5074":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:6943:8537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:8403:6877":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:1094:4753":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:15519:5749":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:14266:5377":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:14021:5322":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:3936:9356":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:41008:6531":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:12035:1150":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:2670:5951":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:7422:3099":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:44953:6696":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"0:72:1867":{"crate_id":0,"path":["base64","read"],"kind":"module"},"16:3065:4777":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:14843:5572":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"9:0:2951":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:7090:6204":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:43661:6652":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:15:1868":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:30648:31492":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"5:7367:3226":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:10925:21626":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"0:499:2506":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","Indifferent"],"kind":"variant"},"1:3980:9359":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:47888:6761":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:42572:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:2209:3155":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"0:398:2773":{"crate_id":0,"path":["base64","alphabet","BIN_HEX"],"kind":"constant"},"17:16062:5889":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:15990:5870":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:5568:8352":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:7895:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:6430:6827":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:4977:8095":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:4616:7962":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:41022:6532":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:13365:5195":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:11113:4916":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:2324:635":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"0:501:2508":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireCanonical"],"kind":"variant"},"1:6357:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:555:7643":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:40809:6618":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:9274:6798":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"5:2972:3654":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:7003:4175":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:4383:6808":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:42103:3427":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:12052:1640":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:5634:5992":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13922:5309":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:4776:7999":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:22993:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:4893:8048":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:7923:3182":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:10757:3696":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:6764:8450":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:46554:6720":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11370:4617":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:21171:3571":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:12445:5082":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:11449:4818":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:14399:5401":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:10095:6908":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:14324:5386":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:6913:8522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:12392:3104":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:10337:4872":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:0:2959":{"crate_id":18,"path":["memchr"],"kind":"module"},"18:660:4715":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13056:5128":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:12230:5051":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"14:187:20625":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:39598:3094":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"6:5075:8143":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"11:1087:34576":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:8146:2000":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:23334:4597":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:7754:4601":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:10869:3682":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:42148:3325":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:4921:4399":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:15212:5650":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4676:7974":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:10812:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"5:4252:3805":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:44414:6678":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:6837:8472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:6927:8531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:12380:5072":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:1063:6396":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:6871:3231":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:3482:2219":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:6297:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:46107:6705":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:22351:9559":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:15125:5627":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:11041:4886":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:5130:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:2380:9337":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:44688:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:43968:3684":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:4742:9374":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:39967:27208":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:12459:4906":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:13869:5301":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:8251:14733":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:7616:8563":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:44335:6673":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4745:7980":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6844:6170":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:40368:3693":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:22217:14771":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:10131:6543":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:1815:1187":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:42224:3226":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:11215:8694":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:4939:1100":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:9886:3121":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:13436:5209":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:9094:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:23117:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:21210:31700":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:41806:9352":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"16:8181:5983":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:8157:3165":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:1406:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4401:7851":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:4641:4391":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:11141:4918":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:10667:34597":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:4497:4386":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"14:7:4408":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:39675:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:4031:3147":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:8050:6354":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:4169:14661":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:10775:4888":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:44834:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:6012:8289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:10714:3171":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:46856:6728":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:39631:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"11:434:34568":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:15329:5681":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:3460:4765":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:15645:5782":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:13663:5268":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:10940:4601":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:15659:5789":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:40787:6524":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:47966:6762":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:1040:6205":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:12335:5067":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:14181:5364":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:8300:6858":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:11045:4242":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:11426:4944":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:4129:31081":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"10:44:6411":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"6:6071:8322":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:11215:4926":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:21239:31705":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:21436:9478":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:12127:5044":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"7:0:1686":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:7497:4422":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:32437:2008":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:47246:6735":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:10822:3165":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:482:4210":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:14170:5363":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:3738:3184":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:44847:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:12003:9264":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10657:4886":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:12009:4886":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:8289:32665":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:4569:9404":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10510:4883":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:7269:34590":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:645:9259":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:5123:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:42069:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"11:700:3226":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8551:6885":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:2659:3237":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:1550:6403":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:11197:6828":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:11126:4917":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:4092:3806":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:8326:6868":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:15133:5629":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:22188:9340":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:6370:1707":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"2:13033:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:15345:5684":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:11675:4978":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:9048:28505":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:1131:34488":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:3888:4380":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:6070:4219":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:6128:8342":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:1902:3969":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"0:242:2032":{"crate_id":0,"path":["base64","engine","general_purpose"],"kind":"module"},"2:6483:6526":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:4386:4558":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:1913:16487":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:563:7648":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:12115:5043":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:13976:5317":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:14904:5579":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:7041:6196":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:12255:5060":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:4949:4400":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:38933:14764":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"4:0:2949":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:3581:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:2703:8593":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:903:3805":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"11:364:4123":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:2810:5957":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:15493:5740":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:11779:4993":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:7365:8547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:13235:5170":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:46125:6706":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:6798:8456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:10689:3806":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4841:8029":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:41256:6537":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:7906:6847":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:33722:14754":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:23779:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:7732:9263":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:7639:8569":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:4381:4158":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:7281:31234":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:1541:3085":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:9876:3117":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:22257:9570":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"18:755:4737":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"0:396:2765":{"crate_id":0,"path":["base64","alphabet","BCRYPT"],"kind":"constant"},"6:5921:8237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:44911:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"6:4830:8021":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:2062:6479":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:4955:8079":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"0:541:2737":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError"],"kind":"enum"},"1:922:6388":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:47170:6733":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:43053:3126":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:41231:6536":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:3737:3226":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:21553:9340":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:4908:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:11701:4983":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:4745:4393":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:836:3805":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:8286:9385":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:43044:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:11973:4590":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:6700:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:15546:5758":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:41749:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:10852:21624":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:7102:21551":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:38189:14760":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:47778:6760":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:40744:6613":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:8978:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:45977:6700":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:1315:4416":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:1495:6400":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:11243:4931":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:4516:7913":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:5760:21544":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:1534:3805":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"18:96:25740":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:10780:6921":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13145:4411":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:4628:7971":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:11155:4920":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:12038:1536":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:42147:3430":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:15557:5759":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:4053:4382":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:5388:3830":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:11307:6829":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:39780:6597":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:12718:21616":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:16098:5898":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:867:6386":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:44349:6676":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:5117:8168":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"5:4411:3147":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:2944:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:15680:5795":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:44086:3690":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"11:2542:7578":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"5:7434:9275":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:3443:3156":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:1966:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:4417:4384":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:7580:4234":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:12248:3696":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"18:636:4714":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:9196:8686":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:1455:3226":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:7333:14729":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:3603:3085":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:12486:5083":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:11158:4606":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:12701:5098":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:2975:8586":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:21562:9479":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:3797:4378":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:22553:8600":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:40697:6609":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:1558:7702":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:7284:6495":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:12051:1639":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:16146:5908":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:21882:31701":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:12953:5115":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:10422:4882":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:4986:4401":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:281:3098":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:44226:3693":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:43904:3170":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:5639:6820":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:9813:21611":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:3732:6802":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"3:0:478":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:43508:8678":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:13334:5186":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:14786:5538":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:1591:7724":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:2336:14772":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:11632:4972":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"11:2536:7577":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:580:7656":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:6687:6142":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"7:78:20526":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:13882:5000":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:6896:4231":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:3373:14612":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:14470:5412":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:2658:9340":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"9:330:7584":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:43876:3678":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:21181:31696":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:14765:5530":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"5:2236:34470":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:4561:3131":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:7736:6303":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:12548:5086":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:40828:6527":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:32427:6592":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:22569:6568":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:10569:34598":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:6083:20655":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:3280:3189":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:2973:34549":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:7544:6295":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:40482:4567":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:11604:4969":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:12872:5107":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:21193:31696":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"18:671:4721":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:3966:9358":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:5446:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"5:2474:8590":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:44068:3689":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:44661:3664":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:3461:5988":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:12056:1246":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:9014:6898":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:536:5918":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:46310:6713":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:7534:5977":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"11:1025:6394":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"9:507:6462":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:7931:3184":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:4527:4387":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:10473:4239":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:7523:6294":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:12684:4838":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"15:288:20637":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:44040:3685":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:38354:14763":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:15287:5672":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:44546:3097":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:4543:7926":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"11:2548:7579":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:5987:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"11:811:3223":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:3655:4782":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:14896:5578":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:1054:6394":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:8919:3429":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:6901:5972":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:12410:5077":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"11:2443:3085":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"5:4212:3147":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:7621:21553":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:8167:6366":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:46532:6719":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:4637:8444":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:11476:4952":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:1536:6477":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:44669:8679":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:7360:34589":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:2144:4150":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:10962:4904":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"14:221:6382":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:538:4699":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:13202:5164":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:5082:6814":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:9030:3096":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:2450:5942":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:13961:5314":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:11476:6802":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:44633:3663":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:15160:5633":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"11:2231:4952":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:6682:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:13285:5179":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"11:2383:3805":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:15943:5153":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:10334:4203":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:4964:3419":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:21455:6564":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:2662:3183":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:9344:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:15027:5602":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:11981:6933":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:10834:6547":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:12049:1641":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"8:0:2950":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:1903:6403":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:4744:9375":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:39551:14614":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:3127:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:12054:848":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"5:2256:8589":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:9479:4238":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:44492:14647":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:5384:21542":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"11:742:6385":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:10944:4619":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"11:1160:4416":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:12031:1033":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:9624:21590":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:15384:5696":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:23055:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"11:883:6393":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:14822:5567":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:14251:5373":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11590:4968":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"11:1566:20613":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:1477:6386":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:40529:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:4703:9386":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:0:1528":{"crate_id":1,"path":["std"],"kind":"module"},"11:844:9276":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:40688:6608":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"18:564:4701":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:8237:9351":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:8493:9424":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:12614:21615":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:21840:9340":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"17:10813:34595":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:47092:6732":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:6691:8421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:4578:7945":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:21442:9481":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:22215:31665":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:10907:6548":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:4738:7979":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13989:5318":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"11:800:3085":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"0:326:2035":{"crate_id":0,"path":["base64","engine","general_purpose","PAD"],"kind":"constant"},"1:9186:28916":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:13742:5281":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:7503:5976":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:8352:6809":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:13322:5185":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:1778:634":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"0:472:1168":{"crate_id":0,"path":["base64","prelude"],"kind":"module"},"2:41919:31478":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:46023:6702":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:15374:5691":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:11014:4910":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:1819:6798":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:12137:3700":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"5:4050:4132":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:12042:691":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:34091:14758":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:42414:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:13724:5280":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7884:21555":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:8200:3169":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:6545:6136":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:2492:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:15747:5807":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:41246:4192":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:4800:8007":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"18:719:4729":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:10076:6797":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"15:0:2956":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:10953:6819":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"5:1387:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:42208:3805":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:11052:4887":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:43740:6657":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:15868:5825":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:44898:6693":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:5322:4406":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:8213:3171":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:7338:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:3735:6803":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:9759:21609":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:909:6400":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:6944:34586":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:2954:3134":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:14221:5368":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:32463:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:46085:6704":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:12191:5049":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:4922:8063":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:14509:5422":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:15200:5644":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:12153:5046":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:3358:31791":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:48028:6763":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"0:479:2033":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurpose"],"kind":"struct"},"16:3915:4381":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:4919:32201":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:8207:3170":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:6610:4229":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:2701:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:859:3226":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:11144:4605":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:41978:4578":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:42136:3428":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:12048:793":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:2169:21671":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:43253:6638":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:7708:5981":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:22711:8603":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:3081:14613":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:40819:6619":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:2933:20683":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:1424:3805":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:42769:3119":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:48426:6780":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:4862:4397":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:6279:6110":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:39794:4428":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"5:786:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:266:4132":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:4506:7910":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:9918:21613":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:47430:6737":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:1692:3147":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:33918:14757":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"0:547:2740":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","UnprintableByte"],"kind":"variant"},"6:4870:8040":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:48364:6778":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:11508:6552":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:12784:5102":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:4151:9381":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:10757:8690":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:7862:6317":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:16160:5909":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:11382:8695":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:13026:5124":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:42146:3431":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:5068:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:123:15137":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:12310:5064":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:40675:3168":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"0:0:1886":{"crate_id":0,"path":["base64"],"kind":"module"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:5152:8180":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:7651:8571":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"11:430:34566":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:4020:3085":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:7879:3483":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:1691:7792":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13809:5292":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:42078:3805":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:12474:4886":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:8226:6858":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:43761:6659":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:43512:4589":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:1567:6406":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:5574:5963":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:527:7628":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:47216:6734":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:15117:5625":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:6249:4224":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:10559:4884":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:3196:34133":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:15612:5775":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:3251:6406":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:4042:9364":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:12972:5118":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:1639:7760":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:44928:4595":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:9505:717":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:41789:4576":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:8828:4606":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:1151:34551":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"11:1676:4127":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:48174:6766":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1537:7687":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:40666:6607":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"18:521:25752":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:2428:5941":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:4455:7884":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"0:542:2151":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","InvalidLength"],"kind":"variant"},"16:5905:6025":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:4824:8018":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:11178:8679":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:26181:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:3837:6804":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"9:426:20535":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:10716:4887":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:1969:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:11269:4906":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:495:7606":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:7797:3484":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:10792:6844":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:48250:6770":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:11226:4928":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:15980:5869":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"5:2048:3184":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:46055:6703":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"16:7391:21552":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:7306:4144":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:10126:9345":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:40619:6604":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:13107:6561":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:4613:4390":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:11576:4967":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:7450:3814":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:11714:4986":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:42233:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:10986:6887":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:7613:6299":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:6332:5962":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:6513:6126":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:12898:21617":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:6146:4208":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:13648:5263":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:14497:5415":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:4719:4392":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:7462:6281":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:4808:8010":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:4469:9386":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:6466:4228":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:7346:6496":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:14989:5597":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:5687:3147":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:21381:9340":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:8866:3226":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:11666:4977":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:13347:5187":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:62:15082":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:43300:6649":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:40447:3694":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:3670:9353":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"5:5961:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:7284:3427":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:5992:8273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:30351:9354":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:3600:5989":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:12053:1637":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:32551:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:13832:5297":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:7548:3086":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13935:5310":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:6804:8458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:32436:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:33545:3090":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:12432:5081":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"16:2907:5961":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"11:123:4121":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:14633:5424":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:30636:3126":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:13448:5212":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:41215:6535":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"19:0:1130":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:8274:6805":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:7054:6199":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:48259:6771":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:40:3222":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:11065:4913":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:46386:6715":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:8802:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:14662:5444":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:8245:3807":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7634:3224":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:4381:4557":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:7768:5969":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:10532:3190":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:11459:4947":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:4266:6509":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5816:6015":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"18:491:4691":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:1789:3223":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:11507:4960":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:7467:4421":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:12366:21738":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"11:1066:20612":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"11:0:2953":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:30706:31494":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"6:4884:8045":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:12452:3673":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:7679:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:1718:7803":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:8545:3805":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:9531:9005":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:1439:3806":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:4566:7939":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"18:80:25739":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:44940:4596":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:6263:8391":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12596:5090":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:44366:6677":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:48311:6775":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:10941:4899":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:14208:5367":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:13309:5183":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:44320:6668":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"11:832:6400":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:42650:6542":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:5829:8184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:4968:8089":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:11645:4973":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:42336:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:548:7640":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:3607:3806":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:790:4135":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:3345:14658":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:2704:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:1883:14781":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:45911:6697":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"0:38:1866":{"crate_id":0,"path":["base64","display"],"kind":"module"},"16:2881:5960":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:11294:4934":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:7481:31506":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4625:9361":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:44645:3667":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:42157:3808":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:46624:6723":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:11536:4964":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"9:393:20534":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:4534:3132":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:12077:5037":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:7645:8570":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"18:574:4692":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:0:533":{"crate_id":2,"path":["core"],"kind":"module"},"2:40758:6616":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:1796:6797":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:6485:5965":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"11:299:7572":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:14757:5527":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:9099:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:6228:8366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:41237:3196":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:511:4751":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10067:4738":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:23086:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:2548:5946":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:11767:4992":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:40868:6620":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:2722:5953":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:5009:8115":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:42748:3117":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:11612:6835":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:44172:3167":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"14:40:4411":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:4584:7948":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12166:5047":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:4783:8000":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:7689:3818":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:6604:3226":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:6352:6115":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:4462:4385":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:42492:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:637:6788":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:893:3085":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:12244:5056":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:8195:6368":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:7582:6296":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:44298:14646":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:9104:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:2949:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:21208:31693":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:33125:6215":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:11523:4962":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:10535:3192":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:48090:6764":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:1821:6799":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:2321:5930":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:30620:6589":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:1024:4132":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:557:6787":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:5939:5914":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:8169:3166":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:12039:1622":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:2359:5938":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:2707:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:15244:5658":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:6401:5964":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4710:7977":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10608:4885":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:2596:5948":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:40998:3169":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"18:531:4696":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:22484:6566":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:4686:7975":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"0:527:2517":{"crate_id":0,"path":["base64","alphabet","Alphabet"],"kind":"struct"},"2:3255:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:14122:5358":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:15527:5752":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:12180:5048":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:2648:2518":{"crate_id":2,"path":["core","convert"],"kind":"module"},"17:13707:5277":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:2618:5949":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:15337:5683":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:14934:5585":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:489:7603":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:6425:6122":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:7935:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:22317:9560":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"17:13419:5201":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:3022:6220":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:48230:6768":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"13:110:34577":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:41208:6534":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:4377:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:11453:4246":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:7510:4424":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:8453:6645":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:10988:4907":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"0:229:1869":{"crate_id":0,"path":["base64","engine"],"kind":"module"},"5:3594:3805":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:1664:7779":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"18:599:34602":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:7692:8581":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"15:306:20638":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:22203:9569":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"5:2983:33969":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:11290:4244":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:6893:6176":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:43493:6651":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:13055:32347":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:6100:8335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"18:652:4692":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:880:6387":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"0:498:2504":{"crate_id":0,"path":["base64","engine","DecodePaddingMode"],"kind":"enum"},"2:39615:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"0:331:1870":{"crate_id":0,"path":["base64","engine","Engine"],"kind":"trait"},"16:6456:6124":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:13082:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:3315:5987":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:12052:5035":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:11001:4908":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:12033:1657":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:40455:3693":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:15087:5619":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:41997:4580":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"0:489:2034":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurposeConfig"],"kind":"struct"},"1:4050:9366":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:6169:8354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4549:7929":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:10665:3805":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:4440:7877":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:9147:4615":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:5363:4407":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:2696:5952":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:475:7595":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:15710:5800":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:3988:9360":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:6114:8337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:2406:5940":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:5928:8239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:12047:797":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:3425:2113":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:7747:14735":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:48239:6769":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:8891:4610":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:23272:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:5971:4224":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:2526:5945":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:5588:5966":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:10726:34600":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"11:856:6391":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13787:5291":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:3012:6219":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:12140:5045":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:3099:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:31182:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:1697:7795":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:3753:6479":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:43071:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:44665:3665":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:15235:5655":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:5381:6815":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:4773:4772":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:2997:3089":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:10767:6843":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:3410:14615":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:10355:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"6:6666:8403":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:15535:5753":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:14887:5577":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:48349:6777":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"14:31:4408":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:7644:4598":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:4473:7896":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:48296:6774":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:12536:5085":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:5746:6821":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:7540:4620":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:12055:1696":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:46208:6709":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:1545:3223":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:13407:5200":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:11027:4861":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"5:1516:6385":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:504:4150":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:2093:4638":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:4647:7972":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:43787:6605":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:11485:4955":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:8011:2154":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:6644:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:11475:6551":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:507:7611":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:44641:3668":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:3232:5929":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:6696:6143":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:6861:3230":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:7702:8583":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:7554:5978":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4488:7902":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:5885:8224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:501:7608":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:4231:6806":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:3217:6405":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:13478:5224":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:32402:6590":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:43862:3102":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:4311:6807":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:5650:3229":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:46934:6729":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:6117:3147":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:15062:5611":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:44837:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:46456:6717":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:11755:4991":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:16180:5185":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"14:215:6380":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:9867:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"9:486:20532":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:945:6392":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:723:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:5500:6819":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:1570:7710":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:42998:3126":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"5:4444:4158":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:4344:4383":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:11593:6930":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:14235:5371":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:1674:7785":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:5308:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:8220:3167":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:4167:9383":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:6721:21549":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:8476:6880":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:5963:6031":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:22620:6573":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:3764:4377":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:44140:3688":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:533:7631":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:32420:3129":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"13:0:2948":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:44713:4594":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:46408:6716":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:13948:5312":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:15101:5622":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:2370:9332":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"18:515:4689":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:12921:5067":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:1785:6500":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:918:6385":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:4461:7887":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"14:202:3084":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:2778:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"11:687:3806":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:11932:5027":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:9034:6902":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"5:7267:3221":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:4460:3129":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:6818:6169":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"9:237:6645":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:3133:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:8190:3168":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:48387:6779":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:3328:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:22718:4426":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:11690:4982":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:7318:6241":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:11170:28934":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:4854:8034":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:401:4748":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"11:396:4125":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:12037:1503":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"11:1887:3226":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:5592:3147":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:256:4745":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:39697:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:40425:6602":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:10915:4898":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:41835:8670":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:1538:3226":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:6120:8340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"14:160:4408":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:22593:4425":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:12032:451":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:2418:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:7838:4819":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:4505:4184":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:830:4138":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:44210:3691":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:7026:4232":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:8281:6375":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:10035:4870":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6268:34588":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"18:766:25751":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:9651:21607":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:7717:9262":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"0:327:2623":{"crate_id":0,"path":["base64","engine","general_purpose","NO_PAD"],"kind":"constant"},"16:6742:6155":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"11:1051:6396":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:14385:5400":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:10840:28932":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:7556:8559":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:23210:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:1501:7671":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:12014:28900":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:10083:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:44526:3675":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:3199:3190":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:11957:14832":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:10896:4896":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:2698:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"11:1603:6402":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:3002:9474":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:48270:6772":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:1286:6396":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:4835:4396":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"5:4865:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:16004:5874":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:11743:4990":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:13896:5306":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:5128:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:40776:6617":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:11469:4949":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:1507:7674":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:10172:4741":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"11:1107:6398":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:4127:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"11:2562:7581":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:149:4118":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:2766:5955":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"18:609:4708":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:14282:5378":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:40609:4185":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:21564:6564":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:5673:5967":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:3830:4379":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"11:2469:3223":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:2993:3558":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:5044:8133":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:7559:3087":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:32549:3559":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:43721:6654":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:12560:5087":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:12036:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:9880:3119":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:5395:6816":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:7633:8568":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:12503:14640":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:5995:5920":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:2440:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:6047:8310":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:11088:4914":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:34437:6224":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"11:2403:3806":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:32519:3560":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:15842:5137":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"16:2832:5958":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:15356:5688":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:12174:3702":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:3251:4763":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:13383:5196":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:4755:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:14950:5588":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"11:2140:6394":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:12659:21594":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"18:614:34604":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:40395:31465":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:30614:3218":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:2183:8585":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:3278:3188":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:11395:4941":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:40767:6519":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:12797:5104":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:11234:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"16:2305:20682":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:12584:5089":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"5:6351:9572":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:5876:6518":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:21992:9340":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:41955:6805":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:45931:6698":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"18:681:4722":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:2228:4762":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:6813:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:7136:31078":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:9968:21614":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:595:4752":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:8281:8680":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:6792:6168":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4529:7918":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:7568:5979":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:42531:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:5612:5968":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:621:3970":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:6781:8451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4847:8032":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:13765:5284":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:9971:6632":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:40515:4569":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:15049:5606":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:3184:3805":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:14099:5349":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"11:2124:6205":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:6961:8540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:3818:3223":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:4957:3197":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"17:12264:5061":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:4639:8446":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:41772:4574":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:40435:4561":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:15631:5780":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:4366:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:6204:6076":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:7751:14734":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:23148:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:12029:5034":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:6222:8365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:10247:9186":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:16049:5883":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"0:322:2031":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD"],"kind":"constant"},"1:3366:3196":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:14426:5405":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:14485:5067":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:14194:5366":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:3163:7123":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:11168:21643":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:6686:4132":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:6499:5982":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:7657:8572":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:10293:3170":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6261:6107":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:10990:6550":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:41264:6539":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:21383:9482":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:6718:8431":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:42755:3116":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:44890:6691":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:5625:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:15689:5797":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"11:787:6387":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:14156:5361":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"11:2554:34575":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:48212:6767":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:31210:3571":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:46722:6725":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"0:395:2762":{"crate_id":0,"path":["base64","alphabet","CRYPT"],"kind":"constant"},"17:13516:5232":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"14:165:20618":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:40639:3198":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"16:2788:5956":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:3160:7009":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:11034:4241":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:22346:9561":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:9526:32662":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:5897:8228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:22271:14771":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"17:11978:5031":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:574:7653":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"0:369:1997":{"crate_id":0,"path":["base64","engine","Config"],"kind":"trait"},"9:177:8996":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:46753:6726":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:2711:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:2487:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:3500:3157":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:42453:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:10338:29190":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:15224:5651":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:12572:5088":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"18:690:4724":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:4235:6508":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:12050:1638":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:4740:9372":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:2586:3181":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:4914:8058":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:10802:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:6753:6156":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"18:624:34605":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:7651:6300":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:9882:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:7529:4752":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:1650:7768":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:9943:21596":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:5:1707":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"16:8134:6362":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:2911:4214":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:2695:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:22732:4427":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:5982:6038":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:1760:6796":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:14413:5404":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:8842:6887":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:4777:717":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:44657:3670":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:42165:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:5743:6007":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:33781:14756":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:4998:8110":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:44503:6680":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:8535:6810":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"5:3343:3223":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:939:6391":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6386:6118":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:22080:9564":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:40858:6529":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:5891:8227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"0:127:1868":{"crate_id":0,"path":["base64","write"],"kind":"module"},"6:4496:7904":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:40735:6515":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:22:731":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:4798:4215":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:40374:6599":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:7015:6195":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:5974:8261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:38244:14761":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:21845:9484":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:9474:6842":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:2368:9331":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:2744:5954":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:22628:6574":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:634:4418":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:44201:3695":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2622:3173":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:13633:5259":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:6376:21547":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12356:5070":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:1556:6404":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:14346:5397":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11563:4966":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"10:0:2952":{"crate_id":10,"path":["adler"],"kind":"module"},"17:14296:5380":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:10321:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:4364:7823":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:5830:6016":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:2339:5932":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:13584:5234":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:10950:4901":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:5910:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:33663:14755":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:8006:6850":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4989:8104":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:43730:6656":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:5111:8165":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"11:2569:3099":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:692:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:7380:28492":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"18:699:4725":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12510:5084":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"16:7492:6290":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"18:590:4702":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:13273:5176":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:15013:5601":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:34264:14759":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:1685:4132":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:7668:6838":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:14359:5398":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:12418:5079":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:11617:4970":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:1505:6384":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:11800:4995":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:4774:4394":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:48285:6773":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:2472:5943":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"0:371:2369":{"crate_id":0,"path":["base64","engine","DecodeEstimate"],"kind":"trait"},"16:8239:6261":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:40844:4712":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:3491:27830":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:7598:8560":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8562:4604":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:43261:6640":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:22125:9565":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"16:7128:6902":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:12387:21739":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:5104:8162":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:44855:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:13273:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:22605:31510":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"13:226:7570":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"18:727:4732":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"11:2369:6409":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:33311:14753":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10881:21625":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:5088:4404":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:12600:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:6162:4223":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"11:1891:3085":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:5712:6002":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:596:7665":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:13224:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:14087:5347":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:2523:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:12290:5062":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:15566:5761":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:40496:14685":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:14439:5406":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:8991:28534":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:40576:9312":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:23241:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:44122:3687":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:13218:5168":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:4428:7874":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:10578:3818":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:9339:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:42762:3118":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:2864:5959":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:3032:5984":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:40463:3692":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:10236:4194":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"11:837:6388":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:16123:5903":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:6898:8515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:2518:3180":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:16170:5180":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:11051:4243":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:23303:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:5415:6817":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:5866:6022":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:44441:6557":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:8242:3088":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:7722:5971":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:10207:4742":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:7622:8564":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:7217:14737":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:6983:4616":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:8330:8431":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:4038:9363":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:43712:6653":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:14878:5573":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:40706:6610":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:11991:5032":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:11987:2024":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:12091:5041":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:11549:14638":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:6489:8599":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"0:394:2625":{"crate_id":0,"path":["base64","alphabet","URL_SAFE"],"kind":"constant"},"2:46186:6708":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:9824:2219":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"11:102:7571":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:12197:3699":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:22302:9340":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"16:2284:20656":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:6915:5973":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"18:113:25741":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:8137:3195":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:928:9276":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:12758:5101":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:14145:5359":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:5051:6814":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:40383:4559":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:15079:5616":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:9069:8682":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:3112:3172":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:22164:9566":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:42375:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:39773:6596":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:3130:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:42611:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:43016:31489":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:12044:798":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:10976:6549":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:46226:6710":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:10315:4747":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:11998:9007":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:2986:3556":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:3994:9361":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:14373:5399":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:13083:5136":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:3510:3160":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:7618:3223":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:9730:21608":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:42258:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:13491:5228":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:15037:5603":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:14698:5475":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:2574:5947":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:40562:4570":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"6:5140:8175":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:13297:5180":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:6361:6116":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:3930:9357":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:9860:21612":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:0:2957":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:6226:6091":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:10051:4871":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:7276:3226":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:11355:6833":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:1072:4416":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:32438:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:9128:6828":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:6868:8498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:7375:3226":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"5:886:4140":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:43290:6645":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:4449:7882":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:48334:6776":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:2946:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:6531:6134":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:3318:14765":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:8858:6889":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:3687:4132":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:12345:5069":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"18:736:25750":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"18:707:3674":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:15108:5624":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:9671:3140":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:6934:8534":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:2944:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:40726:6513":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:9109:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:6194:6826":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:5571:9429":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:8936:9449":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:7643:9340":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:46675:6724":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:7792:21554":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:6879:6174":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:4635:8442":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"0:503:2510":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireNone"],"kind":"variant"},"2:32518:3482":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:4535:7921":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:11605:28541":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:11256:4932":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:13235:4208":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:1758:6795":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:9823:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"16:7006:6192":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:6583:6138":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:4700:9413":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:21434:9340":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:6243:6097":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:15507:5746":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:11412:4943":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11345:4939":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:1521:7679":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:3241:3193":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:483:7600":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:22645:31479":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:15294:5673":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:8115:6359":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:2352:8598":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:6318:6112":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:32366:3236":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:12043:693":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:14455:5408":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:5807:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:5727:6005":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:9790:21610":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:9884:3120":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:15903:5855":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:11399:4942":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:4698:7976":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"9:52:8986":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:10738:6917":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:39655:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:8959:6890":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:5004:3147":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:22666:31486":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:6136:8345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:4806:4395":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:39512:3809":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:22537:6567":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:33604:9475":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:6041:21546":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"11:2151:6396":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:5435:5990":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:4998:854":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:11657:4976":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:7342:34591":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:5859:8209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:13328:3220":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:588:9256":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"14:0:2955":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"18:507:4692":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:5403:4870":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:4889:4398":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:5085:8148":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:10016:21591":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:46245:6711":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:13909:5307":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:6017:21545":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"11:2352:6396":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:21994:9480":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:2380:5939":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:23024:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:6346:6114":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:9164:6904":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"6:4902:8054":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:903:3223":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:5017:4402":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:42988:8671":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:7843:6842":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:261:4746":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:46356:6714":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:14778:5537":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"5:1486:6387":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:2031:4756":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:11619:6835":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:11340:6832":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:7599:4236":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:12220:4767":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:12446:3674":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:7901:6801":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:6299:6520":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:2979:33968":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:7694:5980":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:8072:6355":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:12213:3701":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:11945:5028":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:8205:21556":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:8814:4605":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:6569:5970":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:15177:5641":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12301:5063":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:13676:5270":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:5004:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"0:324:2625":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE"],"kind":"constant"},"17:16087:5897":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:16032:5881":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"11:1007:6205":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:0:2958":{"crate_id":17,"path":["object"],"kind":"module"},"2:4103:6506":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:119:15136":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:7738:9301":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:10102:4739":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:2600:4198":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:14312:5384":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"10:36:7583":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:12202:21737":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:21870:6563":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:47280:6736":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:1596:7726":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:7878:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"15:394:20647":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:7436:6042":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:43308:6650":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:32939:6218":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:13182:5163":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:1734:7808":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:2969:20684":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:7668:8576":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:4724:7978":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:40796:6525":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:32406:6261":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:5753:6824":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:11313:6929":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:3584:4766":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:8850:3805":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"0:516:2395":{"crate_id":0,"path":["base64","engine","DecodeMetadata"],"kind":"struct"},"17:10242:4743":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:3333:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:39741:9269":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:6248:8380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:1897:8596":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:6842:3229":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:8872:4607":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:7388:8558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:9021:6899":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:10785:34599":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:15192:5643":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:11549:4965":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:4789:8003":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:4932:8069":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:7610:8562":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:3225:6403":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:11982:1536":{"crate_id":2,"path":["core","str"],"kind":"module"},"2:40470:14684":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:46776:6727":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:1528:7682":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:6596:9444":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:15279:5669":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:14969:5589":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:4115:6507":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:43800:6661":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:7826:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10974:4906":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:40716:6612":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:11958:5030":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"11:1142:6399":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:36313:6225":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:5780:6825":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"11:1896:3223":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:7474:6282":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"11:328:7575":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:14921:5580":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:44192:3680":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:46001:6701":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:43936:3682":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:435:4750":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:1115:34550":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:32413:6591":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"5:6959:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:710:6384":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:6811:9476":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"0:550:2741":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","ReservedByte"],"kind":"variant"},"16:3049:20685":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:4159:9382":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:3323:3177":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:7848:6843":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:14041:5323":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12746:5100":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:13121:5151":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10803:4889":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:44513:6684":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:7604:8561":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:7296:3085":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:5992:4164":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:11369:4940":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:5825:4217":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:46156:6707":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:6543:9442":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:10091:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:951:6393":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:7513:6293":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"5:7028:4179":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:6968:21550":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:1710:7799":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:2200:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:1906:6501":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:13162:5153":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:5154:4164":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:5877:3085":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:47636:6759":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:40489:4568":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:43918:3171":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:10511:9340":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"18:481:4690":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:21225:31703":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:14001:5319":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:9891:21593":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:7111:3608":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:22431:6565":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:13395:5199":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:12432:3108":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:6741:8449":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:2426:2096":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:6189:6074":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:6415:6121":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:44653:3669":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:15253:5659":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:15432:5733":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:9026:6900":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:2789:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:13684:5272":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:2197:4759":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:5955:8259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:12457:3672":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:41942:4577":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:6960:6181":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:10538:3188":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:13254:5175":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:43093:3127":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"11:2326:6394":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:4585:4389":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:4947:8074":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:12045:795":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:30812:31493":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"6:5146:8177":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4556:7932":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"15:327:8983":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:542:7637":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:44235:3694":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:654:15495":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:13463:5218":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:12030:401":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:15367:5689":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:11817:21713":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"6:4595:7953":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:8984:6894":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"11:1923:6406":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:2942:3554":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:44649:3671":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:6467:6125":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:1703:7796":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:5033:8127":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:15321:5680":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:4480:7900":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:16134:5905":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:1863:2705":{"crate_id":1,"path":["std","error"],"kind":"module"},"2:44637:3666":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:15725:5801":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:1270:6205":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:1203:4755":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"11:2498:20608":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:11727:4988":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:43842:6665":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:11816:4250":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:8796:6886":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:8385:3423":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:11537:6804":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:12324:5065":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:12850:4767":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:7343:8546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:363:6786":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:2529:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:12103:5042":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:40546:31506":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:10302:4197":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:9678:21597":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:12999:5119":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:8232:6860":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:2644:5950":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:8154:6363":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"18:644:4692":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:2205:1867":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:3201:3191":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:10137:4740":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:22744:9355":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:3239:3192":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:39719:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:43278:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"11:875:6392":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:4603:7958":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4610:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:6711:8427":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:42018:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:4491:9387":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:9874:3116":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:683:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:9842:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:10618:34596":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"0:47:2078":{"crate_id":0,"path":["base64","display","Base64Display"],"kind":"struct"},"6:1604:7731":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7660:6301":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"11:351:34573":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:11516:6803":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:4814:8012":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:15480:5734":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:39602:6595":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:6156:6069":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:7330:3226":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:2830:3973":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:5969:8260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:5696:21543":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:13695:5275":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:4375:7831":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"11:774:6386":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:4450:4183":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:10471:34601":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:43888:3101":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:16076:5892":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"6:4434:7875":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:5049:4403":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:2334:14771":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:3494:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:5419:4871":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:43813:6662":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:7663:6836":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:10430:6886":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:9559:21592":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"11:673:3805":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"0:323:2622":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD_NO_PAD"],"kind":"constant"},"1:1909:704":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:7371:8549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:4557:4388":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:6086:8324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:6494:4191":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"5:4182:3147":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:5941:8248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:15267:5666":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:4821:9371":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:43986:3683":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:2354:9327":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:12437:3096":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:42216:3806":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:8308:6866":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"0:397:2769":{"crate_id":0,"path":["base64","alphabet","IMAP_MUTF7"],"kind":"constant"},"2:46502:6718":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:48136:6765":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:4878:8044":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:4180:9384":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:1973:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:44182:3681":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"0:325:2627":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE_NO_PAD"],"kind":"constant"},"2:3162:3095":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:42297:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:6819:8462":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:5798:6010":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:849:3806":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:16109:5899":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:10097:6907":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"2:46600:6722":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}