{"root":"0:0:1682","crate_version":"0.21.0-beta.1","includes_private":false,"index":{"0:443:1674":{"id":"0:443:1674","crate_id":0,"name":"decode_engine_vec","span":{"filename":"src/decode.rs","begin":[113,0],"end":[119,1]},"visibility":"public","docs":"Decode from string reference as octets.\n\nSee [Engine::decode_vec].","links":{"Engine::decode_vec":"0:351:2275"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_vec\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_vec"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["buffer",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6405:237","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[4,0],"end":[4,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder::EncoderWriter","name":"EncoderWriter","id":"0:140:1992","glob":false}},"5:5108:61045":{"id":"5:5108:61045","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2851","`String`":"5:6978:218"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:2851","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2505-0:49:1889":{"id":"b:2:2505-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7727:3222-0:140:1992":{"id":"a:2:7727:3222-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3313-0:49:1889":{"id":"b:2:3313-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2273:182","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:553:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:199:1970":{"id":"0:199:1970","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder_string_writer.rs","begin":[71,4],"end":[76,5]},"visibility":"public","docs":"Encode all remaining buffered data, including any trailing incomplete input triples and\nassociated padding.\n\nReturns the base64-encoded form of the accumulated written data.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"S"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:568":{"id":"0:568","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2273:182","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:569:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:460:1831":{"id":"0:460:1831","crate_id":0,"name":"GeneralPurposeConfig","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[242,0],"end":[246,1]},"visibility":"public","docs":"Contains configuration parameters for base64 encoding and decoding.\n\n```\n# use base64::engine::GeneralPurposeConfig;\nlet config = GeneralPurposeConfig::new()\n    .with_encode_padding(false);\n    // further customize using `.with_*` methods as needed\n```\n\nThe constants [PAD] and [NO_PAD] cover most use cases.\n\nTo specify the characters used, see [crate::alphabet::Alphabet].","links":{"crate::alphabet::Alphabet":"0:487:2312","PAD":"0:327:1832","NO_PAD":"0:328:2416"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:314","a:2:2718:3287-0:460:1831","a:2:7726:3223-0:460:1831","a:2:2668:222-0:460:1831","a:2:7727:3222-0:460:1831","a:2:2654:214-0:460:1831","b:2:2509-0:460:1831","b:2:3313-0:460:1831","b:2:2520-0:460:1831","b:2:2505-0:460:1831","b:2:2229-0:460:1831","b:2:2515-0:460:1831","b:2:2226-0:460:1831","b:5:671-0:460:1831","0:464","0:466","0:467","0:319","0:321"]}},"a:2:2668:222-0:460:1831":{"id":"a:2:2668:222-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:162:910":{"id":"0:162:910","crate_id":0,"name":"new","span":{"filename":"src/write/encoder.rs","begin":[99,4],"end":[109,5]},"visibility":"public","docs":"Create a new encoder that will write to the provided delegate writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["delegate",{"kind":"generic","inner":"W"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:468:650":{"id":"0:468:650","crate_id":0,"name":"fmt","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,22],"end":[241,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[374,22],"end":[374,27]},"visibility":{"restricted":{"parent":"0:227:1665","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:480:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:369:910":{"id":"0:369:910","crate_id":0,"name":"new","span":{"filename":"src/alphabet.rs","begin":[47,4],"end":[93,5]},"visibility":"public","docs":"Create an `Alphabet` from a string of 64 unique printable ASCII bytes.\n\nThe `=` byte is not allowed as it is used for padding.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:671-0:469:2304":{"id":"b:5:671-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3443","5:674:3444","5:675:3445"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:550:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:179:2115":{"id":"0:179:2115","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder.rs","begin":[392,4],"end":[398,5]},"visibility":"default","docs":"Because this is usually treated as OK to call multiple times, it will *not* flush any\nincomplete chunks of input or write padding.\n# Errors\n\nThe first error that is not of [`ErrorKind::Interrupted`] will be returned.","links":{"`ErrorKind::Interrupted`":"1:8291:2082"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:2898:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3313-0:189:1993":{"id":"b:2:3313-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11352:54669":{"id":"2:11352:54669","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11351:54668"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2229-0:521:1672":{"id":"b:2:2229-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:535:1958":{"id":"0:535:1958","crate_id":0,"name":"InvalidByte","span":{"filename":"src/decode.rs","begin":[13,4],"end":[13,26]},"visibility":"default","docs":"An invalid byte was found in the input. The offset and offending byte are provided.\nPadding characters (`=`) interspersed in the encoded form will be treated as invalid bytes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:537:1547","0:538:1548"]}},"0:493:650":{"id":"0:493:650","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[22,16],"end":[22,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:543:1547":{"id":"0:543:1547","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[24,22],"end":[24,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2505-0:289:1830":{"id":"b:2:2505-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:298:1780":{"id":"0:298:1780","crate_id":0,"name":"Config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[42,4],"end":[42,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2718:3287-0:521:1672":{"id":"a:2:2718:3287-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11384:54680":{"id":"2:11384:54680","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11030:2862","prim@char":"1:12368:2731","str::split":"2:11378:54676","`DoubleEndedIterator`":"2:7070:119"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50027:3480","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1682":{"id":"0:0:1682","crate_id":0,"name":"base64","span":{"filename":"src/lib.rs","begin":[1,0],"end":[180,26]},"visibility":"public","docs":"# Getting started\n\ntl;dr:\n\n1. Perhaps one of the already available consts will suit:\n    - [engine::STANDARD]\n    - [engine::STANDARD_NO_PAD]\n    - [engine::URL_SAFE]\n    - [engine::URL_SAFE_NO_PAD]\n1. If not, choose which alphabet you want. Most usage will want [alphabet::STANDARD] or [alphabet::URL_SAFE].\n1. Choose which [Engine] you want. For the moment there is only one: [engine::GeneralPurpose].\n1. Configure the engine appropriately using the engine's `Config` type.\n    - This is where you'll select whether to add padding (when encoding) or expect it (when\n    decoding). If given the choice, prefer no padding.\n1. Build the engine using the selected alphabet and config.\n\nFor more detail, see below.\n\n## Alphabets\n\nAn [alphabet::Alphabet] defines what ASCII symbols are used to encode to or decode from.\n\nConstants in [alphabet] like [alphabet::STANDARD] or [alphabet::URL_SAFE] provide commonly used\nalphabets, but you can also build your own custom [alphabet::Alphabet] if needed.\n\n## Engines\n\nOnce you have an `Alphabet`, you can pick which `Engine` you want. A few parts of the public\nAPI provide a default, but otherwise the user must provide an `Engine` to use.\n\nSee [engine::Engine] for more.\n\n## Config\n\nIn addition to an `Alphabet`, constructing an `Engine` also requires an [engine::Config]. Each\n`Engine` has a corresponding `Config` implementation since different `Engine`s may offer different\nlevels of configurability.\n\n# Encoding\n\nSeveral different encoding methods on [Engine] are available to you depending on your desire for\nconvenience vs performance.\n\n| Method                   | Output                       | Allocates                      |\n| ------------------------ | ---------------------------- | ------------------------------ |\n| [Engine::encode]         | Returns a new `String`       | Always                         |\n| [Engine::encode_string]  | Appends to provided `String` | Only if `String` needs to grow |\n| [Engine::encode_slice]   | Writes to provided `&[u8]`   | Never - fastest                |\n\nAll of the encoding methods will pad as per the engine's config.\n\n# Decoding\n\nJust as for encoding, there are different decoding methods available.\n\n| Method                   | Output                        | Allocates                      |\n| ------------------------ | ----------------------------- | ------------------------------ |\n| [Engine::decode]         | Returns a new `Vec<u8>`       | Always                         |\n| [Engine::decode_vec]     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |\n| [Engine::decode_slice]   | Writes to provided `&[u8]`    | Never - fastest                |\n\nUnlike encoding, where all possible input is valid, decoding can fail (see [DecodeError]).\n\nInput can be invalid because it has invalid characters or invalid padding. The nature of how\npadding is checked depends on the engine's config.\nWhitespace in the input is invalid, just like any other non-base64 byte.\n\n# `Read` and `Write`\n\nTo decode a [std::io::Read] of b64 bytes, wrap a reader (file, network socket, etc) with\n[read::DecoderReader].\n\nTo write raw bytes and have them b64 encoded on the fly, wrap a [std::io::Write] with\n[write::EncoderWriter].\n\nThere is some performance overhead (15% or so) because of the necessary buffer shuffling --\nstill fast enough that almost nobody cares. Also, these implementations do not heap allocate.\n\n# `Display`\n\nSee [display] for how to transparently base64 data via a `Display` implementation.\n\n# Examples\n\n## Using predefined engines\n\n```\nuse base64::{engine, Engine as _};\n\nlet orig = b\"data\";\nlet encoded: String = engine::STANDARD_NO_PAD.encode(orig);\nassert_eq!(\"ZGF0YQ\", encoded);\nassert_eq!(orig.as_slice(), &engine::STANDARD_NO_PAD.decode(encoded).unwrap());\n\n// or, URL-safe\nlet encoded_url = engine::URL_SAFE_NO_PAD.encode(orig);\n```\n\n## Custom alphabet, config, and engine\n\n```\nuse base64::{engine, alphabet, Engine as _};\n\n// bizarro-world base64: +/ as the first symbols instead of the last\nlet alphabet =\n    alphabet::Alphabet::new(\"+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\")\n    .unwrap();\n\n// a very weird config that encodes with padding but requires no padding when decoding...?\nlet config = engine::GeneralPurposeConfig::new()\n    .with_decode_allow_trailing_bits(true)\n    .with_encode_padding(true)\n    .with_decode_padding_mode(engine::DecodePaddingMode::RequireNone);\n\nlet engine = engine::GeneralPurpose::new(&alphabet, config);\n\nlet encoded = engine.encode(b\"abc 123\");\n\n```\n\n# Panics\n\nIf length calculations result in overflowing `usize`, a panic will result.","links":{"engine::STANDARD_NO_PAD":"0:324:2161","engine::URL_SAFE":"0:325:2162","alphabet::STANDARD":"0:376:1828","DecodeError":"0:534:1677","display":"0:40:1662","Engine::decode_vec":"0:351:2275","engine::Config":"0:356:1780","engine::URL_SAFE_NO_PAD":"0:326:2163","alphabet":"0:361:1667","std::io::Read":"1:3400:1923","alphabet::URL_SAFE":"0:377:2162","Engine":"0:336:1666","read::DecoderReader":"0:86:1905","engine::Engine":"0:336:1666","write::EncoderWriter":"0:140:1992","Engine::encode":"0:343:590","Engine::encode_slice":"0:347:2064","engine::STANDARD":"0:323:1828","Engine::decode":"0:349:525","std::io::Write":"1:3457:2028","Engine::encode_string":"0:345:1879","alphabet::Alphabet":"0:487:2312","engine::GeneralPurpose":"0:289:1830","Engine::decode_slice":"0:353:2286"},"attrs":["#![deny(missing_docs, trivial_casts, trivial_numeric_casts,\nunused_extern_crates, unused_import_braces, unused_results,\nvariant_size_differences, warnings)]","#![forbid(unsafe_code)]","#![allow(clippy :: single_component_path_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:40:1662","0:74:1663","0:127:1664","0:227:1665","0:361:1667","0:360","0:413","0:414","0:415","0:417","0:418","0:419","0:451","0:452","0:453","0:455","0:456","0:457","0:458"],"is_stripped":false}},"b:2:3313-0:289:1830":{"id":"b:2:3313-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:500:595":{"id":"0:500:595","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[22,27],"end":[22,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2654:214-0:469:2304":{"id":"a:2:2654:214-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2226-0:140:1992":{"id":"b:2:2226-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2509-0:487:2312":{"id":"b:2:2509-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11367:54168":{"id":"2:11367:54168","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:11030:2862","prim@char":"1:12368:2731"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7727:3222-0:521:1672":{"id":"a:2:7727:3222-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[374,29],"end":[374,38]},"visibility":{"restricted":{"parent":"0:227:1665","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2664:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:477:409":{"id":"0:477:409","crate_id":0,"name":"clone","span":{"filename":"src/engine/mod.rs","begin":[374,9],"end":[374,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:550:650":{"id":"0:550:650","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7727:3222-0:49:1889":{"id":"a:2:7727:3222-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11446:4333":{"id":"2:11446:4333","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:10991:2857","FromStr::Err":"2:10992:125"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:10991:2857","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:10991:2857","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11334:60385":{"id":"2:11334:60385","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11332:60384"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2520-0:469:2304":{"id":"b:2:2520-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:557:1678":{"id":"b:5:671-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3443","5:674:3444","5:675:3445"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:358:2174":{"id":"0:358:2174","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[356,0],"end":[368,1]},"visibility":"public","docs":"The decode estimate used by an engine implementation. Users do not need to interact with this;\nit is only for engine implementors.\n\nImplementors may store relevant data here when constructing this to avoid having to calculate\nthem again during actual decoding.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:359:1676"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:7727:3222-0:469:2304":{"id":"a:2:7727:3222-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[59,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:185:1991","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["0:198:2136","0:199:1970"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[96,0],"end":[102,1]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:126","0:372:1420"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/read/mod.rs","begin":[3,0],"end":[3,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::decoder::DecoderReader","name":"DecoderReader","id":"0:86:1905","glob":false}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,27],"end":[22,36]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2273:182","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:500:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:399:1670":{"id":"0:399:1670","crate_id":0,"name":"encode_engine_slice","span":{"filename":"src/encode.rs","begin":[51,0],"end":[57,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied slice.\n\nSee [Engine::encode_slice].","links":{"Engine::encode_slice":"0:347:2064"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_slice"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2654:214-0:289:1830":{"id":"a:2:2654:214-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11351:54668":{"id":"2:11351:54668","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11352:54669"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2229-0:86:1905":{"id":"b:2:2229-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:411:383":{"id":"0:411:383","crate_id":0,"name":"cause","span":{"filename":"src/encode.rs","begin":[153,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:1933":{"id":"0:165:1933","crate_id":0,"name":"finish","span":{"filename":"src/write/encoder.rs","begin":[127,4],"end":[139,5]},"visibility":"public","docs":"Encode all remaining buffered data and write it, including any trailing incomplete input\ntriples and associated padding.\n\nOnce this succeeds, no further writes or calls to this method are allowed.\n\nThis may write to the delegate writer multiple times if the delegate writer does not accept\nall input provided to its `write` each invocation.\n\nIf you don't care about error handling, it is not necessary to call this function, as the\nequivalent finalization is done by the Drop impl.\n\nReturns the writer that this was constructed around.\n\n# Errors\n\nThe first error that is not of `ErrorKind::Interrupted` will be returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:2898:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322:1796":{"id":"0:322:1796","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[323,4],"end":[325,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:569:595":{"id":"0:569:595","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:127:1664":{"id":"0:127:1664","crate_id":0,"name":"write","span":{"filename":"src/write/mod.rs","begin":[1,0],"end":[9,18]},"visibility":"public","docs":"Implementations of `io::Write` to transparently handle base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:224","0:225","0:226"],"is_stripped":false}},"0:393:1668":{"id":"0:393:1668","crate_id":0,"name":"encode_engine","span":{"filename":"src/encode.rs","begin":[28,0],"end":[30,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the provided `Engine` into a new `String`.\n\n See [Engine::encode].","links":{"Engine::encode":"0:343:590"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:198:2136":{"id":"0:198:2136","crate_id":0,"name":"from_consumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[61,4],"end":[65,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will append to the provided `StrConsumer`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["str_consumer",{"kind":"generic","inner":"S"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:671-0:487:2312":{"id":"b:5:671-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3443","5:674:3444","5:675:3445"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7727:3222-0:460:1831":{"id":"a:2:7727:3222-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:40:1662":{"id":"0:40:1662","crate_id":0,"name":"display","span":{"filename":"src/display.rs","begin":[1,0],"end":[89,1]},"visibility":"public","docs":"Enables base64'd output anywhere you might use a `Display` implementation, like a format string.\n\n```\nuse base64::display::Base64Display;\nuse base64::engine::STANDARD;\n\nlet data = vec![0x0, 0x1, 0x2, 0x3];\nlet wrapper = Base64Display::new(&data, &STANDARD);\n\nassert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:49:1889"],"is_stripped":false}},"0:504:2513":{"id":"0:504:2513","crate_id":0,"name":"DuplicatedByte","span":{"filename":"src/alphabet.rs","begin":[110,4],"end":[110,22]},"visibility":"default","docs":"All bytes must be unique","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:506:1547"]}},"5:5107:61044":{"id":"5:5107:61044","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:560:1547":{"id":"0:560:1547","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[54,16],"end":[54,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,9],"end":[241,14]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:465:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:671-0:521:1672":{"id":"b:5:671-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3443","5:674:3444","5:675:3445"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:506:1547":{"id":"0:506:1547","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[110,19],"end":[110,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:2509-0:289:1830":{"id":"b:2:2509-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7727:3222-0:86:1905":{"id":"a:2:7727:3222-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2668:222-0:469:2304":{"id":"a:2:2668:222-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[61,0],"end":[68,1]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:433:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11357:59592":{"id":"2:11357:59592","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11356:59595"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50292:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2520-0:534:1677":{"id":"b:2:2520-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2520-0:557:1678":{"id":"b:2:2520-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:484":{"id":"0:484","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[374,40],"end":[374,42]},"visibility":{"restricted":{"parent":"0:227:1665","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2665:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:64:650":{"id":"0:64:650","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[35,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"fmt::Error","id":"2:49083:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[23,20],"end":[23,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::GeneralPurposeConfig","name":"GeneralPurposeConfig","id":"0:460:1831","glob":false}},"0:316:2392":{"id":"0:316:2392","crate_id":0,"name":"with_encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[273,4],"end":[278,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `padding` setting.\n\nIf `padding` is `true`, encoding will append either 1 or 2 `=` padding characters as needed\nto produce an output whose length is a multiple of 4.\n\nPadding is not needed for correct decoding and only serves to waste bytes, but it's in the\n[spec](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2).\n\nFor new applications, consider not using padding if the decoders you're using don't require\npadding to be present.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["padding",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:529":{"id":"0:529","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2273:182","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:530:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[103,0],"end":[107,1]},"visibility":{"restricted":{"parent":"0:185:1991","path":"::write::encoder_string_writer"}},"docs":"As for io::Write, `StrConsumer` is implemented automatically for `&mut S`.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:1994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"S"}}},"items":["0:214:2145"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2654:214-0:140:1992":{"id":"a:2:2654:214-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[23,4],"end":[23,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::GeneralPurpose","name":"GeneralPurpose","id":"0:289:1830","glob":false}},"2:11449:54474":{"id":"2:11449:54474","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2718:3287-0:487:2312":{"id":"a:2:2718:3287-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5110:54473":{"id":"5:5110:54473","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11450:54471"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:527:650":{"id":"0:527:650","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[137,16],"end":[137,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5360-0:534:1677":{"id":"b:5:5360-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5358:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5362:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:480:650":{"id":"0:480:650","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[374,22],"end":[374,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11454:3971":{"id":"2:11454:3971","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4463:3971"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50317:3491","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11338:60386":{"id":"2:11338:60386","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7726:3223-0:557:1678":{"id":"a:2:7726:3223-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7727:3222-0:189:1993":{"id":"a:2:7727:3222-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:357:1796":{"id":"0:357:1796","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/mod.rs","begin":[348,4],"end":[348,37]},"visibility":"default","docs":"Returns `true` if padding should be added after the encoded output.\n\nPadding is added outside the engine's encode() since the engine may be used\nto encode only a chunk of the overall output, so it can't always know when\nthe output is \"done\" and would therefore need padding (if configured).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:5360-0:521:1672":{"id":"b:5:5360-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5358:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5362:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2577-0:557:1678":{"id":"b:2:2577-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3362:3792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:3752"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"b:2:2505-0:501:2506":{"id":"b:2:2505-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11340:54646":{"id":"2:11340:54646","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12385:2745"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2229-0:140:1992":{"id":"b:2:2229-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2518:126":{"id":"2:2518:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:494":{"id":"0:494","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,23],"end":[22,25]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2665:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2226-0:534:1677":{"id":"b:2:2226-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2519:1421":{"id":"2:2519:1421","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2718:3287-0:557:1678":{"id":"a:2:2718:3287-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:673:3443":{"id":"5:673:3443","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:328:2416":{"id":"0:328:2416","crate_id":0,"name":"NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[347,0],"end":[349,62]},"visibility":"public","docs":"Don't add padding when encoding, and require no padding when decoding.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:553:595":{"id":"0:553:595","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:565":{"id":"0:565","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,16],"end":[51,21]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:566:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:211:2145":{"id":"0:211:2145","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[99,4],"end":[99,37]},"visibility":"default","docs":"Consume the base64 encoded data in `buf`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2515-0:521:1672":{"id":"b:2:2515-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11339:306":{"id":"2:11339:306","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11340:54646","`u8`":"1:12385:2745"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:381:2542":{"id":"0:381:2542","crate_id":0,"name":"BIN_HEX","span":{"filename":"src/alphabet.rs","begin":[167,0],"end":[169,2]},"visibility":"public","docs":"The alphabet used in BinHex 4.0 files.\n\nSee [BinHex 4.0 Definition](http://files.stairways.com/other/binhex-40-specs-info.txt)","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2505-0:460:1831":{"id":"b:2:2505-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11358:5049":{"id":"2:11358:5049","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50263:2940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2515-0:534:1677":{"id":"b:2:2515-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5099:61043":{"id":"5:5099:61043","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11347:54645":{"id":"2:11347:54645","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[23,79],"end":[23,94]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::URL_SAFE_NO_PAD","name":"URL_SAFE_NO_PAD","id":"0:326:2163","glob":false}},"b:2:2520-0:487:2312":{"id":"b:2:2520-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:49:1889":{"id":"0:49:1889","crate_id":0,"name":"Base64Display","span":{"filename":"src/display.rs","begin":[19,0],"end":[22,1]},"visibility":"public","docs":"A convenience wrapper for base64'ing bytes into a format string without heap allocation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:55","a:2:2718:3287-0:49:1889","a:2:7726:3223-0:49:1889","a:2:2668:222-0:49:1889","a:2:7727:3222-0:49:1889","a:2:2654:214-0:49:1889","b:2:2509-0:49:1889","b:2:3313-0:49:1889","b:2:2520-0:49:1889","b:2:2505-0:49:1889","b:2:2229-0:49:1889","b:2:2515-0:49:1889","b:2:2226-0:49:1889","b:5:5360-0:49:1889","0:60"]}},"b:2:2509-0:86:1905":{"id":"b:2:2509-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:175:1664":{"id":"0:175:1664","crate_id":0,"name":"write","span":{"filename":"src/write/encoder.rs","begin":[266,4],"end":[385,5]},"visibility":"default","docs":"Encode input and then write to the delegate writer.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nof `input` consumed. The value may be `0`, which interacts poorly with `write_all`, which\ninterprets `Ok(0)` as an error, despite it being allowed by the contract of `write`. See\n<https://github.com/rust-lang/rust/issues/56889> for more on that.\n\nIf the previous call to `write` provided more (encoded) data than the delegate writer could\naccept in a single call to its `write`, the remaining data is buffered. As long as buffered\ndata is present, subsequent calls to `write` will try to write the remaining buffered data\nto the delegate and return either `Ok(0)` -- and therefore not consume any of `input` -- or\nan error.\n\n# Errors\n\nAny errors emitted by the delegate writer are returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:2898:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:502:1960":{"id":"0:502:1960","crate_id":0,"name":"InvalidLength","span":{"filename":"src/alphabet.rs","begin":[108,4],"end":[108,17]},"visibility":"default","docs":"Alphabets must be 64 ASCII bytes","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:522:2241":{"id":"0:522:2241","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/encode.rs","begin":[140,4],"end":[140,23]},"visibility":"default","docs":"The provided slice is too small.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:299:2174":{"id":"0:299:2174","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[43,4],"end":[43,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"GeneralPurposeEstimate","id":"0:263:2315","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:5:5360-0:501:2506":{"id":"b:5:5360-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5358:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5362:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:446:1675":{"id":"0:446:1675","crate_id":0,"name":"decode_engine_slice","span":{"filename":"src/decode.rs","begin":[125,0],"end":[131,1]},"visibility":"public","docs":"Decode the input into the provided output slice.\n\nSee [Engine::decode_slice].","links":{"Engine::decode_slice":"0:353:2286"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_slice"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11421:60399":{"id":"2:11421:60399","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2229-0:469:2304":{"id":"b:2:2229-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:157:650":{"id":"0:157:650","crate_id":0,"name":"fmt","span":{"filename":"src/write/encoder.rs","begin":[85,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:541:1961":{"id":"0:541:1961","crate_id":0,"name":"InvalidLastSymbol","span":{"filename":"src/decode.rs","begin":[24,4],"end":[24,32]},"visibility":"default","docs":"The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\nThis is indicative of corrupted or truncated Base64.\nUnlike `InvalidByte`, which reports symbols that aren't in the alphabet, this error is for\nsymbols that are in the alphabet but represent nonsensical encodings.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:543:1547","0:544:1548"]}},"5:5362:1400":{"id":"5:5362:1400","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[41,0],"end":[187,1]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["encode_slice","decode","decode_slice","encode_string","encode","decode_vec"],"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:298:1780","0:299:2174","0:306:1795"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11354:4407":{"id":"2:11354:4407","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12368:2731"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49985:3477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2668:222-0:189:1993":{"id":"a:2:2668:222-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:487:2312":{"id":"0:487:2312","crate_id":0,"name":"Alphabet","span":{"filename":"src/alphabet.rs","begin":[23,0],"end":[25,1]},"visibility":"public","docs":"An alphabet defines the 64 ASCII characters (symbols) used for base64.\n\nCommon alphabets are provided as constants, and custom alphabets\ncan be made via `from_str` or the `TryFrom<str>` implementation.\n\n```\nlet custom = base64::alphabet::Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n\nlet engine = base64::engine::GeneralPurpose::new(\n    &custom,\n    base64::engine::general_purpose::PAD);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:366","a:2:2718:3287-0:487:2312","a:2:7726:3223-0:487:2312","a:2:2668:222-0:487:2312","a:2:7727:3222-0:487:2312","a:2:2654:214-0:487:2312","b:2:2509-0:487:2312","b:2:3313-0:487:2312","b:2:2520-0:487:2312","b:2:2505-0:487:2312","b:2:2229-0:487:2312","b:2:2515-0:487:2312","b:2:2226-0:487:2312","b:5:671-0:487:2312","0:490","0:492","0:494","0:495","0:498","0:499","0:370"]}},"a:2:7727:3222-0:534:1677":{"id":"a:2:7727:3222-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,22],"end":[241,27]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:468:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:227:1665":{"id":"0:227:1665","crate_id":0,"name":"engine","span":{"filename":"src/engine/mod.rs","begin":[1,0],"end":[382,1]},"visibility":"public","docs":"Provides the [Engine] abstraction and out of the box implementations.","links":{"Engine":"0:336:1666"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:240:1829","0:330","0:331","0:332","0:333","0:334","0:335","0:336:1666","0:356:1780","0:358:2174","0:469:2304"],"is_stripped":false}},"0:184:571":{"id":"0:184:571","crate_id":0,"name":"drop","span":{"filename":"src/write/encoder.rs","begin":[402,4],"end":[407,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:361:1667":{"id":"0:361:1667","crate_id":0,"name":"alphabet","span":{"filename":"src/alphabet.rs","begin":[1,0],"end":[241,1]},"visibility":"public","docs":"Provides [Alphabet] and constants for alphabets commonly used in the wild.","links":{"Alphabet":"0:487:2312"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:487:2312","0:501:2506","0:376:1828","0:377:2162","0:378:2531","0:379:2534","0:380:2538","0:381:2542"],"is_stripped":false}},"0:296:910":{"id":"0:296:910","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[32,4],"end":[38,5]},"visibility":"public","docs":"Create a `GeneralPurpose` engine from an [Alphabet].\n\nWhile not very expensive to initialize, ideally these should be cached\nif the engine will be used repeatedly.","links":{"Alphabet":"0:487:2312"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["config",{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11393:54682":{"id":"2:11393:54682","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862","str::rsplitn":"2:11396:54684"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50113:3484","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2229-0:487:2312":{"id":"b:2:2229-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[374,29],"end":[374,38]},"visibility":{"restricted":{"parent":"0:227:1665","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2273:182","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:483:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11343:54643":{"id":"2:11343:54643","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48043:173"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11332:60384":{"id":"2:11332:60384","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2520-0:289:1830":{"id":"b:2:2520-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11414:60396":{"id":"2:11414:60396","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"2:11411:60395","prim@char":"1:12368:2731","self::pattern":"2:11030:2862","`DoubleEndedIterator`":"2:7070:119"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50177:3488","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2668:222-0:86:1905":{"id":"a:2:2668:222-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2520-0:521:1672":{"id":"b:2:2520-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:372:1420":{"id":"0:372:1420","crate_id":0,"name":"try_from","span":{"filename":"src/alphabet.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2489:230","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2718:3287-0:534:1677":{"id":"a:2:2718:3287-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[70,0],"end":[171,1]},"visibility":{"restricted":{"parent":"0:75:1904","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3400:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:110:910","0:118:1970"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:491:409":{"id":"0:491:409","crate_id":0,"name":"clone","span":{"filename":"src/alphabet.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11361:54686":{"id":"2:11361:54686","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:11030:2862","prim@char":"1:12368:2731"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11396:54684":{"id":"2:11396:54684","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12368:2731","str::splitn":"2:11393:54682","self::pattern":"2:11030:2862"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50131:3483","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:561:2241":{"id":"0:561:2241","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/decode.rs","begin":[58,4],"end":[58,23]},"visibility":"default","docs":"The provided slice _may_ be too small.\n\nThe check is conservative (assumes the last triplet of output bytes will all be needed).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[401,0],"end":[408,1]},"visibility":{"restricted":{"parent":"0:128:1881","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3457:2028","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2920:2116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:184:571"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11331:60383":{"id":"2:11331:60383","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2668:222-0:557:1678":{"id":"a:2:2668:222-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11356:59595":{"id":"2:11356:59595","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11357:59592"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50283:3478","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:1992":{"id":"0:140:1992","crate_id":0,"name":"EncoderWriter","span":{"filename":"src/write/encoder.rs","begin":[64,0],"end":[82,1]},"visibility":"public","docs":"A `Write` implementation that base64 encodes data before delegating to the wrapped writer.\n\nBecause base64 has special handling for the end of the input data (padding, etc), there's a\n`finish()` method on this type that encodes any leftover input bytes and adds padding if\nappropriate. It's called automatically when deallocated (see the `Drop` implementation), but\nany error that occurs when invoking the underlying writer will be suppressed. If you want to\nhandle such errors, call `finish()` yourself.\n\n# Examples\n\n```\nuse std::io::Write;\n\n// use a vec as the simplest possible `Write` -- in real code this is probably a file, etc.\nlet mut enc = base64::write::EncoderWriter::new(\n    Vec::new(),\n    &base64::engine::STANDARD);\n\n// handle errors as you normally would\nenc.write_all(b\"asdf\").unwrap();\n\n// could leave this out to be called by Drop, if you don't care\n// about handling errors or getting the delegate writer back\nlet delegate = enc.finish().unwrap();\n\n// base64 was written to the writer\nassert_eq!(b\"YXNkZg==\", &delegate[..]);\n\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Errors\n\nBase64 encoding itself does not generate errors, but errors from the wrapped writer will be\nreturned as per the contract of `Write`.\n\n# Performance\n\nIt has some minor performance loss compared to encoding slices (a couple percent).\nIt does not do any heap allocation.\n\n# Limitations\n\nOwing to the specification of the `write` and `flush` methods on the `Write` trait and their\nimplications for a buffering implementation, these methods may not behave as expected. In\nparticular, calling `write_all` on this interface may fail with `io::ErrorKind::WriteZero`.\nSee the documentation of the `Write` trait implementation for further details.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3457:2028","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:158","a:2:2718:3287-0:140:1992","a:2:7726:3223-0:140:1992","a:2:2668:222-0:140:1992","a:2:7727:3222-0:140:1992","a:2:2654:214-0:140:1992","b:2:2509-0:140:1992","b:2:3313-0:140:1992","b:2:2520-0:140:1992","b:2:2505-0:140:1992","b:2:2229-0:140:1992","b:2:2515-0:140:1992","b:2:2226-0:140:1992","0:153","0:171","0:180"]}},"a:2:7726:3223-0:86:1905":{"id":"a:2:7726:3223-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:240:1829":{"id":"0:240:1829","crate_id":0,"name":"general_purpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[1,0],"end":[349,62]},"visibility":"public","docs":"Provides the [GeneralPurpose] engine and associated config types.","links":{"GeneralPurpose":"0:289:1830"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:287","0:289:1830","0:460:1831","0:323:1828","0:324:2161","0:325:2162","0:326:2163","0:327:1832","0:328:2416"],"is_stripped":false}},"0:170:1970":{"id":"0:170:1970","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder.rs","begin":[242,4],"end":[246,5]},"visibility":"public","docs":"Unwraps this `EncoderWriter`, returning the base writer it writes base64 encoded output\nto.\n\nNormally this method should not be needed, since `finish()` returns the inner writer if\nit completes successfully. That will also ensure all data has been flushed, which the\n`into_inner()` function does *not* do.\n\nCalling this method after `finish()` has completed successfully will panic, since the\nwriter has already been returned.\n\nThis method may be useful if the writer implements additional APIs beyond the `Write`\ntrait. Note that the inner writer might be in an error state or have an incomplete\nbase64 string written to it.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2520-0:49:1889":{"id":"b:2:2520-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:534:1677":{"id":"b:5:671-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3443","5:674:3444","5:675:3445"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:674:3444":{"id":"5:674:3444","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:1664":{"id":"0:208:1664","crate_id":0,"name":"write","span":{"filename":"src/write/encoder_string_writer.rs","begin":[87,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2898:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[23,69],"end":[23,77]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::URL_SAFE","name":"URL_SAFE","id":"0:325:2162","glob":false}},"0:86:1905":{"id":"0:86:1905","crate_id":0,"name":"DecoderReader","span":{"filename":"src/read/decoder.rs","begin":[32,0],"end":[55,1]},"visibility":"public","docs":"A `Read` implementation that decodes base64 data read from an underlying reader.\n\n# Examples\n\n```\nuse std::io::Read;\nuse std::io::Cursor;\n\n// use a cursor as the simplest possible `Read` -- in real code this is probably a file, etc.\nlet mut wrapped_reader = Cursor::new(b\"YXNkZg==\");\nlet mut decoder = base64::read::DecoderReader::new(\n    &mut wrapped_reader,\n    &base64::engine::STANDARD);\n\n// handle errors as you normally would\nlet mut result = Vec::new();\ndecoder.read_to_end(&mut result).unwrap();\n\nassert_eq!(b\"asdf\", &result[..]);\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3400:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:106","a:2:2718:3287-0:86:1905","a:2:7726:3223-0:86:1905","a:2:2668:222-0:86:1905","a:2:7727:3222-0:86:1905","a:2:2654:214-0:86:1905","b:2:2509-0:86:1905","b:2:3313-0:86:1905","b:2:2520-0:86:1905","b:2:2505-0:86:1905","b:2:2229-0:86:1905","b:2:2515-0:86:1905","b:2:2226-0:86:1905","0:101","0:119"]}},"0:538:1548":{"id":"0:538:1548","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:11329:784":{"id":"2:11329:784","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12368:2731"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11451:54470":{"id":"2:11451:54470","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:544:1548":{"id":"0:544:1548","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[24,29],"end":[24,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:2229-0:534:1677":{"id":"b:2:2229-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2515-0:460:1831":{"id":"b:2:2515-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11419:60398":{"id":"2:11419:60398","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11417:60397":{"id":"2:11417:60397","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:509:1547":{"id":"0:509:1547","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[112,20],"end":[112,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:353:2286":{"id":"0:353:2286","crate_id":0,"name":"decode_slice","span":{"filename":"src/engine/mod.rs","begin":[321,4],"end":[335,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{"crate::decoded_len_estimate":"0:449:1676"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:359:1676":{"id":"0:359:1676","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/engine/mod.rs","begin":[367,4],"end":[367,44]},"visibility":"default","docs":"Returns a conservative (err on the side of too big) estimate of the decoded length to use\nfor pre-allocating buffers, etc.\n\nThe estimate must be no larger than the next largest complete triple of decoded bytes.\nThat is, the final quad of tokens to decode may be assumed to be complete with no padding.\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2505-0:140:1992":{"id":"b:2:2505-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:525:409":{"id":"0:525:409","crate_id":0,"name":"clone","span":{"filename":"src/encode.rs","begin":[137,9],"end":[137,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2668:222-0:289:1830":{"id":"a:2:2668:222-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:216:2145":{"id":"0:216:2145","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11374:3388":{"id":"2:11374:3388","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:11030:2862","prim@char":"1:12368:2731","`None`":"2:48043:173"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7726:3223-0:460:1831":{"id":"a:2:7726:3223-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,24],"end":[173,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode","name":"decode","id":"0:438:525","glob":false}},"0:377:2162":{"id":"0:377:2162","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/alphabet.rs","begin":[141,0],"end":[143,2]},"visibility":"public","docs":"The URL safe alphabet (uses `-` and `_`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-4).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2509-0:469:2304":{"id":"b:2:2509-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:521:1672":{"id":"0:521:1672","crate_id":0,"name":"EncodeSliceError","span":{"filename":"src/encode.rs","begin":[138,0],"end":[141,1]},"visibility":"public","docs":"Errors that can occur while encoding into a slice.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:522:2241"],"impls":["a:2:2718:3287-0:521:1672","a:2:7726:3223-0:521:1672","a:2:2668:222-0:521:1672","a:2:7727:3222-0:521:1672","a:2:2654:214-0:521:1672","b:2:2509-0:521:1672","b:2:3313-0:521:1672","b:2:2520-0:521:1672","b:2:2505-0:521:1672","b:2:2229-0:521:1672","b:2:2515-0:521:1672","b:2:2577-0:521:1672","b:2:2226-0:521:1672","b:5:671-0:521:1672","b:5:5360-0:521:1672","0:524","0:526","0:528","0:529","0:531","0:532","0:408","0:410"]}},"b:2:2515-0:189:1993":{"id":"b:2:2515-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11402:60393":{"id":"2:11402:60393","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:351:2275":{"id":"0:351:2275","crate_id":0,"name":"decode_vec","span":{"filename":"src/engine/mod.rs","begin":[287,4],"end":[309,5]},"visibility":"default","docs":"Decode from string reference as octets.\nWrites into the supplied `Vec`, which may allocate if its internal buffer isn't big enough.\nReturns a `Result` containing an empty tuple, aka `()`.\n\n# Example\n\n```rust\nconst URL_SAFE_ENGINE: base64::engine::GeneralPurpose =\n    base64::engine::GeneralPurpose::new(\n        &base64::alphabet::URL_SAFE,\n        base64::engine::general_purpose::PAD);\n\nfn main() {\n    use base64::Engine;\n    let mut buffer = Vec::<u8>::new();\n    // with the default engine\n    base64::engine::STANDARD.decode_vec(\n        \"aGVsbG8gd29ybGR+Cg==\",\n        &mut buffer,\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n\n    buffer.clear();\n\n    // with a custom engine\n    URL_SAFE_ENGINE.decode_vec(\n        \"aGVsbG8gaW50ZXJuZXR-Cg==\",\n        &mut buffer,\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n}\n```\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["buffer",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6405:237","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5109:2696":{"id":"5:5109:2696","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74:1663":{"id":"0:74:1663","crate_id":0,"name":"read","span":{"filename":"src/read/mod.rs","begin":[1,0],"end":[6,18]},"visibility":"public","docs":"Implementations of `io::Read` to transparently decode base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:126"],"is_stripped":false}},"a:2:2668:222-0:49:1889":{"id":"a:2:2668:222-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11355:1798":{"id":"2:11355:1798","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49995:2937","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11328":{"id":"2:11328","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10593:1346","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11329:784","2:11330:1942","2:11331:60383","2:11332:60384","2:11334:60385","2:11337:2503","2:11338:60386","2:11339:306","2:11340:54646","2:11341:54642","2:11343:54643","2:11345:54644","2:11347:54645","2:11349:60387","2:11350:60388","2:11351:54668","2:11352:54669","2:11353:3505","2:11354:4407","2:11355:1798","2:11356:59595","2:11357:59592","2:11358:5049","2:11359:60389","2:11360:59605","2:11361:54686","2:11364:54166","2:11367:54168","2:11370:3424","2:11374:3388","2:11378:54676","2:11381:54678","2:11384:54680","2:11387:60390","2:11390:60391","2:11393:54682","2:11396:54684","2:11399:60392","2:11402:60393","2:11405:2812","2:11408:60394","2:11411:60395","2:11414:60396","2:11417:60397","2:11419:60398","2:11421:60399","2:11423:60400","2:11424:60401","2:11425:60402","2:11428:60403","2:11431:54164","2:11434:54687","2:11437:60404","2:11440:60405","2:11443:60406","2:11446:4333","2:11448:4734","2:11449:54474","2:11450:54471","2:11451:54470","2:11452:60407","2:11454:3971","2:11455:60408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2520-0:86:1905":{"id":"b:2:2520-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11440:60405":{"id":"2:11440:60405","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:547":{"id":"0:547","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:548:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2654:214-0:557:1678":{"id":"a:2:2654:214-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[5,0],"end":[5,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder_string_writer::EncoderStringWriter","name":"EncoderStringWriter","id":"0:189:1993","glob":false}},"b:2:2226-0:469:2304":{"id":"b:2:2226-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11330:1942":{"id":"2:11330:1942","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2515-0:140:1992":{"id":"b:2:2515-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:449:1676":{"id":"0:449:1676","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/decode.rs","begin":[156,0],"end":[160,1]},"visibility":"public","docs":"Returns a conservative estimate of the decoded size of `encoded_len` base64 symbols (rounded up\nto the next group of 3 decoded bytes).\n\nThe resulting length will be a safe choice for the size of a decode buffer, but may have up to\n2 trailing bytes that won't end up being needed.\n\n# Examples\n\n```\nuse base64::decoded_len_estimate;\n\nassert_eq!(3, decoded_len_estimate(1));\nassert_eq!(3, decoded_len_estimate(2));\nassert_eq!(3, decoded_len_estimate(3));\nassert_eq!(3, decoded_len_estimate(4));\n// start of the next quad of encoded symbols\nassert_eq!(6, decoded_len_estimate(5));\n```\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["encoded_len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2665:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2579:3752":{"id":"2:2579:3752","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3374:3791","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11408:60394":{"id":"2:11408:60394","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:7070:119","self::pattern":"2:11030:2862","prim@char":"1:12368:2731","str::matches":"2:11405:2812"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50231:3486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2668:222-0:487:2312":{"id":"a:2:2668:222-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2229-0:49:1889":{"id":"b:2:2229-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11452:60407":{"id":"2:11452:60407","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4462:60407"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50308:3490","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[152,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:411:383"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2505-0:469:2304":{"id":"b:2:2505-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[374,16],"end":[374,20]},"visibility":{"restricted":{"parent":"0:227:1665","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2666:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11350:60388":{"id":"2:11350:60388","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12374:2736","str::slice_unchecked":"2:11349:60387","crate::ops::IndexMut":"2:2983:2847"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[86,0],"end":[94,1]},"visibility":{"restricted":{"parent":"0:185:1991","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","by_ref","write_fmt","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3457:2028","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["0:208:1664","0:209:2115"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7726:3223-0:189:1993":{"id":"a:2:7726:3223-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2228:2801":{"id":"2:2228:2801","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5093:2635":{"id":"5:5093:2635","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:566:650":{"id":"0:566:650","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[51,16],"end":[51,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[129,0],"end":[129,43]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:476":{"id":"0:476","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[374,9],"end":[374,14]},"visibility":{"restricted":{"parent":"0:227:1665","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:477:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:396:1669":{"id":"0:396:1669","crate_id":0,"name":"encode_engine_string","span":{"filename":"src/encode.rs","begin":[38,0],"end":[44,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied `String`.\n\n See [Engine::encode_string].","links":{"Engine::encode_string":"0:345:1879"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_string\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_string"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:409:650":{"id":"0:409:650","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[144,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2509-0:521:1672":{"id":"b:2:2509-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:460:1831":{"id":"b:5:671-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:3443","5:674:3444","5:675:3445"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11424:60401":{"id":"2:11424:60401","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:55":{"id":"0:55","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[24,0],"end":[32,1]},"visibility":{"restricted":{"parent":"0:40:1662","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:59:910"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7726:3223-0:521:1672":{"id":"a:2:7726:3223-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2505-0:487:2312":{"id":"b:2:2505-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:431:383":{"id":"0:431:383","crate_id":0,"name":"cause","span":{"filename":"src/decode.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2509-0:557:1678":{"id":"b:2:2509-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[322,0],"end":[326,1]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Config","id":"0:356:1780","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:322:1796"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11370:3424":{"id":"2:11370:3424","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48043:173","prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11455:60408":{"id":"2:11455:60408","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4460:60408"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50326:3492","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2508:2287":{"id":"2:2508:2287","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2482:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2577-0:521:1672":{"id":"b:2:2577-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3362:3792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:3752"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:548:409":{"id":"0:548:409","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11360:59605":{"id":"2:11360:59605","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50301:3489","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2654:214-0:460:1831":{"id":"a:2:2654:214-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2515-0:557:1678":{"id":"b:2:2515-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:510:2510":{"id":"0:510:2510","crate_id":0,"name":"ReservedByte","span":{"filename":"src/alphabet.rs","begin":[114,4],"end":[114,20]},"visibility":"default","docs":"`=` cannot be used","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:512:1547"]}},"0:315:910":{"id":"0:315:910","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[254,4],"end":[261,5]},"visibility":"public","docs":"Create a new config with `padding` = `true`, `decode_allow_trailing_bits` = `false`, and\n`decode_padding_mode = DecodePaddingMode::RequireCanonicalPadding`.\n\nThis probably matches most people's expectations, but consider disabling padding to save\na few bytes unless you specifically need it for compatibility with some legacy system.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2229-0:289:1830":{"id":"b:2:2229-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2520-0:460:1831":{"id":"b:2:2520-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:516":{"id":"0:516","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,16],"end":[105,18]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2278:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:531":{"id":"0:531","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,34],"end":[137,36]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2665:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[44,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:431:383"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11345:54644":{"id":"2:11345:54644","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:563":{"id":"0:563","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,9],"end":[51,14]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:564:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:466":{"id":"0:466","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,16],"end":[241,20]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2666:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[97,0],"end":[247,1]},"visibility":{"restricted":{"parent":"0:128:1881","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3457:2028","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:162:910","0:165:1933","0:170:1970"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:564:409":{"id":"0:564:409","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[51,9],"end":[51,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,32],"end":[173,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine","name":"decode_engine","id":"0:440:1673","glob":false}},"2:11450:54471":{"id":"2:11450:54471","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11431:54164":{"id":"2:11431:54164","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11030:2862","prim@char":"1:12368:2731"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3313-0:86:1905":{"id":"b:2:3313-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5360-0:49:1889":{"id":"b:5:5360-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5358:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["5:5362:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:526":{"id":"0:526","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,16],"end":[137,21]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:527:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11364:54166":{"id":"2:11364:54166","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:371:126":{"id":"0:371:126","crate_id":0,"name":"Error","span":{"filename":"src/alphabet.rs","begin":[97,4],"end":[97,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:380:2538":{"id":"0:380:2538","crate_id":0,"name":"IMAP_MUTF7","span":{"filename":"src/alphabet.rs","begin":[160,0],"end":[162,2]},"visibility":"public","docs":"The alphabet used in IMAP-modified UTF-7 (uses `+` and `,`).\n\nSee [RFC 3501](https://tools.ietf.org/html/rfc3501#section-5.1.3)","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2226-0:289:1830":{"id":"b:2:2226-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:105:650":{"id":"0:105:650","crate_id":0,"name":"fmt","span":{"filename":"src/read/decoder.rs","begin":[58,4],"end":[67,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11378:54676":{"id":"2:11378:54676","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:7070:119","str::split_whitespace":"2:11356:59595","prim@char":"1:12368:2731","self::pattern":"2:11030:2862","str::rsplit":"2:11384:54680"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50009:2939","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3313-0:140:1992":{"id":"b:2:3313-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5091":{"id":"5:5091","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5002:1346","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5092:61041","5:5093:2635","5:5096:61042","5:5099:61043","5:5107:61044","5:5108:61045","5:5109:2696","5:5110:54473","5:5111:54472"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:675:3445":{"id":"5:675:3445","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2226-0:557:1678":{"id":"b:2:2226-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[27,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:296:910"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7726:3223-0:469:2304":{"id":"a:2:7726:3223-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11428:60403":{"id":"2:11428:60403","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11030:2862","prim@char":"1:12368:2731"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:492":{"id":"0:492","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,16],"end":[22,21]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:493:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:514:650":{"id":"0:514:650","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[105,9],"end":[105,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2718:3287-0:460:1831":{"id":"a:2:2718:3287-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[159,0],"end":[159,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"engine::Engine","name":"Engine","id":"0:336:1666","glob":false}},"2:11423:60400":{"id":"2:11423:60400","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2226-0:49:1889":{"id":"b:2:2226-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3313-0:557:1678":{"id":"b:2:3313-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11337:2503":{"id":"2:11337:2503","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10598:1821"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7727:3222-0:501:2506":{"id":"a:2:7727:3222-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3313-0:460:1831":{"id":"b:2:3313-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2509-0:49:1889":{"id":"b:2:2509-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:520:595":{"id":"0:520:595","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[105,20],"end":[105,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:438:525":{"id":"0:438:525","crate_id":0,"name":"decode","span":{"filename":"src/decode.rs","begin":[91,0],"end":[93,1]},"visibility":"public","docs":"Decode base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::decode].","links":{"Engine::decode":"0:349:525","STANDARD":"0:323:1828"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6405:237","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:433:650":{"id":"0:433:650","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[62,4],"end":[67,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2523:126":{"id":"2:2523:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39286:3029","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:123:1663":{"id":"0:123:1663","crate_id":0,"name":"read","span":{"filename":"src/read/decoder.rs","begin":[186,4],"end":[293,5]},"visibility":"default","docs":"Decode input from the wrapped reader.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nwritten in `buf`.\n\nWhere possible, this function buffers base64 to minimize the number of read() calls to the\ndelegate reader.\n\n# Errors\n\nAny errors emitted by the delegate reader are returned. Decoding errors due to invalid\nbase64 are also possible, and will have `io::ErrorKind::InvalidData`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2898:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7727:3222-0:289:1830":{"id":"a:2:7727:3222-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2226-0:86:1905":{"id":"b:2:2226-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5096:61042":{"id":"5:5096:61042","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2515-0:469:2304":{"id":"b:2:2515-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2509-0:460:1831":{"id":"b:2:2509-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:214:2145":{"id":"0:214:2145","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[104,4],"end":[106,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2654:214-0:534:1677":{"id":"a:2:2654:214-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:118:1970":{"id":"0:118:1970","crate_id":0,"name":"into_inner","span":{"filename":"src/read/decoder.rs","begin":[168,4],"end":[170,5]},"visibility":"public","docs":"Unwraps this `DecoderReader`, returning the base reader which it reads base64 encoded\ninput from.\n\nBecause `DecoderReader` performs internal buffering, the state of the inner reader is\nunspecified. This function is mainly provided because the inner reader type may provide\nadditional functionality beyond the `Read` implementation which may still be useful.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:317:2400":{"id":"0:317:2400","crate_id":0,"name":"with_decode_allow_trailing_bits","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[287,4],"end":[292,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_allow_trailing_bits` setting.\n\nMost users will not need to configure this. It's useful if you need to decode base64\nproduced by a buggy encoder that has bits set in the unused space on the last base64\ncharacter as per [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).\nIf invalid trailing bits are present and this is `true`, those bits will\nbe silently ignored, else `DecodeError::InvalidLastSymbol` will be emitted.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["allow",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2577-0:534:1677":{"id":"b:2:2577-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3362:3792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:3752"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:570":{"id":"0:570","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,34],"end":[51,36]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2665:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2515-0:501:2506":{"id":"b:2:2515-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:458":{"id":"0:458","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[175,80],"end":[175,96]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::DecodeSliceError","name":"DecodeSliceError","id":"0:557:1678","glob":false}},"0:325:2162":{"id":"0:325:2162","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[335,0],"end":[335,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [crate::alphabet::URL_SAFE] base64 alphabet and [crate::engine::general_purpose::PAD] config.","links":{"GeneralPurpose":"0:289:1830","crate::engine::general_purpose::PAD":"0:327:1832","crate::alphabet::URL_SAFE":"0:377:2162"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2509-0:140:1992":{"id":"b:2:2509-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7726:3223-0:49:1889":{"id":"a:2:7726:3223-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:345:1879":{"id":"0:345:1879","crate_id":0,"name":"encode_string","span":{"filename":"src/engine/mod.rs","begin":[158,4],"end":[168,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied `String`.\nWrites into the supplied `String`, which may allocate if its internal buffer isn't big enough.\n\n# Example\n\n```rust\nuse base64::Engine as _;\nconst URL_SAFE_ENGINE: base64::engine::GeneralPurpose =\n    base64::engine::GeneralPurpose::new(\n        &base64::alphabet::URL_SAFE,\n        base64::engine::general_purpose::NO_PAD);\nfn main() {\n    let mut buf = String::new();\n    base64::engine::STANDARD.encode_string(b\"hello world~\", &mut buf);\n    println!(\"{}\", buf);\n\n    buf.clear();\n    URL_SAFE_ENGINE.encode_string(b\"hello internet~\", &mut buf);\n    println!(\"{}\", buf);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2718:3287-0:289:1830":{"id":"a:2:2718:3287-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2515-0:86:1905":{"id":"b:2:2515-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:515":{"id":"0:515","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,16],"end":[105,18]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2665:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2654:214-0:501:2506":{"id":"a:2:2654:214-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2654:214-0:487:2312":{"id":"a:2:2654:214-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[143,0],"end":[149,1]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:409:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11341:54642":{"id":"2:11341:54642","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48043:173"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9127:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11390:60391":{"id":"2:11390:60391","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:11378:54676","str::split_terminator":"2:11387:60390","self::pattern":"2:11030:2862","prim@char":"1:12368:2731"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50077:3481","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59:910":{"id":"0:59:910","crate_id":0,"name":"new","span":{"filename":"src/display.rs","begin":[26,4],"end":[31,5]},"visibility":"public","docs":"Create a `Base64Display` with the provided engine.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bytes",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[168,58],"end":[168,74]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::EncodeSliceError","name":"EncodeSliceError","id":"0:521:1672","glob":false}},"a:2:2668:222-0:521:1672":{"id":"a:2:2668:222-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:429:650":{"id":"0:429:650","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[31,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[173,0],"end":[294,1]},"visibility":{"restricted":{"parent":"0:75:1904","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3400:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_to_string","read_buf_exact","read_to_end","read_exact","read_vectored","by_ref","chain","read_buf","is_read_vectored","bytes","take"],"trait":{"name":"Read","id":"1:3400:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:123:1663"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2718:3287-0:501:2506":{"id":"a:2:2718:3287-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:528":{"id":"0:528","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2664:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:501:2506":{"id":"0:501:2506","crate_id":0,"name":"ParseAlphabetError","span":{"filename":"src/alphabet.rs","begin":[106,0],"end":[115,1]},"visibility":"public","docs":"Possible errors when constructing an [Alphabet] from a `str`.","links":{"Alphabet":"0:487:2312"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:502:1960","0:504:2513","0:507:2509","0:510:2510"],"impls":["a:2:2718:3287-0:501:2506","a:2:7726:3223-0:501:2506","a:2:2668:222-0:501:2506","a:2:7727:3222-0:501:2506","a:2:2654:214-0:501:2506","b:2:2509-0:501:2506","b:2:3313-0:501:2506","b:2:2520-0:501:2506","b:2:2505-0:501:2506","b:2:2229-0:501:2506","b:2:2515-0:501:2506","b:2:2577-0:501:2506","b:2:2226-0:501:2506","b:5:5360-0:501:2506","0:513","0:515","0:516","0:518","0:519","0:373","0:375"]}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[34,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:40:1662","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:64:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2226-0:521:1672":{"id":"b:2:2226-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:336:1666":{"id":"0:336:1666","crate_id":0,"name":"Engine","span":{"filename":"src/engine/mod.rs","begin":[41,0],"end":[336,1]},"visibility":"public","docs":"An `Engine` provides low-level encoding and decoding operations that all other higher-level parts of the API use. Users of the library will generally not need to implement this.\n\nDifferent implementations offer different characteristics. The library currently ships with\n[GeneralPurpose] that offers good speed and works on any CPU, with more choices\ncoming later, like a constant-time one when side channel resistance is called for, and vendor-specific vectorized ones for more speed.\n\nSee [STANDARD] if you just want standard base64. Otherwise, when possible, it's\nrecommended to store the engine in a `const` so that references to it won't pose any lifetime\nissues, and to avoid repeating the cost of engine setup.\n\nSince almost nobody will need to implement `Engine`, docs for internal methods are hidden.","links":{"STANDARD":"0:323:1828","GeneralPurpose":"0:289:1830"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:337:1780","0:338:2174","0:342:1795","0:343:590","0:345:1879","0:347:2064","0:349:525","0:351:2275","0:353:2286"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:297"]}},"b:2:2226-0:501:2506":{"id":"b:2:2226-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[166,32],"end":[166,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine","name":"encode_engine","id":"0:393:1668","glob":false}},"a:2:7726:3223-0:487:2312":{"id":"a:2:7726:3223-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:376:1828":{"id":"0:376:1828","crate_id":0,"name":"STANDARD","span":{"filename":"src/alphabet.rs","begin":[134,0],"end":[136,2]},"visibility":"public","docs":"The standard alphabet (uses `+` and `/`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-3).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:327:1832":{"id":"0:327:1832","crate_id":0,"name":"PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[344,0],"end":[344,66]},"visibility":"public","docs":"Include padding bytes when encoding, and require that they be present when decoding.\n\nThis is the standard per the base64 RFC, but consider using [NO_PAD] instead as padding serves\nlittle purpose in practice.","links":{"NO_PAD":"0:328:2416"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"2:11387:60390":{"id":"2:11387:60390","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"2:11378:54676","self::pattern":"2:11030:2862","prim@char":"1:12368:2731","`DoubleEndedIterator`":"2:7070:119","str::rsplit_terminator":"2:11390:60391"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50059:3482","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[315,0],"end":[320,1]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2556:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:320:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,9],"end":[22,14]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:491:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2226-0:189:1993":{"id":"b:2:2226-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:374:650":{"id":"0:374:650","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[118,4],"end":[125,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8545:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8534:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:347:2064":{"id":"0:347:2064","crate_id":0,"name":"encode_slice","span":{"filename":"src/engine/mod.rs","begin":[192,4],"end":[211,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied slice.\nWrites into the supplied output buffer.\n\nThis is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident\nor statically-allocated buffer).\n\n# Example\n\n```rust\nuse base64::{engine, Engine as _};\nlet s = b\"hello internet!\";\nlet mut buf = Vec::new();\n// make sure we'll have a slice big enough for base64 + padding\nbuf.resize(s.len() * 4 / 3 + 4, 0);\n\nlet bytes_written = engine::STANDARD.encode_slice(s, &mut buf).unwrap();\n\n// shorten our vec down to just what was written\nbuf.truncate(bytes_written);\n\nassert_eq!(s, engine::STANDARD.decode(&buf).unwrap().as_slice());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11425:60402":{"id":"2:11425:60402","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11055:3470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:306:1795":{"id":"0:306:1795","crate_id":0,"name":"config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[184,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:336:1666","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3313-0:469:2304":{"id":"b:2:3313-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3313-0:534:1677":{"id":"b:2:3313-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2229-0:501:2506":{"id":"b:2:2229-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:558:1677":{"id":"0:558:1677","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[54,4],"end":[54,28]},"visibility":"default","docs":"A [DecodeError] occurred","links":{"DecodeError":"0:534:1677"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:560:1547"]}},"a:2:2654:214-0:49:1889":{"id":"a:2:2654:214-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11353:3505":{"id":"2:11353:3505","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12368:2731"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49979:2854","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[117,0],"end":[126,1]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:374:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:474:2310":{"id":"0:474:2310","crate_id":0,"name":"RequireNone","span":{"filename":"src/engine/mod.rs","begin":[381,4],"end":[381,15]},"visibility":"default","docs":"Padding must be absent -- for when you want predictable padding, without any wasted bytes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[249,0],"end":[399,1]},"visibility":{"restricted":{"parent":"0:128:1881","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3457:2028","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","by_ref","write_fmt","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3457:2028","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:175:1664","0:179:2115"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[23,42],"end":[23,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::STANDARD","name":"STANDARD","id":"0:323:1828","glob":false}},"0:465:409":{"id":"0:465:409","crate_id":0,"name":"clone","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:391:590":{"id":"0:391:590","crate_id":0,"name":"encode","span":{"filename":"src/encode.rs","begin":[18,0],"end":[20,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::encode].","links":{"Engine::encode":"0:343:590","STANDARD":"0:323:1828"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:530:595":{"id":"0:530:595","crate_id":0,"name":"eq","span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[374,40],"end":[374,42]},"visibility":{"restricted":{"parent":"0:227:1665","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2278:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2577-0:501:2506":{"id":"b:2:2577-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3362:3792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:3752"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"a:2:7726:3223-0:534:1677":{"id":"a:2:7726:3223-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2718:3287-0:49:1889":{"id":"a:2:2718:3287-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2718:3287-0:469:2304":{"id":"a:2:2718:3287-0:469:2304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11359:60389":{"id":"2:11359:60389","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50273:3479","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2509-0:501:2506":{"id":"b:2:2509-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2509-0:189:1993":{"id":"b:2:2509-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:324:2161":{"id":"0:324:2161","crate_id":0,"name":"STANDARD_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[332,0],"end":[332,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [crate::alphabet::STANDARD] base64 alphabet and [crate::engine::general_purpose::NO_PAD] config.","links":{"GeneralPurpose":"0:289:1830","crate::alphabet::STANDARD":"0:376:1828","crate::engine::general_purpose::NO_PAD":"0:328:2416"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2505-0:521:1672":{"id":"b:2:2505-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:326:2163":{"id":"0:326:2163","crate_id":0,"name":"URL_SAFE_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[338,0],"end":[338,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [crate::alphabet::URL_SAFE] base64 alphabet and [crate::engine::general_purpose::NO_PAD] config.","links":{"GeneralPurpose":"0:289:1830","crate::alphabet::URL_SAFE":"0:377:2162","crate::engine::general_purpose::NO_PAD":"0:328:2416"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"a:2:7727:3222-0:557:1678":{"id":"a:2:7727:3222-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11349:60387":{"id":"2:11349:60387","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:11350:60388","`str`":"1:12374:2736","crate::ops::Index":"2:2979:2846"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:519":{"id":"0:519","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,20],"end":[105,29]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2273:182","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:520:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:557:1678":{"id":"0:557:1678","crate_id":0,"name":"DecodeSliceError","span":{"filename":"src/decode.rs","begin":[52,0],"end":[59,1]},"visibility":"public","docs":"Errors that can occur while decoding into a slice.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:558:1677","0:561:2241"],"impls":["a:2:2718:3287-0:557:1678","a:2:7726:3223-0:557:1678","a:2:2668:222-0:557:1678","a:2:7727:3222-0:557:1678","a:2:2654:214-0:557:1678","b:2:2509-0:557:1678","b:2:3313-0:557:1678","b:2:2520-0:557:1678","b:2:2505-0:557:1678","b:2:2229-0:557:1678","b:2:2515-0:557:1678","b:2:2577-0:557:1678","b:2:2226-0:557:1678","b:5:671-0:557:1678","b:5:5360-0:557:1678","0:563","0:565","0:567","0:568","0:570","0:571","0:432","0:434","0:436"]}},"0:323:1828":{"id":"0:323:1828","crate_id":0,"name":"STANDARD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[329,0],"end":[329,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [crate::alphabet::STANDARD] base64 alphabet and [crate::engine::general_purpose::PAD] config.","links":{"crate::alphabet::STANDARD":"0:376:1828","crate::engine::general_purpose::PAD":"0:327:1832","GeneralPurpose":"0:289:1830"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:356:1780":{"id":"0:356:1780","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[339,0],"end":[349,1]},"visibility":"public","docs":"The minimal level of configuration that engines must support.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:357:1796"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:321"]}},"b:2:3313-0:521:1672":{"id":"b:2:3313-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2515-0:49:1889":{"id":"b:2:2515-0:49:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:287":{"id":"0:287","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[12,0],"end":[12,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"decode::GeneralPurposeEstimate","name":"GeneralPurposeEstimate","id":"0:263:2315","glob":false}},"2:11381:54678":{"id":"2:11381:54678","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10854:3494","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2229-0:557:1678":{"id":"b:2:2229-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7726:3223-0:140:1992":{"id":"a:2:7726:3223-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:440:1673":{"id":"0:440:1673","crate_id":0,"name":"decode_engine","span":{"filename":"src/decode.rs","begin":[101,0],"end":[106,1]},"visibility":"public","docs":" Decode from string reference as octets using the specified [Engine].\n\n See [Engine::decode].\nReturns a `Result` containing a `Vec<u8>`.","links":{"Engine::decode":"0:349:525","Engine":"0:336:1666"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6405:237","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2718:3287-0:189:1993":{"id":"a:2:2718:3287-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:551":{"id":"0:551","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2664:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2515-0:487:2312":{"id":"b:2:2515-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2229-0:460:1831":{"id":"b:2:2229-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2278:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:338:2174":{"id":"0:338:2174","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[45,4],"end":[45,40]},"visibility":"default","docs":"The decode estimate used by this engine","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"DecodeEstimate","id":"0:358:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[84,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:128:1881","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3457:2028","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:157:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[248,0],"end":[313,1]},"visibility":{"restricted":{"parent":"0:240:1829","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:315:910","0:316:2392","0:317:2400","0:318:2411"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7726:3223-0:501:2506":{"id":"a:2:7726:3223-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2509-0:534:1677":{"id":"b:2:2509-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2511:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11443:60406":{"id":"2:11443:60406","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:567":{"id":"0:567","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2664:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3313-0:501:2506":{"id":"b:2:3313-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3315:1434":{"id":"2:3315:1434","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46514:3793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[110,0],"end":[114,1]},"visibility":{"restricted":{"parent":"0:185:1991","path":"::write::encoder_string_writer"}},"docs":"Pushes the str onto the end of the String","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:1994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:2145"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:571":{"id":"0:571","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,34],"end":[51,36]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2278:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11411:60395":{"id":"2:11411:60395","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:7070:119","str::rmatch_indices":"2:11414:60396","prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50159:3487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:512:1547":{"id":"0:512:1547","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[114,17],"end":[114,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:470:2306":{"id":"0:470:2306","crate_id":0,"name":"Indifferent","span":{"filename":"src/engine/mod.rs","begin":[377,4],"end":[377,15]},"visibility":"default","docs":"Canonical padding is allowed, but any fewer padding bytes than that is also allowed.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:513":{"id":"0:513","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,9],"end":[105,14]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:514:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,27],"end":[22,36]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2664:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2718:3287-0:140:1992":{"id":"a:2:2718:3287-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2229-0:189:1993":{"id":"b:2:2229-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2223:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2231:54143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2231:54143":{"id":"2:2231:54143","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:415":{"id":"0:415","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[166,47],"end":[166,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine_string","name":"encode_engine_string","id":"0:396:1669","glob":false}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[71,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:435:383"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3313-0:487:2312":{"id":"b:2:3313-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3311:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3315:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2668:222-0:501:2506":{"id":"a:2:2668:222-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5092:61041":{"id":"5:5092:61041","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:2851","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:2851","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226":{"id":"0:226","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[6,0],"end":[6,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder_string_writer::StrConsumer","name":"StrConsumer","id":"0:210:1994","glob":false}},"0:289:1830":{"id":"0:289:1830","crate_id":0,"name":"GeneralPurpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[21,0],"end":[25,1]},"visibility":"public","docs":"A general-purpose base64 engine.\n\n- It uses no vector CPU instructions, so it will work on any system.\n- It is reasonably fast (~2-3GiB/s).\n- It is not constant-time, though, so it is vulnerable to timing side-channel attacks. For loading cryptographic keys, etc, it is suggested to use the forthcoming constant-time implementation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:295","a:2:2718:3287-0:289:1830","a:2:7726:3223-0:289:1830","a:2:2668:222-0:289:1830","a:2:7727:3222-0:289:1830","a:2:2654:214-0:289:1830","b:2:2509-0:289:1830","b:2:3313-0:289:1830","b:2:2520-0:289:1830","b:2:2505-0:289:1830","b:2:2229-0:289:1830","b:2:2515-0:289:1830","b:2:2226-0:289:1830","0:297"]}},"0:209:2115":{"id":"0:209:2115","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder_string_writer.rs","begin":[91,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2898:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:483:595":{"id":"0:483:595","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[374,29],"end":[374,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2505-0:557:1678":{"id":"b:2:2505-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,23],"end":[22,25]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2278:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7727:3222-0:487:2312":{"id":"a:2:7727:3222-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7727:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:318:2411":{"id":"0:318:2411","crate_id":0,"name":"with_decode_padding_mode","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[307,4],"end":[312,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_padding_mode` setting.\n\nPadding is not useful in terms of representing encoded data -- it makes no difference to\nthe decoder if padding is present or not, so if you have some un-padded input to decode, it\nis perfectly fine to use `DecodePaddingMode::Indifferent` to prevent errors from being\nemitted.\n\nHowever, since in practice\n[people who learned nothing from BER vs DER seem to expect base64 to have one canonical encoding](https://eprint.iacr.org/2022/361),\nthe default setting is the stricter `DecodePaddingMode::RequireCanonicalPadding`.\n\nOr, if \"canonical\" in your circumstance means _no_ padding rather than padding to the\nnext multiple of four, there's `DecodePaddingMode::RequireNoPadding`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["mode",{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:469:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:539:1960":{"id":"0:539:1960","crate_id":0,"name":"InvalidLength","span":{"filename":"src/decode.rs","begin":[19,4],"end":[19,17]},"visibility":"default","docs":"The length of the input is invalid.\nA typical cause of this is stray trailing whitespace or other separator bytes.\nIn the case where excess trailing bytes have produced an invalid length *and* the last byte\nis also an invalid base64 symbol (as would be the case for whitespace, etc), `InvalidByte`\nwill be emitted instead of `InvalidLength` to make the issue easier to debug.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:11448:4734":{"id":"2:11448:4734","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2654:214-0:86:1905":{"id":"a:2:2654:214-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2226-0:460:1831":{"id":"b:2:2226-0:460:1831","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:460:1831","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11399:60392":{"id":"2:11399:60392","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2505-0:86:1905":{"id":"b:2:2505-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2515-0:289:1830":{"id":"b:2:2515-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2485:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2518:126","2:2519:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11405:2812":{"id":"2:11405:2812","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11030:2862","str::matches":"2:11405:2812","`DoubleEndedIterator`":"2:7070:119","prim@char":"1:12368:2731"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50213:3485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11437:60404":{"id":"2:11437:60404","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:472:2308":{"id":"0:472:2308","crate_id":0,"name":"RequireCanonical","span":{"filename":"src/engine/mod.rs","begin":[379,4],"end":[379,20]},"visibility":"default","docs":"Padding must be canonical (0, 1, or 2 `=` as needed to produce a 4 byte suffix).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:210:1994":{"id":"0:210:1994","crate_id":0,"name":"StrConsumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"An abstraction around consuming `str`s produced by base64 encoding.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:211:2145"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:212","0:215"]}},"0:203:910":{"id":"0:203:910","crate_id":0,"name":"new","span":{"filename":"src/write/encoder_string_writer.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will encode into a new `String` with the provided config.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2520-0:501:2506":{"id":"b:2:2520-0:501:2506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[175,24],"end":[175,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine_slice","name":"decode_engine_slice","id":"0:446:1675","glob":false}},"0:437:668":{"id":"0:437:668","crate_id":0,"name":"from","span":{"filename":"src/decode.rs","begin":[81,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5111:54472":{"id":"5:5111:54472","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11451:54470"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[23,52],"end":[23,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::STANDARD_NO_PAD","name":"STANDARD_NO_PAD","id":"0:324:2161","glob":false}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,47],"end":[173,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine_vec","name":"decode_engine_vec","id":"0:443:1674","glob":false}},"0:518":{"id":"0:518","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,20],"end":[105,29]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2664:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:501:2506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5360-0:557:1678":{"id":"b:5:5360-0:557:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5358:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5362:1400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:435:383":{"id":"0:435:383","crate_id":0,"name":"cause","span":{"filename":"src/decode.rs","begin":[72,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2570:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7726:3223-0:289:1830":{"id":"a:2:7726:3223-0:289:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7726:3223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:289:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[166,24],"end":[166,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode","name":"encode","id":"0:391:590","glob":false}},"b:2:2505-0:534:1677":{"id":"b:2:2505-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:342:1795":{"id":"0:342:1795","crate_id":0,"name":"config","span":{"filename":"src/engine/mod.rs","begin":[107,4],"end":[107,38]},"visibility":"default","docs":"Returns the config for this engine.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:336:1666","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2668:222-0:534:1677":{"id":"a:2:2668:222-0:534:1677","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:524":{"id":"0:524","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,9],"end":[137,14]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2243:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:525:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:110:910":{"id":"0:110:910","crate_id":0,"name":"new","span":{"filename":"src/read/decoder.rs","begin":[72,4],"end":[84,5]},"visibility":"public","docs":"Create a new decoder that will read from the provided reader `r`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["reader",{"kind":"generic","inner":"R"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2524:1420":{"id":"2:2524:1420","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:436":{"id":"0:436","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[80,0],"end":[84,1]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:557:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:437:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:545:1962":{"id":"0:545:1962","crate_id":0,"name":"InvalidPadding","span":{"filename":"src/decode.rs","begin":[27,4],"end":[27,18]},"visibility":"default","docs":"The nature of the padding was not as configured: absent or incorrect when it must be\ncanonical, or present when it must be absent, etc.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"a:2:2718:3287-0:86:1905":{"id":"a:2:2718:3287-0:86:1905","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2718:3287","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[175,67],"end":[175,78]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::DecodeError","name":"DecodeError","id":"0:534:1677","glob":false}},"a:2:2654:214-0:521:1672":{"id":"a:2:2654:214-0:521:1672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:537:1547":{"id":"0:537:1547","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[13,16],"end":[13,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:343:590":{"id":"0:343:590","crate_id":0,"name":"encode","span":{"filename":"src/engine/mod.rs","begin":[126,4],"end":[134,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 using the provided `Engine`.\nReturns a `String`.\n\n# Example\n\n```rust\nuse base64::Engine as _;\nconst URL_SAFE_ENGINE: base64::engine::GeneralPurpose =\n    base64::engine::GeneralPurpose::new(\n        &base64::alphabet::URL_SAFE,\n        base64::engine::general_purpose::NO_PAD);\n\nlet b64 = base64::engine::STANDARD.encode(b\"hello world~\");\nprintln!(\"{}\", b64);\n\nlet b64_url = URL_SAFE_ENGINE.encode(b\"hello internet~\");","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:532":{"id":"0:532","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,34],"end":[137,36]},"visibility":{"restricted":{"parent":"0:382:590","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2278:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:521:1672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2520-0:140:1992":{"id":"b:2:2520-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:189:1993":{"id":"0:189:1993","crate_id":0,"name":"EncoderStringWriter","span":{"filename":"src/write/encoder_string_writer.rs","begin":[55,0],"end":[57,1]},"visibility":"public","docs":"A `Write` implementation that base64-encodes data using the provided config and accumulates the\nresulting base64 utf8 `&str` in a [StrConsumer] implementation (typically `String`), which is\nthen exposed via `into_inner()`.\n\n# Examples\n\nBuffer base64 in a new String:\n\n```\nuse std::io::Write;\n\nlet mut enc = base64::write::EncoderStringWriter::new(\n    &base64::engine::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// get the resulting String\nlet b64_string = enc.into_inner();\n\nassert_eq!(\"YXNkZg==\", &b64_string);\n```\n\nOr, append to an existing `String`, which implements `StrConsumer`:\n\n```\nuse std::io::Write;\n\nlet mut buf = String::from(\"base64: \");\n\nlet mut enc = base64::write::EncoderStringWriter::from_consumer(\n    &mut buf,\n    &base64::engine::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// release the &mut reference on buf\nlet _ = enc.into_inner();\n\nassert_eq!(\"base64: YXNkZg==\", &buf);\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Performance\n\nBecause it has to validate that the base64 is UTF-8, it is about 80% as fast as writing plain\nbytes to a `io::Write`.","links":{"StrConsumer":"0:210:1994"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:194","0:200","a:2:2718:3287-0:189:1993","a:2:7726:3223-0:189:1993","a:2:2668:222-0:189:1993","a:2:7727:3222-0:189:1993","a:2:2654:214-0:189:1993","b:2:2509-0:189:1993","b:2:3313-0:189:1993","b:2:2520-0:189:1993","b:2:2505-0:189:1993","b:2:2229-0:189:1993","b:2:2515-0:189:1993","b:2:2226-0:189:1993","0:204"]}},"0:418":{"id":"0:418","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[168,45],"end":[168,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encoded_len","name":"encoded_len","id":"0:404:1671","glob":false}},"0:379:2534":{"id":"0:379:2534","crate_id":0,"name":"BCRYPT","span":{"filename":"src/alphabet.rs","begin":[153,0],"end":[155,2]},"visibility":"public","docs":"The bcrypt alphabet.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"2:2511:668":{"id":"2:2511:668","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[27,0],"end":[94,1]},"visibility":{"restricted":{"parent":"0:361:1667","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:369:910"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:349:525":{"id":"0:349:525","crate_id":0,"name":"decode","span":{"filename":"src/engine/mod.rs","begin":[237,4],"end":[247,5]},"visibility":"default","docs":"Decode from string reference as octets using the specified [Engine].\nReturns a `Result` containing a `Vec<u8>`.\n\n# Example\n\n```rust\n    use base64::{Engine as _, Engine};\n\n    let bytes = base64::engine::STANDARD.decode(\"aGVsbG8gd29ybGR+Cg==\").unwrap();\n    println!(\"{:?}\", bytes);\n\n    // custom engine setup\n    let bytes_url = base64::engine::GeneralPurpose::new(\n                 &base64::alphabet::URL_SAFE,\n                 base64::engine::general_purpose::NO_PAD)\n        .decode(\"aGVsbG8gaW50ZXJuZXR-Cg\").unwrap();\n    println!(\"{:?}\", bytes_url);\n```\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{"Engine":"0:336:1666"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48185:204","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6405:237","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2473:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:534:1677":{"id":"0:534:1677","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[10,0],"end":[28,1]},"visibility":"public","docs":"Errors that can occur while decoding.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:535:1958","0:539:1960","0:541:1961","0:545:1962"],"impls":["a:2:2718:3287-0:534:1677","a:2:7726:3223-0:534:1677","a:2:2668:222-0:534:1677","a:2:7727:3222-0:534:1677","a:2:2654:214-0:534:1677","b:2:2509-0:534:1677","b:2:3313-0:534:1677","b:2:2520-0:534:1677","b:2:2505-0:534:1677","b:2:2229-0:534:1677","b:2:2515-0:534:1677","b:2:2577-0:534:1677","b:2:2226-0:534:1677","b:5:671-0:534:1677","b:5:5360-0:534:1677","0:547","0:549","0:551","0:552","0:554","0:555","0:428","0:430","0:436"]}},"a:2:2654:214-0:189:1993":{"id":"a:2:2654:214-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2654:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[30,0],"end":[41,1]},"visibility":{"restricted":{"parent":"0:420:525","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8590:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:534:1677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:429:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:404:1671":{"id":"0:404:1671","crate_id":0,"name":"encoded_len","span":{"filename":"src/encode.rs","begin":[97,0],"end":[117,1]},"visibility":"public","docs":"Calculate the base64 encoded length for a given input length, optionally including any\nappropriate padding bytes.\n\nReturns `None` if the encoded length can't be represented in `usize`. This will happen for\ninput lengths in approximately the top quarter of the range of `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bytes_len",{"kind":"primitive","inner":"usize"}],["padding",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2505-0:189:1993":{"id":"b:2:2505-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2482:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2508:2287"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2226-0:487:2312":{"id":"b:2:2226-0:487:2312","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2661:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2220:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2228:2801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2668:222-0:140:1992":{"id":"a:2:2668:222-0:140:1992","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2668:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1992","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11434:54687":{"id":"2:11434:54687","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12368:2731","self::pattern":"2:11030:2862"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48041:175","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11035:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11050:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:456":{"id":"0:456","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[175,45],"end":[175,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decoded_len_estimate","name":"decoded_len_estimate","id":"0:449:1676","glob":false}},"b:2:2520-0:189:1993":{"id":"b:2:2520-0:189:1993","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2479:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2489:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2523:126","2:2524:1420"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:378:2531":{"id":"0:378:2531","crate_id":0,"name":"CRYPT","span":{"filename":"src/alphabet.rs","begin":[148,0],"end":[150,2]},"visibility":"public","docs":"The `crypt(3)` alphabet (uses `.` and `/` as the first two values).\n\nNot standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:487:2312","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:320:59":{"id":"0:320:59","crate_id":0,"name":"default","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[317,4],"end":[319,5]},"visibility":"default","docs":"Delegates to [GeneralPurposeConfig::new].","links":{"GeneralPurposeConfig::new":"0:315:910"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:507:2509":{"id":"0:507:2509","crate_id":0,"name":"UnprintableByte","span":{"filename":"src/alphabet.rs","begin":[112,4],"end":[112,23]},"visibility":"default","docs":"All bytes must be printable (in the range `[32, 126]`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:509:1547"]}},"0:417":{"id":"0:417","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[168,24],"end":[168,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine_slice","name":"encode_engine_slice","id":"0:399:1670","glob":false}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[57,0],"end":[68,1]},"visibility":{"restricted":{"parent":"0:75:1904","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3400:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8585:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1905","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:105:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:337:1780":{"id":"0:337:1780","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[43,4],"end":[43,24]},"visibility":"default","docs":"The config type used by this engine","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Config","id":"0:356:1780","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:469:2304":{"id":"0:469:2304","crate_id":0,"name":"DecodePaddingMode","span":{"filename":"src/engine/mod.rs","begin":[375,0],"end":[382,1]},"visibility":"public","docs":"Controls how pad bytes are handled when decoding.\n\nEach [Engine] must support at least the behavior indicated by\n[DecodePaddingMode::RequireCanonical], and may support other modes.","links":{"DecodePaddingMode::RequireCanonical":"0:472:2308","Engine":"0:336:1666"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:470:2306","0:472:2308","0:474:2310"],"impls":["a:2:2718:3287-0:469:2304","a:2:7726:3223-0:469:2304","a:2:2668:222-0:469:2304","a:2:7727:3222-0:469:2304","a:2:2654:214-0:469:2304","b:2:2509-0:469:2304","b:2:3313-0:469:2304","b:2:2520-0:469:2304","b:2:2505-0:469:2304","b:2:2229-0:469:2304","b:2:2515-0:469:2304","b:2:2226-0:469:2304","b:5:671-0:469:2304","0:476","0:478","0:479","0:481","0:482","0:484","0:485"]}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[79,0],"end":[84,1]},"visibility":{"restricted":{"parent":"0:185:1991","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:336:1666","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1993","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:203:910"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"16:7189:5092":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"12:834:3840":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:51864:4502":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:20283:3798":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"12:1120:5002":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:1919:4010":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:9284:4118":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:4139:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:50740:3465":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:10822:47581":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"18:113:53981":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:12366:2729":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:5375:4027":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:50594:4393":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:9681:6093":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:5720:8428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:4404:5925":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:10490:6236":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:4294:8068":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:2784:3877":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"12:632:3604":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:4364:2894":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:4152:7992":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:4398:8114":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:10062:6211":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:50974:4599":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"0:361:1667":{"crate_id":0,"path":["base64","alphabet"],"kind":"module"},"15:175:5021":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:6002:4258":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:8368:5445":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:2510:2948":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"9:676:4925":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"18:736:5627":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:50637:2850":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:52555:7280":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:1216:3844":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:11451:5772":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:7726:3223":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:12485:6541":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:4611:8179":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:54166:7313":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:6972:8672":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:9597:212":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:1505:7812":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:4274:8058":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"12:1852:3927":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:49738:4592":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:4737:8235":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:6294:5129":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:9366:3494":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"0:504:2513":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","DuplicatedByte"],"kind":"variant"},"2:56985:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9338:3604":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:8372:2930":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:716:11633":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"5:2726:8670":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:2819:3950":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:153:5089":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:11506:4120":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:9350:5583":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:50583:4392":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:11576:6399":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:10516:55800":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:11538:4659":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"16:2500:5394":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:5605:8364":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:20959:4373":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:6178:5180":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:6389:4600":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"14:215:7115":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"9:33:4928":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"6:4102:7955":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:9857:5515":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:2665:219":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"12:1859:3928":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:7992:5145":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:4740:3803":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:4804:8267":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:54113:7310":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:12374:2736":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:50411:4381":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"19:0:993":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"0:289:1830":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurpose"],"kind":"struct"},"1:1612:3003":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:3191:4378":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:1933:4172":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:7279:8666":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:7147:154":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:9458:5441":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:4816:8272":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:8150:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:9478:3480":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:13506:6907":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:56972:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:21699:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"12:1003:3844":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:10321:5599":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:9751:5531":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:4212:3795":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:4126:7972":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:8822:142":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:54075:7308":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:5894:5737":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:2273:182":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:10796:5564":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:1695:7933":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13100:6778":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:2909:2941":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:2718:5387":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:21050:4615":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:3418:2929":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:3001:5392":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:11882:199":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:12874:6723":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:49020:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:6738:4772":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:50426:4384":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:12948:6742":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11997:6476":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:56959:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11167:8760":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"5:1301:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:5504:8318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:1067:4799":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:11237:56570":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:7581:5127":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:39322:4807":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:4540:8144":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"12:669:3836":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:8618:4069":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:10921:6252":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:11235:6315":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"12:1065:5000":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:2816:5390":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:50231:3486":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:12134:6495":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:13126:6788":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:22395:4420":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:11137:6298":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:6329:8521":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:5962:2836":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:6302:8511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:7101:5965":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:52187:4510":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:9117:3798":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"0:324:2161":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD_NO_PAD"],"kind":"constant"},"17:11054:6283":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:2859:5363":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:4810:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:50760:4659":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:6721:5193":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:20332:4372":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"14:165:45883":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:5582:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:2927:3289":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:13039:6762":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:6212:3914":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:21177:4340":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:14:1664":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:9354:3006":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"0:376:1828":{"crate_id":0,"path":["base64","alphabet","STANDARD"],"kind":"constant"},"1:8570:4288":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:3125:6052":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:12955:6744":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"9:977:4841":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4212:8028":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:2278:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:13184:6802":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:47221:4037":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:12367:2730":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:11751:8763":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:6872:7337":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:6132:5754":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"0:472:2308":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireCanonical"],"kind":"variant"},"2:9443:4002":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:6545:8625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:7532:55984":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:3995:4009":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:52403:4476":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:6081:3006":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:4300:8071":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:2607:2942":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:21864:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"12:2080:3845":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:47198:4035":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10075:6212":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:5715:5167":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:2476:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:7255:8661":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:2961:4417":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:4286:8063":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:12896:6727":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:10625:5453":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"3:223:204":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:4581:4249":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:6794:5416":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"15:214:5026":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:4501:4240":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:6881:5196":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:3156:4218":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"18:96:53980":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:4014:238":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:9907:5768":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:7095:5375":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:1525:7820":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:1964:3747":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:12382:2742":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:9571:3483":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:13114:6785":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:51004:4063":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:11724:7339":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"5:2968:3929":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:47127:4023":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:8756:3808":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:1737:4682":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:6572:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:48185:204":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:2809:3932":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:50505:4389":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:1701:7936":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:495:7740":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:9323:2939":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:50748:3467":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:13404:6877":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:5808:16969":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:11773:5775":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"5:6895:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:4399:4291":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:7413:5142":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:5199:3009":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:3326:157":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:2804:3931":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"18:727:5626":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:12210:5776":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:507:7746":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:7276:5204":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:8643:4234":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:52311:4487":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"18:548:138":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:20444:4372":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:2772:3872":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:2243:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:9330:4122":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"14:221:7117":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:13594:6925":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:2332:5399":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13231:6815":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:12964:6745":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"18:531:5634":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:21193:8676":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:5210:6137":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:7022:5372":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:6781:4142":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:10445:5567":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:46453:197":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:4968:3803":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:4264:3896":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:12237:6517":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:48109:3605":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:13393:6876":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:9165:61833":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:4346:8095":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:9691:5530":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:1971:4801":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:2776:2842":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:12164:6501":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:10108:5507":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:5759:4119":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:54128:7311":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:49044:129":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:9700:5529":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:9885:6175":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:52165:4507":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:9223:47625":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:9250:6155":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:1394:3835":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:11761:6424":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:4714:768":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:2848:3965":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:2479:145":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:21103:4616":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:7029:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:8481:4072":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:10991:2857":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"0:49:1889":{"crate_id":0,"path":["base64","display","Base64Display"],"kind":"struct"},"2:49364:7267":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:8871:6144":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"18:699:5624":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:20242:3798":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"0:470:2306":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","Indifferent"],"kind":"variant"},"6:4673:8206":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:21260:7222":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:4186:201":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:13071:6770":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:1623:3928":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:4879:5939":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:47509:7207":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:5154:5366":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:5570:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:4581:8163":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:2900:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:5856:5173":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:11951:6466":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"12:822:3839":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:8418:5512":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:7143:5763":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:6424:8552":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:3002:3930":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:4195:4539":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:11087:6289":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:20699:16775":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:21268:7223":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:8210:4136":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:11106:6294":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:3949:4066":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:10207:6217":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12361:6539":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:5672:8406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:4777:5936":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:29630:4643":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:10139:5478":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:11536:6391":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:9902:4187":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:2570:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:8880:4097":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:2380:5377":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"0:378:2531":{"crate_id":0,"path":["base64","alphabet","CRYPT"],"kind":"constant"},"1:6009:4260":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:6337:5185":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:6500:8603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:957:3835":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"6:4716:8228":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10283:6226":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:11186:6305":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:4206:8025":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:3150:4216":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:48236:3605":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:575:7788":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:50213:3485":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:7779:5764":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:3373:2920":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:4361:8102":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:5941:188":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:859:3604":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:4307:8074":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:49909:3996":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:11500:6382":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:10159:6214":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:4376:5924":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:562:6048":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:11963:3000":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:9909:6177":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:29536:4532":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:51886:4506":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:49568:3980":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5782:8444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:5676:4115":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7461:5111":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:131:40012":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:11034:6282":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:29496:2996":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:9585:4001":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:20851:4057":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"12:274:7720":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:8734:8521":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:7948:3848":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"5:2039:4800":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:1580:7853":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:4115:7964":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:4888:5725":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:13478:6898":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:1359:3006":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"14:0:2707":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:6354:5186":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"12:2184:7724":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:8140:2952":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:50009:2939":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:8069:3905":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:5472:5158":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:7033:147":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:11436:6353":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:4250:3894":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:48101:3604":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:1825:7331":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:21351:8679":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:8510:6137":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:11445:5771":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:4321:2893":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:12391:2751":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:2378:4192":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:1760:4681":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:8494:6136":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:8822:61834":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:46809:4458":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:49890:3995":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:13374:6871":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"0:240:1829":{"crate_id":0,"path":["base64","engine","general_purpose"],"kind":"module"},"16:6768:5194":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:9631:5461":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:12380:2740":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:10708:5566":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:941:2836":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:52281:4483":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:8535:2028":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:3226:2960":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:6139:5179":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:6115:5097":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:47516:3830":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:10774:5444":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:12860:6722":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:46892:3490":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:12198:6514":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:8441:5568":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:50440:4387":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:4335:8090":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:6048:5091":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:1608:2836":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2473:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:8435:2940":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:2019:61393":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:6352:8539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:12022:5030":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"0:127:1664":{"crate_id":0,"path":["base64","write"],"kind":"module"},"1:9592:161":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:2245:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:11594:6400":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:9626:3884":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:608:7806":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"12:1840:2836":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:6814:3006":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:12383:2743":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:6605:4008":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:9447:4266":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:12756:6696":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:50812:4661":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:11617:6403":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:2424:5378":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:46963:4649":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:2930:3290":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"12:393:61826":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:3154:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:4267:2892":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:2750:3862":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:21372:4633":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:46475:4645":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:8545:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:51965:4482":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:20014:60316":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:12278:6522":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:3249:5516":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:1552:2920":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:9303:5476":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:53025:4491":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:52713:4504":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:5547:4738":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:3160:4016":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:20291:4058":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"12:777:4991":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:2478:5382":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:38130:3372":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:2984:5393":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5727:8429":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"18:690:5623":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:58307:7322":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:8991:61840":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:57011:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11014:6272":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:678:7325":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:13580:6922":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:9274:3604":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:11750:59671":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:11151:3813":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:3590:4074":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:12638:6655":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:7907:5211":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:9466:4011":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:1511:7815":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"0:336:1666":{"crate_id":0,"path":["base64","engine","Engine"],"kind":"trait"},"17:8941:6145":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:4598:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:4653:4250":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:2220:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:46409:196":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:6747:2836":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"12:751:2836":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:48506:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"7:32:45150":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:5587:8352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"12:1044:4999":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:11035:2849":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:9897:6176":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:5502:184":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:2664:220":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:47525:7258":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:48780:2878":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:9562:8757":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:5771:5170":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:10476:47840":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:2570:5435":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:46365:192":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:454:4155":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:5358:226":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:9539:5463":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:9712:6169":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:10875:5510":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:48253:177":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:3417:5725":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"9:505:4828":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:50604:4394":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:47086:2935":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:11247:6318":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:11851:4600":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:53991:4477":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:625:3969":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:52995:4488":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:4778:8250":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:48092:3391":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:12368:2731":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:6992:4032":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:47543:5749":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:51987:4486":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:21233:4335":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:9382:6161":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:4449:8118":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10973:6269":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:25205:4452":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:8687:4292":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:47187:4029":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:10385:5543":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"14:7:5942":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:5390:185":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:54009:7302":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:8604:2882":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:5959:5360":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:8323:2966":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:10221:6221":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:6307:3010":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:49953:2855":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:7237:8658":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:9708:7333":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:13141:6792":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:20694:4375":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:915:3833":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"0:380:2538":{"crate_id":0,"path":["base64","alphabet","IMAP_MUTF7"],"kind":"constant"},"12:1518:5012":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:4029:5727":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:7420:3606":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:10497:7332":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:9895:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:12022:6480":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:20411:3798":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:9061:5478":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:54143:7312":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:6037:5380":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"18:609:6027":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:4242:3893":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:10117:3994":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:46870:3491":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:6682:5121":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:8680:3944":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:5840:4030":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"12:1555:5014":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:6164:5101":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:11787:6427":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:12073:6485":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:13082:6774":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:12148:6497":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:4902:8534":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:11646:59670":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:11939:6464":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:46845:3492":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11368:6351":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:5656:4114":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"12:1681:141":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:2916:5504":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:10310:6228":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:49985:3477":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:7366:5124":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"0:325:2162":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE"],"kind":"constant"},"6:4257:8052":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"5:5422:2836":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"5:620:5949":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:12390:2750":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:2896:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:3680:5915":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:6755:4773":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:9155:6149":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11661:6411":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:8137:47577":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:8356:2963":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:1903:47663":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:6758:2963":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:7321:5109":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:1672:1049":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:8585:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:8701:6041":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:5379:5153":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:4320:3900":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:50913:199":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:9541:56283":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:5772:8442":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:6311:8512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:12176:6503":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:1771:5468":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11853:6436":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:6879:3854":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:49083:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:2402:5400":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:6474:5188":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:2311:5084":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:12251:6518":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:8405:2935":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:2839:3960":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:9472:4176":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:386:6045":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:3139:4646":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10894:5509":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:4534:8141":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:7226:8654":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:7853:56271":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:8881:61835":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:2026:178":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:513:7748":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:46766:3491":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:6448:8563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:11893:6440":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:49325:7262":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"11:36:7728":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:7730:6048":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:11199:6306":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:6705:3829":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:1608:7872":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:9526:5464":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:8897:4098":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"12:810:3835":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:10938:2958":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"0:474:2310":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireNone"],"kind":"variant"},"16:7521:5103":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:12379:2739":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:11734:6184":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"12:320:5005":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:3898:3604":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:5541:8330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:11518:4121":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:4690:968":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:10403:5446":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:5887:3915":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:47108:4021":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:12934:6740":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:51756:4501":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:539:7768":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:646:40348":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:5165:3941":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:10752:5446":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"5:2244:4804":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:2252:5365":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:10182:6215":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:9484:56284":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:7841:3798":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:21897:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:2898:204":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:9514:7378":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:12748:6695":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:7070:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:6820:7000":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:5822:4125":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:7889:4161":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:1707:4244":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:1088:3843":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:2647:2951":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:567:7783":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:8631:6039":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"18:80:53979":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"9:827:4835":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:47282:4042":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:10528:5563":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:4341:2895":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:2784:5391":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:48041:175":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:53059:4473":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"0:326:2163":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE_NO_PAD"],"kind":"constant"},"1:4429:4294":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:6450:5019":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:7072:3004":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:2654:214":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:49053:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"6:4527:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:8857:3823":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:6807:5417":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:3557:5912":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:47272:4041":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:52454:7277":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:8464:4071":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:46541:7245":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"14:202:2835":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:4208:5919":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"18:614:61845":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:10944:2956":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:4745:8237":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:50532:4390":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"0:358:2174":{"crate_id":0,"path":["base64","engine","DecodeEstimate"],"kind":"trait"},"6:1686:7927":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:2247:4188":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:50317:3491":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:11971:7401":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:7417:2839":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:2718:3287":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:9519:7379":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:9031:61837":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:50732:3463":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:6677:4271":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"12:659:3006":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"12:861:3842":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:0:279":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:49071:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"6:6293:8505":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:1605:3006":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:12372:2734":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:6806:60241":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:7728:3221":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:2724:3443":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:771:4770":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:52042:7276":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"18:538:5635":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:12291:6523":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:1348:3605":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:5642:4113":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:1473:141":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:12375:2737":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:29530:2997":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:50027:3480":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:51780:4493":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:12015:5030":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:5503:5160":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:9127:216":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:10506:6238":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:487:6047":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:11217:6314":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:4506:8128":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:2573:2949":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:4096:7954":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:46913:4717":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:8124:4210":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:19969:3372":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:12373:2735":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:2788:3879":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:6777:3006":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:51834:4514":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"8:0:2702":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:8588:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:50931:189":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:48468:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:5488:5159":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:13436:6892":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12781:6706":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:4565:5929":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"0:507:2509":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","UnprintableByte"],"kind":"variant"},"2:47240:4039":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:1643:7901":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:11185:7394":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:6509:8606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:9293:5584":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:2831:3956":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:5642:5165":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13059:6769":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:50728:3462":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:4614:2920":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:4740:5935":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:2489:230":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:9290:180":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:6996:4031":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:29736:4644":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:49807:3991":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:8730:3804":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:2835:3958":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:3466:56765":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:7166:8650":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:3311:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:10233:6222":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:1636:7897":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:8666:6040":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:11485:6378":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:52235:4495":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:11909:6445":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:2396:4198":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"0:460:1831":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurposeConfig"],"kind":"struct"},"1:993:3841":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:11646:5773":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:7071:5197":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:9738:5533":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"18:671:5621":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:13031:6761":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:2548:5384":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7447:5110":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12087:6488":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:11915:4238":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:2924:3288":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:10837:4118":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:47169:4026":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:6474:5742":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:2760:3866":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:9844:5591":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"12:762:3003":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"5:6785:192":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"18:521:5630":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:6409:8547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:49899:3998":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:9193:61839":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:6008:5725":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:13091:6777":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"12:119:5007":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:13024:6760":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:12384:2744":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:4427:8116":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6981:8640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:1678:7926":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:11662:7398":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:6998:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:5974:5175":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"9:863:4838":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:1714:7939":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:48168:3117":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:7868:5116":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:46349:194":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:11612:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:12307:6525":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:4519:198":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:4185:8016":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:12369:2732":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"12:387:61825":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:21666:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:9645:3885":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:6262:5112":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:48787:2877":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:2983:2847":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"0:323:1828":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD"],"kind":"constant"},"17:12909:6732":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:11227:2930":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:7404:5126":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:5007:3809":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:4253:5920":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:2668:222":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:53915:4492":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:1376:3833":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:1435:4796":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:2979:2846":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:8384:2932":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:8292:650":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:4190:4538":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:10270:6225":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:5554:8339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:49979:2854":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:9553:5478":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"12:1845:3003":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:3900:2920":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:47036:7254":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:2814:3933":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:46853:4713":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"16:4840:5938":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:4515:8133":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:12836:6718":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:12033:6481":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:51904:7274":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:6071:4270":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:7266:5203":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:7037:3219":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:571:4177":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:49333:3825":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:10394:5544":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:50077:3481":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:7208:8651":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:2976:3927":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13134:6791":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:8738:7210":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:5344:7335":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:5684:8413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"18:515:5633":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:12381:2741":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:21996:4619":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:46593:4442":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:5739:5168":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:6818:3831":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"9:622:4879":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"5:3094:3003":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:4:978":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:7293:58236":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:6926:4649":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13192:6803":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:2269:416":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:47564:7208":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:7637:5098":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:5480:8302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:11721:6419":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:5450:5157":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:11172:3905":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"12:1534:5013":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:1021:5585":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:21930:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:11044:3472":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:4680:5933":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:4890:3896":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:56946:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:1832:3604":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:11831:4073":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"9:188:4903":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:1102:3844":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:2556:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:7289:8668":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:11197:4189":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:9446:6165":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"9:592:4878":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"6:5841:8456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:1935:3746":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:13459:6893":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:5472:8300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:12980:6749":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:7868:4175":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:1500:7810":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"9:382:4833":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:10332:5607":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:676:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:9607:3883":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:58286:7321":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:6975:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:46833:4719":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:7917:11629":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:7842:4150":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:4312:4545":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"12:725:3833":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:5365:5100":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:2666:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:6230:5183":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:2456:5405":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:20254:4374":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"5:6156:5725":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:5568:8350":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:8526:5546":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:9475:5466":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:12609:6644":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:10520:6241":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:10088:6213":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"16:5424:5155":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4659:8198":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:50617:3473":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"5:2981:4763":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:11162:8758":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:10121:5508":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:4051:4536":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:5995:5176":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:586:7793":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"18:636:6032":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6697:5412":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"12:2190:61824":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:12103:6490":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:13536:6915":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:7008:4055":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:4010:4230":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:521:5751":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"15:0:2708":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:2394:4197":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:7227:5200":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:8966:4102":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:2223:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:8808:138":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:49817:3989":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:6087:5125":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:51734:4513":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:5194:6136":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:11841:4011":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:12850:6721":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:8632:4232":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:9071:61836":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:6855:5195":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:53415:4517":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:7887:5118":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:12739:6694":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:524:5356":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:4258:3895":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:53745:4489":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:2843:3962":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"13:0:2700":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:5175:45956":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:50389:4380":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"18:590:6023":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:6511:4019":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:9722:6170":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:48544:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:46979:4650":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:907:3006":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:842:4771":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:29321:4674":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:7144:5198":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:9601:5467":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:9671:5500":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:2730:61276":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:7113:5376":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:50756:3469":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:53209:4497":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:3529:3003":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:4081:4537":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5592:5354":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:8606:4068":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"10:0:2704":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"0:379:2534":{"crate_id":0,"path":["base64","alphabet","BCRYPT"],"kind":"constant"},"2:47207:4036":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:1601:3604":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:8706:4232":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:7971:5958":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:12386:2746":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:10566:4133":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:48177:187":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:11368:4122":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:2725:61275":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:9947:47768":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:8638:4233":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"0:74:1663":{"crate_id":0,"path":["base64","read"],"kind":"module"},"1:5819:4123":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:49995:2937":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:6492:3914":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"14:187:45889":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:54064:7307":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:11739:5966":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:10739:55798":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:4200:8023":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:5402:5154":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:21732:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:501:7743":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:3149:227":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:50724:3460":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"17:13492:6900":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:4231:8041":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:5531:4737":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:10845:5567":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:4936:3624":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:10584:4730":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:10532:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:52871:4496":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:2745:2841":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:10854:5527":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:6219:5182":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:20203:4466":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"12:300:5006":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:2740:5388":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:2731:3369":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:8441:150":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"2:2482:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:8047:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:6867:2852":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:4698:8217":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:10084:3993":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:4280:8060":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:2696:5386":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:8590:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:11330:6343":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"12:2198:7726":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:4510:5927":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:13518:6909":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:11050:3471":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:5741:8434":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6248:5102":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:5498:8315":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:6437:7336":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:7803:5209":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"12:60:61829":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:5817:5172":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:11639:6410":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:1532:7823":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:10568:4728":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"12:985:3843":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:6188:5181":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:1595:7865":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:4912:5940":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:12797:6709":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:39326:3790":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:6405:237":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:49317:3826":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:8318:4579":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:46514:3793":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:3076:2848":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"5:2947:4762":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:5174:4064":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:13214:6808":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:9298:3605":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:13354:6865":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12118:6494":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:4239:8043":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:4575:8160":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13366:6868":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:2935:3604":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:13221:6810":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:48392:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:52379:4475":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:4224:8037":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:6636:7337":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:6405:5761":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:48278:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:1634:3930":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:9930:6179":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:7934:5113":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:21:660":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:6912:4777":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:1962:5528":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:8295:47578":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:4121:2891":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:9527:5196":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"12:2178:7723":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:2674:5385":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:2797:3945":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:7535:5104":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:1861:7332":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:47099:4020":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:10670:5570":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11343:6347":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:9408:3919":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:50326:3492":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:49838:3979":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:11350:56290":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:9577:5469":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:9873:6174":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:2273:5364":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:4605:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:6012:5177":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:51016:4061":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:7850:5117":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:3845:5917":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:7948:5114":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:8059:3925":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:6269:8488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:49798:3987":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:2406:4203":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:683:11632":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:3166:4366":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:4626:5931":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:8857:4096":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:10761:4119":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:4565:8154":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4683:8212":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:49864:3977":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:11774:6426":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:11300:6331":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:1574:7851":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"0:510:2510":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","ReservedByte"],"kind":"variant"},"16:6101:5099":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:10983:4161":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:242:6043":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:7489:5081":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:47231:4038":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"0:327:1832":{"crate_id":0,"path":["base64","engine","general_purpose","PAD"],"kind":"constant"},"5:1426:192":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:4421:4293":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:545:7771":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:9516:3999":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:3393:6947":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"0:328:2416":{"crate_id":0,"path":["base64","engine","general_purpose","NO_PAD"],"kind":"constant"},"2:50779:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:4113:4238":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12768:6701":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:3400:1923":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:6322:8517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:46781:4455":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:8561:5526":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:20416:16757":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:2885:5397":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:7932:11631":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:19997:60259":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:8415:2936":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:4834:3818":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:11557:3884":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:9627:5474":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:12387:2747":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:8583:3944":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"2:2309:176":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"12:2053:3843":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:13413:6879":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:50131:3483":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:8162:5513":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:9302:4120":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"0:227:1665":{"crate_id":0,"path":["base64","engine"],"kind":"module"},"5:6989:2832":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"12:1866:3929":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:448:4154":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:5691:4116":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:50283:3478":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:56933:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11434:5770":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:7741:5967":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:6558:4364":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:4726:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:13203:6807":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:5713:8426":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:6506:5189":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:7430:192":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:6479:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:12388:2748":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:11974:6475":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:4653:5932":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:9263:6156":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:1338:3604":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"5:36:3002":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"18:624:61844":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:11217:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:8939:4099":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:4013:4231":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:6953:8637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:8698:4243":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"0:502:1960":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","InvalidLength"],"kind":"variant"},"1:9507:7377":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:51710:7273":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:8034:5082":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:3179:6945":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:11708:6416":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:12265:6521":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:9183:6150":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:8596:2879":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:52135:4503":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:12350:56280":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:4559:8152":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:3176:4367":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:276:2851":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:54049:7306":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:3608:3006":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:420:5070":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10497:47841":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:6277:8493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:5574:5163":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:8592:2877":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:2436:3798":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:2315:183":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:8428:2939":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"9:19:4927":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:9805:5587":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:20435:3798":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:3228:2961":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:8789:3212":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"12:815:3838":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:11341:3799":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:2253:2928":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"0:40:1662":{"crate_id":0,"path":["base64","display"],"kind":"module"},"17:11070:6287":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:4135:5918":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:10194:5750":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"17:12322:6529":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:10722:4117":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:8339:47579":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:52089:4515":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:4059:2920":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:50752:3468":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:11841:6435":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:21963:163":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:5733:8432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:5827:1507":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"5:6723:3001":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:11873:6439":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:2662:3365":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:7975:4807":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:9405:3992":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:6654:5107":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:11748:6423":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:48244:3006":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:3472:4816":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:11256:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:20442:4469":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:9433:6164":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:13158:6796":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:0:481":{"crate_id":2,"path":["core"],"kind":"module"},"16:6124:5149":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:9316:4121":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:12349:6532":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"18:599:61843":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:5536:5162":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:49967:3476":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"18:0:2711":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:4496:8121":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:4762:3936":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:21306:59053":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:5443:8276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:3960:4315":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"7:79:45157":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:1230:3846":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:1943:4765":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:20285:4056":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:4706:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"9:709:4096":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:2622:5396":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:52789:4511":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:6942:4778":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:53667:4505":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:4317:8081":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:5511:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:54205:7314":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:3081:2965":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:12514:6561":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:53953:4512":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:46951:4648":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:12337:5567":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:6554:8628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12730:6690":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:46507:4368":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:1928:2490":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:12630:6654":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:10360:5600":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:8055:5442":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:2920:2116":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"6:4592:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:49372:7268":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:52532:7279":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:8594:2878":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:1680:3003":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:9831:5590":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:581:7791":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:21831:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:1415:3837":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"18:582:3372":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:46248:3607":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"5:6449:5737":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:519:7751":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:50744:3466":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:8807:4086":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:48658:4653":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:6668:5108":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:10296:6227":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:5005:3807":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:2142:572":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:8064:4187":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:4298:3892":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:21384:4632":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:6632:5192":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:5793:5171":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:1617:3927":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:7615:5115":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:21285:59073":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:9424:3920":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"9:0:2703":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:4974:5732":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"18:766:5629":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:29558:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:1636:571":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:48316:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:4904:8536":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:21765:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:8272:5572":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"18:564:5636":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:487:7735":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:52759:4508":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:7958:5146":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:1404:3836":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:54018:7303":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:592:7796":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:7545:5130":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:3707:5916":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:928:3834":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:5523:8320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:2023:179":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:20035:60317":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:12884:6724":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"12:2069:3844":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"5:7055:3003":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:951:3003":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:2755:3864":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:3721:2836":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:7938:3847":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:10652:4127":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:4536:5928":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:3190:2959":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:6149:5150":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:8155:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:1201:3845":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:6308:5184":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:4417:8115":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:7243:8659":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:19982:60259":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:7297:5206":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:10721:6250":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"12:853:3841":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:4900:8532":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:46389:193":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"14:160:5942":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:12046:6483":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:962:3836":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"13:108:61830":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:5438:5156":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:47056:3977":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:4761:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:4797:8264":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:4329:8087":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:7231:4227":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:3457:2028":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:8363:1782":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:12378:2738":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:11698:7213":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5534:8328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:6600:160":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"9:800:7729":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:10374:5542":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:4735:4737":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:3017:6057":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:11575:8762":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:999:3842":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:6820:3006":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:46899:4715":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"5:3792:3605":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"12:2205:2852":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:7825:5210":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:8692:4295":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:6035:4261":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"18:652:6021":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:13176:6800":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:8534:204":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:47534:2964":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:46876:4714":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"17:13382:6872":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:8712:4253":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:675:7323":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:1887:41323":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:1931:5462":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:7245:5201":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6843:5419":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:46906:4716":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:0:2710":{"crate_id":17,"path":["object"],"kind":"module"},"2:50457:4388":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:10854:3494":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:47257:4040":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:595:3821":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:7798:5766":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:9422:6163":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:6646:5414":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:11030:2862":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:9379:3917":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:6228:200":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:10608:5451":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:6415:8549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:6763:61391":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:2780:3875":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:8116:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:47293:2936":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:21156:7215":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:9401:6162":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:46946:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:1654:7909":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:884:3604":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:12972:6747":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:7266:8665":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:9360:3916":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:7920:5212":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:7249:8660":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"18:660:5620":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:10593:1346":{"crate_id":2,"path":["core","str"],"kind":"module"},"6:1722:7943":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:5510:8319":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:11908:137":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"18:574:6021":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:9501:5476":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:4688:59682":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:12211:6515":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"18:481:5631":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:7215:5199":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:10420:5601":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:11800:6429":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:8475:5455":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:7256:5202":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:4644:8190":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:11594:3883":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"5:5619:2920":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:215:4760":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:6323:5105":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:5880:3914":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:9317:5580":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:967:6049":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:4257:4544":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:4179:8015":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:7335:5122":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:600:7801":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:2921:5085":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:4768:8245":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:56576:4605":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:5705:4117":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:5758:5169":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:47137:4024":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:11207:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:48159:3220":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:1886:7334":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:53557:4485":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:13527:6913":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:2526:5383":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:8132:2950":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:11559:6396":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:6793:4766":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:1033:61507":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:50159:3487":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"9:896:4840":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:6392:8542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:8949:3604":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:4379:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"9:956:4836":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:47178:4034":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:10941:2960":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:12816:6710":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:51690:7272":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:8076:4189":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:52357:4472":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:4965:3805":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:8086:3906":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:49038:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:2705:3367":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:4348:5923":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:12060:6484":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1185:3843":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:6778:4267":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:3460:2952":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:8596:6038":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:8498:4083":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:5060:3811":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:2825:3953":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:49789:3988":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:11828:6434":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:12926:6737":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:49141:2876":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"16:4288:5921":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:9488:5465":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:46548:2892":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:11288:6328":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:5113:5941":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:7042:3292":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:2648:5395":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:54029:7304":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:3254:6946":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:46823:4718":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:52024:4471":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:8862:3824":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:46932:4460":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:11854:4230":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:21798:4180":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:6571:5190":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:48126:3219":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:51935:4494":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:10780:3500":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"18:507:6021":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:0:1338":{"crate_id":1,"path":["std"],"kind":"module"},"6:5861:8470":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:6673:3830":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:1600:7867":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:987:3840":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:2291:5406":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:4712:5934":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:11055:3470":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:12674:6684":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:11528:6389":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:7863:4159":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:9599:4000":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:9392:3918":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:1120:3846":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:3265:2956":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:410:5775":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:10819:3499":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"12:1138:3846":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:9371:6148":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:50800:3887":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:970:3838":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"9:111:4895":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:46772:7246":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:7287:5205":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:9557:3484":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:8547:4287":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:4318:5922":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:4312:3898":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:11101:4383":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:667:225":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:7831:2849":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:48430:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:50736:3464":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:11684:6415":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:53807:4509":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:8393:5499":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"9:920:4837":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:13148:6793":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:4432:5926":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"18:491:6020":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4665:8201":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"5:6288:3009":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:4267:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"0:377:2162":{"crate_id":0,"path":["base64","alphabet","URL_SAFE"],"kind":"constant"},"2:50177:3488":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:6317:3011":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:21245:4336":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:7374:5208":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:8911:61841":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:10245:6223":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:11670:4129":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:12225:6516":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:4551:8149":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:46431:195":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:8981:6146":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"12:1628:5723":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9274:6157":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:12371:2733":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:49105:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:11547:6394":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:48794:2879":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:6540:200":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:7217:4226":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:4354:8100":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4475:8120":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:4450:4297":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:20016:60314":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"9:649:4880":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:9461:7373":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:5009:3810":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:8814:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:49877:3978":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:7220:8653":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:49564:4732":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:3972:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:8752:2937":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:1518:7818":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:1562:7843":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:5:1507":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"2:11625:33665":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:5606:5164":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:21322:59056":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:6430:8553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4629:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:62:39946":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:11125:6295":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:658:3748":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"18:707:3472":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:5749:8436":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:9820:5588":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:4367:8104":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:11606:6402":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:8602:2881":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:8951:61838":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:3228:4379":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:49827:3990":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:12339:11634":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:11271:6320":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:5692:8414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:7727:3222":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:3623:5914":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:9021:6147":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:5226:6948":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:4635:8187":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:11161:6302":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:9346:3913":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:9328:5581":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:2358:5381":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:8600:188":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:47117:4022":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:48228:3604":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:966:3837":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:52005:7275":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:7214:8652":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:50923:205":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:1629:3929":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:50292:3493":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:13168:6799":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:46793:4456":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:11813:6431":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:50308:3490":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:4308:3897":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:10546:47580":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"0:469:2304":{"crate_id":0,"path":["base64","engine","DecodePaddingMode"],"kind":"enum"},"1:976:3839":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:47026:5743":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:11757:8764":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:47146:4025":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:50987:155":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:5313:7335":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:2380:4193":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:8422:2937":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"12:444:139":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:6375:8540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:5625:8380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:9108:6148":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:8313:4578":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:48354:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:560:7780":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:10880:5769":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:3153:4217":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:1668:7920":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:4525:2838":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:9658:6167":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:5083:3806":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:21633:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"12:353:5004":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:1550:7834":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:56998:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2583:5753":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:13340:6859":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:12389:2749":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:10743:3498":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:8241:5569":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:5452:4028":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:5519:5161":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:2734:61278":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:135:40013":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:2465:4803":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:12550:6592":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:53869:4474":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:10642:5573":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:8527:8755":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"5:4932:3623":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:3948:4314":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:2792:3881":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11259:6319":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:9791:6172":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:29572:4642":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:2762:5389":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:2437:3030":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:2673:2897":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:3482:2934":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:51802:4481":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"3:0:429":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"12:0:2706":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:4247:8046":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:339:159":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:13047:6763":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:20166:4369":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:1823:7330":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:11530:56567":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:13557:6918":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:12005:3378":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"6:4489:4252":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:12392:2752":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:8212:5565":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:11709:7338":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:1643:4530":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"12:1836:3006":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:1825:2999":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"18:644:6021":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:20863:60257":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:8796:5452":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:6759:5120":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:554:7777":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:46534:5145":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:50263:2940":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:7307:5207":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:4597:5930":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"0:0:1682":{"crate_id":0,"path":["base64"],"kind":"module"},"2:21209:7217":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:10434:6231":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:3548:5725":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:6597:5191":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:3337:3604":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:12617:6647":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:8598:2880":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:10393:4245":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"12:1085:5001":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:50059:3482":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:4808:5937":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:11673:186":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"18:681:5622":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:6441:5187":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"18:755:5628":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:2906:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:9118:61832":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"12:738:3834":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:11515:6387":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:5660:8401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:49354:4096":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:47077:4018":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:10466:6234":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:8774:5443":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:0:789":{"crate_id":6,"path":["libc"],"kind":"module"},"14:40:5944":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:10949:6255":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:50569:4391":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:48582:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:12385:2745":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"9:586:4876":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"4:0:2701":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"12:98:5003":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"12:1029:3845":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:6524:8613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"5:4426:650":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:10803:3497":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:2661:1792":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:46287:4418":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:20229:4534":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:7955:12627":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:49919:3997":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:9644:5460":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:1738:7948":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:47323:4033":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:5927:5174":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:7350:5423":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:1751:8674":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:1808:592":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:6425:3398":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:10350:5444":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:54038:7305":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:7093:3291":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:8110:47573":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:3374:3791":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:542:4172":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:52949:4484":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:10583:5448":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"5:4092:5727":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:47308:4043":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:4437:8117":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:11989:8766":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:3343:2964":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"6:4621:8182":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:12334:9114":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"0:356:1780":{"crate_id":0,"path":["base64","engine","Config"],"kind":"trait"},"2:47155:7255":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:6978:218":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:48620:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"5:6732:3006":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:3590:5913":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:1111:3845":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:1884:7333":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:4461:8119":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:38113:177":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:12393:2753":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:2942:3928":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:48801:2880":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:771:139":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"11:0:2705":{"crate_id":11,"path":["adler"],"kind":"module"},"16:7475:5106":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"18:719:5625":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:6311:5754":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:5699:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:50966:4598":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:50113:3484":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:5223:3211":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:2250:1663":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"0:487:2312":{"crate_id":0,"path":["base64","alphabet","Alphabet"],"kind":"struct"},"16:6713:5123":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"14:31:5942":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:5835:8455":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:3475:2931":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:6955:4779":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:2596:5436":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:9283:6158":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"11:44:4989":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:39286:3029":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:13572:6919":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:768:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:3362:3792":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:10257:6224":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:54090:7309":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:10455:5602":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:2833:5362":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:3310:2945":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"0:381:2542":{"crate_id":0,"path":["base64","alphabet","BIN_HEX"],"kind":"constant"},"2:50273:3479":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:1584:5725":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:10997:5944":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"5:939:5725":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:2421:1907":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:46334:4438":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:13279:6852":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:52635:4516":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:2766:3869":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"5:3350:3605":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5595:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:897:3605":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:5619:60101":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:12008:6478":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:8955:4101":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:49157:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:4667:11635":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:9778:5532":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:48117:3006":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:11315:6337":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:2864:4139":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:5873:200":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:13007:6753":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:7424:4007":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:49342:142":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:47553:7259":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:1541:7828":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:9339:5582":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:3267:2957":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:52333:4490":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:247:6044":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"12:646:3605":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:1049:4798":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:10598:1821":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:39335:3368":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:11894:4231":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:11356:6348":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:6276:5128":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:9362:5478":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:9602:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:3751:5725":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:52501:7278":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:20957:3798":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"7:0:1485":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:21358:4679":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:0:2709":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:11149:6299":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:8099:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:13327:6853":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:9764:6171":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:2485:231":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:6837:211":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:20037:60319":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:5681:5166":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:1385:3834":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:11174:6304":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:7000:2833":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"12:697:3837":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:11337:5958":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:12695:6689":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"12:1872:3930":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"13:220:7719":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:6495:5018":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:6030:5178":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:10682:5571":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"15:193:5022":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:6538:8622":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:4206:3797":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:6545:5119":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:8220:1963":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:3188:2958":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:4191:8018":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:5876:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"0:501:2506":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError"],"kind":"enum"},"1:8215:4137":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:4437:4296":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4653:8196":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:50301:3489":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:4988:5735":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"16:3448:6061":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"}},"external_crates":{"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":23}