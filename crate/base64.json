{"root":"0:0:2468","crate_version":"0.22.1","includes_private":false,"index":{"2:13229:34570":{"id":"2:13229:34570","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:518:2999":{"id":"b:2:2646-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42097:3956-0:528:3122":{"id":"a:2:42097:3956-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[142,9],"end":[142,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13201:34566":{"id":"2:13201:34566","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13199:34565"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13293:34579":{"id":"2:13293:34579","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:572:2463":{"id":"b:5:738-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:4305","5:741:4306","5:742:4307"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[55,0],"end":[73,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:211:2791","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:199:2933","0:200:2766"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2920-0:501:3109":{"id":"b:2:2920-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:4188-0:518:2999":{"id":"a:2:3174:4188-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32294:4113-0:528:3122":{"id":"a:2:32294:4113-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13207:29538":{"id":"2:13207:29538","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12360:1851"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:802":{"id":"0:446:802","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[33,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:3211":{"id":"0:316:3211","crate_id":0,"name":"with_decode_allow_trailing_bits","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[290,4],"end":[295,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_allow_trailing_bits` setting.\n\nMost users will not need to configure this. It's useful if you need to decode base64\nproduced by a buggy encoder that has bits set in the unused space on the last base64\ncharacter as per [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).\nIf invalid trailing bits are present and this is `true`, those bits will\nbe silently ignored, else `DecodeError::InvalidLastSymbol` will be emitted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["allow",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:2933":{"id":"0:199:2933","crate_id":0,"name":"from_consumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[57,4],"end":[61,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will append to the provided `StrConsumer`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["str_consumer",{"generic":"S"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:607:699":{"id":"0:607:699","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2449":{"id":"0:125:2449","crate_id":0,"name":"read","span":{"filename":"src/read/decoder.rs","begin":[232,4],"end":[334,5]},"visibility":"default","docs":"Decode input from the wrapped reader.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nwritten in `buf`.\n\nWhere possible, this function buffers base64 to minimize the number of read() calls to the\ndelegate reader.\n\n# Errors\n\nAny errors emitted by the delegate reader are returned. Decoding errors due to invalid\nbase64 are also possible, and will have `io::ErrorKind::InvalidData`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:492:2620":{"id":"b:5:738-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:4305","5:741:4306","5:742:4307"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13272:29574":{"id":"2:13272:29574","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:47:2663":{"id":"b:2:2643-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476-0:331:2452":{"id":"0:476-0:331:2452","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[15,0],"end":[15,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::Engine","name":"Engine","id":"0:331:2452","glob":false}}},"2:13266:29571":{"id":"2:13266:29571","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12341:471","str::splitn":"2:13263:29569","self::pattern":"2:12885:3726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44017:4339","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:502:3111":{"id":"0:502:3111","crate_id":0,"name":"Indifferent","span":{"filename":"src/engine/mod.rs","begin":[455,4],"end":[455,15]},"visibility":"default","docs":"Canonical padding is allowed, but any fewer padding bytes than that is also allowed.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5633:35287":{"id":"5:5633:35287","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:304:3716","`String`":"5:7645:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:3716","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:4188-0:190:2790":{"id":"a:2:3174:4188-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:326:2621":{"id":"0:326:2621","crate_id":0,"name":"PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[347,0],"end":[347,66]},"visibility":"public","docs":"Include padding bytes when encoding, and require that they be present when decoding.\n\nThis is the standard per the base64 RFC, but consider using [NO_PAD] instead as padding serves\nlittle purpose in practice.","links":{"NO_PAD":"0:327:3228"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:13237:29576":{"id":"2:13237:29576","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:572:2463":{"id":"a:2:3139:247-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3139:247-0:86:2679":{"id":"a:2:3139:247-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5866-0:541:3345":{"id":"b:5:5866-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2646-0:560:2458":{"id":"b:2:2646-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:738-0:501:3109":{"id":"b:5:738-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:4305","5:741:4306","5:742:4307"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:190:2790":{"id":"0:190:2790","crate_id":0,"name":"EncoderStringWriter","span":{"filename":"src/write/encoder_string_writer.rs","begin":[51,0],"end":[53,1]},"visibility":"public","docs":"A `Write` implementation that base64-encodes data using the provided config and accumulates the\nresulting base64 utf8 `&str` in a [StrConsumer] implementation (typically `String`), which is\nthen exposed via `into_inner()`.\n\n# Examples\n\nBuffer base64 in a new String:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut enc = base64::write::EncoderStringWriter::new(&general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// get the resulting String\nlet b64_string = enc.into_inner();\n\nassert_eq!(\"YXNkZg==\", &b64_string);\n```\n\nOr, append to an existing `String`, which implements `StrConsumer`:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut buf = String::from(\"base64: \");\n\nlet mut enc = base64::write::EncoderStringWriter::from_consumer(\n    &mut buf,\n    &general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// release the &mut reference on buf\nlet _ = enc.into_inner();\n\nassert_eq!(\"base64: YXNkZg==\", &buf);\n```\n\n# Performance\n\nBecause it has to validate that the base64 is UTF-8, it is about 80% as fast as writing plain\nbytes to a `io::Write`.","links":{"StrConsumer":"0:211:2791"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:211:2791","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:195","0:201","a:2:3139:247-0:190:2790","a:2:42098:3955-0:190:2790","a:2:32294:4113-0:190:2790","a:2:42097:3956-0:190:2790","a:2:3174:4188-0:190:2790","a:2:32235:237-0:190:2790","b:2:2646-0:190:2790","b:2:2643-0:190:2790","b:2:2920-0:190:2790","b:2:2916-0:190:2790","b:2:2926-0:190:2790","b:2:3758-0:190:2790","b:2:2931-0:190:2790","0:205"]}}},"0:450":{"id":"0:450","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[69,0],"end":[76,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"name":"Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:451:3504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:602:475":{"id":"0:602:475","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[51,9],"end":[51,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13197:2731":{"id":"2:13197:2731","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13224:7367":{"id":"2:13224:7367","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12341:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43871:4333","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:360:3085":{"id":"0:360:3085","crate_id":0,"name":"decode_slice","span":{"filename":"src/engine/mod.rs","begin":[353,4],"end":[376,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nReturns the number of bytes written to the slice, or an error if `output` is smaller than\nthe estimated decoded length.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice_unchecked] for a version that panics instead of returning an error\nif the output buffer is too small.","links":{"crate::decoded_len_estimate":"0:465:2462","Engine::decode_slice_unchecked":"0:365:3091"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[160,0],"end":[160,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"name":"Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32294:4113-0:572:2463":{"id":"a:2:32294:4113-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2646-0:572:2463":{"id":"b:2:2646-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13323:29425":{"id":"2:13323:29425","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:39062"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:4113-0:541:3345":{"id":"a:2:32294:4113-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[99,0],"end":[103,1]},"visibility":"default","docs":"As for io::Write, `StrConsumer` is implemented automatically for `&mut S`.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:211:2791","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:211:2791","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"S"}}},"items":["0:215:2942"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:580:2755":{"id":"0:580:2755","crate_id":0,"name":"InvalidLastSymbol","span":{"filename":"src/decode.rs","begin":[26,4],"end":[26,32]},"visibility":"default","docs":"The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\nThis is indicative of corrupted or truncated Base64.\nUnlike [DecodeError::InvalidByte], which reports symbols that aren't in the alphabet,\nthis error is for symbols that are in the alphabet but represent nonsensical encodings.","links":{"DecodeError::InvalidByte":"0:573:2751"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:582:1973","0:583:1974"]},"discriminant":null}}},"0:568":{"id":"0:568","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[145,23],"end":[145,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:569:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42097:3956-0:86:2679":{"id":"a:2:42097:3956-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:560:2458":{"id":"b:2:2926-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2916-0:501:3109":{"id":"b:2:2916-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:324:3230":{"id":"0:324:3230","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[338,0],"end":[338,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [PAD] config.","links":{"PAD":"0:326:2621","alphabet::URL_SAFE":"0:397:3230","GeneralPurpose":"0:482:2619"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:3174:4188-0:47:2663":{"id":"a:2:3174:4188-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2931-0:560:2458":{"id":"b:2:2931-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[78,0],"end":[82,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:453:832"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32294:4113-0:595:2464":{"id":"a:2:32294:4113-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13206:336":{"id":"2:13206:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13207:29538","`u8`":"1:12360:1851"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397:3230":{"id":"0:397:3230","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/alphabet.rs","begin":[178,0],"end":[180,2]},"visibility":"public","docs":"The URL-safe alphabet (with `-` and `_`) specified in [RFC 4648][].\n\n[RFC 4648]: https://datatracker.ietf.org/doc/html/rfc4648#section-5","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:564:475":{"id":"0:564:475","crate_id":0,"name":"clone","span":{"filename":"src/encode.rs","begin":[145,9],"end":[145,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:456:2459":{"id":"0:456:2459","crate_id":0,"name":"decode_engine","span":{"filename":"src/decode.rs","begin":[99,0],"end":[104,1]},"visibility":"public","docs":" Decode from string reference as octets using the specified [Engine].\n\n See [Engine::decode].\nReturns a `Result` containing a `Vec<u8>`.","links":{"Engine::decode":"0:350:618","Engine":"0:331:2452"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:528:3122":{"id":"a:2:3139:247-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2916-0:86:2679":{"id":"b:2:2916-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:411:693":{"id":"0:411:693","crate_id":0,"name":"encode","span":{"filename":"src/encode.rs","begin":[18,0],"end":[20,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::encode].","links":{"STANDARD":"0:322:2617","Engine::encode":"0:338:693"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"alloc::string::String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2942":{"id":"0:215:2942","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[100,4],"end":[102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:492:2620":{"id":"b:2:2920-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42098:3955-0:595:2464":{"id":"a:2:42098:3955-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13212:29536":{"id":"2:13212:29536","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:127-0:86:2679":{"id":"0:127-0:86:2679","crate_id":0,"name":null,"span":{"filename":"src/read/mod.rs","begin":[3,0],"end":[3,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::decoder::DecoderReader","name":"DecoderReader","id":"0:86:2679","glob":false}}},"a:2:42098:3955-0:528:3122":{"id":"a:2:42098:3955-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:295:1178":{"id":"0:295:1178","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[35,4],"end":[41,5]},"visibility":"public","docs":"Create a `GeneralPurpose` engine from an [Alphabet].\n\nWhile not very expensive to initialize, ideally these should be cached\nif the engine will be used repeatedly.","links":{"Alphabet":"0:528:3122"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alphabet",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["config",{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:541:3345":{"id":"a:2:3139:247-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:569:699":{"id":"0:569:699","crate_id":0,"name":"eq","span":{"filename":"src/encode.rs","begin":[145,23],"end":[145,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[54,27],"end":[54,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:583:1974":{"id":"0:583:1974","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[26,29],"end":[26,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:552:1973":{"id":"0:552:1973","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[151,17],"end":[151,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[48,0],"end":[48,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"name":"Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42098:3955-0:47:2663":{"id":"a:2:42098:3955-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2643-0:560:2458":{"id":"b:2:2643-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:572:2463":{"id":"0:572:2463","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[10,0],"end":[30,1]},"visibility":"public","docs":"Errors that can occur while decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:573:2751","0:577:2754","0:580:2755","0:584:2756"],"impls":["a:2:3139:247-0:572:2463","a:2:42098:3955-0:572:2463","a:2:32294:4113-0:572:2463","a:2:42097:3956-0:572:2463","a:2:3174:4188-0:572:2463","a:2:32235:237-0:572:2463","b:2:2646-0:572:2463","b:2:2643-0:572:2463","b:2:2920-0:572:2463","b:2:2916-0:572:2463","b:2:2926-0:572:2463","b:2:3758-0:572:2463","b:2:2931-0:572:2463","b:5:5866-0:572:2463","b:5:738-0:572:2463","0:590","0:593","0:447","0:445","0:588","0:586","0:591","0:452"]}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[54,16],"end":[54,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:378:2453":{"id":"0:378:2453","crate_id":0,"name":"alphabet","span":{"filename":"src/alphabet.rs","begin":[1,0],"end":[285,1]},"visibility":"public","docs":"Provides [Alphabet] and constants for alphabets commonly used in the wild.","links":{"Alphabet":"0:528:3122"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:528:3122","0:541:3345","0:396:2617","0:397:3230","0:398:3372","0:399:3375","0:400:3379","0:401:3383"],"is_stripped":false}}},"0:448":{"id":"0:448","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[59,0],"end":[66,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:449:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:229-0:211:2791":{"id":"0:229-0:211:2791","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,49],"end":[7,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder_string_writer::StrConsumer","name":"StrConsumer","id":"0:211:2791","glob":false}}},"a:2:3174:4188-0:528:3122":{"id":"a:2:3174:4188-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:586":{"id":"0:586","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:587:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:171:2766":{"id":"0:171:2766","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder.rs","begin":[241,4],"end":[245,5]},"visibility":"public","docs":"Unwraps this `EncoderWriter`, returning the base writer it writes base64 encoded output\nto.\n\nNormally this method should not be needed, since `finish()` returns the inner writer if\nit completes successfully. That will also ensure all data has been flushed, which the\n`into_inner()` function does *not* do.\n\nCalling this method after `finish()` has completed successfully will panic, since the\nwriter has already been returned.\n\nThis method may be useful if the writer implements additional APIs beyond the `Write`\ntrait. Note that the inner writer might be in an error state or have an incomplete\nbase64 string written to it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:501:3109":{"id":"b:2:2931-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2920-0:190:2790":{"id":"b:2:2920-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:577:2754":{"id":"0:577:2754","crate_id":0,"name":"InvalidLength","span":{"filename":"src/decode.rs","begin":[21,4],"end":[21,24]},"visibility":"default","docs":"The length of the input, as measured in valid base64 symbols, is invalid.\nThere must be 2-4 symbols in the last input quad.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:579:1973"]},"discriminant":null}}},"0:431-0:413:2454":{"id":"0:431-0:413:2454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[261,32],"end":[261,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine","name":"encode_engine","id":"0:413:2454","glob":false}}},"0:592:699":{"id":"0:592:699","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436-0:560:2458":{"id":"0:436-0:560:2458","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[263,58],"end":[263,74]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::EncodeSliceError","name":"EncodeSliceError","id":"0:560:2458","glob":false}}},"a:2:42098:3955-0:518:2999":{"id":"a:2:42098:3955-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:547:3348":{"id":"0:547:3348","crate_id":0,"name":"UnprintableByte","span":{"filename":"src/alphabet.rs","begin":[149,4],"end":[149,23]},"visibility":"default","docs":"All bytes must be printable (in the range `[32, 126]`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:549:1973"]},"discriminant":null}}},"0:588":{"id":"0:588","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:589:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:298:2974":{"id":"0:298:2974","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[46,4],"end":[46,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GeneralPurposeEstimate","id":"0:263:3125","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:506:3115":{"id":"0:506:3115","crate_id":0,"name":"RequireNone","span":{"filename":"src/engine/mod.rs","begin":[459,4],"end":[459,15]},"visibility":"default","docs":"Padding must be absent -- for when you want predictable padding, without any wasted bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:212:2942":{"id":"0:212:2942","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[95,4],"end":[95,37]},"visibility":"default","docs":"Consume the base64 encoded data in `buf`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:579:1973":{"id":"0:579:1973","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[21,18],"end":[21,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:544:3352":{"id":"0:544:3352","crate_id":0,"name":"DuplicatedByte","span":{"filename":"src/alphabet.rs","begin":[147,4],"end":[147,22]},"visibility":"default","docs":"All bytes must be unique","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:546:1973"]},"discriminant":null}}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[452,22],"end":[452,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:512:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322:2617":{"id":"0:322:2617","crate_id":0,"name":"STANDARD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[332,0],"end":[332,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [PAD] config.","links":{"PAD":"0:326:2621","GeneralPurpose":"0:482:2619","alphabet::STANDARD":"0:396:2617"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2916-0:595:2464":{"id":"b:2:2916-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57:1178":{"id":"0:57:1178","crate_id":0,"name":"new","span":{"filename":"src/display.rs","begin":[25,4],"end":[30,5]},"visibility":"public","docs":"Create a `Base64Display` with the provided engine.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389:338":{"id":"0:389:338","crate_id":0,"name":"as_str","span":{"filename":"src/alphabet.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Create a `&str` from the symbols in the `Alphabet`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413:2454":{"id":"0:413:2454","crate_id":0,"name":"encode_engine","span":{"filename":"src/encode.rs","begin":[28,0],"end":[30,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the provided `Engine` into a new `String`.\n\n See [Engine::encode].","links":{"Engine::encode":"0:338:693"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"alloc::string::String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[452,29],"end":[452,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:515:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:120:2766":{"id":"0:120:2766","crate_id":0,"name":"into_inner","span":{"filename":"src/read/decoder.rs","begin":[214,4],"end":[216,5]},"visibility":"public","docs":"Unwraps this `DecoderReader`, returning the base reader which it reads base64 encoded\ninput from.\n\nBecause `DecoderReader` performs internal buffering, the state of the inner reader is\nunspecified. This function is mainly provided because the inner reader type may provide\nadditional functionality beyond the `Read` implementation which may still be useful.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13329:34588":{"id":"2:13329:34588","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4949:34588"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44212:4348","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13298:34582":{"id":"2:13298:34582","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451:3504":{"id":"0:451:3504","crate_id":0,"name":"source","span":{"filename":"src/decode.rs","begin":[70,4],"end":[75,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:572:2463":{"id":"b:2:2643-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5636:28935":{"id":"5:5636:28935","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13322:28938"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:592:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3758-0:141:2789":{"id":"b:2:3758-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2916-0:572:2463":{"id":"b:2:2916-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501:3109":{"id":"0:501:3109","crate_id":0,"name":"DecodePaddingMode","span":{"filename":"src/engine/mod.rs","begin":[453,0],"end":[460,1]},"visibility":"public","docs":"Controls how pad bytes are handled when decoding.\n\nEach [Engine] must support at least the behavior indicated by\n[DecodePaddingMode::RequireCanonical], and may support other modes.","links":{"DecodePaddingMode::RequireCanonical":"0:504:3113","Engine":"0:331:2452"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:502:3111","0:504:3113","0:506:3115"],"impls":["a:2:3139:247-0:501:3109","a:2:42098:3955-0:501:3109","a:2:32294:4113-0:501:3109","a:2:42097:3956-0:501:3109","a:2:3174:4188-0:501:3109","a:2:32235:237-0:501:3109","b:2:2646-0:501:3109","b:2:2643-0:501:3109","b:2:2920-0:501:3109","b:2:2916-0:501:3109","b:2:2926-0:501:3109","b:2:3758-0:501:3109","b:2:2931-0:501:3109","b:5:738-0:501:3109","0:508","0:516","0:513","0:510","0:511","0:514"]}}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[154,0],"end":[163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:394:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42098:3955-0:86:2679":{"id":"a:2:42098:3955-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2931-0:141:2789":{"id":"b:2:2931-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:388:1178":{"id":"0:388:1178","crate_id":0,"name":"new","span":{"filename":"src/alphabet.rs","begin":[79,4],"end":[125,5]},"visibility":"public","docs":"Create an `Alphabet` from a string of 64 unique printable ASCII bytes.\n\nThe `=` byte is not allowed as it is used for padding.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alphabet",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:141:2789":{"id":"b:2:2916-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211:2791":{"id":"0:211:2791","crate_id":0,"name":"StrConsumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[93,0],"end":[96,1]},"visibility":"public","docs":"An abstraction around consuming `str`s produced by base64 encoding.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:212:2942"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:213","0:216"]}}},"a:2:42098:3955-0:482:2619":{"id":"a:2:42098:3955-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2648:27059":{"id":"2:2648:27059","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:3122":{"id":"0:528:3122","crate_id":0,"name":"Alphabet","span":{"filename":"src/alphabet.rs","begin":[55,0],"end":[57,1]},"visibility":"public","docs":"An alphabet defines the 64 ASCII characters (symbols) used for base64.\n\nCommon alphabets are provided as constants, and custom alphabets\ncan be made via `from_str` or the `TryFrom<str>` implementation.\n\n# Examples\n\nBuilding and using a custom Alphabet:\n\n```\nlet custom = base64::alphabet::Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n\nlet engine = base64::engine::GeneralPurpose::new(\n    &custom,\n    base64::engine::general_purpose::PAD);\n```\n\nBuilding a const:\n\n```\nuse base64::alphabet::Alphabet;\n\nstatic CUSTOM: Alphabet = {\n    // Result::unwrap() isn't const yet, but panic!() is OK\n    match Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\") {\n        Ok(x) => x,\n        Err(_) => panic!(\"creation of alphabet failed\"),\n    }\n};\n```\n\nBuilding lazily:\n\n```\nuse base64::{\n    alphabet::Alphabet,\n    engine::{general_purpose::GeneralPurpose, GeneralPurposeConfig},\n};\nuse once_cell::sync::Lazy;\n\nstatic CUSTOM: Lazy<Alphabet> = Lazy::new(||\n    Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap()\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:385","a:2:3139:247-0:528:3122","a:2:42098:3955-0:528:3122","a:2:32294:4113-0:528:3122","a:2:42097:3956-0:528:3122","a:2:3174:4188-0:528:3122","a:2:32235:237-0:528:3122","b:2:2646-0:528:3122","b:2:2643-0:528:3122","b:2:2920-0:528:3122","b:2:2916-0:528:3122","b:2:2926-0:528:3122","b:2:3758-0:528:3122","b:2:2931-0:528:3122","b:5:738-0:528:3122","0:539","0:538","0:531","0:535","0:533","0:390"]}}},"a:2:42098:3955-0:501:3109":{"id":"a:2:42098:3955-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:163:1178":{"id":"0:163:1178","crate_id":0,"name":"new","span":{"filename":"src/write/encoder.rs","begin":[98,4],"end":[108,5]},"visibility":"public","docs":"Create a new encoder that will write to the provided delegate writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["delegate",{"generic":"W"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:589:802":{"id":"0:589:802","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:595:2464":{"id":"b:5:738-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:4305","5:741:4306","5:742:4307"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5866-0:572:2463":{"id":"b:5:5866-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2468":{"id":"0:0:2468","crate_id":0,"name":"base64","span":{"filename":"src/lib.rs","begin":[1,0],"end":[277,26]},"visibility":"public","docs":"Correct, fast, and configurable [base64][] decoding and encoding. Base64\ntransports binary data efficiently in contexts where only plain text is\nallowed.\n\n[base64]: https://developer.mozilla.org/en-US/docs/Glossary/Base64\n\n# Usage\n\nUse an [`Engine`] to decode or encode base64, configured with the base64\nalphabet and padding behavior best suited to your application.\n\n## Engine setup\n\nThere is more than one way to encode a stream of bytes as “base64”.\nDifferent applications use different encoding\n[alphabets][alphabet::Alphabet] and\n[padding behaviors][engine::general_purpose::GeneralPurposeConfig].\n\n### Encoding alphabet\n\nAlmost all base64 [alphabets][alphabet::Alphabet] use `A-Z`, `a-z`, and\n`0-9`, which gives nearly 64 characters (26 + 26 + 10 = 62), but they differ\nin their choice of their final 2.\n\nMost applications use the [standard][alphabet::STANDARD] alphabet specified\nin [RFC 4648][rfc-alphabet].  If that’s all you need, you can get started\nquickly by using the pre-configured\n[`STANDARD`][engine::general_purpose::STANDARD] engine, which is also available\nin the [`prelude`] module as shown here, if you prefer a minimal `use`\nfootprint.\n\n```\nuse base64::prelude::*;\n\n# fn main() -> Result<(), base64::DecodeError> {\nassert_eq!(BASE64_STANDARD.decode(b\"+uwgVQA=\")?, b\"\\xFA\\xEC\\x20\\x55\\0\");\nassert_eq!(BASE64_STANDARD.encode(b\"\\xFF\\xEC\\x20\\x55\\0\"), \"/+wgVQA=\");\n# Ok(())\n# }\n```\n\n[rfc-alphabet]: https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\nOther common alphabets are available in the [`alphabet`] module.\n\n#### URL-safe alphabet\n\nThe standard alphabet uses `+` and `/` as its two non-alphanumeric tokens,\nwhich cannot be safely used in URL’s without encoding them as `%2B` and\n`%2F`.\n\nTo avoid that, some applications use a [“URL-safe” alphabet][alphabet::URL_SAFE],\nwhich uses `-` and `_` instead. To use that alternative alphabet, use the\n[`URL_SAFE`][engine::general_purpose::URL_SAFE] engine. This example doesn't\nuse [`prelude`] to show what a more explicit `use` would look like.\n\n```\nuse base64::{engine::general_purpose::URL_SAFE, Engine as _};\n\n# fn main() -> Result<(), base64::DecodeError> {\nassert_eq!(URL_SAFE.decode(b\"-uwgVQA=\")?, b\"\\xFA\\xEC\\x20\\x55\\0\");\nassert_eq!(URL_SAFE.encode(b\"\\xFF\\xEC\\x20\\x55\\0\"), \"_-wgVQA=\");\n# Ok(())\n# }\n```\n\n### Padding characters\n\nEach base64 character represents 6 bits (2⁶ = 64) of the original binary\ndata, and every 3 bytes of input binary data will encode to 4 base64\ncharacters (8 bits × 3 = 6 bits × 4 = 24 bits).\n\nWhen the input is not an even multiple of 3 bytes in length, [canonical][]\nbase64 encoders insert padding characters at the end, so that the output\nlength is always a multiple of 4:\n\n[canonical]: https://datatracker.ietf.org/doc/html/rfc4648#section-3.5\n\n```\nuse base64::{engine::general_purpose::STANDARD, Engine as _};\n\nassert_eq!(STANDARD.encode(b\"\"),    \"\");\nassert_eq!(STANDARD.encode(b\"f\"),   \"Zg==\");\nassert_eq!(STANDARD.encode(b\"fo\"),  \"Zm8=\");\nassert_eq!(STANDARD.encode(b\"foo\"), \"Zm9v\");\n```\n\nCanonical encoding ensures that base64 encodings will be exactly the same,\nbyte-for-byte, regardless of input length. But the `=` padding characters\naren’t necessary for decoding, and they may be omitted by using a\n[`NO_PAD`][engine::general_purpose::NO_PAD] configuration:\n\n```\nuse base64::{engine::general_purpose::STANDARD_NO_PAD, Engine as _};\n\nassert_eq!(STANDARD_NO_PAD.encode(b\"\"),    \"\");\nassert_eq!(STANDARD_NO_PAD.encode(b\"f\"),   \"Zg\");\nassert_eq!(STANDARD_NO_PAD.encode(b\"fo\"),  \"Zm8\");\nassert_eq!(STANDARD_NO_PAD.encode(b\"foo\"), \"Zm9v\");\n```\n\nThe pre-configured `NO_PAD` engines will reject inputs containing padding\n`=` characters. To encode without padding and still accept padding while\ndecoding, create an [engine][engine::general_purpose::GeneralPurpose] with\nthat [padding mode][engine::DecodePaddingMode].\n\n```\n# use base64::{engine::general_purpose::STANDARD_NO_PAD, Engine as _};\nassert_eq!(STANDARD_NO_PAD.decode(b\"Zm8=\"), Err(base64::DecodeError::InvalidPadding));\n```\n\n### Further customization\n\nDecoding and encoding behavior can be customized by creating an\n[engine][engine::GeneralPurpose] with an [alphabet][alphabet::Alphabet] and\n[padding configuration][engine::GeneralPurposeConfig]:\n\n```\nuse base64::{engine, alphabet, Engine as _};\n\n// bizarro-world base64: +/ as the first symbols instead of the last\nlet alphabet =\n    alphabet::Alphabet::new(\"+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\")\n    .unwrap();\n\n// a very weird config that encodes with padding but requires no padding when decoding...?\nlet crazy_config = engine::GeneralPurposeConfig::new()\n    .with_decode_allow_trailing_bits(true)\n    .with_encode_padding(true)\n    .with_decode_padding_mode(engine::DecodePaddingMode::RequireNone);\n\nlet crazy_engine = engine::GeneralPurpose::new(&alphabet, crazy_config);\n\nlet encoded = crazy_engine.encode(b\"abc 123\");\n\n```\n\n## Memory allocation\n\nThe [decode][Engine::decode()] and [encode][Engine::encode()] engine methods\nallocate memory for their results – `decode` returns a `Vec<u8>` and\n`encode` returns a `String`. To instead decode or encode into a buffer that\nyou allocated, use one of the alternative methods:\n\n#### Decoding\n\n| Method                     | Output                        | Allocates memory              |\n| -------------------------- | ----------------------------- | ----------------------------- |\n| [`Engine::decode`]         | returns a new `Vec<u8>`       | always                        |\n| [`Engine::decode_vec`]     | appends to provided `Vec<u8>` | if `Vec` lacks capacity       |\n| [`Engine::decode_slice`]   | writes to provided `&[u8]`    | never\n\n#### Encoding\n\n| Method                     | Output                       | Allocates memory               |\n| -------------------------- | ---------------------------- | ------------------------------ |\n| [`Engine::encode`]         | returns a new `String`       | always                         |\n| [`Engine::encode_string`]  | appends to provided `String` | if `String` lacks capacity     |\n| [`Engine::encode_slice`]   | writes to provided `&[u8]`   | never                          |\n\n## Input and output\n\nThe `base64` crate can [decode][Engine::decode()] and\n[encode][Engine::encode()] values in memory, or\n[`DecoderReader`][read::DecoderReader] and\n[`EncoderWriter`][write::EncoderWriter] provide streaming decoding and\nencoding for any [readable][std::io::Read] or [writable][std::io::Write]\nbyte stream.\n\n#### Decoding\n\n```\n# use std::io;\nuse base64::{engine::general_purpose::STANDARD, read::DecoderReader};\n\n# fn main() -> Result<(), Box<dyn std::error::Error>> {\nlet mut input = io::stdin();\nlet mut decoder = DecoderReader::new(&mut input, &STANDARD);\nio::copy(&mut decoder, &mut io::stdout())?;\n# Ok(())\n# }\n```\n\n#### Encoding\n\n```\n# use std::io;\nuse base64::{engine::general_purpose::STANDARD, write::EncoderWriter};\n\n# fn main() -> Result<(), Box<dyn std::error::Error>> {\nlet mut output = io::stdout();\nlet mut encoder = EncoderWriter::new(&mut output, &STANDARD);\nio::copy(&mut io::stdin(), &mut encoder)?;\n# Ok(())\n# }\n```\n\n#### Display\n\nIf you only need a base64 representation for implementing the\n[`Display`][std::fmt::Display] trait, use\n[`Base64Display`][display::Base64Display]:\n\n```\nuse base64::{display::Base64Display, engine::general_purpose::STANDARD};\n\nlet value = Base64Display::new(b\"\\0\\x01\\x02\\x03\", &STANDARD);\nassert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", value));\n```\n\n# Panics\n\nIf length calculations result in overflowing `usize`, a panic will result.","links":{"alphabet::URL_SAFE":"0:397:3230","std::fmt::Display":"2:10319:128","engine::general_purpose::GeneralPurposeConfig":"0:492:2620","engine::general_purpose::STANDARD":"0:322:2617","engine::general_purpose::GeneralPurpose":"0:482:2619","engine::GeneralPurpose":"0:482:2619","`Engine::decode`":"0:350:618","`Engine`":"0:331:2452","alphabet::Alphabet":"0:528:3122","`Engine::encode_slice`":"0:346:2860","engine::DecodePaddingMode":"0:501:3109","Engine::encode()":"0:338:693","`Engine::decode_slice`":"0:360:3085","`Engine::encode_string`":"0:342:2655","std::io::Read":"1:3586:2699","alphabet::STANDARD":"0:396:2617","write::EncoderWriter":"0:141:2789","read::DecoderReader":"0:86:2679","`Engine::encode`":"0:338:693","`Engine::decode_vec`":"0:355:3071","Engine::decode()":"0:350:618","std::io::Write":"1:3643:2824","display::Base64Display":"0:47:2663","engine::general_purpose::URL_SAFE":"0:324:3230","engine::general_purpose::NO_PAD":"0:327:3228","engine::GeneralPurposeConfig":"0:492:2620","`alphabet`":"0:378:2453","`prelude`":"0:475:1338"},"attrs":["#![deny(missing_docs, trivial_casts, trivial_numeric_casts,\nunused_extern_crates, unused_import_braces, unused_results,\nvariant_size_differences)]","#![forbid(unsafe_code)]","#![allow(clippy::single_component_path_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:38:2448","0:72:2449","0:128:2450","0:230:2451","0:378:2453","0:475:1338","0:377-0:331:2452","0:430-0:411:693","0:431-0:413:2454","0:432-0:416:2455","0:434-0:419:2456","0:435-0:424:2457","0:436-0:560:2458","0:467-0:454:618","0:468-0:456:2459","0:469-0:459:2460","0:471-0:462:2461","0:472-0:465:2462","0:473-0:572:2463","0:474-0:595:2464"],"is_stripped":false}}},"b:2:2916-0:541:3345":{"id":"b:2:2916-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2931-0:541:3345":{"id":"b:2:2931-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[142,16],"end":[142,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:604:802":{"id":"0:604:802","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[51,16],"end":[51,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:541:3345":{"id":"b:2:2646-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3758-0:501:3109":{"id":"b:2:3758-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:426":{"id":"0:426","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[151,0],"end":[157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:427:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[251,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:314:1178","0:315:3203","0:316:3211","0:317:3222"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32294:4113-0:190:2790":{"id":"a:2:32294:4113-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2920-0:141:2789":{"id":"b:2:2920-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[96,0],"end":[246,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:163:1178","0:166:2723","0:171:2766"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:346:2860":{"id":"0:346:2860","crate_id":0,"name":"encode_slice","span":{"filename":"src/engine/mod.rs","begin":[194,4],"end":[222,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied slice.\nWrites into the supplied output buffer.\n\nThis is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident\nor statically-allocated buffer).\n\n# Example\n\n```\nuse base64::{Engine as _, engine::general_purpose};\nlet s = b\"hello internet!\";\nlet mut buf = Vec::new();\n// make sure we'll have a slice big enough for base64 + padding\nbuf.resize(s.len() * 4 / 3 + 4, 0);\n\nlet bytes_written = general_purpose::STANDARD.encode_slice(s, &mut buf).unwrap();\n\n// shorten our vec down to just what was written\nbuf.truncate(bytes_written);\n\nassert_eq!(s, general_purpose::STANDARD.decode(&buf).unwrap().as_slice());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:86:2679":{"id":"b:2:2643-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13301:27210":{"id":"2:13301:27210","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13205:34567":{"id":"2:13205:34567","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:86:2679":{"id":"a:2:32235:237-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3174:4188-0:501:3109":{"id":"a:2:3174:4188-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:185:671":{"id":"0:185:671","crate_id":0,"name":"drop","span":{"filename":"src/write/encoder.rs","begin":[401,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:510":{"id":"0:510","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[452,16],"end":[452,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3134:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111:1178":{"id":"0:111:1178","crate_id":0,"name":"new","span":{"filename":"src/read/decoder.rs","begin":[78,4],"end":[91,5]},"visibility":"public","docs":"Create a new decoder that will read from the provided reader `r`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["reader",{"generic":"R"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473-0:572:2463":{"id":"0:473-0:572:2463","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[270,67],"end":[270,78]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::DecodeError","name":"DecodeError","id":"0:572:2463","glob":false}}},"2:13231:3267":{"id":"2:13231:3267","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3956-0:501:3109":{"id":"a:2:42097:3956-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:542:2754":{"id":"0:542:2754","crate_id":0,"name":"InvalidLength","span":{"filename":"src/alphabet.rs","begin":[145,4],"end":[145,17]},"visibility":"default","docs":"Alphabets must be 64 ASCII bytes","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13220:29562":{"id":"2:13220:29562","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13221:29563"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:595:2464":{"id":"b:2:2646-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:329-0:482:2619":{"id":"0:329-0:482:2619","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,26],"end":[22,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"general_purpose::GeneralPurpose","name":"GeneralPurpose","id":"0:482:2619","glob":false}}},"b:2:2931-0:595:2464":{"id":"b:2:2931-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:504:3113":{"id":"0:504:3113","crate_id":0,"name":"RequireCanonical","span":{"filename":"src/engine/mod.rs","begin":[457,4],"end":[457,20]},"visibility":"default","docs":"Padding must be canonical (0, 1, or 2 `=` as needed to produce a 4 byte suffix).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:500:802":{"id":"0:500:802","crate_id":0,"name":"fmt","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,22],"end":[244,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:524":{"id":"0:524","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[463,20],"end":[463,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13304:29577":{"id":"2:13304:29577","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:141:2789":{"id":"b:2:2926-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:2974":{"id":"0:333:2974","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[43,4],"end":[43,40]},"visibility":"default","docs":"The decode estimate used by this engine","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"DecodeEstimate","id":"0:373:2974","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[318,0],"end":[323,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2968:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:319:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2920-0:518:2999":{"id":"b:2:2920-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:492:2620":{"id":"a:2:32235:237-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:518:2999":{"id":"0:518:2999","crate_id":0,"name":"DecodeMetadata","span":{"filename":"src/engine/mod.rs","begin":[464,0],"end":[469,1]},"visibility":"public","docs":"Metadata about the result of a decode operation","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3139:247-0:518:2999","a:2:42098:3955-0:518:2999","a:2:32294:4113-0:518:2999","a:2:42097:3956-0:518:2999","a:2:3174:4188-0:518:2999","a:2:32235:237-0:518:2999","b:2:2646-0:518:2999","b:2:2643-0:518:2999","b:2:2920-0:518:2999","b:2:2916-0:518:2999","b:2:2926-0:518:2999","b:2:3758-0:518:2999","b:2:2931-0:518:2999","0:521","0:526","0:524","0:522"]}}},"a:2:32294:4113-0:518:2999":{"id":"a:2:32294:4113-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:154":{"id":"0:154","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[83,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:158:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:541:3345":{"id":"a:2:32235:237-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2920-0:541:3345":{"id":"b:2:2920-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:492:2620":{"id":"b:2:2643-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5866-0:560:2458":{"id":"b:5:5866-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:401:3383":{"id":"0:401:3383","crate_id":0,"name":"BIN_HEX","span":{"filename":"src/alphabet.rs","begin":[204,0],"end":[206,2]},"visibility":"public","docs":"The alphabet used in BinHex 4.0 files.\n\nSee [BinHex 4.0 Definition](http://files.stairways.com/other/binhex-40-specs-info.txt)","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:532:475":{"id":"0:532:475","crate_id":0,"name":"clone","span":{"filename":"src/alphabet.rs","begin":[54,9],"end":[54,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:541:3345":{"id":"b:2:2926-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:598:1973":{"id":"0:598:1973","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[54,16],"end":[54,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:742:4307":{"id":"5:742:4307","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13260:34572":{"id":"2:13260:34572","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12885:3726","str::split":"2:13248:29026","prim@char":"1:12341:471","str::split_terminator":"2:13257:34571"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43963:4337","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13269:29573":{"id":"2:13269:29573","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:740:4305":{"id":"5:740:4305","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:449:802":{"id":"0:449:802","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[60,4],"end":[65,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:492:2620":{"id":"0:492:2620","crate_id":0,"name":"GeneralPurposeConfig","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[245,0],"end":[249,1]},"visibility":"public","docs":"Contains configuration parameters for base64 encoding and decoding.\n\n```\n# use base64::engine::GeneralPurposeConfig;\nlet config = GeneralPurposeConfig::new()\n    .with_encode_padding(false);\n    // further customize using `.with_*` methods as needed\n```\n\nThe constants [PAD] and [NO_PAD] cover most use cases.\n\nTo specify the characters used, see [Alphabet].","links":{"PAD":"0:326:2621","Alphabet":"0:528:3122","NO_PAD":"0:327:3228"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:313","a:2:3139:247-0:492:2620","a:2:42098:3955-0:492:2620","a:2:32294:4113-0:492:2620","a:2:42097:3956-0:492:2620","a:2:3174:4188-0:492:2620","a:2:32235:237-0:492:2620","b:2:2646-0:492:2620","b:2:2643-0:492:2620","b:2:2920-0:492:2620","b:2:2916-0:492:2620","b:2:2926-0:492:2620","b:2:3758-0:492:2620","b:2:2931-0:492:2620","b:5:738-0:492:2620","0:498","0:320","0:499","0:318","0:496"]}}},"0:526":{"id":"0:526","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[463,24],"end":[463,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:527:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:365:3091":{"id":"0:365:3091","crate_id":0,"name":"decode_slice_unchecked","span":{"filename":"src/engine/mod.rs","begin":[393,4],"end":[418,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nReturns the number of bytes written to the slice.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice] for a version that returns an error instead of panicking if the output\nbuffer is too small.\n\n# Panics\n\nPanics if the provided output buffer is too small for the decoded data.","links":{"crate::decoded_len_estimate":"0:465:2462","Engine::decode_slice":"0:360:3085"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:518:2999":{"id":"a:2:32235:237-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13234:29575":{"id":"2:13234:29575","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:512:802":{"id":"0:512:802","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[452,22],"end":[452,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:2448":{"id":"0:38:2448","crate_id":0,"name":"display","span":{"filename":"src/display.rs","begin":[1,0],"end":[88,1]},"visibility":"public","docs":"Enables base64'd output anywhere you might use a `Display` implementation, like a format string.\n\n```\nuse base64::{display::Base64Display, engine::general_purpose::STANDARD};\n\nlet data = vec![0x0, 0x1, 0x2, 0x3];\nlet wrapper = Base64Display::new(&data, &STANDARD);\n\nassert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:47:2663"],"is_stripped":false}}},"2:13244:4250":{"id":"2:13244:4250","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42005:191","prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474-0:595:2464":{"id":"0:474-0:595:2464","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[270,80],"end":[270,96]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::DecodeSliceError","name":"DecodeSliceError","id":"0:595:2464","glob":false}}},"2:13307:34583":{"id":"2:13307:34583","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13310:34584":{"id":"2:13310:34584","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:492:2620":{"id":"b:2:3758-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13218:29558":{"id":"2:13218:29558","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13220:29562","str::split_at_mut":"2:13219:29559"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:3222":{"id":"0:317:3222","crate_id":0,"name":"with_decode_padding_mode","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[310,4],"end":[315,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_padding_mode` setting.\n\nPadding is not useful in terms of representing encoded data -- it makes no difference to\nthe decoder if padding is present or not, so if you have some un-padded input to decode, it\nis perfectly fine to use `DecodePaddingMode::Indifferent` to prevent errors from being\nemitted.\n\nHowever, since in practice\n[people who learned nothing from BER vs DER seem to expect base64 to have one canonical encoding](https://eprint.iacr.org/2022/361),\nthe default setting is the stricter `DecodePaddingMode::RequireCanonicalPadding`.\n\nOr, if \"canonical\" in your circumstance means _no_ padding rather than padding to the\nnext multiple of four, there's `DecodePaddingMode::RequireNoPadding`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["mode",{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:515:699":{"id":"0:515:699","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[452,29],"end":[452,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:541:3345":{"id":"b:2:2643-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:501:3109":{"id":"b:2:2643-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:539":{"id":"0:539","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[54,27],"end":[54,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:540:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5618:3481":{"id":"5:5618:3481","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:4188-0:541:3345":{"id":"a:2:3174:4188-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:210:2912":{"id":"0:210:2912","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder_string_writer.rs","begin":[87,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:560:2458":{"id":"b:5:738-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:4305","5:741:4306","5:742:4307"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:479-0:324:3230":{"id":"0:479-0:324:3230","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[19,0],"end":[19,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::URL_SAFE","name":"BASE64_URL_SAFE","id":"0:324:3230","glob":false}}},"0:217:2942":{"id":"0:217:2942","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[107,4],"end":[109,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:541:3345":{"id":"0:541:3345","crate_id":0,"name":"ParseAlphabetError","span":{"filename":"src/alphabet.rs","begin":[143,0],"end":[152,1]},"visibility":"public","docs":"Possible errors when constructing an [Alphabet] from a `str`.","links":{"Alphabet":"0:528:3122"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:542:2754","0:544:3352","0:547:3348","0:550:3349"],"impls":["a:2:3139:247-0:541:3345","a:2:42098:3955-0:541:3345","a:2:32294:4113-0:541:3345","a:2:42097:3956-0:541:3345","a:2:3174:4188-0:541:3345","a:2:32235:237-0:541:3345","b:2:2646-0:541:3345","b:2:2643-0:541:3345","b:2:2920-0:541:3345","b:2:2916-0:541:3345","b:2:2926-0:541:3345","b:2:3758-0:541:3345","b:2:2931-0:541:3345","b:5:5866-0:541:3345","0:395","0:558","0:555","0:557","0:393","0:553"]}}},"b:2:2646-0:190:2790":{"id":"b:2:2646-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,16],"end":[23,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:491:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13204:3342":{"id":"2:13204:3342","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12432:2611"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13275:3680":{"id":"2:13275:3680","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12885:3726","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::rmatches":"2:13278:34573"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44099:4341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13294:34580":{"id":"2:13294:34580","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:554:802":{"id":"0:554:802","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[142,9],"end":[142,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:4113-0:47:2663":{"id":"a:2:32294:4113-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,22],"end":[244,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:500:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:471-0:462:2461":{"id":"0:471-0:462:2461","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[270,24],"end":[270,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine_slice","name":"decode_engine_slice","id":"0:462:2461","glob":false}}},"0:468-0:456:2459":{"id":"0:468-0:456:2459","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[268,32],"end":[268,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine","name":"decode_engine","id":"0:456:2459","glob":false}}},"b:2:2643-0:518:2999":{"id":"b:2:2643-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[76,0],"end":[217,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3586:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:111:1178","0:120:2766"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:475:1338":{"id":"0:475:1338","crate_id":0,"name":"prelude","span":{"filename":"src/prelude.rs","begin":[1,0],"end":[20,82]},"visibility":"public","docs":"Preconfigured engines for common use cases.\n\nThese are re-exports of `const` engines in [crate::engine::general_purpose], renamed with a `BASE64_`\nprefix for those who prefer to `use` the entire path to a name.\n\n# Examples\n\n```\nuse base64::prelude::{Engine as _, BASE64_STANDARD_NO_PAD};\n\nassert_eq!(\"c29tZSBieXRlcw\", &BASE64_STANDARD_NO_PAD.encode(b\"some bytes\"));\n```","links":{"crate::engine::general_purpose":"0:243:2618"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:476-0:331:2452","0:477-0:322:2617","0:478-0:323:3227","0:479-0:324:3230","0:480-0:325:3232"],"is_stripped":false}}},"2:13228:29027":{"id":"2:13228:29027","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44149:3787","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:482:2619":{"id":"0:482:2619","crate_id":0,"name":"GeneralPurpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[24,0],"end":[28,1]},"visibility":"public","docs":"A general-purpose base64 engine.\n\n- It uses no vector CPU instructions, so it will work on any system.\n- It is reasonably fast (~2-3GiB/s).\n- It is not constant-time, though, so it is vulnerable to timing side-channel attacks. For loading cryptographic keys, etc, it is suggested to use the forthcoming constant-time implementation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:294","a:2:3139:247-0:482:2619","a:2:42098:3955-0:482:2619","a:2:32294:4113-0:482:2619","a:2:42097:3956-0:482:2619","a:2:3174:4188-0:482:2619","a:2:32235:237-0:482:2619","b:2:2646-0:482:2619","b:2:2643-0:482:2619","b:2:2920-0:482:2619","b:2:2916-0:482:2619","b:2:2926-0:482:2619","b:2:3758-0:482:2619","b:2:2931-0:482:2619","b:5:738-0:482:2619","0:488","0:490","0:296"]}}},"0:599:2757":{"id":"0:599:2757","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/decode.rs","begin":[56,4],"end":[56,23]},"visibility":"default","docs":"The provided slice is too small.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13313:34585":{"id":"2:13313:34585","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:4113-0:492:2620":{"id":"a:2:32294:4113-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2920-0:47:2663":{"id":"b:2:2920-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:4188-0:492:2620":{"id":"a:2:3174:4188-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:327:3228":{"id":"0:327:3228","crate_id":0,"name":"NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[350,0],"end":[352,62]},"visibility":"public","docs":"Don't add padding when encoding, and require no padding when decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:3758-0:560:2458":{"id":"b:2:3758-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42097:3956-0:492:2620":{"id":"a:2:42097:3956-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:166:2723":{"id":"0:166:2723","crate_id":0,"name":"finish","span":{"filename":"src/write/encoder.rs","begin":[126,4],"end":[138,5]},"visibility":"public","docs":"Encode all remaining buffered data and write it, including any trailing incomplete input\ntriples and associated padding.\n\nOnce this succeeds, no further writes or calls to this method are allowed.\n\nThis may write to the delegate writer multiple times if the delegate writer does not accept\nall input provided to its `write` each invocation.\n\nIf you don't care about error handling, it is not necessary to call this function, as the\nequivalent finalization is done by the Drop impl.\n\nReturns the writer that this was constructed around.\n\n# Errors\n\nThe first error that is not of `ErrorKind::Interrupted` will be returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[133,0],"end":[139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:137","0:392:1806"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:584:2756":{"id":"0:584:2756","crate_id":0,"name":"InvalidPadding","span":{"filename":"src/decode.rs","begin":[29,4],"end":[29,18]},"visibility":"default","docs":"The nature of the padding was not as configured: absent or incorrect when it must be\ncanonical, or present when it must be absent, etc.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13216:34568":{"id":"2:13216:34568","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12347:1721","str::slice_mut_unchecked":"2:13217:34569","crate::ops::Index":"2:39549:3841"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:62:802":{"id":"0:62:802","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"fmt::Error","id":"2:43048:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13324:29426":{"id":"2:13324:29426","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:39062"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13316:34586":{"id":"2:13316:34586","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12846:136","`FromStr`":"2:12845:3722"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12845:3722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12845:3722","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:395":{"id":"0:395","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[166,0],"end":[166,43]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"name":"Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:394:802":{"id":"0:394:802","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[155,4],"end":[162,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3955-0:560:2458":{"id":"a:2:42098:3955-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:590":{"id":"0:590","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2926-0:518:2999":{"id":"b:2:2926-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:596:2463":{"id":"0:596:2463","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[54,4],"end":[54,28]},"visibility":"default","docs":"A [DecodeError] occurred","links":{"DecodeError":"0:572:2463"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:598:1973"]},"discriminant":null}}},"b:2:2931-0:190:2790":{"id":"b:2:2931-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374:2462":{"id":"0:374:2462","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/engine/mod.rs","begin":[445,4],"end":[445,44]},"visibility":"default","docs":"Returns a conservative (err on the side of too big) estimate of the decoded length to use\nfor pre-allocating buffers, etc.\n\nThe estimate must be no larger than the next largest complete triple of decoded bytes.\nThat is, the final quad of tokens to decode may be assumed to be complete with no padding.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2646-0:492:2620":{"id":"b:2:2646-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2929:137":{"id":"2:2929:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2920-0:572:2463":{"id":"b:2:2920-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[325,0],"end":[329,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Config","id":"0:371:2584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:321:2607"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:741:4306":{"id":"5:741:4306","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:560:2458":{"id":"a:2:3139:247-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13281:34574":{"id":"2:13281:34574","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12885:3726","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::rmatch_indices":"2:13284:34575"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44045:4343","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:513":{"id":"0:513","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[452,29],"end":[452,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3139:247-0:47:2663":{"id":"a:2:3139:247-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13210:3308":{"id":"2:13210:3308","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42005:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:190:2790":{"id":"b:2:2643-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5624:35285":{"id":"5:5624:35285","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53":{"id":"0:53","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[23,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["0:57:1178"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:86:2679":{"id":"0:86:2679","crate_id":0,"name":"DecoderReader","span":{"filename":"src/read/decoder.rs","begin":[33,0],"end":[59,1]},"visibility":"public","docs":"A `Read` implementation that decodes base64 data read from an underlying reader.\n\n# Examples\n\n```\nuse std::io::Read;\nuse std::io::Cursor;\nuse base64::engine::general_purpose;\n\n// use a cursor as the simplest possible `Read` -- in real code this is probably a file, etc.\nlet mut wrapped_reader = Cursor::new(b\"YXNkZg==\");\nlet mut decoder = base64::read::DecoderReader::new(\n    &mut wrapped_reader,\n    &general_purpose::STANDARD);\n\n// handle errors as you normally would\nlet mut result = Vec::new();\ndecoder.read_to_end(&mut result).unwrap();\n\nassert_eq!(b\"asdf\", &result[..]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3586:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:107","a:2:3139:247-0:86:2679","a:2:42098:3955-0:86:2679","a:2:32294:4113-0:86:2679","a:2:42097:3956-0:86:2679","a:2:3174:4188-0:86:2679","a:2:32235:237-0:86:2679","b:2:2646-0:86:2679","b:2:2643-0:86:2679","b:2:2920-0:86:2679","b:2:2916-0:86:2679","b:2:2926-0:86:2679","b:2:3758-0:86:2679","b:2:2931-0:86:2679","0:102","0:121"]}}},"b:2:2916-0:492:2620":{"id":"b:2:2916-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13196:997":{"id":"2:13196:997","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12341:471"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:47:2663":{"id":"b:2:2916-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:516":{"id":"0:516","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[452,40],"end":[452,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3139:247-0:518:2999":{"id":"a:2:3139:247-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3758-0:482:2619":{"id":"b:2:3758-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13291:34578":{"id":"2:13291:34578","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,34],"end":[51,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3139:247-0:141:2789":{"id":"a:2:3139:247-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:342:2655":{"id":"0:342:2655","crate_id":0,"name":"encode_string","span":{"filename":"src/engine/mod.rs","begin":[155,4],"end":[168,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied `String`.\nWrites into the supplied `String`, which may allocate if its internal buffer isn't big enough.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nfn main() {\n    let mut buf = String::new();\n    general_purpose::STANDARD.encode_string(b\"hello world~\", &mut buf);\n    println!(\"{}\", buf);\n\n    buf.clear();\n    CUSTOM_ENGINE.encode_string(b\"hello internet~\", &mut buf);\n    println!(\"{}\", buf);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3955-0:541:3345":{"id":"a:2:42098:3955-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32235:237-0:572:2463":{"id":"a:2:32235:237-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13263:29569":{"id":"2:13263:29569","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726","str::rsplitn":"2:13266:29571"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43999:4340","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:2452":{"id":"0:331:2452","crate_id":0,"name":"Engine","span":{"filename":"src/engine/mod.rs","begin":[39,0],"end":[419,1]},"visibility":"public","docs":"An `Engine` provides low-level encoding and decoding operations that all other higher-level parts of the API use. Users of the library will generally not need to implement this.\n\nDifferent implementations offer different characteristics. The library currently ships with\n[GeneralPurpose] that offers good speed and works on any CPU, with more choices\ncoming later, like a constant-time one when side channel resistance is called for, and vendor-specific vectorized ones for more speed.\n\nSee [general_purpose::STANDARD_NO_PAD] if you just want standard base64. Otherwise, when possible, it's\nrecommended to store the engine in a `const` so that references to it won't pose any lifetime\nissues, and to avoid repeating the cost of engine setup.\n\nSince almost nobody will need to implement `Engine`, docs for internal methods are hidden.","links":{"GeneralPurpose":"0:482:2619","general_purpose::STANDARD_NO_PAD":"0:323:3227"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:332:2584","0:333:2974","0:337:2606","0:338:693","0:342:2655","0:346:2860","0:350:618","0:355:3071","0:360:3085","0:365:3091"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:296"]}}},"b:2:3758-0:541:3345":{"id":"b:2:3758-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[463,9],"end":[463,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:523:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:350:618":{"id":"0:350:618","crate_id":0,"name":"decode","span":{"filename":"src/engine/mod.rs","begin":[244,4],"end":[268,5]},"visibility":"default","docs":"Decode the input into a new `Vec`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\n\nlet bytes = general_purpose::STANDARD\n    .decode(\"aGVsbG8gd29ybGR+Cg==\").unwrap();\nprintln!(\"{:?}\", bytes);\n\n// custom engine setup\nlet bytes_url = engine::GeneralPurpose::new(\n             &alphabet::URL_SAFE,\n             general_purpose::NO_PAD)\n    .decode(\"aGVsbG8gaW50ZXJuZXR-Cg\").unwrap();\nprintln!(\"{:?}\", bytes_url);\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478-0:323:3227":{"id":"0:478-0:323:3227","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[18,0],"end":[18,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::STANDARD_NO_PAD","name":"BASE64_STANDARD_NO_PAD","id":"0:323:3227","glob":false}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[142,20],"end":[142,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:469-0:459:2460":{"id":"0:469-0:459:2460","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[268,47],"end":[268,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine_vec","name":"decode_engine_vec","id":"0:459:2460","glob":false}}},"0:325:3232":{"id":"0:325:3232","crate_id":0,"name":"URL_SAFE_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[341,0],"end":[341,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [NO_PAD] config.","links":{"alphabet::URL_SAFE":"0:397:3230","GeneralPurpose":"0:482:2619","NO_PAD":"0:327:3228"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:424:2457":{"id":"0:424:2457","crate_id":0,"name":"encoded_len","span":{"filename":"src/encode.rs","begin":[97,0],"end":[125,1]},"visibility":"public","docs":"Calculate the base64 encoded length for a given input length, optionally including any\nappropriate padding bytes.\n\nReturns `None` if the encoded length can't be represented in `usize`. This will happen for\ninput lengths in approximately the top quarter of the range of `usize`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes_len",{"primitive":"usize"}],["padding",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13208:29535":{"id":"2:13208:29535","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42005:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13227:32682":{"id":"2:13227:32682","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13226:32672"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44178:4349","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:528:3122":{"id":"b:2:3758-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3758-0:572:2463":{"id":"b:2:3758-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42097:3956-0:541:3345":{"id":"a:2:42097:3956-0:541:3345","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3139:247-0:482:2619":{"id":"a:2:3139:247-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:534:802":{"id":"0:534:802","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[54,16],"end":[54,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:557":{"id":"0:557","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[142,20],"end":[142,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:560:2458":{"id":"a:2:32235:237-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13295:34581":{"id":"2:13295:34581","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12911:4323","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:2450":{"id":"0:176:2450","crate_id":0,"name":"write","span":{"filename":"src/write/encoder.rs","begin":[265,4],"end":[384,5]},"visibility":"default","docs":"Encode input and then write to the delegate writer.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nof `input` consumed. The value may be `0`, which interacts poorly with `write_all`, which\ninterprets `Ok(0)` as an error, despite it being allowed by the contract of `write`. See\n<https://github.com/rust-lang/rust/issues/56889> for more on that.\n\nIf the previous call to `write` provided more (encoded) data than the delegate writer could\naccept in a single call to its `write`, the remaining data is buffered. As long as buffered\ndata is present, subsequent calls to `write` will try to write the remaining buffered data\nto the delegate and return either `Ok(0)` -- and therefore not consume any of `input` -- or\nan error.\n\n# Errors\n\nAny errors emitted by the delegate writer are returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:482:2619":{"id":"a:2:32235:237-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5616":{"id":"5:5616","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5617:35283","5:5618:3481","5:5621:35284","5:5624:35285","5:5632:35286","5:5633:35287","5:5634:3539","5:5635:28934","5:5636:28935"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42098:3955-0:141:2789":{"id":"a:2:42098:3955-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42097:3956-0:560:2458":{"id":"a:2:42097:3956-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32294:4113-0:86:2679":{"id":"a:2:32294:4113-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13225:2597":{"id":"2:13225:2597","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43881:3790","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5866-0:595:2464":{"id":"b:5:5866-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:4188-0:595:2464":{"id":"a:2:3174:4188-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181":{"id":"0:181","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[400,0],"end":[407,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3376:2913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:185:671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2645:3669":{"id":"2:2645:3669","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:693":{"id":"0:338:693","crate_id":0,"name":"encode","span":{"filename":"src/engine/mod.rs","begin":[115,4],"end":[131,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 using the provided `Engine`.\nReturns a `String`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\n\nlet b64 = general_purpose::STANDARD.encode(b\"hello world~\");\nprintln!(\"{}\", b64);\n\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nlet b64_url = CUSTOM_ENGINE.encode(b\"hello internet~\");\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521":{"id":"0:521","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[463,9],"end":[463,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:47:2663":{"id":"a:2:32235:237-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2916-0:528:3122":{"id":"b:2:2916-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:141:2789":{"id":"b:2:2643-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:540:699":{"id":"0:540:699","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[54,27],"end":[54,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:3375":{"id":"0:399:3375","crate_id":0,"name":"BCRYPT","span":{"filename":"src/alphabet.rs","begin":[190,0],"end":[192,2]},"visibility":"public","docs":"The bcrypt alphabet.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:527:802":{"id":"0:527:802","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[463,24],"end":[463,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[219,0],"end":[335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3586:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_vectored","read_buf","is_read_vectored","take","read_buf_exact","read_to_end","read_to_string","by_ref","bytes","chain","read_exact"],"trait":{"name":"Read","id":"1:3586:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:125:2449"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:432-0:416:2455":{"id":"0:432-0:416:2455","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[261,47],"end":[261,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine_string","name":"encode_engine_string","id":"0:416:2455","glob":false}}},"0:559:699":{"id":"0:559:699","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[142,20],"end":[142,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430-0:411:693":{"id":"0:430-0:411:693","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[261,24],"end":[261,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode","name":"encode","id":"0:411:693","glob":false}}},"0:587:475":{"id":"0:587:475","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13230:32668":{"id":"2:13230:32668","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44187:4345","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13248:29026":{"id":"2:13248:29026","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12885:3726","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::split_whitespace":"2:13226:32672","str::rsplit":"2:13254:29567"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43895:3791","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:4188-0:572:2463":{"id":"a:2:3174:4188-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:141:2789":{"id":"0:141:2789","crate_id":0,"name":"EncoderWriter","span":{"filename":"src/write/encoder.rs","begin":[63,0],"end":[81,1]},"visibility":"public","docs":"A `Write` implementation that base64 encodes data before delegating to the wrapped writer.\n\nBecause base64 has special handling for the end of the input data (padding, etc), there's a\n`finish()` method on this type that encodes any leftover input bytes and adds padding if\nappropriate. It's called automatically when deallocated (see the `Drop` implementation), but\nany error that occurs when invoking the underlying writer will be suppressed. If you want to\nhandle such errors, call `finish()` yourself.\n\n# Examples\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\n// use a vec as the simplest possible `Write` -- in real code this is probably a file, etc.\nlet mut enc = base64::write::EncoderWriter::new(Vec::new(), &general_purpose::STANDARD);\n\n// handle errors as you normally would\nenc.write_all(b\"asdf\").unwrap();\n\n// could leave this out to be called by Drop, if you don't care\n// about handling errors or getting the delegate writer back\nlet delegate = enc.finish().unwrap();\n\n// base64 was written to the writer\nassert_eq!(b\"YXNkZg==\", &delegate[..]);\n\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Errors\n\nBase64 encoding itself does not generate errors, but errors from the wrapped writer will be\nreturned as per the contract of `Write`.\n\n# Performance\n\nIt has some minor performance loss compared to encoding slices (a couple percent).\nIt does not do any heap allocation.\n\n# Limitations\n\nOwing to the specification of the `write` and `flush` methods on the `Write` trait and their\nimplications for a buffering implementation, these methods may not behave as expected. In\nparticular, calling `write_all` on this interface may fail with `io::ErrorKind::WriteZero`.\nSee the documentation of the `Write` trait implementation for further details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:159","a:2:3139:247-0:141:2789","a:2:42098:3955-0:141:2789","a:2:32294:4113-0:141:2789","a:2:42097:3956-0:141:2789","a:2:3174:4188-0:141:2789","a:2:32235:237-0:141:2789","b:2:2646-0:141:2789","b:2:2643-0:141:2789","b:2:2920-0:141:2789","b:2:2916-0:141:2789","b:2:2926-0:141:2789","b:2:3758-0:141:2789","b:2:2931-0:141:2789","0:172","0:181","0:154"]}}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[248,0],"end":[398,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","by_ref","is_write_vectored","write_all","write_fmt","write_vectored"],"trait":{"name":"Write","id":"1:3643:2824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:176:2450","0:180:2912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:738-0:482:2619":{"id":"b:5:738-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:4305","5:741:4306","5:742:4307"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:391:137":{"id":"0:391:137","crate_id":0,"name":"Error","span":{"filename":"src/alphabet.rs","begin":[134,4],"end":[134,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseAlphabetError","id":"0:541:3345","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32235:237-0:595:2464":{"id":"a:2:32235:237-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:561:2757":{"id":"0:561:2757","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/encode.rs","begin":[148,4],"end":[148,23]},"visibility":"default","docs":"The provided slice is too small.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:563":{"id":"0:563","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[145,9],"end":[145,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:564:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3139:247-0:492:2620":{"id":"a:2:3139:247-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:315:3203":{"id":"0:315:3203","crate_id":0,"name":"with_encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[276,4],"end":[281,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `padding` setting.\n\nIf `padding` is `true`, encoding will append either 1 or 2 `=` padding characters as needed\nto produce an output whose length is a multiple of 4.\n\nPadding is not needed for correct decoding and only serves to waste bytes, but it's in the\n[spec](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2).\n\nFor new applications, consider not using padding if the decoders you're using don't require\npadding to be present.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["padding",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330-0:492:2620":{"id":"0:330-0:492:2620","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,42],"end":[22,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"general_purpose::GeneralPurposeConfig","name":"GeneralPurposeConfig","id":"0:492:2620","glob":false}}},"b:2:2646-0:501:3109":{"id":"b:2:2646-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:606":{"id":"0:606","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:607:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:106:802":{"id":"0:106:802","crate_id":0,"name":"fmt","span":{"filename":"src/read/decoder.rs","begin":[63,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:501:3109":{"id":"a:2:3139:247-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32294:4113-0:501:3109":{"id":"a:2:32294:4113-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:434-0:419:2456":{"id":"0:434-0:419:2456","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[263,24],"end":[263,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine_slice","name":"encode_engine_slice","id":"0:419:2456","glob":false}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[82,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:211:2791","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","by_ref","is_write_vectored","write_all","write_fmt","write_vectored"],"trait":{"name":"Write","id":"1:3643:2824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:209:2450","0:210:2912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:489:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:549:1973":{"id":"0:549:1973","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[149,20],"end":[149,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:565":{"id":"0:565","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[145,16],"end":[145,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:566:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427:802":{"id":"0:427:802","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[152,4],"end":[156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5868:1781":{"id":"5:5868:1781","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305:2606":{"id":"0:305:2606","crate_id":0,"name":"config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[187,4],"end":[189,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:331:2452","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:475":{"id":"0:497:475","crate_id":0,"name":"clone","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[452,9],"end":[452,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:509:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:419:2456":{"id":"0:419:2456","crate_id":0,"name":"encode_engine_slice","span":{"filename":"src/encode.rs","begin":[51,0],"end":[57,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied slice.\n\nSee [Engine::encode_slice].","links":{"Engine::encode_slice":"0:346:2860"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_slice"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:3372":{"id":"0:398:3372","crate_id":0,"name":"CRYPT","span":{"filename":"src/alphabet.rs","begin":[185,0],"end":[187,2]},"visibility":"public","docs":"The `crypt(3)` alphabet (with `.` and `/` as the _first_ two characters).\n\nNot standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:13219:29559":{"id":"2:13219:29559","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13218:29558","str::split_at_mut_checked":"2:13221:29563"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13322:28938":{"id":"2:13322:28938","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:4188-0:86:2679":{"id":"a:2:3174:4188-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42098:3955-0:190:2790":{"id":"a:2:42098:3955-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226-0:141:2789":{"id":"0:226-0:141:2789","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[6,4],"end":[6,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder::EncoderWriter","name":"EncoderWriter","id":"0:141:2789","glob":false}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,16],"end":[244,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3134:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[59,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:1178","0:389:338"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:567":{"id":"0:567","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[145,23],"end":[145,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42097:3956-0:141:2789":{"id":"a:2:42097:3956-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13223:7229":{"id":"2:13223:7229","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12341:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43865:3719","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:482:2619":{"id":"b:2:2646-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13199:34565":{"id":"2:13199:34565","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:518:2999":{"id":"b:2:3758-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5632:35286":{"id":"5:5632:35286","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:1806":{"id":"0:392:1806","crate_id":0,"name":"try_from","span":{"filename":"src/alphabet.rs","begin":[136,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2900:257","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2912":{"id":"0:180:2912","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder.rs","begin":[391,4],"end":[397,5]},"visibility":"default","docs":"Because this is usually treated as OK to call multiple times, it will *not* flush any\nincomplete chunks of input or write padding.\n# Errors\n\nThe first error that is not of [`ErrorKind::Interrupted`] will be returned.","links":{"`ErrorKind::Interrupted`":"1:8420:2879"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:4188-0:560:2458":{"id":"a:2:3174:4188-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[75,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:204:1178"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32294:4113-0:482:2619":{"id":"a:2:32294:4113-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:209:2450":{"id":"0:209:2450","crate_id":0,"name":"write","span":{"filename":"src/write/encoder_string_writer.rs","begin":[83,4],"end":[85,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:528:3122":{"id":"b:2:2926-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:2663":{"id":"0:47:2663","crate_id":0,"name":"Base64Display","span":{"filename":"src/display.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"A convenience wrapper for base64'ing bytes into a format string without heap allocation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:53","a:2:3139:247-0:47:2663","a:2:42098:3955-0:47:2663","a:2:32294:4113-0:47:2663","a:2:42097:3956-0:47:2663","a:2:3174:4188-0:47:2663","a:2:32235:237-0:47:2663","b:2:2646-0:47:2663","b:2:2643-0:47:2663","b:2:2920-0:47:2663","b:2:2916-0:47:2663","b:2:2926-0:47:2663","b:2:3758-0:47:2663","b:2:2931-0:47:2663","b:5:5866-0:47:2663","0:58"]}}},"0:373:2974":{"id":"0:373:2974","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[439,0],"end":[446,1]},"visibility":"public","docs":"The decode estimate used by an engine implementation. Users do not need to interact with this;\nit is only for engine implementors.\n\nImplementors may store relevant data here when constructing this to avoid having to calculate\nthem again during actual decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:374:2462"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:2922:832":{"id":"2:2922:832","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:480-0:325:3232":{"id":"0:480-0:325:3232","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[20,0],"end":[20,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::URL_SAFE_NO_PAD","name":"BASE64_URL_SAFE_NO_PAD","id":"0:325:3232","glob":false}}},"2:2935:1806":{"id":"2:2935:1806","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2930:1808":{"id":"2:2930:1808","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13320:28936":{"id":"2:13320:28936","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[62,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3586:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:106:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:531":{"id":"0:531","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[54,9],"end":[54,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:532:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:141:2789":{"id":"a:2:32235:237-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:47:2663":{"id":"b:2:2926-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2926-0:482:2619":{"id":"b:2:2926-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:573:2751":{"id":"0:573:2751","crate_id":0,"name":"InvalidByte","span":{"filename":"src/decode.rs","begin":[18,4],"end":[18,26]},"visibility":"default","docs":"An invalid byte was found in the input. The offset and offending byte are provided.\n\nPadding characters (`=`) interspersed in the encoded form are invalid, as they may only\nbe present as the last 0-2 bytes of input.\n\nThis error may also indicate that extraneous trailing input bytes are present, causing\notherwise valid padding to no longer be the last bytes of input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:575:1973","0:576:1974"]},"discriminant":null}}},"b:2:2931-0:492:2620":{"id":"b:2:2931-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13198:34564":{"id":"2:13198:34564","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:47:2663":{"id":"b:2:3758-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:321:2607":{"id":"0:321:2607","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[326,4],"end":[328,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337:2606":{"id":"0:337:2606","crate_id":0,"name":"config","span":{"filename":"src/engine/mod.rs","begin":[95,4],"end":[95,38]},"visibility":"default","docs":"Returns the config for this engine.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:331:2452","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:550:3349":{"id":"0:550:3349","crate_id":0,"name":"ReservedByte","span":{"filename":"src/alphabet.rs","begin":[151,4],"end":[151,20]},"visibility":"default","docs":"`=` cannot be used","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:552:1973"]},"discriminant":null}}},"b:5:5866-0:47:2663":{"id":"b:5:5866-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[106,0],"end":[110,1]},"visibility":"default","docs":"Pushes the str onto the end of the String","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:211:2791","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:2942"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2931-0:572:2463":{"id":"b:2:2931-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:595:2464":{"id":"b:2:2643-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3760:1821":{"id":"2:3760:1821","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39718:7290","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467-0:454:618":{"id":"0:467-0:454:618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[268,24],"end":[268,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode","name":"decode","id":"0:454:618","glob":false}}},"b:2:2926-0:86:2679":{"id":"b:2:2926-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:528:3122":{"id":"b:2:2643-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42097:3956-0:595:2464":{"id":"a:2:42097:3956-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:572:2463":{"id":"b:2:2926-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:472-0:465:2462":{"id":"0:472-0:465:2462","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[270,45],"end":[270,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decoded_len_estimate","name":"decoded_len_estimate","id":"0:465:2462","glob":false}}},"0:462:2461":{"id":"0:462:2461","crate_id":0,"name":"decode_engine_slice","span":{"filename":"src/decode.rs","begin":[123,0],"end":[129,1]},"visibility":"public","docs":"Decode the input into the provided output slice.\n\nSee [Engine::decode_slice].","links":{"Engine::decode_slice":"0:360:3085"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_slice"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2451":{"id":"0:230:2451","crate_id":0,"name":"engine","span":{"filename":"src/engine/mod.rs","begin":[1,0],"end":[478,1]},"visibility":"public","docs":"Provides the [Engine] abstraction and out of the box implementations.","links":{"Engine":"0:331:2452"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:243:2618","0:329-0:482:2619","0:330-0:492:2620","0:331:2452","0:371:2584","0:373:2974","0:501:3109","0:518:2999"],"is_stripped":false}}},"b:2:2931-0:528:3122":{"id":"b:2:2931-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2931-0:47:2663":{"id":"b:2:2931-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:576:1974":{"id":"0:576:1974","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[18,23],"end":[18,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:128:2450":{"id":"0:128:2450","crate_id":0,"name":"write","span":{"filename":"src/write/mod.rs","begin":[1,0],"end":[11,18]},"visibility":"public","docs":"Implementations of `io::Write` to transparently handle base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:226-0:141:2789","0:228-0:190:2790","0:229-0:211:2791"],"is_stripped":false}}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[32,0],"end":[45,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:446:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13325:29427":{"id":"2:13325:29427","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:39062"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:86:2679":{"id":"b:2:2931-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:566:802":{"id":"0:566:802","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[145,16],"end":[145,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3955-0:572:2463":{"id":"a:2:42098:3955-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13257:34571":{"id":"2:13257:34571","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12885:3726","str::split":"2:13248:29026","prim@char":"1:12341:471","`DoubleEndedIterator`":"2:8263:129","str::rsplit_terminator":"2:13260:34572"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43945:4338","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:518:2999":{"id":"b:2:2931-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3758-0:190:2790":{"id":"b:2:3758-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:489:802":{"id":"0:489:802","crate_id":0,"name":"fmt","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,9],"end":[23,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:595:2464":{"id":"a:2:3139:247-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3139:247-0:190:2790":{"id":"a:2:3139:247-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42097:3956-0:572:2463":{"id":"a:2:42097:3956-0:572:2463","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:501:3109":{"id":"b:2:2926-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:454:618":{"id":"0:454:618","crate_id":0,"name":"decode","span":{"filename":"src/decode.rs","begin":[89,0],"end":[91,1]},"visibility":"public","docs":"Decode base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::decode].","links":{"STANDARD":"0:322:2617","Engine::decode":"0:350:618"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3956-0:190:2790":{"id":"a:2:42097:3956-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:477-0:322:2617":{"id":"0:477-0:322:2617","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[17,0],"end":[17,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::STANDARD","name":"BASE64_STANDARD","id":"0:322:2617","glob":false}}},"2:13319:29422":{"id":"2:13319:29422","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39904:15453","Self::is_ascii":"2:13318:28932"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39904:15453","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13321:28937":{"id":"2:13321:28937","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:595:2464":{"id":"b:2:2920-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13226:32672":{"id":"2:13226:32672","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13227:32682"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44169:4334","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:4113-0:141:2789":{"id":"a:2:32294:4113-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3758-0:86:2679":{"id":"b:2:3758-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:228-0:190:2790":{"id":"0:228-0:190:2790","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,28],"end":[7,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder_string_writer::EncoderStringWriter","name":"EncoderStringWriter","id":"0:190:2790","glob":false}}},"a:2:32235:237-0:501:3109":{"id":"a:2:32235:237-0:501:3109","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2919:3266":{"id":"2:2919:3266","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2893:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3955-0:492:2620":{"id":"a:2:42098:3955-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:509:475":{"id":"0:509:475","crate_id":0,"name":"clone","span":{"filename":"src/engine/mod.rs","begin":[452,9],"end":[452,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodePaddingMode","id":"0:501:3109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523:699":{"id":"0:523:699","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[463,9],"end":[463,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:482:2619":{"id":"b:2:2920-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13278:34573":{"id":"2:13278:34573","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12885:3726","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::matches":"2:13275:3680"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44117:4342","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:190:2790":{"id":"b:2:2926-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:355:3071":{"id":"0:355:3071","crate_id":0,"name":"decode_vec","span":{"filename":"src/engine/mod.rs","begin":[302,4],"end":[339,5]},"visibility":"default","docs":"Decode the `input` into the supplied `buffer`.\n\nWrites into the supplied `Vec`, which may allocate if its internal buffer isn't big enough.\nReturns a `Result` containing an empty tuple, aka `()`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::PAD);\n\nfn main() {\n    use base64::Engine;\n    let mut buffer = Vec::<u8>::new();\n    // with the default engine\n    general_purpose::STANDARD\n        .decode_vec(\"aGVsbG8gd29ybGR+Cg==\", &mut buffer,).unwrap();\n    println!(\"{:?}\", buffer);\n\n    buffer.clear();\n\n    // with a custom engine\n    CUSTOM_ENGINE.decode_vec(\n        \"aGVsbG8gaW50ZXJuZXR-Cg==\",\n        &mut buffer,\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["buffer",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:560:2458":{"id":"0:560:2458","crate_id":0,"name":"EncodeSliceError","span":{"filename":"src/encode.rs","begin":[146,0],"end":[149,1]},"visibility":"public","docs":"Errors that can occur while encoding into a slice.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:561:2757"],"impls":["a:2:3139:247-0:560:2458","a:2:42098:3955-0:560:2458","a:2:32294:4113-0:560:2458","a:2:42097:3956-0:560:2458","a:2:3174:4188-0:560:2458","a:2:32235:237-0:560:2458","b:2:2646-0:560:2458","b:2:2643-0:560:2458","b:2:2920-0:560:2458","b:2:2916-0:560:2458","b:2:2926-0:560:2458","b:2:3758-0:560:2458","b:2:2931-0:560:2458","b:5:5866-0:560:2458","b:5:738-0:560:2458","0:563","0:567","0:565","0:428","0:568","0:570","0:426"]}}},"0:377-0:331:2452":{"id":"0:377-0:331:2452","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[254,0],"end":[254,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"engine::Engine","name":"Engine","id":"0:331:2452","glob":false}}},"a:2:3174:4188-0:482:2619":{"id":"a:2:3174:4188-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:497:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2646-0:141:2789":{"id":"b:2:2646-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[54,23],"end":[54,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2916-0:518:2999":{"id":"b:2:2916-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13251:29565":{"id":"2:13251:29565","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12700:4350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:560:2458":{"id":"b:2:2916-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13287:34576":{"id":"2:13287:34576","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13195":{"id":"2:13195","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13196:997","2:13197:2731","2:13198:34564","2:13199:34565","2:13201:34566","2:13204:3342","2:13205:34567","2:13206:336","2:13207:29538","2:13208:29535","2:13210:3308","2:13212:29536","2:13214:29537","2:13216:34568","2:13217:34569","2:13218:29558","2:13219:29559","2:13220:29562","2:13221:29563","2:13223:7229","2:13224:7367","2:13225:2597","2:13226:32672","2:13227:32682","2:13228:29027","2:13229:34570","2:13230:32668","2:13231:3267","2:13234:29575","2:13237:29576","2:13240:4285","2:13244:4250","2:13248:29026","2:13251:29565","2:13254:29567","2:13257:34571","2:13260:34572","2:13263:29569","2:13266:29571","2:13269:29573","2:13272:29574","2:13275:3680","2:13278:34573","2:13281:34574","2:13284:34575","2:13287:34576","2:13289:34577","2:13291:34578","2:13293:34579","2:13294:34580","2:13295:34581","2:13298:34582","2:13301:27210","2:13304:29577","2:13307:34583","2:13310:34584","2:13313:34585","2:13316:34586","2:13318:28932","2:13319:29422","2:13320:28936","2:13321:28937","2:13322:28938","2:13323:29425","2:13324:29426","2:13325:29427","2:13326:34587","2:13328:10011","2:13329:34588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2934:137":{"id":"2:2934:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32159:3859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[38,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["0:62:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:158:802":{"id":"0:158:802","crate_id":0,"name":"fmt","span":{"filename":"src/write/encoder.rs","begin":[84,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:475":{"id":"0:491:475","crate_id":0,"name":"clone","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[23,16],"end":[23,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:297:2584":{"id":"0:297:2584","crate_id":0,"name":"Config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[45,4],"end":[45,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:42097:3956-0:47:2663":{"id":"a:2:42097:3956-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13221:29563":{"id":"2:13221:29563","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13220:29562"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13254:29567":{"id":"2:13254:29567","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12885:3726","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::split":"2:13248:29026"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43913:4336","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:2584":{"id":"0:371:2584","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[422,0],"end":[432,1]},"visibility":"public","docs":"The minimal level of configuration that engines must support.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:372:2607"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:320"]}}},"a:2:42097:3956-0:518:2999":{"id":"a:2:42097:3956-0:518:2999","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:518:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:582:1973":{"id":"0:582:1973","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[26,22],"end":[26,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:465:2462":{"id":"0:465:2462","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/decode.rs","begin":[149,0],"end":[153,1]},"visibility":"public","docs":"Returns a conservative estimate of the decoded size of `encoded_len` base64 symbols (rounded up\nto the next group of 3 decoded bytes).\n\nThe resulting length will be a safe choice for the size of a decode buffer, but may have up to\n2 trailing bytes that won't end up being needed.\n\n# Examples\n\n```\nuse base64::decoded_len_estimate;\n\nassert_eq!(3, decoded_len_estimate(1));\nassert_eq!(3, decoded_len_estimate(2));\nassert_eq!(3, decoded_len_estimate(3));\nassert_eq!(3, decoded_len_estimate(4));\n// start of the next quad of encoded symbols\nassert_eq!(6, decoded_len_estimate(5));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["encoded_len",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:3379":{"id":"0:400:3379","crate_id":0,"name":"IMAP_MUTF7","span":{"filename":"src/alphabet.rs","begin":[197,0],"end":[199,2]},"visibility":"public","docs":"The alphabet used in IMAP-modified UTF-7 (with `+` and `,`).\n\nSee [RFC 3501](https://tools.ietf.org/html/rfc3501#section-5.1.3)","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:546:1973":{"id":"0:546:1973","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[147,19],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"2:13240:4285":{"id":"2:13240:4285","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42005:191","prim@char":"1:12341:471","self::pattern":"2:12885:3726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5634:3539":{"id":"5:5634:3539","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:1178":{"id":"0:204:1178","crate_id":0,"name":"new","span":{"filename":"src/write/encoder_string_writer.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will encode into a new `String` with the provided config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:482:2619":{"id":"b:2:2931-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13326:34587":{"id":"2:13326:34587","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4951:34587"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44194:4346","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:605":{"id":"0:605","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13328:10011":{"id":"2:13328:10011","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4952:10011"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44203:4347","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3956-0:482:2619":{"id":"a:2:42097:3956-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2920-0:528:3122":{"id":"b:2:2920-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:738-0:528:3122":{"id":"b:5:738-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:4305","5:741:4306","5:742:4307"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:200:2766":{"id":"0:200:2766","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder_string_writer.rs","begin":[67,4],"end":[72,5]},"visibility":"public","docs":"Encode all remaining buffered data, including any trailing incomplete input triples and\nassociated padding.\n\nReturns the base64-encoded form of the accumulated written data.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"S"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:47:2663":{"id":"b:2:2646-0:47:2663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:2663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2920-0:560:2458":{"id":"b:2:2920-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:528:3122":{"id":"a:2:32235:237-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:570":{"id":"0:570","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[145,34],"end":[145,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5635:28934":{"id":"5:5635:28934","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13321:28937"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13284:34575":{"id":"2:13284:34575","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12885:3726","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::match_indices":"2:13281:34574"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44063:4344","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:2617":{"id":"0:396:2617","crate_id":0,"name":"STANDARD","span":{"filename":"src/alphabet.rs","begin":[171,0],"end":[173,2]},"visibility":"public","docs":"The standard alphabet (with `+` and `/`) specified in [RFC 4648][].\n\n[RFC 4648]: https://datatracker.ietf.org/doc/html/rfc4648#section-4","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:243:2618":{"id":"0:243:2618","crate_id":0,"name":"general_purpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[1,0],"end":[352,62]},"visibility":"public","docs":"Provides the [GeneralPurpose] engine and associated config types.","links":{"GeneralPurpose":"0:482:2619"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:482:2619","0:492:2620","0:322:2617","0:323:3227","0:324:3230","0:325:3232","0:326:2621","0:327:3228"],"is_stripped":false}}},"a:2:32235:237-0:190:2790":{"id":"a:2:32235:237-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:575:1973":{"id":"0:575:1973","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[18,16],"end":[18,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[30,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:295:1178"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13289:34577":{"id":"2:13289:34577","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:603":{"id":"0:603","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,16],"end":[51,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:604:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:595:2464":{"id":"0:595:2464","crate_id":0,"name":"DecodeSliceError","span":{"filename":"src/decode.rs","begin":[52,0],"end":[57,1]},"visibility":"public","docs":"Errors that can occur while decoding into a slice.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:596:2463","0:599:2757"],"impls":["a:2:3139:247-0:595:2464","a:2:42098:3955-0:595:2464","a:2:32294:4113-0:595:2464","a:2:42097:3956-0:595:2464","a:2:3174:4188-0:595:2464","a:2:32235:237-0:595:2464","b:2:2646-0:595:2464","b:2:2643-0:595:2464","b:2:2920-0:595:2464","b:2:2916-0:595:2464","b:2:2926-0:595:2464","b:2:3758-0:595:2464","b:2:2931-0:595:2464","b:5:5866-0:595:2464","b:5:738-0:595:2464","0:448","0:450","0:603","0:608","0:605","0:606","0:601","0:452"]}}},"2:13214:29537":{"id":"2:13214:29537","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:372:2607":{"id":"0:372:2607","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/mod.rs","begin":[431,4],"end":[431,37]},"visibility":"default","docs":"Returns `true` if padding should be added after the encoded output.\n\nPadding is added outside the engine's encode() since the engine may be used\nto encode only a chunk of the overall output, so it can't always know when\nthe output is \"done\" and would therefore need padding (if configured).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:453:832":{"id":"0:453:832","crate_id":0,"name":"from","span":{"filename":"src/decode.rs","begin":[79,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:86:2679":{"id":"b:2:2920-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:319:60":{"id":"0:319:60","crate_id":0,"name":"default","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[320,4],"end":[322,5]},"visibility":"default","docs":"Delegates to [GeneralPurposeConfig::new].","links":{"GeneralPurposeConfig::new":"0:314:1178"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:435-0:424:2457":{"id":"0:435-0:424:2457","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[263,45],"end":[263,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encoded_len","name":"encoded_len","id":"0:424:2457","glob":false}}},"0:416:2455":{"id":"0:416:2455","crate_id":0,"name":"encode_engine_string","span":{"filename":"src/encode.rs","begin":[38,0],"end":[44,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied `String`.\n\n See [Engine::encode_string].","links":{"Engine::encode_string":"0:342:2655"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_string\")]","#[cfg(any(feature = \"alloc\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_string"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:595:2464":{"id":"b:2:3758-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32294:4113-0:560:2458":{"id":"a:2:32294:4113-0:560:2458","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:4113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:560:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2646-0:86:2679":{"id":"b:2:2646-0:86:2679","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:86:2679","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:459:2460":{"id":"0:459:2460","crate_id":0,"name":"decode_engine_vec","span":{"filename":"src/decode.rs","begin":[111,0],"end":[117,1]},"visibility":"public","docs":"Decode from string reference as octets.\n\nSee [Engine::decode_vec].","links":{"Engine::decode_vec":"0:355:3071"},"attrs":["#[cfg(any(feature = \"alloc\", test))]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_vec\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_vec"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["buffer",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:2463","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2884:77","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13217:34569":{"id":"2:13217:34569","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12347:1721","crate::ops::IndexMut":"2:3417:3842","str::slice_unchecked":"2:13216:34568"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13318:28932":{"id":"2:13318:28932","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:492:2620":{"id":"b:2:2926-0:492:2620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:492:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2916-0:190:2790":{"id":"b:2:2916-0:190:2790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:190:2790","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2646-0:528:3122":{"id":"b:2:2646-0:528:3122","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:528:3122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:27059"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5621:35284":{"id":"5:5621:35284","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:482:2619":{"id":"b:2:2916-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3266"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:72:2449":{"id":"0:72:2449","crate_id":0,"name":"read","span":{"filename":"src/read/mod.rs","begin":[1,0],"end":[6,18]},"visibility":"public","docs":"Implementations of `io::Read` to transparently decode base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:127-0:86:2679"],"is_stripped":false}}},"0:332:2584":{"id":"0:332:2584","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[41,4],"end":[41,24]},"visibility":"default","docs":"The config type used by this engine","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Config","id":"0:371:2584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:601":{"id":"0:601","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,9],"end":[51,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:602:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323:3227":{"id":"0:323:3227","crate_id":0,"name":"STANDARD_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[335,0],"end":[335,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [NO_PAD] config.","links":{"NO_PAD":"0:327:3228","GeneralPurpose":"0:482:2619","alphabet::STANDARD":"0:396:2617"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:3174:4188-0:141:2789":{"id":"a:2:3174:4188-0:141:2789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:4188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:141:2789","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2643-0:482:2619":{"id":"b:2:2643-0:482:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3669"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:314:1178":{"id":"0:314:1178","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[257,4],"end":[264,5]},"visibility":"public","docs":"Create a new config with `padding` = `true`, `decode_allow_trailing_bits` = `false`, and\n`decode_padding_mode = DecodePaddingMode::RequireCanonicalPadding`.\n\nThis probably matches most people's expectations, but consider disabling padding to save\na few bytes unless you specifically need it for compatibility with some legacy system.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:595:2464":{"id":"b:2:2926-0:595:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5617:35283":{"id":"5:5617:35283","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:3716","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:304:3716","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[44,0],"end":[190,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["encode","decode","encode_string","encode_slice","decode_vec","decode_slice","decode_slice_unchecked"],"trait":{"name":"Engine","id":"0:331:2452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:482:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:2584","0:298:2974","0:305:2606"],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"6:4971:8623":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"18:680:5388":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:11547:5487":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:3553:3766":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:44481:7372":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:617:10010":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:2323:21933":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"6:8271:9319":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:11904:7672":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:13844:5952":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:12508:5746":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:1699:8501":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:4942:8612":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:10530:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"11:2423:3849":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:4531:5055":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:43031:3745":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:7723:28903":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:41909:32834":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:10068:22848":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:2312:2449":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:23078:7269":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:42087:3953":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:5122:8677":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:9185:5274":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:2062:15549":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:7885:5287":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"18:598:36146":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:44870:7383":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:44641:4316":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:8879:5271":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:6263:6745":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:13594:5898":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:9214:10208":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:5472:8822":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:11189:5584":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:4916:8602":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:8012:9304":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:9969:33389":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:5296:977":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:7993:4867":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:12659:5755":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:14933:6241":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:8328:9332":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:4133:10124":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:12341:471":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:0:3576":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:2537:15538":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"2:8177:15502":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:6566:3707":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:3329:15378":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:12623:4356":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:7686:6971":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:47097:7506":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:6874:9123":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:40617:7297":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:12278:5717":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:5770:9110":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:43710:7348":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:22878:5094":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"11:883:7064":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:3601:15422":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"11:1160:5084":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:7944:4890":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:33875:15521":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:2637:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"5:1549:7071":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"11:1887:3849":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:23009:5096":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:5502:8832":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"5:5470:4483":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11166:5583":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:6574:6653":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"5:1509:3849":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:16121:6549":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:2698:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:8774:7337":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:4976:5069":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:15720:6448":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:11654:7573":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:7389:9207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:44203:4347":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:7461:9219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:0:3577":{"crate_id":17,"path":["object"],"kind":"module"},"2:21593:32642":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:14545:6077":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:12851:5769":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:7355:6912":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:2748:6626":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:13325:5839":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:8265:9318":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:26051:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:13116:5793":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:8288:9324":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:922:3707":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"15:394:21898":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:7540:3717":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:15521:6401":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:46236:7430":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:40704:7303":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:8249:7589":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:5773:10191":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:7595:15585":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:7566:4804":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:10755:4845":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"0:547:3348":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","UnprintableByte"],"kind":"variant"},"1:3430:3809":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:47126:7509":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:4580:3747":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:7727:6651":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:578:8363":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:14436:6066":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:4787:8516":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:15434:6352":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:42098:3955":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:2854:6631":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:2074:9351":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:7933:3816":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:6927:6845":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:46441:7455":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:5252:7552":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:23199:7280":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"6:5370:8763":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"18:659:5381":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:2127:7151":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"1:1636:7077":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:6542:8997":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:16050:5832":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"13:110:36113":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:45947:7406":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:3574:15529":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"18:754:5403":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:3996:3849":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:4532:7181":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:40363:32833":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:42176:4459":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:2936:21935":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:9721:7583":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:11227:5587":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:11755:5646":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"5:1531:7057":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:6532:8990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13766:5939":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:4780:4833":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:5236:8709":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:23177:7278":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"5:7107:4825":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:13437:5856":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:5489:8827":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"16:542:6586":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:8812:10186":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:44327:7368":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:16079:6538":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"18:481:5355":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"0:542:2754":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","InvalidLength"],"kind":"variant"},"16:4062:5050":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:1707:8505":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:32324:4191":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"11:123:4765":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:6648:6809":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:12408:5733":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:3297:35638":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"11:102:8273":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"0:518:2999":{"crate_id":0,"path":["base64","engine","DecodeMetadata"],"kind":"struct"},"2:44815:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:3586:2699":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:3671:3780":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:597:5418":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:6177:4873":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:1510:8381":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:11609:7669":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"16:6026:6582":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:11693:9452":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:15214:6295":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:13606:5901":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:13972:5669":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:3174:4188":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:40435:15448":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:4882:5066":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:1680:8494":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"0:38:2448":{"crate_id":0,"path":["base64","display"],"kind":"module"},"2:46204:7428":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:10997:5567":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:23020:10121":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:5102:8675":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:7984:9301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:9289:7635":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:5031:8655":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:8259:6932":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:5927:6687":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:7925:4888":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:4885:8584":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:15734:6450":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:12432:2611":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:4952:8615":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:10155:5541":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6278:6747":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:3475:6659":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:8306:9327":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:16138:6551":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:8214:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46612:7462":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2:1958:671":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:8234:4115":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:12388:5731":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:5064:8673":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:2539:15539":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"6:0:1002":{"crate_id":6,"path":["libc"],"kind":"module"},"17:15582:6408":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:14575:5736":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:7376:3844":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:16212:6571":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:12371:5774":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:13363:5845":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"9:0:3570":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:1369:5084":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:40552:15585":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:12700:4350":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:45830:7393":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:1843:3846":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"11:2231:5622":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:8300:9326":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:6353:6593":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:43741:7351":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:6872:6840":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:43730:7350":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"5:7668:3709":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:10985:31773":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"6:523:8333":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:10355:7651":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:13024:22870":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:8852:7548":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:11848:7542":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:6560:6636":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:12416:5255":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:43229:7330":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:12175:5706":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:1621:8458":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:11212:4350":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:11916:32106":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:7449:3849":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:3652:31635":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:14723:6093":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:7497:6952":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:6657:9060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"18:706:4325":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:8650:7609":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:33663:15518":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:1628:8462":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:44617:4319":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:15655:6429":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:5911:3766":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:22493:10329":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"9:53:9732":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:5466:4482":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"18:635:5380":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:23100:7271":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"17:12768:22846":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"16:4560:5056":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:22996:5095":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:43913:4336":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:3042:9341":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:22927:32771":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:43841:3720":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"5:4848:802":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:3614:33367":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:3329:6658":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:9743:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"18:573:5357":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"13:0:3567":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:8528:3789":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:22889:32811":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:3480:3796":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:12597:5752":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:13292:5833":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:6693:3849":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:22279:10094":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:16105:6544":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:7604:6650":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:1965:7172":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:2708:6624":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:1077:4776":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2863:10094":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"14:202:3706":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:40515:5232":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"17:10915:36144":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"0:331:2452":{"crate_id":0,"path":["base64","engine","Engine"],"kind":"trait"},"2:1882:3766":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"2:33529:10235":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:3900:7541":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:15222:6297":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:15944:5820":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"15:288:21888":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:968:7062":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12107:5557":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:6524:8985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:2539:9345":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:3835:10106":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:4856:5065":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:9350:27223":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:4877:10175":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:2770:9348":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:13834:4858":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"5:3046:34411":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:11827:7541":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:11233:9435":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"5:7634:4810":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"11:430:36111":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:3661:3777":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:5314:8746":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:11090:4895":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:44902:7388":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:10114:3759":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"5:6452:1927":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"2:23133:7274":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:9329:7641":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:9425:4884":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:9671:22844":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:7590:6649":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:860:6595":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"6:1692:8498":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:1204:34438":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:5415:6661":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11497:5612":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"11:1007:6876":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:5756:6667":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:11699:9453":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:6417:8935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:12352:738":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:8197:9314":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:746:10108":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"11:1142:7070":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:4718:5060":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:42965:3745":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:12863:5770":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:3132:4186":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:15646:6427":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:2640:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:2303:21907":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:7769:6974":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:21620:32647":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:8611:10152":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:2479:10086":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:34394:6895":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:11648:7671":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:12646:4353":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:4433:15425":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:7330:9173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:8625:7599":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:12900:5773":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:42459:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:13946:5967":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:13089:5788":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"11:2498:21858":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:12959:15404":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:15769:6463":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:10227:7324":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"18:507:5357":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:8560:7601":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:2037:5422":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11730:5642":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:8316:4114":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"11:2542:8280":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:13187:5806":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:4587:5057":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:22160:32644":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:7132:4828":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"0:398:3372":{"crate_id":0,"path":["base64","alphabet","CRYPT"],"kind":"constant"},"6:6763:9094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:32236:2595":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:43023:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:12885:3726":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:7446:9214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:2838:6630":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:6072:15822":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:42119:3989":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:1590:7148":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:12347:1721":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:7452:9216":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:11931:7576":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:10578:7217":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:5347:5075":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:9265:7631":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:15814:6469":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:13609:34403":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:11225:31774":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:9278:7632":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"11:1066:21862":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:4147:10125":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"0:373:2974":{"crate_id":0,"path":["base64","engine","DecodeEstimate"],"kind":"trait"},"11:673:4459":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"11:351:36103":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:13661:7239":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:1559:8412":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"11:687:4460":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:8006:9302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:14212:6027":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:5897:6681":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:44117:4342":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:12707:5759":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"11:2151:7067":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:14847:6196":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:16259:5849":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:45997:7409":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:47080:7505":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:15569:6402":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:2523:672":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:5083:8674":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"0:550:3349":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","ReservedByte"],"kind":"variant"},"17:261:5412":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:39549:3841":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:2735:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:44637:4315":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:3294:7866":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:2713:4846":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"11:837:7059":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:4979:8628":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:15197:6292":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:10325:3737":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:46951:7500":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"18:80:27040":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:6902:9354":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:11354:5602":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:12584:5558":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"6:4909:8598":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:12900:4325":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:4400:7544":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:15426:6351":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"11:2554:36102":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:6609:9039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:23166:7277":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"11:396:4769":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:15116:6271":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:42994:7003":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:12478:5741":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:10877:5559":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:1580:8426":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:31024:4203":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:4391:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:47231:7516":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:1517:8384":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:44629:4320":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:3756:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:43812:7356":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:44891:32804":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"17:437:5416":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:2808:6629":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:44625:4322":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:42264:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:45815:7390":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:43266:7337":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11075:5576":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:6566:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:40644:7298":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:4891:8586":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:42184:4460":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:6849:6839":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40992:3789":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:44819:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:9948:802":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"17:11853:5660":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:11142:5557":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"11:1896:3846":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:980:7064":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:47137:7510":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:5509:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:43069:3746":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"5:6934:3852":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"0:371:2584":{"crate_id":0,"path":["base64","engine","Config"],"kind":"trait"},"17:13899:5961":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:42342:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:1503:8379":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:46980:7501":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:44491:7376":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:4992:8634":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:9451:7569":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:32766:6889":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:42715:3736":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"7:32:21769":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:8175:7034":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:6821:9112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4924:8604":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:8862:4459":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:7561:9280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:42225:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:9406:3766":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:42729:3737":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:1607:3849":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:13814:5949":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:13855:5953":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12454:5739":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:44939:5261":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:11042:5570":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:11293:22896":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:14876:6207":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:47059:7504":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:21848:10239":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:47178:7513":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:46154:7426":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:3014:21936":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:14079:5987":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:6636:9048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:8155:7033":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:4733:3748":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:6562:9013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"11:1051:7067":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:3410:3846":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:6342:36131":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:8072:10017":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:41231:3817":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"0:72:2449":{"crate_id":0,"path":["base64","read"],"kind":"module"},"2:45894:7399":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:44159:4335":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:45976:7408":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"18:531:5361":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:11431:7223":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:12891:3715":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:11668:7574":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:559:8353":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:5014:8647":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:7575:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:14475:6069":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:5400:8778":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"18:589:5367":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"11:1107:7069":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:42201:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:532:8339":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:5581:8858":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:15931:5806":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:14994:6248":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:10333:3740":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:6768:9095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:10534:36145":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:46591:7461":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:2592:6619":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:46014:7410":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"0:502:3111":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","Indifferent"],"kind":"variant"},"17:11089:5577":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:8548:3787":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:1610:3707":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:15368:6337":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:6738:9085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"11:2383:4459":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:42736:3738":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"3:0:505":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:12264:5716":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:43469:7343":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"18:735:27050":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:2699:3802":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:3059:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:22455:10326":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:15992:6523":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:12362:5730":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:10927:7584":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:749:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"16:6098:22796":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:14788:6144":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:586:8367":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:11403:4340":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:22771:7246":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:6707:7193":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:4424:5052":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"0:324:3230":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE"],"kind":"constant"},"5:2220:7152":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:11026:22878":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:15138:6275":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:6606:6805":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:21651:32635":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:6031:4866":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:44392:7370":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:4002:7542":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:10538:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:3666:15380":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:5329:8750":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"10:0:3571":{"crate_id":10,"path":["adler"],"kind":"module"},"8:0:3569":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:3185:3710":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11324:5598":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:2463:10081":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:47009:7502":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:5665:8899":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"0:378:2453":{"crate_id":0,"path":["base64","alphabet"],"kind":"module"},"6:5457:8813":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:11567:5619":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:12683:5757":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:650:4619":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:6505:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:8683:4461":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:5483:8825":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:38890:15528":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:6543:6796":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:14560:6081":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"18:563:5366":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:2309:7538":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:586:7525":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:2636:6621":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:11289:7221":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:44017:4339":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:6793:10203":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:23651:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:5296:8739":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:1340:7067":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"7:79:21776":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"0:506:3115":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireNone"],"kind":"variant"},"17:13526:5878":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:9350:3954":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:15760:6459":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:4468:5053":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:14489:6070":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:10976:3785":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:23041:10094":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:11493:5611":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"9:482:21782":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:8093:5267":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:14111:5991":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"0:322:2617":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD"],"kind":"constant"},"1:3432:3810":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:7412:9208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:1207:5421":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:15748:6457":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:7610:5091":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:2004:785":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:669:7528":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"18:521:27052":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:14372:6047":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:6352:4856":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:15701:6443":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:15678:6442":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:41002:7205":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:8182:7583":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:46268:7432":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:3614:6660":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:46784:7497":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:40733:7188":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:5134:8678":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:8216:7039":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:44470:15411":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:46352:7436":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:4379:7179":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9886:22861":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:45909:7400":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:7366:9189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:8349:2759":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"0:528:3122":{"crate_id":0,"path":["base64","alphabet","Alphabet"],"kind":"struct"},"1:5986:4093":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:4813:9202":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:521:4794":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:47152:7511":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:39621:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:13235:5079":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:7168:7643":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:11324:4336":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:3134:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:40589:10065":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:10185:5404":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:5320:8747":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"18:515:5354":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:5092:10173":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:14529:6075":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:22546:10330":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:11595:5629":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:6471:8961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:43484:9434":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:6880:9124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:5020:8650":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:957:10030":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:21622:32639":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:40523:5233":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:16198:6567":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:4880:10153":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:10317:5408":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6427:6785":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:47117:7508":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:11631:27189":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"17:2175:22923":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:10612:5554":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:11417:4339":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:6414:10332":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:15456:6357":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:11005:5267":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"6:6721:9082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:4614:5058":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"18:608:5374":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:4897:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:32978:6886":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:44194:4346":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:150:4763":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:43865:3719":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:39553:7288":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:5960:6693":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:12621:5753":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:43871:4333":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:46043:7412":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:15273:6310":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:40827:7201":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:3181:4190":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"5:839:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:46335:7435":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:5174:8681":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13877:5960":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:10573:10098":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:44169:4334":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:10759:5557":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:21637:32646":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:5477:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:15635:6426":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:7888:6988":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:40857:7203":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:11242:5588":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:367:7523":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:5630:8885":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:11825:5657":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:4252:3766":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:12355:909":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:7111:6873":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:7645:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:2102:3805":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:6620:6807":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:12340:1174":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:12127:4904":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:9317:7639":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:3778:5045":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:10689:4843":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"11:364:4767":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:11537:5615":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:10957:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:11016:5569":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:3050:34410":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:44645:9435":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:1653:8481":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:12363:1845":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:44212:4348":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:1614:3846":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:12808:5767":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:10828:36138":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:12824:22868":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:40714:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:473:8302":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:8188:7037":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"11:1883:4459":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"18:643:5357":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:6948:6643":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:8797:7621":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:15102:6270":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:12289:5718":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:491:8310":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:2461:9353":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:6698:9075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:10818:5558":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:44298:7360":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:39603:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"0:541:3345":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError"],"kind":"enum"},"11:2304:6876":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:9202:5277":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:11682:5284":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:4771:5062":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:3264:5429":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"11:1891:3707":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:9858:22860":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:5436:8798":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:1853:7533":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:15390:6342":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:5831:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:3215:15375":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:6861:4881":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"16:6588:6797":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:13636:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:14449:6067":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:4919:10140":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"11:1676:4771":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"18:698:5391":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:44613:4317":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:4290:3766":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:4921:10141":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:2890:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:11674:5637":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:4161:10127":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:43284:7342":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:3511:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:40391:7295":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:3258:7075":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:11268:9444":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:14091:5988":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:21639:32637":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:10353:7652":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:11642:7570":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:938:7071":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:5195:435":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:16165:6560":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:10764:4470":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:5648:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"15:327:9729":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:12887:5771":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:9179:3849":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:479:8305":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:14066:5986":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:7144:10236":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:1485:8371":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"18:96:27041":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:40607:4834":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:4641:5059":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"18:726:5398":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:15313:6319":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:12043:5697":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:8253:9316":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:1184:34519":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:15473:6364":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:8029:9313":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:9755:22841":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:10975:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:11045:7628":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:1958:3311":{"crate_id":1,"path":["std","error"],"kind":"module"},"6:7429:9209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:5260:8720":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:12356:891":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:8351:9338":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:9938:22863":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:9433:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:44187:4345":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:46861:7498":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:8216:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:3597:5432":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:11423:5286":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:33596:15519":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:5266:8723":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:42498:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:7658:3708":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:1619:7074":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:7539:6647":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:14147:5997":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:1478:4459":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:40536:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:4842:3750":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:44277:15410":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2489:10091":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:22505:33463":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"6:6441:8951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:5643:8891":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:15281:6311":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:6916:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"5:6433:10333":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"17:12516:5748":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"6:6621:9046":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:2735:3793":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"0:399:3375":{"crate_id":0,"path":["base64","alphabet","BCRYPT"],"kind":"constant"},"17:12530:5750":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"5:1540:7058":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:4811:3751":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:5:1927":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"6:7314:9161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:13785:5944":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:45930:7405":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"5:4481:3766":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:15010:6249":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:10327:3738":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:8654:9189":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:3417:3842":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:2478:6614":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:403:5414":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:7098:6870":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:12365:966":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"14:160:5076":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:6317:6768":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:41797:10105":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:12906:4324":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:5052:8664":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:11144:4460":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:16032:5822":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"6:6689:9069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:3220:15376":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"6:6746:9086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"17:12238:5714":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"11:328:8277":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:8118:7028":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:9984:22864":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:40808:7310":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:30363:10107":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:12368:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:5598:8865":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:11405:5605":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:11214:5586":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:7428:22804":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:5162:4088":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:15324:6323":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:5769:6672":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:10647:4893":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:43854:4332":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:6712:4880":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:15778:6465":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:5415:8783":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:41240:4841":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:8617:7605":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:3144:3753":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:6442:6787":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:10018:22845":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:15822:6472":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:30650:32842":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"6:4965:8620":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:6895:6841":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:15058:6258":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:41016:7206":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"0:47:2663":{"crate_id":0,"path":["base64","display","Base64Display"],"kind":"struct"},"1:3336:3812":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:5617:8879":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:11715:5640":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:11286:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"17:13211:5820":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:22911:7254":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:39581:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"5:6612:4776":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:36270:6896":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:1083:7065":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:8341:9336":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:5466:8819":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:12949:5433":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:22989:9358":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:13412:5854":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:41965:5242":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:15:2450":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:46462:7456":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"11:787:7058":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:2729:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:11360:5285":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:41743:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:9726:4892":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:1916:7537":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"9:330:8286":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:2302:36077":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:43488:5254":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:3885:3846":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:4348:10151":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"11:2369:7080":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"0:128:2450":{"crate_id":0,"path":["base64","write"],"kind":"module"},"2:43802:7355":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:12313:10018":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:12362:1839":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:41943:7543":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:8680:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:11557:5617":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:15342:6327":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:4555:7546":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:5361:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:12358:903":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:13568:5893":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:12366:1911":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:41983:5244":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:12348:1811":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:9296:27195":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:7360:5283":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:23155:7276":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"5:1581:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:2083:7173":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:7339:9179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:32219:3748":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:14189:6018":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:22903:7253":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:7546:9273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:3263:35637":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:40765:7192":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:30639:3745":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:7403:4886":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"9:447:21783":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:9807:22849":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:15168:6285":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:1663:8487":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:5244:8712":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"18:651:5357":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:752:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:5536:8839":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:47038:7503":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:44829:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:8078:10055":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:16176:6565":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"6:545:8345":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:43237:7332":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:7799:6640":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"11:2140:7065":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:7741:6652":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:40378:5229":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"5:1739:4776":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:3842:5047":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:12308:9753":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:46183:7427":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:5632:7556":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:16151:6557":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"11:1923:7077":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:41250:7211":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:4913:5067":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:40742:7305":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:44099:4341":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:45845:7394":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:40541:5235":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:4217:10132":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:5802:22794":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:7478:28773":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:4766:10171":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:5022:15442":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:5831:6676":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:16187:6566":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:10495:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"2:45962:7407":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:6629:9047":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:1490:8373":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:6802:6826":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:5160:8680":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:5817:6673":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:5653:8892":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"0:396:2617":{"crate_id":0,"path":["base64","alphabet","STANDARD"],"kind":"constant"},"2:6907:4840":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"16:7570:6648":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"11:1903:7074":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:6120:22797":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:14284:6035":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:3388:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:10399:3790":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"18:113:27042":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"11:2403:4460":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"11:774:7057":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:10954:22876":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"11:700:3849":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:12433:5736":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:2548:6617":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:5528:8834":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:909:7058":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:15624:6421":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:0:3578":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:12367:1419":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:13524:7237":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:10604:7627":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:6494:6792":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:12360:1851":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:13791:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:13674:5903":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"10:36:8285":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:12586:4354":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:46479:7457":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"18:581:4203":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:11392:5604":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:5212:8701":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13509:5870":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:5700:6637":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:2684:6623":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:6782:22801":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:8535:3790":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:9916:22862":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:3387:3813":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:11743:5643":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"5:3805:3805":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:15383:6341":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:16235:6576":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:10661:5555":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:6958:3853":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:13387:5849":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:5742:6663":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13723:5928":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:8565:10104":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:974:7063":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"11:2548:8281":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:11013:7557":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:3589:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:883:4782":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:11510:5613":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"14:220:7053":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:43945:4338":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:42136:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:21605:32642":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:8518:3788":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:6672:4469":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"0:397:3230":{"crate_id":0,"path":["base64","alphabet","URL_SAFE"],"kind":"constant"},"17:15289:6312":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:7823:22806":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"5:7622:5093":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:42578:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:14298:6036":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:10994:31771":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:15126:6272":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:46314:7434":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:44609:4314":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:12056:5699":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"11:1087:36106":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11443:5609":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:6079:6588":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:15333:6326":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:10622:36143":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:43245:7333":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:497:8313":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:7321:3952":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:41216:4469":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:4117:4776":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"5:7393:7167":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:30624:7282":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"18:718:5395":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:11524:5614":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:42056:3952":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:4335:10150":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:3389:3814":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:32226:7285":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:8479:2587":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:7014:22802":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"9:392:21784":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"4:0:3568":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:44456:7371":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:4205:10129":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:44149:3787":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:2394:6610":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:7006:6852":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:12150:5704":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:14503:6073":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:16249:6577":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:1535:8395":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"18:538:5364":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:6847:7565":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"2:9787:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:4319:10148":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:9244:10209":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:11153:5558":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:1686:8497":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:219:4774":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:6664:9061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:39469:4463":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:8868:7626":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"5:956:4459":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:10321:3735":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:4481:7545":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:13926:3843":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:44928:5260":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"11:710:7055":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:2774:3804":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:14325:6040":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:10787:4851":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:21583:4203":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:10092:22866":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:4802:5063":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:3039:4305":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:12364:1827":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:2693:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:42128:4462":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:4327:10149":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:11419:5557":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:666:7526":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:16269:5854":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"6:6811:9109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:9118:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:15266:6309":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:7602:9295":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:13046:5784":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:12543:5751":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:7989:5264":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:4870:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:41765:5238":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:42003:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:44313:7365":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4800:8525":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:553:8350":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:6335:6778":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:15410:6348":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:15356:6334":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:11930:7225":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:39718:7290":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:12399:5732":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:44698:15631":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:896:7057":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:22605:10320":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:3863:3707":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:11661:5636":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13832:5950":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:13424:5855":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:13308:5837":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:21742:7244":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"19:0:1291":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:6813:6827":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:6398:6633":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:43793:7354":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:10965:10094":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:11367:5576":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:6231:6740":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:3643:2824":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:5146:8679":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:46553:7459":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:41781:5240":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:40322:7292":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"11:2326:7065":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:1475:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:9420:4883":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"11:2562:8283":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:7509:6953":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:11963:7226":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:6066:6709":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:4297:28780":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"5:3754:4776":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:5995:6696":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"0:492:2620":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurposeConfig"],"kind":"struct"},"16:3899:5048":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:3212:15374":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:14235:6028":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:47254:7517":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:42955:9426":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:8676:7547":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:11583:5625":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:5390:8772":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:40724:7185":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:12354:733":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:44045:4343":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:8257:3803":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:9461:3715":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:7551:10029":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:5636:8888":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"11:1603:7073":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:4209:10130":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:12359:884":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:13507:7234":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:2968:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:1855:7534":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5557:8851":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:10270:2824":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:39661:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:5037:5071":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:11877:5662":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:4938:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:44178:4349":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:4515:4802":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:8177:5488":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:7549:6964":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:9410:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:680:5086":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"11:2469:3846":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"5:40:3845":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:6455:4873":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:15616:6420":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:6915:9149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:9393:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:3360:3792":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:11214:5273":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:14968:6242":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:6775:4776":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"5:2210:4794":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:6400:7563":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"18:765:27051":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:3629:15377":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:1101:5084":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:22962:32775":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:22839:9355":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:3595:15423":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11841:5659":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:14260:6032":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:3020:4622":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"0:475:1338":{"crate_id":0,"path":["base64","prelude"],"kind":"module"},"6:4824:8543":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:12251:5715":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:22:817":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:10288:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8606:9437":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:5385:5541":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:5283:7552":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:14356:6046":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"0:327:3228":{"crate_id":0,"path":["base64","engine","general_purpose","NO_PAD"],"kind":"constant"},"2:21724:10238":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:4087:3707":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:4436:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:5336:8751":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"1:9163:4459":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:13146:5797":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:46221:7429":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:14587:6084":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:6019:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:7516:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:6678:9066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:1593:8433":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:8263:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:6385:6781":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:46058:7413":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:11028:27199":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:6276:4868":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:5112:8676":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:7405:3707":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:7727:3846":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:14271:6033":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:11865:5661":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:4688:10154":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:4654:5226":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:5382:8767":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:10269:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:44621:4318":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:23122:7273":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"2:43720:7349":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:7743:3847":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:5565:8853":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:6519:8984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:13121:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:39731:5097":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"5:5934:3707":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:5002:8641":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:8236:7539":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:22121:10094":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:7144:22803":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:6176:3766":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:8230:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:14414:6055":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:4801:10127":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:7132:6875":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:10887:36142":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12127:5703":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:14516:6074":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"14:7:5076":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:2322:9344":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:33730:15520":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:13375:5848":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:1441:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:40637:3819":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:5845:7558":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:8727:33393":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:8317:9331":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:32295:4192":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:43692:7345":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:6051:4809":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:4155:10126":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:7648:6970":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"11:875:7063":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:46906:7499":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:5077:3766":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:7359:9185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2979:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:14912:6236":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:42039:4460":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:43701:7346":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:5781:6638":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:44951:7389":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:42047:3849":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:39711:7289":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:14977:6246":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5225:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:43048:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:5083:10172":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:0:563":{"crate_id":2,"path":["core"],"kind":"module"},"2:32237:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:32235:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:6790:5279":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:38311:15527":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:22281:10240":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:10329:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:12189:5710":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6900:9138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:21850:7244":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:8030:4470":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:40401:5230":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:11915:22965":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:43881:3790":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:12076:5700":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:5283:8734":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:7467:9220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:4352:5051":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:5306:8742":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:41258:7213":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:43895:3791":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:10772:4846":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:39505:15379":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"15:306:21889":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:6300:6762":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:32294:4113":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:8339:7590":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:11102:4896":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:2418:6611":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:40818:7311":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:10964:7650":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"5:4322:4459":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:4501:7180":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:8058:10016":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:1671:8488":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:11445:7224":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:6976:6849":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:43822:7357":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:943:7055":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5546:8845":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:6670:9064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:46524:7458":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:3661:4459":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:6504:6793":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:562:4860":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:15190:6291":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:6435:8948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:1723:8510":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:11102:5578":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:42982:9433":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:46285:7433":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:21722:10094":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:10314:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:5445:8804":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:4789:3749":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:7695:6972":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:11787:7540":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:3196:6600":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:14246:6030":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:44837:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:40474:5262":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"5:1559:7055":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"13:229:8272":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"11:2352:7067":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:21671:10242":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:7493:3849":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:6447:8952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:22417:10325":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:5616:7555":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:4282:3766":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:3925:5049":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:11898:5664":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:43010:32843":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"5:3292:7074":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"14:0:3574":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:22560:15538":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"14:214:7051":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:5254:3818":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"5:4451:4802":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:44912:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:3347:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:11799:5653":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:10137:22842":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:12292:7675":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:5277:8731":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:5588:8860":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:674:10013":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:4932:8606":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:6714:9081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"1:9398:4877":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:12004:4330":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"16:6532:6795":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:4998:10137":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:2508:6615":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:46707:7465":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:4162:4460":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:42097:3956":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"11:1582:7072":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:12969:5776":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"11:0:3572":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:5376:8764":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:5722:6639":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:6198:7191":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:41202:7208":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:3365:15368":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:7646:15452":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:5441:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:21838:10094":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:44522:4327":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:7584:9292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:6409:8933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:14868:6206":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:22638:10319":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:43999:4340":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:10938:7645":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:41825:9425":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:13774:5941":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:7306:36134":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:3040:35614":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:6503:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:45877:7398":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:7857:6984":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:40316:4347":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:513:5417":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:3669:5448":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:13272:5832":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:6940:6847":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"18:623:36149":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:5838:4873":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:12361:1833":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:878:4460":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"12:0:3573":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:1625:7075":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:15206:6293":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:2149:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:39641:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:42617:7216":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:2070:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:4195:10128":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"14:31:5076":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:5329:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:5107:5073":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:4:1256":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:9415:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:7528:6961":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:3473:5431":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11269:22895":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"6:4837:8553":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5219:8702":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"0:400:3379":{"crate_id":0,"path":["base64","alphabet","IMAP_MUTF7"],"kind":"constant"},"1:8007:7577":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:44878:7385":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:21669:10094":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"16:8226:22808":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:4821:5438":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:1639:8470":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:11313:5596":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:11115:5580":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:7633:36126":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:40412:4348":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:2535:2681":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:9324:7640":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:2307:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:12345:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"5:1570:7056":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:2060:15548":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:6756:9093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:13485:5868":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:11341:5601":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"11:800:3707":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:3284:7076":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:45862:7397":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:5952:7559":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:47106:7507":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"10:44:7082":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:15039:6257":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:5046:8662":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:9155:7628":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:4985:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:2226:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:12443:5738":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:3334:3811":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:5423:8788":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:13959:5970":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:22718:7245":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"0:323:3227":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD_NO_PAD"],"kind":"constant"},"1:11513:4898":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"6:485:8308":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:10671:36139":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:13252:5822":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:2203:5425":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:7059:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:44663:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:6412:22798":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:22507:15538":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:7988:10094":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:12485:22991":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:10524:5553":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:3584:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:46253:7431":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:7306:9156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:11251:7569":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:2896:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:743:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:2878:6632":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:1755:4608":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"16:7656:22805":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:5407:1243":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:2067:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:9142:5273":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:6775:9096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:22373:10324":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"11:811:3846":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:5400:5542":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:564:8355":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:2728:6625":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:13738:5932":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"0:326:2621":{"crate_id":0,"path":["base64","engine","general_purpose","PAD"],"kind":"constant"},"17:11256:5590":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:10334:7535":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"17:15151:6280":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:939:4784":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:12201:5711":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:12030:5696":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:12671:5756":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:3376:2913":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:9551:7536":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:43963:4337":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:33190:15517":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:7397:36132":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:12225:5713":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:12318:5433":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:10898:7661":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:11702:5639":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:5216:32742":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:11647:5635":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:6676:7564":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:8689:15500":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:42381:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:40795:7199":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:13814:4856":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:12911:4323":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:42022:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:11634:5634":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"11:1910:7075":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:2116:7150":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:40867:7312":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:10284:5407":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:1838:696":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:15092:6269":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:3382:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:5106:10174":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:14341:6042":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:13064:5787":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:43641:7344":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:11467:5610":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:8093:7026":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:7457:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"18:689:5390":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:12792:5507":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:15799:6468":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:39566:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:9714:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"16:5006:5070":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:6749:6813":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:9782:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:7761:15496":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:40756:7308":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:12662:4355":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:2887:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"18:491:5356":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:11120:4459":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:1069:6876":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"5:1493:4460":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:3139:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:14038:5981":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:8073:7025":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:843:4779":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:10718:3811":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:40664:7300":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:3200:6890":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:10439:5543":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:289:4776":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"0:544:3352":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","DuplicatedByte"],"kind":"variant"},"1:10512:28971":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"17:13344:5844":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:6962:6644":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:13999:5976":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:8541:3791":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:34048:15522":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:39904:15453":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:14402:6053":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:10905:5560":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:44063:4344":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:1168:34433":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:6896:7200":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:44504:4326":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:5671:8901":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:44633:4321":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:5230:4809":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:2788:6628":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:4917:10138":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:47163:7512":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:8498:3786":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:9129:5272":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"5:7435:35636":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:22824:7247":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:12724:22867":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:9469:5282":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:11764:5647":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"5:3674:4460":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12328:5720":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"0:501:3109":{"crate_id":0,"path":["base64","engine","DecodePaddingMode"],"kind":"enum"},"17:13986:5975":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:11251:7220":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:10421:9932":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:10323:3736":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:38256:15526":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:9229:10207":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:9781:22859":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"5:7485:3849":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:12344:1314":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:11764:4900":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"9:178:9742":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:5582:7553":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:13753:5937":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:8012:7579":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:3026:4863":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:43254:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:40508:5263":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:40686:7301":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:6379:8908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:46574:7460":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"0:0:2468":{"crate_id":0,"path":["base64"],"kind":"module"},"17:10350:5409":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6597:9034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:11362:7222":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:12572:5557":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"5:3318:7077":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:12213:5712":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:47216:7515":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:3810:5046":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:15608:6417":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:5864:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:46686:7464":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:8709:4092":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:4666:10153":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:5200:8694":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:7425:5089":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"16:7580:6966":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:40673:3788":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"11:2536:8279":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"9:238:7337":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7379:36133":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:10947:7585":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"16:7618:6967":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:8371:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:12351:735":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"6:7348:9180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:11316:9445":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:42031:4459":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:4975:4864":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:3604:3776":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:12339:417":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:8225:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:2572:6618":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:11201:5272":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:13797:5946":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:41931:5241":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:1092:7067":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:3820:7150":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:4502:5054":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:32326:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"0:504:3113":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireCanonical"],"kind":"variant"},"16:7559:6965":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:13547:7308":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"17:13538:5881":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:46072:7414":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:5181:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:570:8358":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:32205:6932":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:4940:5068":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:7473:6713":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:10218:5405":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:15418:6349":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:22591:10094":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"0:401:3383":{"crate_id":0,"path":["base64","alphabet","BIN_HEX"],"kind":"constant"},"16:6665:22800":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:5367:22793":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:4811:9200":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"2:39681:10023":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:7061:6866":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:4723:4832":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:8301:7046":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:1547:8404":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:14752:6113":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:15376:6340":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:8294:9325":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:5863:22795":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:4097:10123":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:6047:6702":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:15463:6359":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:34221:15523":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:2854:3123":{"crate_id":2,"path":["core","convert"],"kind":"module"},"2:46139:7425":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"5:5729:3852":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:7485:9230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:3291:7749":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:7755:6642":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:7537:9270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:9974:9751":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:7582:5090":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:6193:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:5702:7557":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:41209:7209":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:3222:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"7:0:1901":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:4103:10122":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:2893:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:8313:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:7875:5418":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:11051:5572":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:3251:4459":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:8187:7584":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:10251:5406":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:1355:7065":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:7540:4259":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:951:7059":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:42192:3849":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:5596:7554":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:2900:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:6706:9078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"16:2374:6609":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:15249:6301":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:5515:8833":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:46101:7423":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:23144:7275":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:0:1713":{"crate_id":1,"path":["std"],"kind":"module"},"17:12557:5576":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:47293:7518":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:5191:8689":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"11:844:10030":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"0:482:2619":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurpose"],"kind":"struct"},"5:304:3716":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:14177:6016":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:21730:10241":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:5422:4776":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:12695:5758":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:3029:5443":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"14:187:21876":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:13399:5852":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:6460:8953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:23111:7272":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:10721:3813":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:13015:5736":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:4864:8576":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:23188:7279":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"2:32212:7284":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:22479:10094":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"2:40695:7302":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:32159:3859":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:9370:9439":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:10769:36141":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:5686:6634":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:3190:10234":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:4811:8533":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:14386:6049":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:1585:8428":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"11:1566:21863":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:4815:9204":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"6:5624:8882":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:44812:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"5:6968:3854":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:11108:4897":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:465:8297":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:11812:5655":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:13922:5966":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:7085:6867":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:40786:7198":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:1914:7536":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:23089:7270":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"2:44807:9436":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"11:1917:7076":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:10982:22877":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:12346:1687":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:14855:6199":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:14599:6091":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:46367:7437":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:11923:7576":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:13871:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:12993:22869":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:12353:754":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:5075:5072":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:2477:10085":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:43767:7298":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:373:7524":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:11688:5638":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"16:5307:5074":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"0:325:3232":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE_NO_PAD"],"kind":"constant"},"2:46657:7463":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"6:8282:9323":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:40774:7309":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:15400:6345":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:8631:7607":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"17:14025:5979":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:426:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:8488:3785":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"9:424:21785":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:10319:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:22947:32778":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:12422:5734":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:494:4859":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:5914:6686":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:8726:7618":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:8259:9317":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:517:8330":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:14986:6247":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:15957:6493":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:40420:4347":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:1997:4618":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:1098:5419":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11605:5630":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:1995:1358":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:33462:3711":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:4650:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:10917:9440":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"11:2443:3707":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:22633:10321":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:11773:5648":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:7415:4788":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:256:5411":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:4959:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"9:502:7133":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:5677:8904":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:6084:7189":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:6368:4872":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:43276:7341":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:6634:6641":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:38146:15524":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:40567:5234":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:11169:3791":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:8204:7586":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:5959:7562":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:22148:7243":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:9112:7627":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:6729:9083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:3270:6891":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:3648:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:10044:22865":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:2902:21934":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:10573:36140":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:12494:5743":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"18:670:5387":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:8599:7543":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:16093:6542":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:40843:5378":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:6160:21906":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:6788:9103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:44419:7231":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:538:8342":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12647:5754":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:30586:3838":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:12425:1721":{"crate_id":2,"path":["core","str"],"kind":"module"},"6:6478:8963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:8247:9315":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:1603:4459":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:6480:6635":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:8181:15501":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:2316:3775":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:15023:6254":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:5352:8753":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:42420:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:10331:3739":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:8241:7588":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"16:6466:6789":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:2884:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:10720:36137":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:44344:7369":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:2864:3860":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:734:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10710:5556":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:7385:3849":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:1891:7535":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"11:2569:3717":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:14012:5978":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:888:3849":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:6007:3766":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"14:40:5079":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:7331:4885":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"15:0:3575":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:947:7056":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:2270:5305":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:2629:3801":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:8470:3816":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:7813:6976":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:2659:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:38201:15525":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:7910:22807":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:6758:6814":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:30997:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:12929:5774":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:15445:6356":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"14:165:21869":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:12300:22989":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:10922:9442":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:4367:7178":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:30618:3839":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:12464:22990":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:5846:6678":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:16223:6573":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:3297:7867":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:2249:9340":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"11:2124:6876":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:4743:5061":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:8344:7591":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:5290:8736":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6491:8972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:7465:7168":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:15301:6318":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:7052:6863":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:40579:3790":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"11:434:36107":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:47201:7514":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13497:5869":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:6456:22799":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"11:832:7071":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:2234:5428":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:13455:5864":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:44687:5259":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:12089:5701":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:2458:6613":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:40352:5228":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:4876:8579":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:3061:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:7645:15451":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"16:2338:6601":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:932:3846":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:872:5412":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"17:10170:5542":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:4986:5440":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"0:230:2451":{"crate_id":0,"path":["base64","engine"],"kind":"module"},"2:42722:3735":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:2998:6655":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:11063:5575":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:6433:6786":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:46412:7454":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:15836:6475":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:12357:897":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:8194:7585":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:2612:6620":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:1526:8389":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:1968:4617":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:2438:6612":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:13473:5865":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:1565:8414":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:865:4459":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:12342:1873":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"11:742:7056":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:14131:5992":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:14051:5983":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:15176:6288":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"18:613:36148":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:5250:8714":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"11:1025:7065":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:46122:7424":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:8265:3805":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:11574:5622":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"11:299:8274":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:5344:8752":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"1:8554:7599":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:4830:5064":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:10419:5413":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:41225:7210":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:3385:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:6650:9059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:1496:8376":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:8136:7030":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:4659:5227":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:1631:7076":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:22855:7248":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:2528:6616":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:7710:33005":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:42539:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:15596:6414":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:13173:5805":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:2355:6603":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:46029:7411":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:16069:6537":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"6:5039:8660":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:3897:7540":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:9737:22843":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:14463:6068":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:43780:7353":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:9171:7630":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:3523:3817":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"9:357:21798":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:13553:5887":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:14311:6037":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:12324:27188":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:10724:3809":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:11621:5632":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:12845:3722":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"0:243:2618":{"crate_id":0,"path":["base64","engine","general_purpose"],"kind":"module"},"17:13581:5897":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:6991:36125":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:8202:6654":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:32201:7283":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:12353:5729":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:40428:4346":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:11128:5532":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:867:5411":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"1:9337:7643":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:2684:482":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:12342:5725":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:4414:15373":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:12400:15596":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:11788:5652":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:2660:6622":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"11:856:7062":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:15078:6266":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:9283:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:42303:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:22126:10244":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"5:1324:6876":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:2768:6627":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}