{"root":"0:0:1686","crate_version":"0.21.0","includes_private":false,"index":{"2:11517:54651":{"id":"2:11517:54651","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:2885"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:540:1681":{"id":"b:2:2528-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:347:529":{"id":"0:347:529","crate_id":0,"name":"decode","span":{"filename":"src/engine/mod.rs","begin":[234,4],"end":[244,5]},"visibility":"default","docs":"Decode from string reference as octets using the specified [Engine].\nReturns a `Result` containing a `Vec<u8>`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\n\nlet bytes = general_purpose::STANDARD\n    .decode(\"aGVsbG8gd29ybGR+Cg==\").unwrap();\nprintln!(\"{:?}\", bytes);\n\n// custom engine setup\nlet bytes_url = engine::GeneralPurpose::new(\n             &alphabet::URL_SAFE,\n             general_purpose::NO_PAD)\n    .decode(\"aGVsbG8gaW50ZXJuZXR-Cg\").unwrap();\nprintln!(\"{:?}\", bytes_url);\n```\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{"Engine":"0:334:1670"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6400:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:466:1835":{"id":"b:2:2241-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:475:2310":{"id":"b:2:2517-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:3245-0:189:1997":{"id":"a:2:7736:3245-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11500:61160":{"id":"2:11500:61160","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120","str::match_indices":"2:11497:61159","self::pattern":"2:11116:2885"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50278:3510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:540:1681":{"id":"a:2:2662:217-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,22],"end":[241,27]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:474:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:431:386":{"id":"0:431:386","crate_id":0,"name":"cause","span":{"filename":"src/decode.rs","begin":[45,4],"end":[47,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11538:61171":{"id":"2:11538:61171","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4467:61171"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50409:3512","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:475:2310":{"id":"b:2:2528-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:493:2318":{"id":"b:2:2513-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:527:1676":{"id":"0:527:1676","crate_id":0,"name":"EncodeSliceError","span":{"filename":"src/encode.rs","begin":[138,0],"end":[141,1]},"visibility":"public","docs":"Errors that can occur while encoding into a slice.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:528:2239"],"impls":["a:2:7735:3246-0:527:1676","a:2:2676:225-0:527:1676","a:2:2662:217-0:527:1676","a:2:2726:3310-0:527:1676","a:2:7736:3245-0:527:1676","b:2:2523-0:527:1676","b:2:2238-0:527:1676","b:2:2517-0:527:1676","b:2:2513-0:527:1676","b:2:2241-0:527:1676","b:2:2528-0:527:1676","b:2:2585-0:527:1676","b:2:3321-0:527:1676","b:5:5352-0:527:1676","b:5:681-0:527:1676","0:530","0:532","0:534","0:535","0:537","0:538","0:408","0:410"]}},"2:11491:2835":{"id":"2:11491:2835","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"2:11491:2835","`DoubleEndedIterator`":"2:7079:120","self::pattern":"2:11116:2885","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50314:3507","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:327:2425":{"id":"0:327:2425","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[335,0],"end":[335,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [PAD] config.","links":{"PAD":"0:329:1836","alphabet::URL_SAFE":"0:377:2425","GeneralPurpose":"0:291:1834"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,24],"end":[170,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode","name":"decode","id":"0:438:529","glob":false}},"2:11450:56987":{"id":"2:11450:56987","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:2885"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:354:2293":{"id":"0:354:2293","crate_id":0,"name":"decode_slice_unchecked","span":{"filename":"src/engine/mod.rs","begin":[351,4],"end":[363,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice] for a version that returns an error instead of panicking if the output\nbuffer is too small.\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.\n\nPanics if the provided output buffer is too small for the decoded data.","links":{"crate::decoded_len_estimate":"0:449:1680","Engine::decode_slice":"0:351:2288"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[402,22],"end":[402,27]},"visibility":{"restricted":{"parent":"0:229:1669","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:486:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:557":{"id":"0:557","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:396:1673":{"id":"0:396:1673","crate_id":0,"name":"encode_engine_string","span":{"filename":"src/encode.rs","begin":[38,0],"end":[44,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied `String`.\n\n See [Engine::encode_string].","links":{"Engine::encode_string":"0:343:1883"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_string\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_string"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:393:1672":{"id":"0:393:1672","crate_id":0,"name":"encode_engine","span":{"filename":"src/encode.rs","begin":[28,0],"end":[30,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the provided `Engine` into a new `String`.\n\n See [Engine::encode].","links":{"Engine::encode":"0:341:595"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175:1668":{"id":"0:175:1668","crate_id":0,"name":"write","span":{"filename":"src/write/encoder.rs","begin":[265,4],"end":[384,5]},"visibility":"default","docs":"Encode input and then write to the delegate writer.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nof `input` consumed. The value may be `0`, which interacts poorly with `write_all`, which\ninterprets `Ok(0)` as an error, despite it being allowed by the contract of `write`. See\n<https://github.com/rust-lang/rust/issues/56889> for more on that.\n\nIf the previous call to `write` provided more (encoded) data than the delegate writer could\naccept in a single call to its `write`, the remaining data is buffered. As long as buffered\ndata is present, subsequent calls to `write` will try to write the remaining buffered data\nto the delegate and return either `Ok(0)` -- and therefore not consume any of `input` -- or\nan error.\n\n# Errors\n\nAny errors emitted by the delegate writer are returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:2903:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2587:3774":{"id":"2:2587:3774","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3382:3805","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[38,1]},"visibility":{"restricted":{"parent":"0:40:1666","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:64:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:563:1682":{"id":"b:2:2513-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:493:2318":{"id":"b:2:2517-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11473:61154":{"id":"2:11473:61154","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11116:2885","str::rsplit_terminator":"2:11476:61155","str::split":"2:11464:56976","prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50160:3504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:549:1553":{"id":"0:549:1553","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[24,22],"end":[24,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2513-0:49:1892":{"id":"b:2:2513-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:3310-0:527:1676":{"id":"a:2:2726:3310-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:127:1668":{"id":"0:127:1668","crate_id":0,"name":"write","span":{"filename":"src/write/mod.rs","begin":[1,0],"end":[11,18]},"visibility":"public","docs":"Implementations of `io::Write` to transparently handle base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:225","0:227","0:228"],"is_stripped":false}},"2:11514:61167":{"id":"2:11514:61167","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:2885"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:527:1676":{"id":"b:2:2528-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:564:1681":{"id":"0:564:1681","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[54,4],"end":[54,28]},"visibility":"default","docs":"A [DecodeError] occurred","links":{"DecodeError":"0:540:1681"},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:566:1553"]},"discriminant":null}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,58],"end":[165,74]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::EncodeSliceError","name":"EncodeSliceError","id":"0:527:1676","glob":false}},"0:357:1800":{"id":"0:357:1800","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/mod.rs","begin":[376,4],"end":[376,37]},"visibility":"default","docs":"Returns `true` if padding should be added after the encoded output.\n\nPadding is added outside the engine's encode() since the engine may be used\nto encode only a chunk of the overall output, so it can't always know when\nthe output is \"done\" and would therefore need padding (if configured).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:462":{"id":"0:462","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[17,0],"end":[17,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::engine::general_purpose::STANDARD_NO_PAD","name":"BASE64_STANDARD_NO_PAD","id":"0:326:2422","glob":false}},"0:536:600":{"id":"0:536:600","crate_id":0,"name":"eq","span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:291:1834":{"id":"a:2:2676:225-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:567:2239":{"id":"0:567:2239","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/decode.rs","begin":[58,4],"end":[58,23]},"visibility":"default","docs":"The provided slice _may_ be too small.\n\nThe check is conservative (assumes the last triplet of output bytes will all be needed).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:329:1836":{"id":"0:329:1836","crate_id":0,"name":"PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[344,0],"end":[344,66]},"visibility":"public","docs":"Include padding bytes when encoding, and require that they be present when decoding.\n\nThis is the standard per the base64 RFC, but consider using [NO_PAD] instead as padding serves\nlittle purpose in practice.","links":{"NO_PAD":"0:330:2423"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2523-0:475:2310":{"id":"b:2:2523-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:466:1835":{"id":"b:2:2523-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:493:2318":{"id":"a:2:2662:217-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2523-0:507:2515":{"id":"b:2:2523-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:459:1036":{"id":"0:459:1036","crate_id":0,"name":"prelude","span":{"filename":"src/prelude.rs","begin":[1,0],"end":[19,82]},"visibility":"public","docs":"Preconfigured engines for common use cases.\n\nThese are re-exports of `const` engines in [crate::engine::general_purpose], renamed with a `BASE64_`\nprefix for those who prefer to `use` the entire path to a name.\n\n# Examples\n\n```\nuse base64::prelude::{Engine as _, BASE64_STANDARD_NO_PAD};\n\nassert_eq!(\"c29tZSBieXRlcw\", &BASE64_STANDARD_NO_PAD.encode(b\"some bytes\"));\n```","links":{"crate::engine::general_purpose":"0:242:1833"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:460","0:461","0:462","0:463","0:464"],"is_stripped":false}},"0:325:1832":{"id":"0:325:1832","crate_id":0,"name":"STANDARD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[329,0],"end":[329,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [PAD] config.","links":{"PAD":"0:329:1836","GeneralPurpose":"0:291:1834","alphabet::STANDARD":"0:376:1832"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:298:915":{"id":"0:298:915","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[32,4],"end":[38,5]},"visibility":"public","docs":"Create a `GeneralPurpose` engine from an [Alphabet].\n\nWhile not very expensive to initialize, ideally these should be cached\nif the engine will be used repeatedly.","links":{"Alphabet":"0:493:2318"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["config",{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:472":{"id":"0:472","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,16],"end":[241,20]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:225-0:540:1681":{"id":"a:2:2676:225-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[402,40],"end":[402,42]},"visibility":{"restricted":{"parent":"0:229:1669","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:49:1892":{"id":"b:2:3321-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:540:1681":{"id":"b:2:2523-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:165:1937":{"id":"0:165:1937","crate_id":0,"name":"finish","span":{"filename":"src/write/encoder.rs","begin":[126,4],"end":[138,5]},"visibility":"public","docs":"Encode all remaining buffered data and write it, including any trailing incomplete input\ntriples and associated padding.\n\nOnce this succeeds, no further writes or calls to this method are allowed.\n\nThis may write to the delegate writer multiple times if the delegate writer does not accept\nall input provided to its `write` each invocation.\n\nIf you don't care about error handling, it is not necessary to call this function, as the\nequivalent finalization is done by the Drop impl.\n\nReturns the writer that this was constructed around.\n\n# Errors\n\nThe first error that is not of `ErrorKind::Interrupted` will be returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:2903:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:300:1784":{"id":"0:300:1784","crate_id":0,"name":"Config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[42,4],"end":[42,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:118:1974":{"id":"0:118:1974","crate_id":0,"name":"into_inner","span":{"filename":"src/read/decoder.rs","begin":[169,4],"end":[171,5]},"visibility":"public","docs":"Unwraps this `DecoderReader`, returning the base reader which it reads base64 encoded\ninput from.\n\nBecause `DecoderReader` performs internal buffering, the state of the inner reader is\nunspecified. This function is mainly provided because the inner reader type may provide\nadditional functionality beyond the `Read` implementation which may still be useful.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:527:1676":{"id":"b:2:3321-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,16],"end":[22,21]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:499:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:49:1892":{"id":"b:2:2238-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:189:1997":{"id":"b:2:2528-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2585-0:540:1681":{"id":"b:2:2585-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:3806","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2587:3774"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:11534:4747":{"id":"2:11534:4747","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11532:4392":{"id":"2:11532:4392","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11078:126","`FromStr`":"2:11077:2880"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11077:2880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11077:2880","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:341:595":{"id":"0:341:595","crate_id":0,"name":"encode","span":{"filename":"src/engine/mod.rs","begin":[123,4],"end":[131,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 using the provided `Engine`.\nReturns a `String`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\n\nlet b64 = general_purpose::STANDARD.encode(b\"hello world~\");\nprintln!(\"{}\", b64);\n\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nlet b64_url = CUSTOM_ENGINE.encode(b\"hello internet~\");","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:563:1682":{"id":"a:2:2676:225-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3321-0:475:2310":{"id":"b:2:3321-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:140:1996":{"id":"a:2:2662:217-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5099:61807":{"id":"5:5099:61807","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:493:2318":{"id":"b:2:2528-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:3246-0:466:1835":{"id":"a:2:7735:3246-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:486:655":{"id":"0:486:655","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[402,22],"end":[402,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[402,29],"end":[402,38]},"visibility":{"restricted":{"parent":"0:229:1669","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:489:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:3310-0:540:1681":{"id":"a:2:2726:3310-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:471:412":{"id":"0:471:412","crate_id":0,"name":"clone","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:2824":{"id":"2:2240:2824","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:40:1666":{"id":"0:40:1666","crate_id":0,"name":"display","span":{"filename":"src/display.rs","begin":[1,0],"end":[88,1]},"visibility":"public","docs":"Enables base64'd output anywhere you might use a `Display` implementation, like a format string.\n\n```\nuse base64::{display::Base64Display, engine::general_purpose::STANDARD};\n\nlet data = vec![0x0, 0x1, 0x2, 0x3];\nlet wrapper = Base64Display::new(&data, &STANDARD);\n\nassert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:49:1892"],"is_stripped":false}},"2:11526:61169":{"id":"2:11526:61169","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11116:2885","prim@char":"1:12300:408"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5354:1406":{"id":"5:5354:1406","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:380:2547":{"id":"0:380:2547","crate_id":0,"name":"IMAP_MUTF7","span":{"filename":"src/alphabet.rs","begin":[160,0],"end":[162,2]},"visibility":"public","docs":"The alphabet used in IMAP-modified UTF-7 (uses `+` and `,`).\n\nSee [RFC 3501](https://tools.ietf.org/html/rfc3501#section-5.1.3)","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2517-0:540:1681":{"id":"b:2:2517-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:225-0:507:2515":{"id":"a:2:2676:225-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:299":{"id":"0:299","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[41,0],"end":[187,1]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["encode_slice","encode","decode_vec","decode_slice","decode_slice_unchecked","decode","encode_string"],"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:300:1784","0:301:2174","0:308:1799"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5084:61804":{"id":"5:5084:61804","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2874","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6718:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2874","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6718:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:371:127":{"id":"0:371:127","crate_id":0,"name":"Error","span":{"filename":"src/alphabet.rs","begin":[97,4],"end":[97,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2528-0:140:1996":{"id":"b:2:2528-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:563:1682":{"id":"b:2:2241-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:563:1682":{"id":"b:2:2238-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:572:655":{"id":"0:572:655","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[51,16],"end":[51,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:540:1681":{"id":"b:2:2238-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,9],"end":[22,14]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:497:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:415":{"id":"0:415","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,47],"end":[163,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine_string","name":"encode_engine_string","id":"0:396:1673","glob":false}},"b:2:2241-0:49:1892":{"id":"b:2:2241-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[6,4],"end":[6,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder::EncoderWriter","name":"EncoderWriter","id":"0:140:1996","glob":false}},"a:2:2726:3310-0:475:2310":{"id":"a:2:2726:3310-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:456":{"id":"0:456","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,45],"end":[172,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decoded_len_estimate","name":"decoded_len_estimate","id":"0:449:1680","glob":false}},"0:321":{"id":"0:321","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[315,0],"end":[320,1]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:322:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:574":{"id":"0:574","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:575:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:527:1676":{"id":"b:2:2523-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:466:1835":{"id":"0:466:1835","crate_id":0,"name":"GeneralPurposeConfig","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[242,0],"end":[246,1]},"visibility":"public","docs":"Contains configuration parameters for base64 encoding and decoding.\n\n```\n# use base64::engine::GeneralPurposeConfig;\nlet config = GeneralPurposeConfig::new()\n    .with_encode_padding(false);\n    // further customize using `.with_*` methods as needed\n```\n\nThe constants [PAD] and [NO_PAD] cover most use cases.\n\nTo specify the characters used, see [Alphabet].","links":{"NO_PAD":"0:330:2423","Alphabet":"0:493:2318","PAD":"0:329:1836"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:316","a:2:7735:3246-0:466:1835","a:2:2676:225-0:466:1835","a:2:2662:217-0:466:1835","a:2:2726:3310-0:466:1835","a:2:7736:3245-0:466:1835","b:2:2523-0:466:1835","b:2:2238-0:466:1835","b:2:2517-0:466:1835","b:2:2513-0:466:1835","b:2:2241-0:466:1835","b:2:2528-0:466:1835","b:2:3321-0:466:1835","b:5:681-0:466:1835","0:470","0:472","0:473","0:321","0:323"]}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[174,0],"end":[295,1]},"visibility":{"restricted":{"parent":"0:75:1907","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3404:1927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_to_end","bytes","read_to_string","read_exact","read_vectored","by_ref","chain","read_buf","is_read_vectored","take","read_buf_exact"],"trait":{"name":"Read","id":"1:3404:1927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:123:1667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:328:2427":{"id":"0:328:2427","crate_id":0,"name":"URL_SAFE_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[338,0],"end":[338,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [NO_PAD] config.","links":{"NO_PAD":"0:330:2423","alphabet::URL_SAFE":"0:377:2425","GeneralPurpose":"0:291:1834"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:458":{"id":"0:458","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,80],"end":[172,96]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::DecodeSliceError","name":"DecodeSliceError","id":"0:563:1682","glob":false}},"b:2:2517-0:507:2515":{"id":"b:2:2517-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:291:1834":{"id":"b:2:3321-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:681-0:540:1681":{"id":"b:5:681-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:3465","5:684:3466","5:685:3467"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:203:915":{"id":"0:203:915","crate_id":0,"name":"new","span":{"filename":"src/write/encoder_string_writer.rs","begin":[82,4],"end":[84,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will encode into a new `String` with the provided config.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:436":{"id":"0:436","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[80,0],"end":[84,1]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:437:673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11445:61153":{"id":"2:11445:61153","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50374:3501","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,28],"end":[7,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder_string_writer::EncoderStringWriter","name":"EncoderStringWriter","id":"0:189:1997","glob":false}},"0:242:1833":{"id":"0:242:1833","crate_id":0,"name":"general_purpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[1,0],"end":[349,62]},"visibility":"public","docs":"Provides the [GeneralPurpose] engine and associated config types.","links":{"GeneralPurpose":"0:291:1834"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:291:1834","0:466:1835","0:325:1832","0:326:2422","0:327:2425","0:328:2427","0:329:1836","0:330:2423"],"is_stripped":false}},"a:2:2726:3310-0:189:1997":{"id":"a:2:2726:3310-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,24],"end":[172,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine_slice","name":"decode_engine_slice","id":"0:446:1679","glob":false}},"5:5083":{"id":"5:5083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:4994:1352","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5084:61804","5:5085:2644","5:5088:61805","5:5091:61806","5:5099:61807","5:5100:61808","5:5101:2702","5:5102:54272","5:5103:54273"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[156,0],"end":[156,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"engine::Engine","name":"Engine","id":"0:334:1670","glob":false}},"b:2:2528-0:49:1892":{"id":"b:2:2528-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[71,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","cause","source","provide"],"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:435:386"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[83,0],"end":[94,1]},"visibility":{"restricted":{"parent":"0:128:1885","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:157:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[16,0],"end":[16,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::engine::general_purpose::STANDARD","name":"BASE64_STANDARD","id":"0:325:1832","glob":false}},"b:2:2238-0:466:1835":{"id":"b:2:2238-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:510:2522":{"id":"0:510:2522","crate_id":0,"name":"DuplicatedByte","span":{"filename":"src/alphabet.rs","begin":[110,4],"end":[110,22]},"visibility":"default","docs":"All bytes must be unique","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:512:1553"]},"discriminant":null}},"2:11482:56984":{"id":"2:11482:56984","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"2:11479:56982","prim@char":"1:12300:408","self::pattern":"2:11116:2885"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50232:3505","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3245-0:466:1835":{"id":"a:2:7736:3245-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11425:309":{"id":"2:11425:309","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12317:1448","str::as_mut_ptr":"2:11426:56947"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[58,0],"end":[69,1]},"visibility":{"restricted":{"parent":"0:75:1907","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3404:1927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:105:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:349:2274":{"id":"0:349:2274","crate_id":0,"name":"decode_vec","span":{"filename":"src/engine/mod.rs","begin":[281,4],"end":[303,5]},"visibility":"default","docs":"Decode from string reference as octets.\nWrites into the supplied `Vec`, which may allocate if its internal buffer isn't big enough.\nReturns a `Result` containing an empty tuple, aka `()`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::PAD);\n\nfn main() {\n    use base64::Engine;\n    let mut buffer = Vec::<u8>::new();\n    // with the default engine\n    general_purpose::STANDARD\n        .decode_vec(\"aGVsbG8gd29ybGR+Cg==\", &mut buffer,).unwrap();\n    println!(\"{:?}\", buffer);\n\n    buffer.clear();\n\n    // with a custom engine\n    CUSTOM_ENGINE.decode_vec(\n        \"aGVsbG8gaW50ZXJuZXR-Cg==\",\n        &mut buffer,\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n}\n```\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["buffer",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6400:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:446:1679":{"id":"0:446:1679","crate_id":0,"name":"decode_engine_slice","span":{"filename":"src/decode.rs","begin":[125,0],"end":[131,1]},"visibility":"public","docs":"Decode the input into the provided output slice.\n\nSee [Engine::decode_slice].","links":{"Engine::decode_slice":"0:351:2288"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_slice"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86:1908":{"id":"0:86:1908","crate_id":0,"name":"DecoderReader","span":{"filename":"src/read/decoder.rs","begin":[33,0],"end":[56,1]},"visibility":"public","docs":"A `Read` implementation that decodes base64 data read from an underlying reader.\n\n# Examples\n\n```\nuse std::io::Read;\nuse std::io::Cursor;\nuse base64::engine::general_purpose;\n\n// use a cursor as the simplest possible `Read` -- in real code this is probably a file, etc.\nlet mut wrapped_reader = Cursor::new(b\"YXNkZg==\");\nlet mut decoder = base64::read::DecoderReader::new(\n    &mut wrapped_reader,\n    &general_purpose::STANDARD);\n\n// handle errors as you normally would\nlet mut result = Vec::new();\ndecoder.read_to_end(&mut result).unwrap();\n\nassert_eq!(b\"asdf\", &result[..]);\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3404:1927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:106","a:2:7735:3246-0:86:1908","a:2:2676:225-0:86:1908","a:2:2662:217-0:86:1908","a:2:2726:3310-0:86:1908","a:2:7736:3245-0:86:1908","b:2:2523-0:86:1908","b:2:2238-0:86:1908","b:2:2517-0:86:1908","b:2:2513-0:86:1908","b:2:2241-0:86:1908","b:2:2528-0:86:1908","b:2:3321-0:86:1908","0:101","0:119"]}},"b:2:2513-0:466:1835":{"id":"b:2:2513-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:3310-0:291:1834":{"id":"a:2:2726:3310-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:189:1997":{"id":"b:2:2238-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:519":{"id":"0:519","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,9],"end":[105,14]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:520:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2519:673":{"id":"2:2519:673","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,47],"end":[170,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine_vec","name":"decode_engine_vec","id":"0:443:1678","glob":false}},"a:2:2662:217-0:563:1682":{"id":"a:2:2662:217-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2662:217-0:291:1834":{"id":"a:2:2662:217-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:404:1675":{"id":"0:404:1675","crate_id":0,"name":"encoded_len","span":{"filename":"src/encode.rs","begin":[97,0],"end":[117,1]},"visibility":"public","docs":"Calculate the base64 encoded length for a given input length, optionally including any\nappropriate padding bytes.\n\nReturns `None` if the encoded length can't be represented in `usize`. This will happen for\ninput lengths in approximately the top quarter of the range of `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bytes_len",{"kind":"primitive","inner":"usize"}],["padding",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:291:1834":{"id":"b:2:2241-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:3246-0:291:1834":{"id":"a:2:7735:3246-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11464:56976":{"id":"2:11464:56976","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"2:11442:59142","prim@char":"1:12300:408","str::rsplit":"2:11470:56980","self::pattern":"2:11116:2885","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50110:2962","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:507:2515":{"id":"b:2:3321-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:540:1681":{"id":"b:2:2241-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:86:1908":{"id":"a:2:2662:217-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:559:600":{"id":"0:559:600","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:209:2118":{"id":"0:209:2118","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder_string_writer.rs","begin":[92,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3245-0:527:1676":{"id":"a:2:7736:3245-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11494:61158":{"id":"2:11494:61158","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:11491:2835","prim@char":"1:12300:408","self::pattern":"2:11116:2885","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50332:3508","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5101:2702":{"id":"5:5101:2702","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,42],"end":[22,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::GeneralPurposeConfig","name":"GeneralPurposeConfig","id":"0:466:1835","glob":false}},"0:476:2312":{"id":"0:476:2312","crate_id":0,"name":"Indifferent","span":{"filename":"src/engine/mod.rs","begin":[405,4],"end":[405,15]},"visibility":"default","docs":"Canonical padding is allowed, but any fewer padding bytes than that is also allowed.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:7736:3245-0:493:2318":{"id":"a:2:7736:3245-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2517-0:49:1892":{"id":"b:2:2517-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:470":{"id":"0:470","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,9],"end":[241,14]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:471:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:681-0:466:1835":{"id":"b:5:681-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:3465","5:684:3466","5:685:3467"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:319:2406":{"id":"0:319:2406","crate_id":0,"name":"with_decode_allow_trailing_bits","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[287,4],"end":[292,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_allow_trailing_bits` setting.\n\nMost users will not need to configure this. It's useful if you need to decode base64\nproduced by a buggy encoder that has bits set in the unused space on the last base64\ncharacter as per [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).\nIf invalid trailing bits are present and this is `true`, those bits will\nbe silently ignored, else `DecodeError::InvalidLastSymbol` will be emitted.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["allow",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:86:1908":{"id":"b:2:2528-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5088:61805":{"id":"5:5088:61805","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11488:61157":{"id":"2:11488:61157","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:571":{"id":"0:571","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,16],"end":[51,21]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:572:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:683:3465":{"id":"5:683:3465","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:11509:61164":{"id":"2:11509:61164","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:189:1997":{"id":"b:2:2517-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:507:2515":{"id":"b:2:2241-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:569":{"id":"0:569","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,9],"end":[51,14]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:570:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:550:1554":{"id":"0:550:1554","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[24,29],"end":[24,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:2528-0:291:1834":{"id":"b:2:2528-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:3310-0:49:1892":{"id":"a:2:2726:3310-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11510:61165":{"id":"2:11510:61165","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5352-0:540:1681":{"id":"b:5:5352-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5350:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5354:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:64:655":{"id":"0:64:655","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"fmt::Error","id":"2:49176:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:475:2310":{"id":"b:5:681-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:3465","5:684:3466","5:685:3467"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:540:1681":{"id":"b:2:3321-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:381:2551":{"id":"0:381:2551","crate_id":0,"name":"BIN_HEX","span":{"filename":"src/alphabet.rs","begin":[167,0],"end":[169,2]},"visibility":"public","docs":"The alphabet used in BinHex 4.0 files.\n\nSee [BinHex 4.0 Definition](http://files.stairways.com/other/binhex-40-specs-info.txt)","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:5:681-0:493:2318":{"id":"b:5:681-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:3465","5:684:3466","5:685:3467"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:391:595":{"id":"0:391:595","crate_id":0,"name":"encode","span":{"filename":"src/encode.rs","begin":[18,0],"end":[20,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::encode].","links":{"Engine::encode":"0:341:595","STANDARD":"0:325:1832"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:563:1682":{"id":"b:2:3321-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,34],"end":[137,36]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2531:127":{"id":"2:2531:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39378:3052","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,27],"end":[22,36]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:506:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[27,0],"end":[94,1]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:369:915"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:547:1965":{"id":"0:547:1965","crate_id":0,"name":"InvalidLastSymbol","span":{"filename":"src/decode.rs","begin":[24,4],"end":[24,32]},"visibility":"default","docs":"The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\nThis is indicative of corrupted or truncated Base64.\nUnlike `InvalidByte`, which reports symbols that aren't in the alphabet, this error is for\nsymbols that are in the alphabet but represent nonsensical encodings.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:549:1553","0:550:1554"]},"discriminant":null}},"2:11503:61161":{"id":"2:11503:61161","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11541:61172":{"id":"2:11541:61172","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4465:61172"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50427:3514","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:1892":{"id":"0:49:1892","crate_id":0,"name":"Base64Display","span":{"filename":"src/display.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"A convenience wrapper for base64'ing bytes into a format string without heap allocation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:55","a:2:7735:3246-0:49:1892","a:2:2676:225-0:49:1892","a:2:2662:217-0:49:1892","a:2:2726:3310-0:49:1892","a:2:7736:3245-0:49:1892","b:2:2523-0:49:1892","b:2:2238-0:49:1892","b:2:2517-0:49:1892","b:2:2513-0:49:1892","b:2:2241-0:49:1892","b:2:2528-0:49:1892","b:2:3321-0:49:1892","b:5:5352-0:49:1892","0:60"]}},"b:5:5352-0:563:1682":{"id":"b:5:5352-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5350:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5354:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11536:54275":{"id":"2:11536:54275","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:507:2515":{"id":"a:2:2662:217-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:0:1686":{"id":"0:0:1686","crate_id":0,"name":"base64","span":{"filename":"src/lib.rs","begin":[1,0],"end":[179,26]},"visibility":"public","docs":"# Getting started\n\n1. Perhaps one of the preconfigured engines in [engine::general_purpose] will suit, e.g.\n[engine::general_purpose::STANDARD_NO_PAD].\n    - These are re-exported in [prelude] with a `BASE64_` prefix for those who prefer to\n      `use base64::prelude::*` or equivalent, e.g. [prelude::BASE64_STANDARD_NO_PAD]\n1. If not, choose which alphabet you want. Most usage will want [alphabet::STANDARD] or [alphabet::URL_SAFE].\n1. Choose which [Engine] implementation you want. For the moment there is only one: [engine::GeneralPurpose].\n1. Configure the engine appropriately using the engine's `Config` type.\n    - This is where you'll select whether to add padding (when encoding) or expect it (when\n    decoding). If given the choice, prefer no padding.\n1. Build the engine using the selected alphabet and config.\n\nFor more detail, see below.\n\n## Alphabets\n\nAn [alphabet::Alphabet] defines what ASCII symbols are used to encode to or decode from.\n\nConstants in [alphabet] like [alphabet::STANDARD] or [alphabet::URL_SAFE] provide commonly used\nalphabets, but you can also build your own custom [alphabet::Alphabet] if needed.\n\n## Engines\n\nOnce you have an `Alphabet`, you can pick which `Engine` you want. A few parts of the public\nAPI provide a default, but otherwise the user must provide an `Engine` to use.\n\nSee [Engine] for more.\n\n## Config\n\nIn addition to an `Alphabet`, constructing an `Engine` also requires an [engine::Config]. Each\n`Engine` has a corresponding `Config` implementation since different `Engine`s may offer different\nlevels of configurability.\n\n# Encoding\n\nSeveral different encoding methods on [Engine] are available to you depending on your desire for\nconvenience vs performance.\n\n| Method                   | Output                       | Allocates                      |\n| ------------------------ | ---------------------------- | ------------------------------ |\n| [Engine::encode]         | Returns a new `String`       | Always                         |\n| [Engine::encode_string]  | Appends to provided `String` | Only if `String` needs to grow |\n| [Engine::encode_slice]   | Writes to provided `&[u8]`   | Never - fastest                |\n\nAll of the encoding methods will pad as per the engine's config.\n\n# Decoding\n\nJust as for encoding, there are different decoding methods available.\n\n| Method                   | Output                        | Allocates                      |\n| ------------------------ | ----------------------------- | ------------------------------ |\n| [Engine::decode]         | Returns a new `Vec<u8>`       | Always                         |\n| [Engine::decode_vec]     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |\n| [Engine::decode_slice]   | Writes to provided `&[u8]`    | Never - fastest                |\n\nUnlike encoding, where all possible input is valid, decoding can fail (see [DecodeError]).\n\nInput can be invalid because it has invalid characters or invalid padding. The nature of how\npadding is checked depends on the engine's config.\nWhitespace in the input is invalid, just like any other non-base64 byte.\n\n# `Read` and `Write`\n\nTo decode a [std::io::Read] of b64 bytes, wrap a reader (file, network socket, etc) with\n[read::DecoderReader].\n\nTo write raw bytes and have them b64 encoded on the fly, wrap a [std::io::Write] with\n[write::EncoderWriter].\n\nThere is some performance overhead (15% or so) because of the necessary buffer shuffling --\nstill fast enough that almost nobody cares. Also, these implementations do not heap allocate.\n\n# `Display`\n\nSee [display] for how to transparently base64 data via a `Display` implementation.\n\n# Examples\n\n## Using predefined engines\n\n```\nuse base64::{Engine as _, engine::general_purpose};\n\nlet orig = b\"data\";\nlet encoded: String = general_purpose::STANDARD_NO_PAD.encode(orig);\nassert_eq!(\"ZGF0YQ\", encoded);\nassert_eq!(orig.as_slice(), &general_purpose::STANDARD_NO_PAD.decode(encoded).unwrap());\n\n// or, URL-safe\nlet encoded_url = general_purpose::URL_SAFE_NO_PAD.encode(orig);\n```\n\n## Custom alphabet, config, and engine\n\n```\nuse base64::{engine, alphabet, Engine as _};\n\n// bizarro-world base64: +/ as the first symbols instead of the last\nlet alphabet =\n    alphabet::Alphabet::new(\"+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\")\n    .unwrap();\n\n// a very weird config that encodes with padding but requires no padding when decoding...?\nlet crazy_config = engine::GeneralPurposeConfig::new()\n    .with_decode_allow_trailing_bits(true)\n    .with_encode_padding(true)\n    .with_decode_padding_mode(engine::DecodePaddingMode::RequireNone);\n\nlet crazy_engine = engine::GeneralPurpose::new(&alphabet, crazy_config);\n\nlet encoded = crazy_engine.encode(b\"abc 123\");\n\n```\n\n# Panics\n\nIf length calculations result in overflowing `usize`, a panic will result.","links":{"display":"0:40:1666","std::io::Read":"1:3404:1927","write::EncoderWriter":"0:140:1996","prelude":"0:459:1036","Engine::decode":"0:347:529","alphabet::URL_SAFE":"0:377:2425","Engine::encode_string":"0:343:1883","Engine::decode_vec":"0:349:2274","Engine":"0:334:1670","alphabet::Alphabet":"0:493:2318","engine::general_purpose::STANDARD_NO_PAD":"0:326:2422","engine::general_purpose":"0:242:1833","prelude::BASE64_STANDARD_NO_PAD":"0:326:2422","alphabet::STANDARD":"0:376:1832","engine::GeneralPurpose":"0:291:1834","Engine::encode":"0:341:595","std::io::Write":"1:3461:2031","alphabet":"0:361:1671","engine::Config":"0:356:1784","Engine::encode_slice":"0:345:2067","Engine::decode_slice":"0:351:2288","read::DecoderReader":"0:86:1908","DecodeError":"0:540:1681"},"attrs":["#![deny(missing_docs, trivial_casts, trivial_numeric_casts,\nunused_extern_crates, unused_import_braces, unused_results,\nvariant_size_differences, warnings)]","#![forbid(unsafe_code)]","#![allow(clippy :: single_component_path_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:40:1666","0:74:1667","0:127:1668","0:229:1669","0:361:1671","0:459:1036","0:360","0:413","0:414","0:415","0:417","0:418","0:419","0:451","0:452","0:453","0:455","0:456","0:457","0:458"],"is_stripped":false}},"2:11431:56945":{"id":"2:11431:56945","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,49],"end":[7,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder_string_writer::StrConsumer","name":"StrConsumer","id":"0:210:1998","glob":false}},"0:308:1799":{"id":"0:308:1799","crate_id":0,"name":"config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[184,4],"end":[186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:334:1670","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11441:1802":{"id":"2:11441:1802","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50096:2960","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:524":{"id":"0:524","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,20],"end":[105,29]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:343:1883":{"id":"0:343:1883","crate_id":0,"name":"encode_string","span":{"filename":"src/engine/mod.rs","begin":[154,4],"end":[164,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied `String`.\nWrites into the supplied `String`, which may allocate if its internal buffer isn't big enough.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nfn main() {\n    let mut buf = String::new();\n    general_purpose::STANDARD.encode_string(b\"hello world~\", &mut buf);\n    println!(\"{}\", buf);\n\n    buf.clear();\n    CUSTOM_ENGINE.encode_string(b\"hello internet~\", &mut buf);\n    println!(\"{}\", buf);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[248,0],"end":[398,1]},"visibility":{"restricted":{"parent":"0:128:1885","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_all","write_all_vectored","write_fmt","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3461:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:175:1668","0:179:2118"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:534":{"id":"0:534","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11438:56969":{"id":"2:11438:56969","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11437:56968"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:324:1800":{"id":"0:324:1800","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[323,4],"end":[325,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,23],"end":[22,25]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11417:61147":{"id":"2:11417:61147","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11497:61159":{"id":"2:11497:61159","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11116:2885","`DoubleEndedIterator`":"2:7079:120","prim@char":"1:12300:408","str::rmatch_indices":"2:11500:61160"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50260:3509","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184:576":{"id":"0:184:576","crate_id":0,"name":"drop","span":{"filename":"src/write/encoder.rs","begin":[401,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:1674":{"id":"0:399:1674","crate_id":0,"name":"encode_engine_slice","span":{"filename":"src/encode.rs","begin":[51,0],"end":[57,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied slice.\n\nSee [Engine::encode_slice].","links":{"Engine::encode_slice":"0:345:2067"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_slice"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11453:56988":{"id":"2:11453:56988","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:2885"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:1996":{"id":"0:140:1996","crate_id":0,"name":"EncoderWriter","span":{"filename":"src/write/encoder.rs","begin":[63,0],"end":[81,1]},"visibility":"public","docs":"A `Write` implementation that base64 encodes data before delegating to the wrapped writer.\n\nBecause base64 has special handling for the end of the input data (padding, etc), there's a\n`finish()` method on this type that encodes any leftover input bytes and adds padding if\nappropriate. It's called automatically when deallocated (see the `Drop` implementation), but\nany error that occurs when invoking the underlying writer will be suppressed. If you want to\nhandle such errors, call `finish()` yourself.\n\n# Examples\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\n// use a vec as the simplest possible `Write` -- in real code this is probably a file, etc.\nlet mut enc = base64::write::EncoderWriter::new(Vec::new(), &general_purpose::STANDARD);\n\n// handle errors as you normally would\nenc.write_all(b\"asdf\").unwrap();\n\n// could leave this out to be called by Drop, if you don't care\n// about handling errors or getting the delegate writer back\nlet delegate = enc.finish().unwrap();\n\n// base64 was written to the writer\nassert_eq!(b\"YXNkZg==\", &delegate[..]);\n\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Errors\n\nBase64 encoding itself does not generate errors, but errors from the wrapped writer will be\nreturned as per the contract of `Write`.\n\n# Performance\n\nIt has some minor performance loss compared to encoding slices (a couple percent).\nIt does not do any heap allocation.\n\n# Limitations\n\nOwing to the specification of the `write` and `flush` methods on the `Write` trait and their\nimplications for a buffering implementation, these methods may not behave as expected. In\nparticular, calling `write_all` on this interface may fail with `io::ErrorKind::WriteZero`.\nSee the documentation of the `Write` trait implementation for further details.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:158","a:2:7735:3246-0:140:1996","a:2:2676:225-0:140:1996","a:2:2662:217-0:140:1996","a:2:2726:3310-0:140:1996","a:2:7736:3245-0:140:1996","b:2:2523-0:140:1996","b:2:2238-0:140:1996","b:2:2517-0:140:1996","b:2:2513-0:140:1996","b:2:2241-0:140:1996","b:2:2528-0:140:1996","b:2:3321-0:140:1996","0:153","0:171","0:180"]}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,24],"end":[163,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode","name":"encode","id":"0:391:595","glob":false}},"b:5:681-0:563:1682":{"id":"b:5:681-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:3465","5:684:3466","5:685:3467"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:3245-0:291:1834":{"id":"a:2:7736:3245-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:369:915":{"id":"0:369:915","crate_id":0,"name":"new","span":{"filename":"src/alphabet.rs","begin":[47,4],"end":[93,5]},"visibility":"public","docs":"Create an `Alphabet` from a string of 64 unique printable ASCII bytes.\n\nThe `=` byte is not allowed as it is used for padding.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418":{"id":"0:418","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,45],"end":[165,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encoded_len","name":"encoded_len","id":"0:404:1675","glob":false}},"2:11443:59124":{"id":"2:11443:59124","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11442:59142"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50393:3515","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:2118":{"id":"0:179:2118","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder.rs","begin":[391,4],"end":[397,5]},"visibility":"default","docs":"Because this is usually treated as OK to call multiple times, it will *not* flush any\nincomplete chunks of input or write padding.\n# Errors\n\nThe first error that is not of [`ErrorKind::Interrupted`] will be returned.","links":{"`ErrorKind::Interrupted`":"1:8298:2085"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:2903:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11436:61152":{"id":"2:11436:61152","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12306:1352","str::slice_unchecked":"2:11435:61151","crate::ops::IndexMut":"2:2991:2870"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:556:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[71,0],"end":[172,1]},"visibility":{"restricted":{"parent":"0:75:1907","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3404:1927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:110:915","0:118:1974"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11433:56946":{"id":"2:11433:56946","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[402,9],"end":[402,14]},"visibility":{"restricted":{"parent":"0:229:1669","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:483:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:3310-0:86:1908":{"id":"a:2:2726:3310-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:74:1667":{"id":"0:74:1667","crate_id":0,"name":"read","span":{"filename":"src/read/mod.rs","begin":[1,0],"end":[6,18]},"visibility":"public","docs":"Implementations of `io::Read` to transparently decode base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:126"],"is_stripped":false}},"0:189:1997":{"id":"0:189:1997","crate_id":0,"name":"EncoderStringWriter","span":{"filename":"src/write/encoder_string_writer.rs","begin":[56,0],"end":[58,1]},"visibility":"public","docs":"A `Write` implementation that base64-encodes data using the provided config and accumulates the\nresulting base64 utf8 `&str` in a [StrConsumer] implementation (typically `String`), which is\nthen exposed via `into_inner()`.\n\n# Examples\n\nBuffer base64 in a new String:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut enc = base64::write::EncoderStringWriter::new(&general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// get the resulting String\nlet b64_string = enc.into_inner();\n\nassert_eq!(\"YXNkZg==\", &b64_string);\n```\n\nOr, append to an existing `String`, which implements `StrConsumer`:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut buf = String::from(\"base64: \");\n\nlet mut enc = base64::write::EncoderStringWriter::from_consumer(\n    &mut buf,\n    &general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// release the &mut reference on buf\nlet _ = enc.into_inner();\n\nassert_eq!(\"base64: YXNkZg==\", &buf);\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Performance\n\nBecause it has to validate that the base64 is UTF-8, it is about 80% as fast as writing plain\nbytes to a `io::Write`.","links":{"StrConsumer":"0:210:1998"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:194","0:200","a:2:7735:3246-0:189:1997","a:2:2676:225-0:189:1997","a:2:2662:217-0:189:1997","a:2:2726:3310-0:189:1997","a:2:7736:3245-0:189:1997","b:2:2523-0:189:1997","b:2:2238-0:189:1997","b:2:2517-0:189:1997","b:2:2513-0:189:1997","b:2:2241-0:189:1997","b:2:2528-0:189:1997","b:2:3321-0:189:1997","0:204"]}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,16],"end":[105,18]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5103:54273":{"id":"5:5103:54273","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11537:54276"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375":{"id":"0:375","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[129,0],"end":[129,43]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","cause","source","provide"],"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[96,0],"end":[246,1]},"visibility":{"restricted":{"parent":"0:128:1885","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:162:915","0:165:1937","0:170:1974"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:372:1426":{"id":"0:372:1426","crate_id":0,"name":"try_from","span":{"filename":"src/alphabet.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2497:233","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3246-0:493:2318":{"id":"a:2:7735:3246-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2662:217-0:527:1676":{"id":"a:2:2662:217-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:493:2318":{"id":"b:2:2238-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:318:2398":{"id":"0:318:2398","crate_id":0,"name":"with_encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[273,4],"end":[278,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `padding` setting.\n\nIf `padding` is `true`, encoding will append either 1 or 2 `=` padding characters as needed\nto produce an output whose length is a multiple of 4.\n\nPadding is not needed for correct decoding and only serves to waste bytes, but it's in the\n[spec](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2).\n\nFor new applications, consider not using padding if the decoders you're using don't require\npadding to be present.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["padding",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11414":{"id":"2:11414","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10679:1352","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11415:789","2:11416:1946","2:11417:61147","2:11418:61148","2:11420:61149","2:11423:2512","2:11424:61150","2:11425:309","2:11426:56947","2:11427:56943","2:11429:56944","2:11431:56945","2:11433:56946","2:11435:61151","2:11436:61152","2:11437:56968","2:11438:56969","2:11439:3527","2:11440:4356","2:11441:1802","2:11442:59142","2:11443:59124","2:11444:5062","2:11445:61153","2:11446:59135","2:11447:56986","2:11450:56987","2:11453:56988","2:11456:3446","2:11460:3410","2:11464:56976","2:11467:56978","2:11470:56980","2:11473:61154","2:11476:61155","2:11479:56982","2:11482:56984","2:11485:61156","2:11488:61157","2:11491:2835","2:11494:61158","2:11497:61159","2:11500:61160","2:11503:61161","2:11505:61162","2:11507:61163","2:11509:61164","2:11510:61165","2:11511:61166","2:11514:61167","2:11517:54651","2:11520:56989","2:11523:61168","2:11526:61169","2:11529:61170","2:11532:4392","2:11534:4747","2:11535:54274","2:11536:54275","2:11537:54276","2:11538:61171","2:11540:3813","2:11541:61172"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:563:1682":{"id":"b:2:2517-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11435:61151":{"id":"2:11435:61151","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12306:1352","crate::ops::Index":"2:2987:2869","str::slice_mut_unchecked":"2:11436:61152"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:157:655":{"id":"0:157:655","crate_id":0,"name":"fmt","span":{"filename":"src/write/encoder.rs","begin":[84,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5085:2644":{"id":"5:5085:2644","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:378:2540":{"id":"0:378:2540","crate_id":0,"name":"CRYPT","span":{"filename":"src/alphabet.rs","begin":[148,0],"end":[150,2]},"visibility":"public","docs":"The `crypt(3)` alphabet (uses `.` and `/` as the first two values).\n\nNot standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:518:1553":{"id":"0:518:1553","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[114,17],"end":[114,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:506:600":{"id":"0:506:600","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[22,27],"end":[22,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11440:4356":{"id":"2:11440:4356","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50086:3499","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:317:915":{"id":"0:317:915","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[254,4],"end":[261,5]},"visibility":"public","docs":"Create a new config with `padding` = `true`, `decode_allow_trailing_bits` = `false`, and\n`decode_padding_mode = DecodePaddingMode::RequireCanonicalPadding`.\n\nThis probably matches most people's expectations, but consider disabling padding to save\na few bytes unless you specifically need it for compatibility with some legacy system.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:474:655":{"id":"0:474:655","crate_id":0,"name":"fmt","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[241,22],"end":[241,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:512:1553":{"id":"0:512:1553","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[110,19],"end":[110,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"a:2:7736:3245-0:540:1681":{"id":"a:2:7736:3245-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2526:127":{"id":"2:2526:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:11424:61150":{"id":"2:11424:61150","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:493:2318":{"id":"b:2:2523-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11520:56989":{"id":"2:11520:56989","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11116:2885","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:554:412":{"id":"0:554:412","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11444:5062":{"id":"2:11444:5062","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50364:2963","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:216:2148":{"id":"0:216:2148","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3246-0:527:1676":{"id":"a:2:7735:3246-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:291:1834":{"id":"0:291:1834","crate_id":0,"name":"GeneralPurpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[21,0],"end":[25,1]},"visibility":"public","docs":"A general-purpose base64 engine.\n\n- It uses no vector CPU instructions, so it will work on any system.\n- It is reasonably fast (~2-3GiB/s).\n- It is not constant-time, though, so it is vulnerable to timing side-channel attacks. For loading cryptographic keys, etc, it is suggested to use the forthcoming constant-time implementation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:297","a:2:7735:3246-0:291:1834","a:2:2676:225-0:291:1834","a:2:2662:217-0:291:1834","a:2:2726:3310-0:291:1834","a:2:7736:3245-0:291:1834","b:2:2523-0:291:1834","b:2:2238-0:291:1834","b:2:2517-0:291:1834","b:2:2513-0:291:1834","b:2:2241-0:291:1834","b:2:2528-0:291:1834","b:2:3321-0:291:1834","0:299"]}},"b:2:2517-0:466:1835":{"id":"b:2:2517-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:326:2422":{"id":"0:326:2422","crate_id":0,"name":"STANDARD_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[332,0],"end":[332,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [NO_PAD] config.","links":{"alphabet::STANDARD":"0:376:1832","NO_PAD":"0:330:2423","GeneralPurpose":"0:291:1834"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"a:2:2676:225-0:189:1997":{"id":"a:2:2676:225-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2243:54242":{"id":"2:2243:54242","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:105:655":{"id":"0:105:655","crate_id":0,"name":"fmt","span":{"filename":"src/read/decoder.rs","begin":[59,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11485:61156":{"id":"2:11485:61156","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:575:600":{"id":"0:575:600","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:409:655":{"id":"0:409:655","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[144,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376:1832":{"id":"0:376:1832","crate_id":0,"name":"STANDARD","span":{"filename":"src/alphabet.rs","begin":[134,0],"end":[136,2]},"visibility":"public","docs":"The standard alphabet (uses `+` and `/`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-3).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:440:1677":{"id":"0:440:1677","crate_id":0,"name":"decode_engine","span":{"filename":"src/decode.rs","begin":[101,0],"end":[106,1]},"visibility":"public","docs":" Decode from string reference as octets using the specified [Engine].\n\n See [Engine::decode].\nReturns a `Result` containing a `Vec<u8>`.","links":{"Engine":"0:334:1670","Engine::decode":"0:347:529"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6400:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:566:1553":{"id":"0:566:1553","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[54,16],"end":[54,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:55":{"id":"0:55","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[23,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:40:1666","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:59:915"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:437:673":{"id":"0:437:673","crate_id":0,"name":"from","span":{"filename":"src/decode.rs","begin":[81,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:86:1908":{"id":"a:2:2676:225-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:484":{"id":"0:484","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[402,16],"end":[402,20]},"visibility":{"restricted":{"parent":"0:229:1669","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:198:2139":{"id":"0:198:2139","crate_id":0,"name":"from_consumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[62,4],"end":[66,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will append to the provided `StrConsumer`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["str_consumer",{"kind":"generic","inner":"S"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:189:1997":{"id":"b:2:2513-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:577":{"id":"0:577","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,34],"end":[51,36]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:483:412":{"id":"0:483:412","crate_id":0,"name":"clone","span":{"filename":"src/engine/mod.rs","begin":[402,9],"end":[402,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:3310-0:507:2515":{"id":"a:2:2726:3310-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:335:1784":{"id":"0:335:1784","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[41,4],"end":[41,24]},"visibility":"default","docs":"The config type used by this engine","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Config","id":"0:356:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"2:11460:3410":{"id":"2:11460:3410","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48136:176","self::pattern":"2:11116:2885","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:685:3467":{"id":"5:685:3467","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:3310-0:493:2318":{"id":"a:2:2726:3310-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:162:915":{"id":"0:162:915","crate_id":0,"name":"new","span":{"filename":"src/write/encoder.rs","begin":[98,4],"end":[108,5]},"visibility":"public","docs":"Create a new encoder that will write to the provided delegate writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["delegate",{"kind":"generic","inner":"W"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:189:1997":{"id":"b:2:2241-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:475:2310":{"id":"a:2:2662:217-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2585-0:507:2515":{"id":"b:2:2585-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:3806","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2587:3774"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:11418:61148":{"id":"2:11418:61148","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:475:2310":{"id":"b:2:2241-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:377:2425":{"id":"0:377:2425","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/alphabet.rs","begin":[141,0],"end":[143,2]},"visibility":"public","docs":"The URL safe alphabet (uses `-` and `_`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-4).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"5:5100:61808":{"id":"5:5100:61808","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:6967:221","`Box<str>`":"5:286:2874"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:2874","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6718:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:521":{"id":"0:521","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,16],"end":[105,18]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:3310-0:466:1835":{"id":"a:2:2726:3310-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:225-0:493:2318":{"id":"a:2:2676:225-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11476:61155":{"id":"2:11476:61155","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:12300:408","str::split":"2:11464:56976","self::pattern":"2:11116:2885","str::split_terminator":"2:11473:61154"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50178:3503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:443:1678":{"id":"0:443:1678","crate_id":0,"name":"decode_engine_vec","span":{"filename":"src/decode.rs","begin":[113,0],"end":[119,1]},"visibility":"public","docs":"Decode from string reference as octets.\n\nSee [Engine::decode_vec].","links":{"Engine::decode_vec":"0:349:2274"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_vec\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_vec"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["buffer",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6400:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3245-0:507:2515":{"id":"a:2:7736:3245-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:59:915":{"id":"0:59:915","crate_id":0,"name":"new","span":{"filename":"src/display.rs","begin":[25,4],"end":[30,5]},"visibility":"public","docs":"Create a `Base64Display` with the provided engine.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bytes",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:475:2310":{"id":"a:2:2676:225-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:531:412":{"id":"0:531:412","crate_id":0,"name":"clone","span":{"filename":"src/encode.rs","begin":[137,9],"end":[137,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:507:2515":{"id":"b:2:2238-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:379:2543":{"id":"0:379:2543","crate_id":0,"name":"BCRYPT","span":{"filename":"src/alphabet.rs","begin":[153,0],"end":[155,2]},"visibility":"public","docs":"The bcrypt alphabet.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:229:1669":{"id":"0:229:1669","crate_id":0,"name":"engine","span":{"filename":"src/engine/mod.rs","begin":[1,0],"end":[410,1]},"visibility":"public","docs":"Provides the [Engine] abstraction and out of the box implementations.","links":{"Engine":"0:334:1670"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:242:1833","0:332","0:333","0:334:1670","0:356:1784","0:358:2174","0:475:2310"],"is_stripped":false}},"2:11523:61168":{"id":"2:11523:61168","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11116:2885","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3246-0:540:1681":{"id":"a:2:7735:3246-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:411:386":{"id":"0:411:386","crate_id":0,"name":"cause","span":{"filename":"src/encode.rs","begin":[153,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:86:1908":{"id":"b:2:2517-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:475:2310":{"id":"b:2:2238-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:570:412":{"id":"0:570:412","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[51,9],"end":[51,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:3310-0:563:1682":{"id":"a:2:2726:3310-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:460":{"id":"0:460","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[14,0],"end":[14,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::engine::Engine","name":"Engine","id":"0:334:1670","glob":false}},"b:2:2238-0:527:1676":{"id":"b:2:2238-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:435:386":{"id":"0:435:386","crate_id":0,"name":"cause","span":{"filename":"src/decode.rs","begin":[72,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:291:1834":{"id":"b:2:2523-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:361:1671":{"id":"0:361:1671","crate_id":0,"name":"alphabet","span":{"filename":"src/alphabet.rs","begin":[1,0],"end":[241,1]},"visibility":"public","docs":"Provides [Alphabet] and constants for alphabets commonly used in the wild.","links":{"Alphabet":"0:493:2318"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:493:2318","0:507:2515","0:376:1832","0:377:2425","0:378:2540","0:379:2543","0:380:2547","0:381:2551"],"is_stripped":false}},"a:2:7736:3245-0:140:1996":{"id":"a:2:7736:3245-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[18,0],"end":[18,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::engine::general_purpose::URL_SAFE","name":"BASE64_URL_SAFE","id":"0:327:2425","glob":false}},"0:123:1667":{"id":"0:123:1667","crate_id":0,"name":"read","span":{"filename":"src/read/decoder.rs","begin":[187,4],"end":[294,5]},"visibility":"default","docs":"Decode input from the wrapped reader.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nwritten in `buf`.\n\nWhere possible, this function buffers base64 to minimize the number of read() calls to the\ndelegate reader.\n\n# Errors\n\nAny errors emitted by the delegate reader are returned. Decoding errors due to invalid\nbase64 are also possible, and will have `io::ErrorKind::InvalidData`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:563:1682":{"id":"b:2:2528-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:526:600":{"id":"0:526:600","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[105,20],"end":[105,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3246-0:86:1908":{"id":"a:2:7735:3246-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11467:56978":{"id":"2:11467:56978","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11116:2885","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10940:3516","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3246-0:475:2310":{"id":"a:2:7735:3246-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:225-0:527:1676":{"id":"a:2:2676:225-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:211:2148":{"id":"0:211:2148","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[100,4],"end":[100,37]},"visibility":"default","docs":"Consume the base64 encoded data in `buf`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:545:1964":{"id":"0:545:1964","crate_id":0,"name":"InvalidLength","span":{"filename":"src/decode.rs","begin":[19,4],"end":[19,17]},"visibility":"default","docs":"The length of the input is invalid.\nA typical cause of this is stray trailing whitespace or other separator bytes.\nIn the case where excess trailing bytes have produced an invalid length *and* the last byte\nis also an invalid base64 symbol (as would be the case for whitespace, etc), `InvalidByte`\nwill be emitted instead of `InvalidLength` to make the issue easier to debug.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:7735:3246-0:563:1682":{"id":"a:2:7735:3246-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2523-0:49:1892":{"id":"b:2:2523-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:374:655":{"id":"0:374:655","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[118,4],"end":[125,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5352-0:527:1676":{"id":"b:5:5352-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5350:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5354:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[104,0],"end":[108,1]},"visibility":{"restricted":{"parent":"0:185:1995","path":"::write::encoder_string_writer"}},"docs":"As for io::Write, `StrConsumer` is implemented automatically for `&mut S`.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"S"}}},"items":["0:214:2148"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:493:2318":{"id":"0:493:2318","crate_id":0,"name":"Alphabet","span":{"filename":"src/alphabet.rs","begin":[23,0],"end":[25,1]},"visibility":"public","docs":"An alphabet defines the 64 ASCII characters (symbols) used for base64.\n\nCommon alphabets are provided as constants, and custom alphabets\ncan be made via `from_str` or the `TryFrom<str>` implementation.\n\n```\nlet custom = base64::alphabet::Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n\nlet engine = base64::engine::GeneralPurpose::new(\n    &custom,\n    base64::engine::general_purpose::PAD);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:366","a:2:7735:3246-0:493:2318","a:2:2676:225-0:493:2318","a:2:2662:217-0:493:2318","a:2:2726:3310-0:493:2318","a:2:7736:3245-0:493:2318","b:2:2523-0:493:2318","b:2:2238-0:493:2318","b:2:2517-0:493:2318","b:2:2513-0:493:2318","b:2:2241-0:493:2318","b:2:2528-0:493:2318","b:2:3321-0:493:2318","b:5:681-0:493:2318","0:496","0:498","0:500","0:501","0:504","0:505","0:370"]}},"0:199:1974":{"id":"0:199:1974","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder_string_writer.rs","begin":[72,4],"end":[77,5]},"visibility":"public","docs":"Encode all remaining buffered data, including any trailing incomplete input triples and\nassociated padding.\n\nReturns the base64-encoded form of the accumulated written data.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"S"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3245-0:49:1892":{"id":"a:2:7736:3245-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:527:1676":{"id":"b:2:2513-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11427:56943":{"id":"2:11427:56943","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48136:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2585-0:563:1682":{"id":"b:2:2585-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:3806","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2587:3774"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:530":{"id":"0:530","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,9],"end":[137,14]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:531:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11537:54276":{"id":"2:11537:54276","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:438:529":{"id":"0:438:529","crate_id":0,"name":"decode","span":{"filename":"src/decode.rs","begin":[91,0],"end":[93,1]},"visibility":"public","docs":"Decode base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::decode].","links":{"STANDARD":"0:325:1832","Engine::decode":"0:347:529"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6400:240","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2527:1427":{"id":"2:2527:1427","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:345:2067":{"id":"0:345:2067","crate_id":0,"name":"encode_slice","span":{"filename":"src/engine/mod.rs","begin":[188,4],"end":[207,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied slice.\nWrites into the supplied output buffer.\n\nThis is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident\nor statically-allocated buffer).\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::general_purpose};\nlet s = b\"hello internet!\";\nlet mut buf = Vec::new();\n// make sure we'll have a slice big enough for base64 + padding\nbuf.resize(s.len() * 4 / 3 + 4, 0);\n\nlet bytes_written = general_purpose::STANDARD.encode_slice(s, &mut buf).unwrap();\n\n// shorten our vec down to just what was written\nbuf.truncate(bytes_written);\n\nassert_eq!(s, general_purpose::STANDARD.decode(&buf).unwrap().as_slice());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11447:56986":{"id":"2:11447:56986","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:11116:2885","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:1668":{"id":"0:208:1668","crate_id":0,"name":"write","span":{"filename":"src/write/encoder_string_writer.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:433:655":{"id":"0:433:655","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[62,4],"end":[67,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:86:1908":{"id":"b:2:2238-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:540:1681":{"id":"0:540:1681","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[10,0],"end":[28,1]},"visibility":"public","docs":"Errors that can occur while decoding.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:541:1962","0:545:1964","0:547:1965","0:551:1966"],"impls":["a:2:7735:3246-0:540:1681","a:2:2676:225-0:540:1681","a:2:2662:217-0:540:1681","a:2:2726:3310-0:540:1681","a:2:7736:3245-0:540:1681","b:2:2523-0:540:1681","b:2:2238-0:540:1681","b:2:2517-0:540:1681","b:2:2513-0:540:1681","b:2:2241-0:540:1681","b:2:2528-0:540:1681","b:2:2585-0:540:1681","b:2:3321-0:540:1681","b:5:5352-0:540:1681","b:5:681-0:540:1681","0:553","0:555","0:557","0:558","0:560","0:561","0:428","0:430","0:436"]}},"a:2:2726:3310-0:140:1996":{"id":"a:2:2726:3310-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:508:1964":{"id":"0:508:1964","crate_id":0,"name":"InvalidLength","span":{"filename":"src/alphabet.rs","begin":[108,4],"end":[108,17]},"visibility":"default","docs":"Alphabets must be 64 ASCII bytes","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2528-0:507:2515":{"id":"b:2:2528-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:527:1676":{"id":"b:2:2517-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11439:3527":{"id":"2:11439:3527","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50080:2877","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[60,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:185:1995","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["0:198:2139","0:199:1974"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:499:655":{"id":"0:499:655","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[22,16],"end":[22,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11437:56968":{"id":"2:11437:56968","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11438:56969"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11505:61162":{"id":"2:11505:61162","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:532":{"id":"0:532","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,16],"end":[137,21]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:533:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:189:1997":{"id":"b:2:2523-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:140:1996":{"id":"b:2:2241-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[61,0],"end":[68,1]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:433:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7736:3245-0:475:2310":{"id":"a:2:7736:3245-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[152,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","cause","source","provide"],"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:411:386"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:140:1996":{"id":"b:2:3321-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:140:1996":{"id":"b:2:2517-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2516:2289":{"id":"2:2516:2289","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2490:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:507:2515":{"id":"0:507:2515","crate_id":0,"name":"ParseAlphabetError","span":{"filename":"src/alphabet.rs","begin":[106,0],"end":[115,1]},"visibility":"public","docs":"Possible errors when constructing an [Alphabet] from a `str`.","links":{"Alphabet":"0:493:2318"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:508:1964","0:510:2522","0:513:2518","0:516:2519"],"impls":["a:2:7735:3246-0:507:2515","a:2:2676:225-0:507:2515","a:2:2662:217-0:507:2515","a:2:2726:3310-0:507:2515","a:2:7736:3245-0:507:2515","b:2:2523-0:507:2515","b:2:2238-0:507:2515","b:2:2517-0:507:2515","b:2:2513-0:507:2515","b:2:2241-0:507:2515","b:2:2528-0:507:2515","b:2:2585-0:507:2515","b:2:3321-0:507:2515","b:5:5352-0:507:2515","0:519","0:521","0:522","0:524","0:525","0:373","0:375"]}},"0:301:2174":{"id":"0:301:2174","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[43,4],"end":[43,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"GeneralPurposeEstimate","id":"0:265:2321","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2241-0:86:1908":{"id":"b:2:2241-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:189:1997":{"id":"a:2:2662:217-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,32],"end":[170,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine","name":"decode_engine","id":"0:440:1677","glob":false}},"2:11529:61170":{"id":"2:11529:61170","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:2885"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:493:2318":{"id":"b:2:3321-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:140:1996":{"id":"b:2:2238-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:351:2288":{"id":"0:351:2288","crate_id":0,"name":"decode_slice","span":{"filename":"src/engine/mod.rs","begin":[320,4],"end":[334,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nReturns an error if `output` is smaller than the estimated decoded length.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice_unchecked] for a version that panics instead of returning an error\nif the output buffer is too small.\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{"Engine::decode_slice_unchecked":"0:354:2293","crate::decoded_len_estimate":"0:449:1680"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"generic","inner":"T"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2481:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:525":{"id":"0:525","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[105,20],"end":[105,29]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:526:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:466:1835":{"id":"b:2:3321-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:3246-0:49:1892":{"id":"a:2:7735:3246-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:330:2423":{"id":"0:330:2423","crate_id":0,"name":"NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[347,0],"end":[349,62]},"visibility":"public","docs":"Don't add padding when encoding, and require no padding when decoding.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:516:2519":{"id":"0:516:2519","crate_id":0,"name":"ReservedByte","span":{"filename":"src/alphabet.rs","begin":[114,4],"end":[114,20]},"visibility":"default","docs":"`=` cannot be used","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:518:1553"]},"discriminant":null}},"0:556:655":{"id":"0:556:655","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:320:2417":{"id":"0:320:2417","crate_id":0,"name":"with_decode_padding_mode","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[307,4],"end":[312,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_padding_mode` setting.\n\nPadding is not useful in terms of representing encoded data -- it makes no difference to\nthe decoder if padding is present or not, so if you have some un-padded input to decode, it\nis perfectly fine to use `DecodePaddingMode::Indifferent` to prevent errors from being\nemitted.\n\nHowever, since in practice\n[people who learned nothing from BER vs DER seem to expect base64 to have one canonical encoding](https://eprint.iacr.org/2022/361),\nthe default setting is the stricter `DecodePaddingMode::RequireCanonicalPadding`.\n\nOr, if \"canonical\" in your circumstance means _no_ padding rather than padding to the\nnext multiple of four, there's `DecodePaddingMode::RequireNoPadding`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["mode",{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322:59":{"id":"0:322:59","crate_id":0,"name":"default","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[317,4],"end":[319,5]},"visibility":"default","docs":"Delegates to [GeneralPurposeConfig::new].","links":{"GeneralPurposeConfig::new":"0:317:915"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:359:1680":{"id":"0:359:1680","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/engine/mod.rs","begin":[395,4],"end":[395,44]},"visibility":"default","docs":"Returns a conservative (err on the side of too big) estimate of the decoded length to use\nfor pre-allocating buffers, etc.\n\nThe estimate must be no larger than the next largest complete triple of decoded bytes.\nThat is, the final quad of tokens to decode may be assumed to be complete with no padding.\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2517-0:291:1834":{"id":"b:2:2517-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3323:1440":{"id":"2:3323:1440","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46617:3807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11442:59142":{"id":"2:11442:59142","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11443:59124"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50384:3500","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5352-0:49:1892":{"id":"b:5:5352-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5350:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["5:5354:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[402,40],"end":[402,42]},"visibility":{"restricted":{"parent":"0:229:1669","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5091:61806":{"id":"5:5091:61806","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:560":{"id":"0:560","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:170:1974":{"id":"0:170:1974","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder.rs","begin":[241,4],"end":[245,5]},"visibility":"public","docs":"Unwraps this `EncoderWriter`, returning the base writer it writes base64 encoded output\nto.\n\nNormally this method should not be needed, since `finish()` returns the inner writer if\nit completes successfully. That will also ensure all data has been flushed, which the\n`into_inner()` function does *not* do.\n\nCalling this method after `finish()` has completed successfully will panic, since the\nwriter has already been returned.\n\nThis method may be useful if the writer implements additional APIs beyond the `Write`\ntrait. Note that the inner writer might be in an error state or have an incomplete\nbase64 string written to it.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[111,0],"end":[115,1]},"visibility":{"restricted":{"parent":"0:185:1995","path":"::write::encoder_string_writer"}},"docs":"Pushes the str onto the end of the String","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:2148"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:497:412":{"id":"0:497:412","crate_id":0,"name":"clone","span":{"filename":"src/alphabet.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11426:56947":{"id":"2:11426:56947","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12317:1448"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:507:2515":{"id":"b:2:2513-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[248,0],"end":[313,1]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:317:915","0:318:2398","0:319:2406","0:320:2417"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[44,0],"end":[48,1]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","cause","source","provide"],"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:431:386"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11429:56944":{"id":"2:11429:56944","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48136:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3245-0:86:1908":{"id":"a:2:7736:3245-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:681-0:527:1676":{"id":"b:5:681-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:3465","5:684:3466","5:685:3467"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:340:1799":{"id":"0:340:1799","crate_id":0,"name":"config","span":{"filename":"src/engine/mod.rs","begin":[105,4],"end":[105,38]},"visibility":"default","docs":"Returns the config for this engine.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:334:1670","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:2532:1426":{"id":"2:2532:1426","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:466:1835":{"id":"a:2:2662:217-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11470:56980":{"id":"2:11470:56980","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:2885","`DoubleEndedIterator`":"2:7079:120","str::split":"2:11464:56976"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50128:3502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5352-0:507:2515":{"id":"b:5:5352-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5350:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5354:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:544:1554":{"id":"0:544:1554","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:489:600":{"id":"0:489:600","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[402,29],"end":[402,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:291:1834":{"id":"b:2:2513-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:563:1682":{"id":"0:563:1682","crate_id":0,"name":"DecodeSliceError","span":{"filename":"src/decode.rs","begin":[52,0],"end":[59,1]},"visibility":"public","docs":"Errors that can occur while decoding into a slice.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:564:1681","0:567:2239"],"impls":["a:2:7735:3246-0:563:1682","a:2:2676:225-0:563:1682","a:2:2662:217-0:563:1682","a:2:2726:3310-0:563:1682","a:2:7736:3245-0:563:1682","b:2:2523-0:563:1682","b:2:2238-0:563:1682","b:2:2517-0:563:1682","b:2:2513-0:563:1682","b:2:2241-0:563:1682","b:2:2528-0:563:1682","b:2:2585-0:563:1682","b:2:3321-0:563:1682","b:5:5352-0:563:1682","b:5:681-0:563:1682","0:569","0:571","0:573","0:574","0:576","0:577","0:432","0:434","0:436"]}},"0:528:2239":{"id":"0:528:2239","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/encode.rs","begin":[140,4],"end":[140,23]},"visibility":"default","docs":"The provided slice is too small.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:334:1670":{"id":"0:334:1670","crate_id":0,"name":"Engine","span":{"filename":"src/engine/mod.rs","begin":[39,0],"end":[364,1]},"visibility":"public","docs":"An `Engine` provides low-level encoding and decoding operations that all other higher-level parts of the API use. Users of the library will generally not need to implement this.\n\nDifferent implementations offer different characteristics. The library currently ships with\n[GeneralPurpose] that offers good speed and works on any CPU, with more choices\ncoming later, like a constant-time one when side channel resistance is called for, and vendor-specific vectorized ones for more speed.\n\nSee [general_purpose::STANDARD_NO_PAD] if you just want standard base64. Otherwise, when possible, it's\nrecommended to store the engine in a `const` so that references to it won't pose any lifetime\nissues, and to avoid repeating the cost of engine setup.\n\nSince almost nobody will need to implement `Engine`, docs for internal methods are hidden.","links":{"general_purpose::STANDARD_NO_PAD":"0:326:2422","GeneralPurpose":"0:291:1834"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:335:1784","0:336:2174","0:340:1799","0:341:595","0:343:1883","0:345:2067","0:347:529","0:349:2274","0:351:2288","0:354:2293"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:299"]}},"0:541:1962":{"id":"0:541:1962","crate_id":0,"name":"InvalidByte","span":{"filename":"src/decode.rs","begin":[13,4],"end":[13,26]},"visibility":"default","docs":"An invalid byte was found in the input. The offset and offending byte are provided.\nPadding characters (`=`) interspersed in the encoded form will be treated as invalid bytes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:543:1553","0:544:1554"]},"discriminant":null}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:576":{"id":"0:576","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,34],"end":[51,36]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11535:54274":{"id":"2:11535:54274","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:49:1892":{"id":"a:2:2676:225-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[30,0],"end":[41,1]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:429:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7736:3245-0:563:1682":{"id":"a:2:7736:3245-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7735:3246-0:140:1996":{"id":"a:2:7735:3246-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:480:2316":{"id":"0:480:2316","crate_id":0,"name":"RequireNone","span":{"filename":"src/engine/mod.rs","begin":[409,4],"end":[409,15]},"visibility":"default","docs":"Padding must be absent -- for when you want predictable padding, without any wasted bytes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[322,0],"end":[326,1]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Config","id":"0:356:1784","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:324:1800"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:140:1996":{"id":"b:2:2523-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:493:2318":{"id":"b:2:2241-0:493:2318","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,26],"end":[22,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"general_purpose::GeneralPurpose","name":"GeneralPurpose","id":"0:291:1834","glob":false}},"a:2:2676:225-0:140:1996":{"id":"a:2:2676:225-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:540:1681":{"id":"b:2:2513-0:540:1681","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:540:1681","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[27,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:242:1833","path":"::engine::general_purpose"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:298:915"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11420:61149":{"id":"2:11420:61149","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11418:61148"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11540:3813":{"id":"2:11540:3813","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4468:3813"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50418:3513","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:515:1553":{"id":"0:515:1553","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[112,20],"end":[112,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[87,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:185:1995","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_all","write_all_vectored","write_fmt","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3461:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["0:208:1668","0:209:2118"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:513:2518":{"id":"0:513:2518","crate_id":0,"name":"UnprintableByte","span":{"filename":"src/alphabet.rs","begin":[112,4],"end":[112,23]},"visibility":"default","docs":"All bytes must be printable (in the range `[32, 126]`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:515:1553"]},"discriminant":null}},"0:573":{"id":"0:573","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[51,23],"end":[51,32]},"visibility":{"restricted":{"parent":"0:420:529","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/read/mod.rs","begin":[3,0],"end":[3,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::decoder::DecoderReader","name":"DecoderReader","id":"0:86:1908","glob":false}},"b:2:2585-0:527:1676":{"id":"b:2:2585-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:3806","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2587:3774"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:429:655":{"id":"0:429:655","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[31,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[80,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:185:1995","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:203:915"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[402,29],"end":[402,38]},"visibility":{"restricted":{"parent":"0:229:1669","path":"::engine"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:684:3466":{"id":"5:684:3466","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:475:2310":{"id":"b:2:2513-0:475:2310","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodePaddingMode","id":"0:475:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:563:1682":{"id":"b:2:2523-0:563:1682","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeSliceError","id":"0:563:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:189:1997":{"id":"b:2:3321-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:449:1680":{"id":"0:449:1680","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/decode.rs","begin":[156,0],"end":[160,1]},"visibility":"public","docs":"Returns a conservative estimate of the decoded size of `encoded_len` base64 symbols (rounded up\nto the next group of 3 decoded bytes).\n\nThe resulting length will be a safe choice for the size of a decode buffer, but may have up to\n2 trailing bytes that won't end up being needed.\n\n# Examples\n\n```\nuse base64::decoded_len_estimate;\n\nassert_eq!(3, decoded_len_estimate(1));\nassert_eq!(3, decoded_len_estimate(2));\nassert_eq!(3, decoded_len_estimate(3));\nassert_eq!(3, decoded_len_estimate(4));\n// start of the next quad of encoded symbols\nassert_eq!(6, decoded_len_estimate(5));\n```\n\n# Panics\n\nPanics if decoded length estimation overflows.\nThis would happen for sizes within a few bytes of the maximum value of `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["encoded_len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:86:1908":{"id":"b:2:3321-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:225-0:466:1835":{"id":"a:2:2676:225-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:214:2148":{"id":"0:214:2148","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[105,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11423:2512":{"id":"2:11423:2512","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10684:1825"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[117,0],"end":[126,1]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:374:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:533:655":{"id":"0:533:655","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[137,16],"end":[137,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:417":{"id":"0:417","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,24],"end":[165,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine_slice","name":"encode_engine_slice","id":"0:399:1674","glob":false}},"2:11416:1946":{"id":"2:11416:1946","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5102:54272":{"id":"5:5102:54272","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11536:54275"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11456:3446":{"id":"2:11456:3446","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11116:2885","`None`":"2:48136:176","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[96,0],"end":[102,1]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:127","0:372:1426"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2528-0:466:1835":{"id":"b:2:2528-0:466:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurposeConfig","id":"0:466:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:527:1676":{"id":"b:2:2241-0:527:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:54242"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:49:1892":{"id":"a:2:2662:217-0:49:1892","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:49:1892","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:210:1998":{"id":"0:210:1998","crate_id":0,"name":"StrConsumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[98,0],"end":[101,1]},"visibility":"public","docs":"An abstraction around consuming `str`s produced by base64 encoding.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:211:2148"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:212","0:215"]}},"2:11446:59135":{"id":"2:11446:59135","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50402:3511","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:140:1996":{"id":"b:2:2513-0:140:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:86:1908":{"id":"b:2:2513-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2516:2289"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:520:655":{"id":"0:520:655","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[105,9],"end":[105,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:478:2314":{"id":"0:478:2314","crate_id":0,"name":"RequireCanonical","span":{"filename":"src/engine/mod.rs","begin":[407,4],"end":[407,20]},"visibility":"default","docs":"Padding must be canonical (0, 1, or 2 `=` as needed to produce a 4 byte suffix).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:336:2174":{"id":"0:336:2174","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[43,4],"end":[43,40]},"visibility":"default","docs":"The decode estimate used by this engine","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"DecodeEstimate","id":"0:358:2174","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,67],"end":[172,78]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::DecodeError","name":"DecodeError","id":"0:540:1681","glob":false}},"0:475:2310":{"id":"0:475:2310","crate_id":0,"name":"DecodePaddingMode","span":{"filename":"src/engine/mod.rs","begin":[403,0],"end":[410,1]},"visibility":"public","docs":"Controls how pad bytes are handled when decoding.\n\nEach [Engine] must support at least the behavior indicated by\n[DecodePaddingMode::RequireCanonical], and may support other modes.","links":{"Engine":"0:334:1670","DecodePaddingMode::RequireCanonical":"0:478:2314"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:476:2312","0:478:2314","0:480:2316"],"impls":["a:2:7735:3246-0:475:2310","a:2:2676:225-0:475:2310","a:2:2662:217-0:475:2310","a:2:2726:3310-0:475:2310","a:2:7736:3245-0:475:2310","b:2:2523-0:475:2310","b:2:2238-0:475:2310","b:2:2517-0:475:2310","b:2:2513-0:475:2310","b:2:2241-0:475:2310","b:2:2528-0:475:2310","b:2:3321-0:475:2310","b:5:681-0:475:2310","0:482","0:484","0:485","0:487","0:488","0:490","0:491"]}},"2:11511:61166":{"id":"2:11511:61166","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:2885"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11141:3492","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,23],"end":[22,25]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:86:1908":{"id":"b:2:2523-0:86:1908","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:86:1908","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[143,0],"end":[149,1]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:409:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:551:1966":{"id":"0:551:1966","crate_id":0,"name":"InvalidPadding","span":{"filename":"src/decode.rs","begin":[27,4],"end":[27,18]},"visibility":"default","docs":"The nature of the padding was not as configured: absent or incorrect when it must be\ncanonical, or present when it must be absent, etc.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11479:56982":{"id":"2:11479:56982","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:11116:2885","prim@char":"1:12300:408","str::rsplitn":"2:11482:56984"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50214:3506","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:356:1784":{"id":"0:356:1784","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[367,0],"end":[377,1]},"visibility":"public","docs":"The minimal level of configuration that engines must support.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:357:1800"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:323"]}},"2:11507:61163":{"id":"2:11507:61163","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,32],"end":[163,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine","name":"encode_engine","id":"0:393:1672","glob":false}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[19,0],"end":[19,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::engine::general_purpose::URL_SAFE_NO_PAD","name":"BASE64_URL_SAFE_NO_PAD","id":"0:328:2427","glob":false}},"0:358:2174":{"id":"0:358:2174","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[384,0],"end":[396,1]},"visibility":"public","docs":"The decode estimate used by an engine implementation. Users do not need to interact with this;\nit is only for engine implementors.\n\nImplementors may store relevant data here when constructing this to avoid having to calculate\nthem again during actual decoding.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:359:1680"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,34],"end":[137,36]},"visibility":{"restricted":{"parent":"0:382:595","path":"::encode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncodeSliceError","id":"0:527:1676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:110:915":{"id":"0:110:915","crate_id":0,"name":"new","span":{"filename":"src/read/decoder.rs","begin":[73,4],"end":[85,5]},"visibility":"public","docs":"Create a new decoder that will read from the provided reader `r`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["reader",{"kind":"generic","inner":"R"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:543:1553":{"id":"0:543:1553","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[13,16],"end":[13,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[400,0],"end":[407,1]},"visibility":{"restricted":{"parent":"0:128:1885","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:334:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:2031","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2928:2119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:140:1996","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:184:576"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:504":{"id":"0:504","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[22,27],"end":[22,36]},"visibility":{"restricted":{"parent":"0:361:1671","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:493:2318","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11415:789":{"id":"2:11415:789","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12300:408"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:291:1834":{"id":"b:2:2238-0:291:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"GeneralPurpose","id":"0:291:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:3246-0:507:2515":{"id":"a:2:7735:3246-0:507:2515","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:507:2515","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7735:3246-0:189:1997":{"id":"a:2:7735:3246-0:189:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:3245","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:189:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"paths":{"17:9778:5547":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:21044:3818":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:8741:8553":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:7237:8690":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:4894:3869":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:7388:5251":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:1637:3856":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:8076:3878":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:1722:7975":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"9:977:4854":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"0:242:1833":{"crate_id":0,"path":["base64","engine","general_purpose"],"kind":"module"},"17:13148:6817":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:2327:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13518:6933":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:2916:5519":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:21296:7244":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:4530:2861":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:4908:8568":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:8605:2901":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:49650:7293":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:11947:5043":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:6619:5292":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:9347:4057":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:52005:7299":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:1714:7971":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:9637:7358":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:5394:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:4551:8181":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"0:379:2543":{"crate_id":0,"path":["base64","alphabet","BCRYPT"],"kind":"constant"},"2:21372:59348":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:4441:4311":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:48219:3242":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"6:5782:8476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:2484:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:48134:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:973:4076":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"5:5525:4758":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:4816:8304":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10490:6260":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:5504:8350":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11330:6367":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:9113:5771":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:6241:5283":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"12:2080:4083":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:9631:5476":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:2612:2965":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"11:44:5002":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:2903:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:11909:6469":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:46945:4727":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:12314:721":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:13126:6812":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:11514:8793":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:4262:3868":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:50633:4339":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:5793:5154":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"0:475:2310":{"crate_id":0,"path":["base64","engine","DecodePaddingMode"],"kind":"enum"},"1:8429:2960":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:8329:4594":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:853:4784":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:50849:3489":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:11112:7422":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:11277:3953":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:1562:7875":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8650:4249":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:6517:5031":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:13492:6924":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:6907:4790":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:13082:6798":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:49198:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"5:1396:4072":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:2497:233":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:54229:7336":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:7841:2872":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:2825:5405":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:4749:5959":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:48210:3029":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"16:4327:5946":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:8601:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"14:165:45977":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:4042:5743":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:1825:3022":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:36:3025":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"0:291:1834":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurpose"],"kind":"struct"},"6:4294:8100":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:6302:8543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:10668:56291":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"0:459:1036":{"crate_id":0,"path":["base64","prelude"],"kind":"module"},"2:52143:7301":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:20370:3818":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:4385:5948":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:10860:2983":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:50490:4329":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:11077:2880":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:5447:5132":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"12:2205:2875":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"12:725:4071":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"18:614:61977":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:46685:4416":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:6676:5234":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4496:8153":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"18:671:5636":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:931:4072":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:2856:3849":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:2564:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:11969:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"18:599:61975":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"12:669:4074":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:5169:3814":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:11070:6311":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:11034:6306":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:2784:2865":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:8303:655":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"16:7970:5241":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13024:6784":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:48278:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:4326:2916":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:4706:8254":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:5713:8458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:4605:8208":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11054:6307":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:50054:2878":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:12237:6541":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:6233:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:9539:5478":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:1021:5600":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:6269:8520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:12266:9145":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:9764:6195":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:9601:5482":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:5498:8347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:48371:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:5558:5141":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:12198:6538":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:9401:6186":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:5741:8466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:3377:2943":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:3010:5407":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:29649:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:10973:6293":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:11134:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:9644:3502":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:6978:2855":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:2154:577":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:8391:2955":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:4689:5957":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:11688:8795":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:57034:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:6424:8584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:12695:6713":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:49164:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"12:1029:4083":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:2780:3903":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:5628:5145":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:6500:8635":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:21918:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:47055:4663":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:6780:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"12:2053:4081":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:21264:4399":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:6070:5168":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:9791:6196":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:2676:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:6496:5289":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:13279:6876":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:49991:3935":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:5235:6972":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:11496:4067":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:8083:4204":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:4506:8160":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:52125:4451":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:8625:4040":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:2768:3897":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:5574:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:9489:2962":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:52288:4490":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:12050:3023":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:6409:5785":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:50512:4330":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:562:6072":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:4262:4559":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:46640:2915":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:9526:5479":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:9836:5792":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:10403:5461":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:48337:3029":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"18:624:61974":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:54130:7329":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:10829:3520":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:3168:3995":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:21393:59351":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:22083:4633":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:9691:5545":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:52458:4452":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:10420:5616":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"18:80:54078":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:12164:6525":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:8339:47678":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:47191:3999":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:1751:8705":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:6161:5280":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:50178:3503":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:21984:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"6:1541:7860":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:2411:5415":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"5:6950:4792":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:47332:4018":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:646:40442":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"5:3764:5739":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"5:1359:3627":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:13393:6900":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:9873:6198":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:2919:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"18:574:6045":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:10466:6258":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:8981:6170":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:47024:4413":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:5480:8334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:5163:5167":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:5350:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:9446:6189":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:11259:6343":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"18:96:54079":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:47400:4022":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:20503:16826":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:4627:2943":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13413:6903":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:1967:3769":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:12278:6546":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13134:6815":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:21280:8707":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:11445:3954":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:3473:2975":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:12118:6518":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:48409:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:53846:4469":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:4139:8014":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:774:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:2991:2870":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:353:4166":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:6838:4241":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:6921:7362":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:20253:4548":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:11390:5796":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:54119:7328":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:3363:3627":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5672:8438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:8217:4129":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"9:592:4891":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"5:1060:4797":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:1962:5543":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:11704:5799":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"6:4257:8084":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:6277:8525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:10207:6241":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:47313:4016":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:9515:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:50833:3485":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:2930:5166":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"13:0:2723":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:52382:4463":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:4246:3866":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:7825:5304":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:8956:3626":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6528:5290":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:3616:3029":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:2389:5099":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:8056:5106":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:20531:4443":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:1938:3768":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"0:326:2422":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD_NO_PAD"],"kind":"constant"},"1:4210:4147":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:4239:8075":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:4152:8024":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:2300:5421":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:5568:8382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:4657:4265":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"4:0:2724":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:3162:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"18:609:6051":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:3154:4231":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:7093:5088":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"7:0:1491":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:6989:2856":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:8014:5108":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4515:8165":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:21720:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"5:6967:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"0:493:2318":{"crate_id":0,"path":["base64","alphabet","Alphabet"],"kind":"struct"},"1:4969:3975":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:5996:5276":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:3350:3626":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:567:7815":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:47148:3917":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:10283:6250":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:7737:6072":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:12909:6756":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:54306:7339":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:1686:7959":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:6865:5434":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:7539:56588":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:13071:6794":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"12:1085:5014":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:9532:3516":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:9458:5456":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:5887:4051":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:7059:3242":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:11585:5797":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"6:5727:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:2994:4750":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:1760:4695":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:4014:4245":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:2669:1796":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:3271:2980":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:4317:4560":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:53160:4453":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:6886:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:2605:5451":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11951:6490":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:4952:3646":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:13557:6942":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:9155:6173":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:598:4151":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"12:1003:4082":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:9805:5602":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:50880:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:8066:4164":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:6316:5255":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:50332:3508":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"5:6733:4785":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:4003:4152":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:4185:8048":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:3199:4508":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"9:827:4848":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:50409:3512":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:608:7838":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:12251:6542":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:8488:3987":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:4698:8249":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"12:861:4080":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11594:6424":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:21243:7242":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:8363:2986":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:10250:3933":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:6640:7362":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:20290:4439":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:50695:4342":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:7300:56266":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:48321:3626":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:51117:3971":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:12148:6521":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"12:822:4077":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:6376:5287":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:49146:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:10651:3951":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:10385:5558":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:51075:4613":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:5839:5156":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:7429:3628":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:4417:8147":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:8379:2953":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:2793:5406":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:4433:4309":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:51881:4473":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:9571:3932":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:13214:6832":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:9751:5546":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:58387:7346":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:50384:3500":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:967:6073":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"3:0:432":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:12836:6742":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:5835:8487":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:6772:3029":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"9:896:4853":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:8749:7238":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:4437:8149":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"9:33:4941":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:8609:2903":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:21459:4647":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:9225:3954":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:46915:4732":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:8881:61963":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:8911:61967":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:48202:3627":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:10670:4743":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:21786:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"11:36:7760":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"5:1405:4073":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:10708:5581":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:12748:6719":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:13374:6895":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:51105:3973":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:2445:3053":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"9:505:4841":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:2050:4799":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:48261:3140":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:10332:5622":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"0:466:1835":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurposeConfig"],"kind":"struct"},"6:135:40107":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:12850:6745":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:48346:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:52504:4456":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"9:920:4850":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:8368:5460":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:50374:3501":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:6654:5293":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:51857:4481":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"0:0:1686":{"crate_id":0,"path":["base64"],"kind":"module"},"1:5894:4052":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:52036:4474":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:5695:3950":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:47247:7282":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"18:0:2734":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6210:5282":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:9263:6180":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4575:8192":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:6544:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:10139:5493":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:2257:2951":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:12300:408":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:12073:6509":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:2493:234":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"6:6392:8574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:11174:6328":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:2758:3859":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:3147:4660":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:0:282":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:49665:4745":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:8241:5584":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:3249:5531":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:7214:8684":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:47219:4002":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:600:7833":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:13536:6939":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:47169:3997":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:4644:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:1695:7965":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:6782:4282":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:48751:4667":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:47238:4004":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:10283:3934":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:47630:2987":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:4335:8122":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"14:31:5966":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:10476:47939":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:58408:7347":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:5460:5133":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:11640:7366":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:2385:4208":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:12291:6547":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:6874:4088":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"18:521:5645":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:4505:4255":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:5011:3887":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:7433:4144":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:5845:4009":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:11927:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:38221:3394":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"5:2739:8702":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:10426:7357":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"6:5684:8445":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:20341:4549":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:7001:4011":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:3174:4423":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"12:659:3029":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:9723:3506":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:7038:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:4888:5963":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:4369:2917":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:8694:4307":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:4519:5951":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:1518:7850":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:6524:8645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:2904:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:48523:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:46567:4659":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:54267:7338":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:13221:6834":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"18:707:3494":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:5013:3889":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:10940:3516":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:5178:4035":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:3125:6076":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:12176:6527":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:6816:5431":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"0:327:2425":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE"],"kind":"constant"},"5:2747:60565":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:7279:8698":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12739:6718":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"5:6809:3029":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:5815:5155":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:386:6069":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"12:1859:3854":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:10445:56265":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"5:4439:655":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:3485:4826":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:12322:767":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:7298:5299":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"12:751:2859":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:1600:7899":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:14:1668":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:5582:8383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:8763:3978":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:13192:6827":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:52088:4466":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:0:794":{"crate_id":6,"path":["libc"],"kind":"module"},"1:678:7348":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:5680:3949":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4737:8267":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:11121:2872":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"0:361:1671":{"crate_id":0,"path":["base64","alphabet"],"kind":"module"},"16:2320:5102":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"0:74:1667":{"crate_id":0,"path":["base64","read"],"kind":"module"},"16:7603:5253":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"18:660:5635":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"14:7:5966":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12211:6539":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:5009:3881":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:48194:3626":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:5761:5151":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:47299:4015":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:9658:6191":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:3015:3856":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:11515:6411":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:8615:2905":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:12955:6768":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"0:480:2316":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireNone"],"kind":"variant"},"16:6668:5429":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:12318:1445":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"5:6727:3029":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:9442:7407":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:48894:2903":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:49978:3918":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:6375:8572":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:8752:2960":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:2557:5399":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:9021:6171":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:9485:8788":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:7150:5989":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"12:853:4079":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:11847:4253":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:4672:11696":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:57112:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5064:3890":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"14:160:5966":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:4272:2915":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:2955:3854":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:29621:3020":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2029:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:6681:4286":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:4592:8203":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:554:7809":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:52602:7303":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:9909:6201":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:1982:4800":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:49669:3920":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:4665:8233":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"15:214:5039":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:592:7828":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:1595:7897":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:1446:4795":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:46599:4438":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:4300:8103":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:2487:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"16:6146:5272":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:48561:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"12:1534:5026":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:6171:5273":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:46501:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:7057:4159":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:10799:5793":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:11903:7429":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:779:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:6352:8571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:6150:5739":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:4324:3873":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:10233:6246":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:11759:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:10670:5585":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:2792:3908":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:4574:5953":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:9644:5475":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:2788:3906":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"18:582:3394":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:6283:3032":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:3953:4037":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:4267:8087":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:3188:6969":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:50427:3514":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:153:5098":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:10374:5557":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:9671:5515":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:6759:2986":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"5:7061:3027":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:9531:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:6819:4096":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:1701:7968":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:50606:4338":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:6393:4614":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:7567:5256":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:4621:8214":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:4117:4253":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:1636:576":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:487:7767":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:13580:6946":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:50128:3502":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:9488:5480":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:11436:6377":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:8422:2959":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:918:4071":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:6409:8579":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:11500:6406":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:8887:4112":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"12:1836:3029":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:10822:47680":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:2631:5411":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:7896:4173":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:7736:3245":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:9118:61968":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:10062:6235":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:10455:5617":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:4629:8218":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:10642:5588":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"18:766:5644":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:21355:7250":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"12:300:5019":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:8639:4247":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:47005:4731":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:4354:8132":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"18:590:6047":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:5510:5138":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:8147:2975":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:4346:8127":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4534:8173":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:2948:3626":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:12860:6746":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:7929:5306":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4280:8092":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"0:476:2312":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","Indifferent"],"kind":"variant"},"6:4611:8211":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:20084:60044":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:6563:4379":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:10182:6239":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:6903:5086":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:11137:6322":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:965:4074":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:11576:6423":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:1608:3029":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:1678:7958":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"9:188:4916":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:2987:2869":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:661:3770":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:2869:4132":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:11711:33734":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:11130:3494":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:12337:5582":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:4059:4551":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"7:32:45244":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:50010:3936":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:9857:5530":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"9:649:4893":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:6200:5281":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:1532:7855":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:7659:5225":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:11457:3955":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:13039:6786":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:5348:7360":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:51791:7297":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"18:681:5637":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:46545:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11014:6296":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:53908:4489":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:11124:4204":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:9831:4202":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:12060:6508":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:49890:3928":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:8990:5761":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:21190:4630":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:9947:47867":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"6:4206:8057":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"0:329:1836":{"crate_id":0,"path":["base64","engine","general_purpose","PAD"],"kind":"constant"},"1:12303:1017":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:49465:7292":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:4027:241":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:8370:1786":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:6137:5778":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"1:1620:3853":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"12:1138:4084":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:1437:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:8611:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:9283:6182":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:1500:7842":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:50684:4341":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:7079:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"12:0:2729":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:12299:912":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:11606:6426":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:9315:4055":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:4200:4554":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:21409:59344":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:11800:6453":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:9370:4281":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:49176:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:12022:6504":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:7786:5788":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"9:709:4111":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:49426:3822":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:12874:6747":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:2674:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:575:7820":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:47639:5760":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"12:762:3026":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:7962:12695":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:513:7780":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:12298:366":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:13031:6785":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:62:40040":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:8699:4310":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:420:5169":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:545:7803":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:4745:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:50558:4337":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:1476:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:22482:4369":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:12514:6585":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:47270:4013":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:6921:4663":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11149:6323":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:2321:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:21320:4394":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"15:193:5035":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:9831:5605":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:48887:2902":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:7469:5237":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:8973:4117":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:8131:4225":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:20529:4449":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:8441:5583":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:3192:2981":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:8819:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:4096:7986":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:21046:4444":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11094:8791":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:8324:4593":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:50829:3484":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:5699:8447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:4786:5960":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:9183:6174":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:2960:4749":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"12:1628:5737":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9820:5603":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:7135:5092":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:7426:5252":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:1668:7952":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:5624:60478":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"6:6415:8581":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:13404:6901":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:1737:4696":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:50841:3487":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:11547:6418":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"18:636:6056":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:7849:4180":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:13594:6949":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:50541:4336":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:49447:4111":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:50260:3509":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:4817:5961":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:10528:5578":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:1643:7933":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:21332:4395":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"9:956:4849":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:52972:4476":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:52190:4495":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:4268:3869":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:21347:7249":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:2465:5420":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:6075:3029":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"9:676:4938":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:2932:2707":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"5:6815:3029":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"9:111:4908":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"17:11528:6413":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:4195:4553":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:7557:5231":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:46626:5108":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:9430:7405":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:8687:3817":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:12271:11695":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:54214:7335":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13168:6823":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:10857:2981":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:5587:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10350:5459":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:53970:4454":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:46901:4411":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:49918:3929":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:4719:773":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:2842:5164":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:4810:8301":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:3194:2982":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:8991:61966":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:29827:4658":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"8:0:2725":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:10902:4173":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:50825:3482":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:50160:3504":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:47364:4020":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:51088:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:5763:3953":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:49899:3927":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:9824:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:7166:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:10257:6248":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:2822:3832":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:6852:4242":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:5737:5150":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:49908:3931":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13114:6809":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:9765:3940":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:50278:3510":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:11617:6427":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12349:6556":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:52412:4467":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:8577:4303":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:39418:3804":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:4217:5943":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"5:1426:4075":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:54165:7332":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:6444:5749":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:12797:6733":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:5433:5131":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:46984:3512":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:11144:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:4778:8282":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:8607:2902":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:54054:4492":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:9283:4053":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4804:8299":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:4231:8073":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:7211:5094":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"0:380:2547":{"crate_id":0,"path":["base64","alphabet","IMAP_MUTF7"],"kind":"constant"},"17:12361:6563":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:20378:4162":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:11682:8794":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:5703:5147":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:2444:3818":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:2827:3834":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"0:358:2174":{"crate_id":0,"path":["base64","engine","DecodeEstimate"],"kind":"trait"},"16:2894:5412":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:5457:4007":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:12638:6679":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:4254:3867":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:7956:5240":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:4527:8172":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:5823:3957":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:1114:4083":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:2588:5766":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:11828:6458":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"12:810:4073":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:3370:3806":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:4726:8261":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:5880:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2726:3310":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"18:507:6045":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:51965:4482":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:10121:5523":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:10310:6252":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:1643:4544":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:10608:5466":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:2753:2864":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:8435:2962":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:20522:3818":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:6709:4094":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:2248:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:8123:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:54150:7331":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:9437:7406":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:4906:8566":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:6472:5032":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:50232:3505":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:1889:7359":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"0:49:1892":{"crate_id":0,"path":["base64","display","Base64Display"],"kind":"struct"},"0:356:1784":{"crate_id":0,"path":["base64","engine","Config"],"kind":"trait"},"2:52633:7304":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:53126:4471":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:48713:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:887:3626":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:21951:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:681:7350":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:53516:4497":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:11787:6451":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:3157:4232":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:5525:5139":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"18:113:54080":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"18:481:5646":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:13527:6937":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:7875:4190":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"15:0:2731":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:12926:6761":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:7208:8683":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:1002:4080":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:5772:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:20498:3818":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:6430:8585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5861:8502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:9108:6172":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:13176:6824":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:11217:6338":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"0:325:1832":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD"],"kind":"constant"},"1:5227:3234":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:5888:5749":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"5:4748:4758":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:12310:629":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:52066:4462":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:11289:54660":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:13059:6793":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:8796:3235":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:50853:3490":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:7483:5238":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:10921:6276":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:7435:5268":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:6750:4786":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:4635:5955":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:3486:2957":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:50857:3491":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:1123:4084":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:13184:6826":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:4357:5947":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:9213:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:9751:3941":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:8871:6168":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:4425:4308":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:9395:4191":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:1105:4082":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:6790:5295":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:9450:5086":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:9362:5493":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:10854:5542":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:10321:5614":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:6311:8544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:6516:3998":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:7637:5242":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:6975:8670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:49435:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:11342:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:10270:6249":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:2487:5397":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:979:4077":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5494:5135":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:4540:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:48329:3627":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:8603:2900":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:4191:8050":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11708:6440":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:46962:3513":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:2771:5404":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:782:4783":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:57086:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:1415:4074":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:13203:6831":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:6981:8672":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"0:516:2519":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","ReservedByte"],"kind":"variant"},"16:6719:5427":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:1931:5477":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:10845:5582":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:1636:7929":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:6345:5232":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:5416:2859":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:51024:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:29408:4688":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:4716:8260":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:6302:3033":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:9555:4067":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:11607:3963":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"12:1866:3855":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:11106:6318":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:47608:7232":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"14:0:2730":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:48185:3413":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:2843:3842":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:10997:5968":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:11087:6313":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:9627:5489":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:20069:60044":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:4086:4552":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:7166:5093":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:8737:3976":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:8093:3879":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:49250:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:628:3811":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:8272:5587":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"12:1872:3856":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"16:3689:5939":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:9293:5599":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:10445:5582":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:5878:5157":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:9738:5548":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:7805:5790":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:6316:5778":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:8666:6064":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:52236:4483":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:12033:6505":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:11748:6447":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:22017:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:5692:8446":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:11921:8797":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:54110:7327":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"14:215:7139":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:50418:3513":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:47178:2958":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:6109:5123":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:50837:3486":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:47601:7231":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:9574:4068":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"5:6758:60558":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:2749:5403":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:13478:6922":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:7249:8692":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:8418:5527":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:9303:5491":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:10866:3522":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:9681:6117":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:8904:4113":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:12964:6769":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:560:7812":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11247:6342":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:46925:4733":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:21445:4693":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:8590:3817":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"17:9577:5484":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:48675:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:4398:8146":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:5443:8308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:4559:8184":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"12:1845:3026":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"6:586:7825":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:524:5776":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:1604:3626":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:12092:3400":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"17:8526:5561":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11813:6455":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:6052:5279":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:9930:6203":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:3430:5739":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:545:4187":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:1552:2943":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:12307:6549":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:7945:3861":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:51987:4486":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:2905:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:4212:8060":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:3980:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:48270:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:8546:2031":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"12:2190:61958":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:5646:3947":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:51835:4493":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:52106:7300":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:10360:5615":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:9350:5598":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:46864:7273":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:13327:6877":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6735:5250":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:10721:6274":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:11533:4061":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:5709:3951":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:46873:4408":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:11639:6434":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:2509:5409":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:1227:4082":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:6284:5239":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:21819:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:38204:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:12087:6512":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:6322:8549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"0:334:1670":{"crate_id":0,"path":["base64","engine","Engine"],"kind":"trait"},"2:50364:2963":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:47349:4019":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:8554:4302":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:11477:4673":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:4766:3983":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:49457:7291":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:11373:5794":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:0:2732":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:7117:5091":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:57060:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:900:3627":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:8139:2973":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:3911:3626":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:57099:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:53658:4465":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:6677:4095":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:4179:8047":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:13506:6931":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:7939:11692":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:3314:2968":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:9433:6188":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:6567:5246":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:4441:5950":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:20103:60085":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"12:985:4081":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:48637:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:11235:6339":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:9897:6200":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:46523:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:10434:6255":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:6479:8621":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:20101:60087":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:29721:4657":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:8613:2904":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"9:800:7761":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:11089:8789":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:10221:6245":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"0:377:2425":{"crate_id":0,"path":["base64","alphabet","URL_SAFE"],"kind":"constant"},"5:5821:1513":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"5:4105:5743":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:47374:4021":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:10394:5559":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:1511:7847":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:5184:46050":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:6430:3420":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:12674:6708":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:50718:3495":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:8448:152":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"2:2774:3900":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:47209:4001":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:56677:4619":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:10159:6238":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:3854:5941":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:11853:6460":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:8330:2989":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:3968:4516":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:49418:7286":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:3908:2943":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:46426:4518":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:0:2733":{"crate_id":17,"path":["object"],"kind":"module"},"16:6829:5432":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:11288:6352":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:4581:8195":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:8393:5514":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:12816:6734":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12972:6771":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:686:11693":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:4904:5739":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:47200:4000":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:20056:3394":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:3263:6970":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:47118:5754":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:7255:8693":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:6017:4275":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:2800:3912":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:4653:8228":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:8631:6063":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:12322:6553":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:2928:2119":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:2250:4203":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:47071:4664":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"14:187:45983":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:4693:59415":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:0:485":{"crate_id":2,"path":["core"],"kind":"module"},"2:2578:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:50705:4343":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:21471:4646":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"18:515:5648":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:39427:3390":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:50901:4070":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:46340:3629":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:13436:6916":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:49137:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"5:5802:17038":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:1771:5483":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:1738:7980":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:4072:2943":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:11734:6208":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:5733:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:242:6067":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:46991:4729":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"12:353:5017":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:11307:3956":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"18:491:6044":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4200:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:12311:630":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"6:4673:8238":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"14:221:7141":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:6998:8681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:47615:4095":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:2367:5396":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"9:586:4889":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:5380:4006":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:20329:3818":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:11698:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:7909:5245":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:6785:4137":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:10108:5522":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:12617:6671":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:4744:3977":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:2981:3855":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:4317:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:2833:3837":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"18:538:5650":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:5534:8360":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:1550:7866":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:1919:4153":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:2281:419":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:12934:6764":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:8822:61964":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"5:677:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:960:4073":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:7978:5982":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:8137:47676":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:12756:6720":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:8475:5470":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:12319:1446":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:3184:4437":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:9382:6185":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:46885:4409":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:5506:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:2515:2971":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:10875:5525":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:12301:1464":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:1387:4071":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:5749:8468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:10506:6262":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:7329:5302":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:6538:8654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:50068:3498":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:507:7778":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:5605:8396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:4403:4306":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:47624:7233":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:11938:4614":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:6463:5288":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:1241:4084":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"0:127:1668":{"crate_id":0,"path":["base64","write"],"kind":"module"},"5:5613:2943":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:4948:3645":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:12980:6773":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:9553:5493":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:3107:3026":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:46968:4728":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"5:1312:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:9475:5481":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:4247:8078":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11536:6415":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:13141:6816":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:7156:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:4:983":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:6002:5739":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:9331:4056":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:21753:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:2935:3311":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:48599:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:9207:3952":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:6330:5285":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:3232:2984":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:501:7775":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:20786:16844":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:8951:61970":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:6742:2859":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:11761:6448":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"12:1044:5012":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:52736:4496":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:4585:4264":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:7319:5301":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:3734:2859":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:11099:3878":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:3716:5940":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:8227:1967":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:11836:60208":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:2969:4366":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:4475:8152":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:6359:5286":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:13100:6802":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:54176:7333":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:6842:7024":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:1931:2499":{"crate_id":1,"path":["std","error"],"kind":"module"},"1:6079:4285":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:8701:6065":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:4683:8244":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:12306:1352":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:46617:3807":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:1826:7355":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:11141:3492":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:9066:5764":{"crate_id":2,"path":["core","slice","sort","insert_head","InsertionHole"],"kind":"struct"},"1:2411:4218":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:6252:5284":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:50096:2960":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:52555:7302":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:7870:4171":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:47043:4662":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:5981:5162":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:6312:3034":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"5:7044:3026":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"17:8162:5528":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:50020:3937":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:8510:6161":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:3566:5936":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8412:2958":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:20316:4514":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:271:5739":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:10682:5586":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:53096:4468":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:46633:7272":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:2796:3910":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:3084:2871":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:1864:7357":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:2383:4207":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:20122:60084":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:11873:6463":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:4017:4246":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:12485:6565":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:8774:5458":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:46858:3513":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:5374:5227":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:7942:5307":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:9712:6193":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:13366:6892":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:52890:4491":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:52434:4470":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:11356:6372":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:5780:5153":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:870:3626":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:6448:8595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:4761:8274":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:4216:4146":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:12282:56292":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:12307:1430":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:11939:6488":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:5841:8488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:2739:3391":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:6137:5224":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:4144:5942":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:7426:2862":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:4302:3870":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:10075:6236":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:1370:3029":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:2341:5414":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:8295:47677":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:10863:2979":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:49839:4606":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:6704:5248":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:3157:230":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:47279:4008":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:954:3026":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:54139:7330":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:11315:6361":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:11721:6443":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:46441:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:2285:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:0:1344":{"crate_id":1,"path":["std"],"kind":"module"},"17:9339:5597":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:5219:6161":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:1580:7885":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:7102:3313":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"5:2743:60566":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"9:19:4940":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:50086:3499":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:12046:6507":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:6293:8537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:50670:4340":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:5614:5144":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:630:5973":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:5523:8352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:2705:5401":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"12:1555:5027":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:7343:5236":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:6059:5395":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:50913:4675":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:5720:8460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:9250:6179":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:3339:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:9239:3955":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:10905:3521":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:944:2859":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"12:2178:7755":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:2812:3829":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:2917:2964":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:6890:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:47415:4012":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:54244:7337":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:8713:4247":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:1887:41417":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:11469:56854":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:534:5152":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:5541:5140":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:4307:8106":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:359:4167":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"18:727:5641":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:49131:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"18:719:5640":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:7357:5249":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:52656:7305":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:46457:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:3382:3805":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:52266:4487":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:47657:7236":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:487:6071":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:5:1513":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"16:6270:5229":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:53310:4477":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:5191:3032":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:4454:4312":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:1707:4259":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"12:738:4072":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"5:3561:5739":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:9700:5544":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:2839:3840":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:1574:7883":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"9:622:4892":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:11164:56856":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:11841:6459":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"0:40:1666":{"crate_id":0,"path":["base64","display"],"kind":"module"},"16:6298:5254":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:2738:60574":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"15:175:5034":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:247:6068":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:50000:3938":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:8556:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"12:1518:5025":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:11300:6355":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:910:3029":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:4367:8136":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:8534:8786":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"17:9422:6187":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"12:387:61957":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:21885:4195":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:20372:4160":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:9193:61969":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"12:1065:5013":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:2490:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:12315:722":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:9277:3029":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:11187:4332":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:53050:4464":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:4972:3977":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"0:513:2518":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","UnprintableByte"],"kind":"variant"},"2:1672:1055":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12781:6730":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:21137:4629":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:10684:1825":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"12:60:61956":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:5411:5130":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:11559:6420":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"0:510:2522":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","DuplicatedByte"],"kind":"variant"},"1:10322:4260":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:7737:3244":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:6509:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:1078:4798":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:29627:4546":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:12134:6519":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:39378:3052":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:13340:6883":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:7372:5438":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:11368:6375":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:1212:4083":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:4379:8145":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:50080:2877":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:11763:4042":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:12008:6502":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:1903:47762":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:12730:6714":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:46998:4730":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:4316:3865":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:2989:3853":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:12323:1501":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:12313:720":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"12:1832:3626":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:12896:6751":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"12:274:7752":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:1615:3026":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"12:2198:7758":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:10679:1352":{"crate_id":2,"path":["core","str"],"kind":"module"},"1:6496:4051":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:4427:8148":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:5876:8513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:12304:307":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:57047:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9384:7401":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:3230:2983":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:9389:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"0:507:2515":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError"],"kind":"enum"},"6:4361:8134":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:11826:4246":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:11384:5795":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:5596:5143":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:4768:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:54191:7334":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:52480:4455":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"13:220:7751":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"12:1120:5015":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:4635:8219":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"10:0:2727":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:5122:5965":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:51811:7298":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:54092:4457":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:12312:723":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:495:7772":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:8613:4039":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:8055:5457":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:9609:3942":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:6186:5228":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:50314:3507":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:51935:4494":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:4126:2914":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:1525:7852":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:9274:6181":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:9261:3626":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:4690:973":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:6781:5247":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:2727:5402":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5664:5146":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:5472:5134":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:950:5739":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:1044:60571":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:8561:5541":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:5541:8362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:2401:4213":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:2805:3827":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:46937:3514":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"12:815:4076":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:3236:4507":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:1196:4081":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"7:79:45251":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:50110:2962":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:12142:5800":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:6788:4753":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:8796:5467":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:9371:6172":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:7847:5305":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:13007:6777":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:5625:8412":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:2282:5101":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:6862:2875":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:8814:4101":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:10497:47940":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"12:1840:2859":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:7860:56456":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"16:7267:5296":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:7890:5243":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"12:98:5016":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10752:5461":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:7955:4085":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:8868:3820":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:10889:3519":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:9885:6199":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:11136:3493":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:2868:5165":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:6545:8657":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:6017:5277":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:52814:4484":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:10520:6265":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:7220:8685":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:12103:6514":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"11:0:2728":{"crate_id":11,"path":["adler"],"kind":"module"},"16:3026:6081":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:22050:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:9722:6194":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:11485:6402":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:11343:6371":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:7748:5991":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:8442:2963":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"18:531:5649":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:9501:5491":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"18:564:5651":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"0:378:2540":{"crate_id":0,"path":["base64","alphabet","CRYPT"],"kind":"constant"},"2:8596:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:57073:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5660:3948":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"0:381:2551":{"crate_id":0,"path":["base64","alphabet","BIN_HEX"],"kind":"constant"},"5:6469:5753":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:4413:5949":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:217:4781":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:1944:4187":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:7051:3314":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:4721:5958":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8645:4248":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:7237:5095":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:3805:3627":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:7924:11690":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:5505:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"9:863:4851":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:3160:4233":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:11786:4245":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:6937:4791":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:4662:5956":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:10088:6237":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:4797:8296":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:3470:58719":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:719:11694":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:6743:5294":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:12316:718":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:10296:6251":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:7192:5787":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:4449:8150":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:12265:6545":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:11116:2885":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:4262:5944":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:29587:3019":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:13158:6820":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:2938:3312":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:10894:5524":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:10583:5463":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"9:0:2726":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:1611:2859":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:47261:4005":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:12305:1322":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:990:4078":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"5:1595:5739":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:2652:2974":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:21438:8710":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:7289:8700":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:8505:3988":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:8106:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:9061:5493":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:7497:5233":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"18:652:6045":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:7848:3818":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:7288:5298":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:2579:5450":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:3956:4515":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:49410:3823":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:5595:8389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:9269:4050":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:20781:4445":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"14:40:5968":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:3269:2979":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:49234:2899":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:47290:4014":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:6610:4145":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:4849:5962":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:1349:3626":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:47038:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"12:646:3627":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:9464:54684":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:48485:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:7543:5230":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:2026:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:4921:5964":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:25292:4383":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:11070:3979":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:2763:3895":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:11125:6319":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:3319:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:3086:2988":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:13354:6889":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:5388:5129":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"12:777:5004":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:51067:4612":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:11601:7363":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:2535:5398":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:4224:8069":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"5:686:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:2737:3465":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:2030:60650":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:20419:4443":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"19:0:999":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:6593:5291":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:4489:4267":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"13:108:61959":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:10774:5459":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:10581:3961":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:4565:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:52860:4488":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:2683:5400":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:5956:2859":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12884:6748":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:4329:8119":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"9:382:4846":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:7396:5303":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:12630:6678":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:11684:6439":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:2290:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:7266:8697":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:2851:3846":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:11974:6499":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:6441:7361":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:47385:2959":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:2672:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:3422:2952":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:2713:3389":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:5087:3880":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"14:202:2858":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:6604:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:4838:4148":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:1691:3026":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:11893:6464":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:50214:3506":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:1632:3855":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:46379:4367":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:10495:4100":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:11661:6435":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:53768:4485":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:8471:3986":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:13231:6839":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:8545:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:11784:7240":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:5541:4759":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:9844:5606":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:5472:8332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"18:736:5642":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:4545:5952":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:7511:5107":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:2481:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:1626:3854":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:7243:8691":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:4461:8151":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:4297:5945":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:519:7783":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:9288:3818":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:3632:5938":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:11186:6329":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:5203:6160":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:12324:1091":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:286:2874":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:7042:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:1828:7356":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:7982:4806":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:10625:5468":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:11161:6326":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:9407:54657":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:9328:5596":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:9223:47724":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:996:4079":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:4312:3871":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:4606:5954":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"18:699:5639":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12550:6616":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:7872:5244":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"18:690:5638":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:39414:4806":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:4191:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:12320:1447":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:9682:3939":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:49928:3930":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:6123:5226":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"12:119:5020":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:11264:5982":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:12948:6766":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:10756:3952":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:6554:8660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:5949:5160":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:50393:3515":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2399:4212":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:2817:3825":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"12:2069:4082":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:20938:4161":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:8596:6062":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"0:376:1832":{"crate_id":0,"path":["base64","alphabet","STANDARD"],"kind":"constant"},"2:8160:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:1091:4081":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:7309:5300":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:2477:4802":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:46481:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:6572:8663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:8946:4114":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:7044:5087":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:3594:3989":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:13572:6943":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:11271:6344":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:3347:2987":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:8833:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:2255:4803":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:4659:8230":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:9302:4054":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:3404:1927":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"12:393:61953":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:52336:4475":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:13047:6787":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:4346:2918":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:6329:8553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13382:6896":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11774:6450":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:9098:5766":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:10796:5579":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:5826:3959":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:484:5799":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"12:834:4078":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:3461:2031":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:11954:5043":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:2433:5100":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:50861:4673":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:50527:4333":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4126:8004":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:9071:61961":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:539:7800":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:11732:60210":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:574:4192":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:48447:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:10654:4741":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:54016:4472":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:21852:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:50738:2873":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:7249:5096":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:49113:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:47229:4003":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:6034:5278":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"0:478:2314":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireCanonical"],"kind":"variant"},"5:3542:3026":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:6043:4276":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:13459:6917":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"0:330:2423":{"crate_id":0,"path":["base64","engine","general_purpose","NO_PAD"],"kind":"constant"},"17:13091:6801":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:8873:3821":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:8962:4116":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:1505:7844":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:47128:7281":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:9317:5595":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:7226:8686":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:5510:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:11154:2953":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:5554:8371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:969:4075":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:51903:4461":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:8110:47672":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:11655:7367":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"0:328:2427":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE_NO_PAD"],"kind":"constant"},"1:3479:2954":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:47649:7234":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:2847:3844":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:2426:1910":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:48252:3243":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:9165:61965":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"12:1852:3853":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:50402:3511":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:581:7823":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:2578:2972":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:8864:4111":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:8165:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:8494:6160":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:49965:3917":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10245:6247":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:9737:3505":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:20950:60047":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:9253:3956":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:7980:5109":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:6877:5085":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:48873:2901":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:9080:5765":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:9526:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:4904:8564":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:12317:1448":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:2670:3387":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:51032:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"18:644:6045":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:2657:5410":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:411:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:6718:3024":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:12225:6540":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:47323:4017":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:10949:6279":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:9031:61962":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:4532:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:7278:5297":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:8599:111":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:12768:6725":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"12:2184:7756":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:11268:4099":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:9440:3626":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:9536:4061":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:6400:240":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"0:508:1964":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","InvalidLength"],"kind":"variant"},"2:9298:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:1811:597":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:4598:8206":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:6217:4051":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:11670:5990":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:8705:4258":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11997:6500":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:2681:2920":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"12:632:3626":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:12325:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:11199:6330":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:3599:5937":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:8941:6169":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:5317:7360":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:21:665":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:49939:3919":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:51014:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:3402:6971":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:4115:7996":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:1887:7358":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"12:320:5018":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4286:8095":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:12321:1444":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:11995:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:3457:6085":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:50845:3488":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:2673:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:10546:47679":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:1654:7941":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:697:4075":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:48880:2900":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:8212:5580":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:8719:4268":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:1608:7904":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:2662:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:12609:6668":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:9464:3627":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4102:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:7735:3246":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:8222:4130":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:6953:8669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:1954:4752":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:2993:5408":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5660:8433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:6690:5235":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:29663:4656":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:4274:8090":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:2253:1667":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:131:40106":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"18:755:5643":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:6010:4273":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:20124:60082":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:8071:4202":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:2261:5124":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:7005:4010":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"0:229:1669":{"crate_id":0,"path":["base64","engine"],"kind":"module"}},"external_crates":{"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}