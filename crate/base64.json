{"root":"0:0:1787","crate_version":"0.21.3","includes_private":false,"index":{"2:12294:31893":{"id":"2:12294:31893","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11937:3007","str::split":"2:12285:26954","prim@char":"1:12035:427","`DoubleEndedIterator`":"2:7388:121","str::rsplit_terminator":"2:12297:31894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43766:3578","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[200,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3447:2016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_to_string","read_buf","is_read_vectored","bytes","chain","by_ref","read_buf_exact","read_to_end","take","read_exact","read_vectored"],"trait":{"name":"Read","id":"1:3447:2016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:124:1768"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2561-0:514:2298":{"id":"b:2:2561-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:165:2027":{"id":"0:165:2027","crate_id":0,"name":"finish","span":{"filename":"src/write/encoder.rs","begin":[126,4],"end":[138,5]},"visibility":"public","docs":"Encode all remaining buffered data and write it, including any trailing incomplete input\ntriples and associated padding.\n\nOnce this succeeds, no further writes or calls to this method are allowed.\n\nThis may write to the delegate writer multiple times if the delegate writer does not accept\nall input provided to its `write` each invocation.\n\nIf you don't care about error handling, it is not necessary to call this function, as the\nequivalent finalization is done by the Drop impl.\n\nReturns the writer that this was constructed around.\n\n# Errors\n\nThe first error that is not of `ErrorKind::Interrupted` will be returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2409":{"id":"0:497:2409","crate_id":0,"name":"Indifferent","span":{"filename":"src/engine/mod.rs","begin":[442,4],"end":[442,15]},"visibility":"default","docs":"Canonical padding is allowed, but any fewer padding bytes than that is also allowed.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:402:2668":{"id":"0:402:2668","crate_id":0,"name":"BCRYPT","span":{"filename":"src/alphabet.rs","begin":[184,0],"end":[186,2]},"visibility":"public","docs":"The bcrypt alphabet.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"b:2:2253-0:559:1777":{"id":"b:2:2253-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:572:1782":{"id":"0:572:1782","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[10,0],"end":[28,1]},"visibility":"public","docs":"Errors that can occur while decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:573:2053","0:577:2055","0:579:2056","0:583:2057"],"impls":["a:2:2772:231-0:572:1782","a:2:2755:223-0:572:1782","a:2:2812:3373-0:572:1782","a:2:8471:3324-0:572:1782","a:2:8472:3323-0:572:1782","b:2:2253-0:572:1782","b:2:2556-0:572:1782","b:2:2550-0:572:1782","b:2:2561-0:572:1782","b:2:2546-0:572:1782","b:2:2256-0:572:1782","b:2:3391-0:572:1782","b:5:680-0:572:1782","b:5:5771-0:572:1782","0:590","0:589","0:593","0:452","0:585","0:450","0:592","0:587","0:457"]}}},"b:2:2256-0:85:1997":{"id":"b:2:2256-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[439,9],"end":[439,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:504:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12247:319":{"id":"2:12247:319","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12052:1544"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[99,0],"end":[103,1]},"visibility":"default","docs":"As for io::Write, `StrConsumer` is implemented automatically for `&mut S`.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"S"}}},"items":["0:214:2241"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:495:685":{"id":"0:495:685","crate_id":0,"name":"fmt","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[242,22],"end":[242,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,16],"end":[136,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2766:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12288:26956":{"id":"2:12288:26956","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11753:3590","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12330:31903":{"id":"2:12330:31903","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12350:31909":{"id":"2:12350:31909","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12338:24793":{"id":"2:12338:24793","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[83,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:157:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:542:2647":{"id":"0:542:2647","crate_id":0,"name":"DuplicatedByte","span":{"filename":"src/alphabet.rs","begin":[141,4],"end":[141,22]},"visibility":"default","docs":"All bytes must be unique","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:544:1655"]},"discriminant":null}}},"5:5514:32569":{"id":"5:5514:32569","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12274:26966":{"id":"2:12274:26966","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:960":{"id":"0:301:960","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[33,4],"end":[39,5]},"visibility":"public","docs":"Create a `GeneralPurpose` engine from an [Alphabet].\n\nWhile not very expensive to initialize, ideally these should be cached\nif the engine will be used repeatedly.","links":{"Alphabet":"0:525:2420"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alphabet",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["config",{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:325:60":{"id":"0:325:60","crate_id":0,"name":"default","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[318,4],"end":[320,5]},"visibility":"default","docs":"Delegates to [GeneralPurposeConfig::new].","links":{"GeneralPurposeConfig::new":"0:320:960"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:2390":{"id":"0:370:2390","crate_id":0,"name":"decode_slice_unchecked","span":{"filename":"src/engine/mod.rs","begin":[386,4],"end":[405,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nReturns the number of bytes written to the slice.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice] for a version that returns an error instead of panicking if the output\nbuffer is too small.\n\n# Panics\n\nPanics if the provided output buffer is too small for the decoded data.","links":{"crate::decoded_len_estimate":"0:470:1781","Engine::decode_slice":"0:364:2383"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343:1920":{"id":"0:343:1920","crate_id":0,"name":"config","span":{"filename":"src/engine/mod.rs","begin":[99,4],"end":[99,38]},"visibility":"default","docs":"Returns the config for this engine.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:337:1771","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[96,0],"end":[246,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:162:960","0:165:2027","0:170:2065"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[42,0],"end":[188,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["decode","decode_slice_unchecked","encode_slice","encode_string","decode_vec","encode","decode_slice"],"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:303:1898","0:304:2272","0:311:1920"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:395:1521":{"id":"0:395:1521","crate_id":0,"name":"try_from","span":{"filename":"src/alphabet.rs","begin":[130,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2530:240","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:604:685":{"id":"0:604:685","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[47,16],"end":[47,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:1781":{"id":"0:470:1781","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/decode.rs","begin":[147,0],"end":[151,1]},"visibility":"public","docs":"Returns a conservative estimate of the decoded size of `encoded_len` base64 symbols (rounded up\nto the next group of 3 decoded bytes).\n\nThe resulting length will be a safe choice for the size of a decode buffer, but may have up to\n2 trailing bytes that won't end up being needed.\n\n# Examples\n\n```\nuse base64::decoded_len_estimate;\n\nassert_eq!(3, decoded_len_estimate(1));\nassert_eq!(3, decoded_len_estimate(2));\nassert_eq!(3, decoded_len_estimate(3));\nassert_eq!(3, decoded_len_estimate(4));\n// start of the next quad of encoded symbols\nassert_eq!(6, decoded_len_estimate(5));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["encoded_len",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12335:31906":{"id":"2:12335:31906","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225-0:140:2088":{"id":"0:225-0:140:2088","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[6,4],"end":[6,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder::EncoderWriter","name":"EncoderWriter","id":"0:140:2088","glob":false}}},"b:2:2556-0:85:1997":{"id":"b:2:2556-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12262:1911":{"id":"2:12262:1911","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43702:3064","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2253-0:85:1997":{"id":"b:2:2253-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:119:2065":{"id":"0:119:2065","crate_id":0,"name":"into_inner","span":{"filename":"src/read/decoder.rs","begin":[195,4],"end":[197,5]},"visibility":"public","docs":"Unwraps this `DecoderReader`, returning the base reader which it reads base64 encoded\ninput from.\n\nBecause `DecoderReader` performs internal buffering, the state of the inner reader is\nunspecified. This function is mainly provided because the inner reader type may provide\nadditional functionality beyond the `Read` implementation which may still be useful.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:572:1782":{"id":"b:2:2546-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5509":{"id":"5:5509","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5510:32568","5:5511:2772","5:5514:32569","5:5517:32570","5:5525:32571","5:5526:32572","5:5527:2832","5:5528:24975","5:5529:24976"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:467:1780":{"id":"0:467:1780","crate_id":0,"name":"decode_engine_slice","span":{"filename":"src/decode.rs","begin":[121,0],"end":[127,1]},"visibility":"public","docs":"Decode the input into the provided output slice.\n\nSee [Engine::decode_slice].","links":{"Engine::decode_slice":"0:364:2383"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_slice"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2549:2384":{"id":"2:2549:2384","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2523:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[439,22],"end":[439,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:507:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5529:24976":{"id":"5:5529:24976","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12359:24979"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2550-0:140:2088":{"id":"b:2:2550-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:416:1773":{"id":"0:416:1773","crate_id":0,"name":"encode_engine","span":{"filename":"src/encode.rs","begin":[28,0],"end":[30,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the provided `Engine` into a new `String`.\n\n See [Engine::encode].","links":{"Engine::encode":"0:344:622"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"alloc::string::String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:450":{"id":"0:450","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[30,0],"end":[41,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:451:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2550-0:496:2407":{"id":"b:2:2550-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12239:31887":{"id":"2:12239:31887","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12341:26967":{"id":"2:12341:26967","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2812:3373-0:140:2088":{"id":"a:2:2812:3373-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2546-0:140:2088":{"id":"b:2:2546-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12347:31908":{"id":"2:12347:31908","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:231-0:514:2298":{"id":"a:2:2772:231-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:525:2420":{"id":"b:2:2556-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5511:2772":{"id":"5:5511:2772","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2765:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5526:32572":{"id":"5:5526:32572","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2998","`String`":"5:7449:227"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2998","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:3116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:1769":{"id":"0:127:1769","crate_id":0,"name":"write","span":{"filename":"src/write/mod.rs","begin":[1,0],"end":[11,18]},"visibility":"public","docs":"Implementations of `io::Write` to transparently handle base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:225-0:140:2088","0:227-0:189:2089","0:228-0:210:2090"],"is_stripped":false}}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[44,0],"end":[44,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","description","type_id","cause","provide"],"trait":{"name":"Error","id":"2:2608:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:203:960":{"id":"0:203:960","crate_id":0,"name":"new","span":{"filename":"src/write/encoder_string_writer.rs","begin":[77,4],"end":[79,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will encode into a new `String` with the provided config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12285:26954":{"id":"2:12285:26954","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11937:3007","`DoubleEndedIterator`":"2:7388:121","prim@char":"1:12035:427","str::split_whitespace":"2:12263:30115","str::rsplit":"2:12291:26958"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43716:3065","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:565:685":{"id":"0:565:685","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[137,16],"end":[137,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2812:3373-0:572:1782":{"id":"a:2:2812:3373-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2253-0:572:1782":{"id":"b:2:2253-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2258:24769":{"id":"2:2258:24769","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12356:26863":{"id":"2:12356:26863","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39786:26847","Self::is_ascii":"2:12355:24973"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39786:26847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:2530":{"id":"0:331:2530","crate_id":0,"name":"URL_SAFE_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[339,0],"end":[339,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [NO_PAD] config.","links":{"alphabet::URL_SAFE":"0:400:2528","GeneralPurpose":"0:294:1934","NO_PAD":"0:333:2526"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:47:1981":{"id":"0:47:1981","crate_id":0,"name":"Base64Display","span":{"filename":"src/display.rs","begin":[18,0],"end":[21,1]},"visibility":"public","docs":"A convenience wrapper for base64'ing bytes into a format string without heap allocation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:53","a:2:2772:231-0:47:1981","a:2:2755:223-0:47:1981","a:2:2812:3373-0:47:1981","a:2:8471:3324-0:47:1981","a:2:8472:3323-0:47:1981","b:2:2253-0:47:1981","b:2:2556-0:47:1981","b:2:2550-0:47:1981","b:2:2561-0:47:1981","b:2:2546-0:47:1981","b:2:2256-0:47:1981","b:2:3391-0:47:1981","b:5:5771-0:47:1981","0:58"]}}},"0:329:2525":{"id":"0:329:2525","crate_id":0,"name":"STANDARD_NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[333,0],"end":[333,93]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [NO_PAD] config.","links":{"NO_PAD":"0:333:2526","GeneralPurpose":"0:294:1934","alphabet::STANDARD":"0:399:1932"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:510:627":{"id":"0:510:627","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[439,29],"end":[439,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2755:223-0:539:2640":{"id":"a:2:2755:223-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:572:1782":{"id":"b:2:2556-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12271:26965":{"id":"2:12271:26965","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:2241":{"id":"0:216:2241","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[107,4],"end":[109,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3391-0:496:2407":{"id":"b:2:3391-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8471:3324-0:189:2089":{"id":"a:2:8471:3324-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:595:1783":{"id":"0:595:1783","crate_id":0,"name":"DecodeSliceError","span":{"filename":"src/decode.rs","begin":[48,0],"end":[55,1]},"visibility":"public","docs":"Errors that can occur while decoding into a slice.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:596:1782","0:599:2336"],"impls":["a:2:2772:231-0:595:1783","a:2:2755:223-0:595:1783","a:2:2812:3373-0:595:1783","a:2:8471:3324-0:595:1783","a:2:8472:3323-0:595:1783","b:2:2253-0:595:1783","b:2:2556-0:595:1783","b:2:2550-0:595:1783","b:2:2561-0:595:1783","b:2:2546-0:595:1783","b:2:2256-0:595:1783","b:2:3391-0:595:1783","b:5:680-0:595:1783","b:5:5771-0:595:1783","0:608","0:605","0:601","0:606","0:455","0:453","0:609","0:603","0:457"]}}},"5:5773:1499":{"id":"5:5773:1499","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5528:24975":{"id":"5:5528:24975","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12358:24978"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,23],"end":[53,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2322:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:492:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:459:552":{"id":"0:459:552","crate_id":0,"name":"decode","span":{"filename":"src/decode.rs","begin":[87,0],"end":[89,1]},"visibility":"public","docs":"Decode base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::decode].","links":{"STANDARD":"0:328:1932","Engine::decode":"0:356:552"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:6886:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:960":{"id":"0:162:960","crate_id":0,"name":"new","span":{"filename":"src/write/encoder.rs","begin":[98,4],"end":[108,5]},"visibility":"public","docs":"Create a new encoder that will write to the provided delegate writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["delegate",{"generic":"W"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:559:1777":{"id":"b:2:2546-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:496:2407":{"id":"0:496:2407","crate_id":0,"name":"DecodePaddingMode","span":{"filename":"src/engine/mod.rs","begin":[440,0],"end":[447,1]},"visibility":"public","docs":"Controls how pad bytes are handled when decoding.\n\nEach [Engine] must support at least the behavior indicated by\n[DecodePaddingMode::RequireCanonical], and may support other modes.","links":{"DecodePaddingMode::RequireCanonical":"0:499:2411","Engine":"0:337:1771"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:497:2409","0:499:2411","0:501:2413"],"impls":["a:2:2772:231-0:496:2407","a:2:2755:223-0:496:2407","a:2:2812:3373-0:496:2407","a:2:8471:3324-0:496:2407","a:2:8472:3323-0:496:2407","b:2:2253-0:496:2407","b:2:2556-0:496:2407","b:2:2550-0:496:2407","b:2:2561-0:496:2407","b:2:2546-0:496:2407","b:2:2256-0:496:2407","b:2:3391-0:496:2407","b:5:680-0:496:2407","0:503","0:511","0:509","0:512","0:508","0:505","0:506"]}}},"0:458:711":{"id":"0:458:711","crate_id":0,"name":"from","span":{"filename":"src/decode.rs","begin":[77,4],"end":[79,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:582:1656":{"id":"0:582:1656","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[24,29],"end":[24,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"b:2:2561-0:85:1997":{"id":"b:2:2561-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336-0:487:1935":{"id":"0:336-0:487:1935","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,42],"end":[22,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"general_purpose::GeneralPurposeConfig","name":"GeneralPurposeConfig","id":"0:487:1935","glob":false}}},"0:474-0:464:1779":{"id":"0:474-0:464:1779","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,47],"end":[170,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine_vec","name":"decode_engine_vec","id":"0:464:1779","glob":false}}},"0:431":{"id":"0:431","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[143,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:432:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12245:31889":{"id":"2:12245:31889","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2812:3373-0:85:1997":{"id":"a:2:2812:3373-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:473-0:461:1778":{"id":"0:473-0:461:1778","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,32],"end":[170,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine","name":"decode_engine","id":"0:461:1778","glob":false}}},"b:2:2256-0:487:1935":{"id":"b:2:2256-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:684:3550":{"id":"5:684:3550","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:514:2298":{"id":"b:2:2546-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2772:231-0:496:2407":{"id":"a:2:2772:231-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:398":{"id":"0:398","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[160,0],"end":[160,43]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","description","type_id","cause","provide"],"trait":{"name":"Error","id":"2:2608:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8472:3323-0:189:2089":{"id":"a:2:8472:3323-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8471:3324-0:514:2298":{"id":"a:2:8471:3324-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:210:2090":{"id":"0:210:2090","crate_id":0,"name":"StrConsumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[93,0],"end":[96,1]},"visibility":"public","docs":"An abstraction around consuming `str`s produced by base64 encoding.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:211:2241"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:212","0:215"]}}},"0:577:2055":{"id":"0:577:2055","crate_id":0,"name":"InvalidLength","span":{"filename":"src/decode.rs","begin":[19,4],"end":[19,17]},"visibility":"default","docs":"The length of the input is invalid.\nA typical cause of this is stray trailing whitespace or other separator bytes.\nIn the case where excess trailing bytes have produced an invalid length *and* the last byte\nis also an invalid base64 symbol (as would be the case for whitespace, etc), `InvalidByte`\nwill be emitted instead of `InvalidLength` to make the issue easier to debug.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[439,40],"end":[439,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2766:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[58,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:392:960"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494":{"id":"0:494","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[242,22],"end":[242,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:495:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:436-0:416:1773":{"id":"0:436-0:416:1773","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,32],"end":[163,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine","name":"encode_engine","id":"0:416:1773","glob":false}}},"0:327:1921":{"id":"0:327:1921","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[324,4],"end":[326,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3391-0:85:1997":{"id":"b:2:3391-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2253-0:189:2089":{"id":"b:2:2253-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:518":{"id":"0:518","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[450,9],"end":[450,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2317:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:519:627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12332:31905":{"id":"2:12332:31905","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11962:3566","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:685":{"id":"0:105:685","crate_id":0,"name":"fmt","span":{"filename":"src/read/decoder.rs","begin":[61,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:231-0:140:2088":{"id":"a:2:2772:231-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:472-0:459:552":{"id":"0:472-0:459:552","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,24],"end":[170,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode","name":"decode","id":"0:459:552","glob":false}}},"0:356:552":{"id":"0:356:552","crate_id":0,"name":"decode","span":{"filename":"src/engine/mod.rs","begin":[246,4],"end":[264,5]},"visibility":"default","docs":"Decode the input into a new `Vec`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\n\nlet bytes = general_purpose::STANDARD\n    .decode(\"aGVsbG8gd29ybGR+Cg==\").unwrap();\nprintln!(\"{:?}\", bytes);\n\n// custom engine setup\nlet bytes_url = engine::GeneralPurpose::new(\n             &alphabet::URL_SAFE,\n             general_purpose::NO_PAD)\n    .decode(\"aGVsbG8gaW50ZXJuZXR-Cg\").unwrap();\nprintln!(\"{:?}\", bytes_url);\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:6886:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:231-0:294:1934":{"id":"a:2:2772:231-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8471:3324-0:294:1934":{"id":"a:2:8471:3324-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:558:627":{"id":"0:558:627","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[136,20],"end":[136,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2812:3373-0:514:2298":{"id":"a:2:2812:3373-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[127,0],"end":[133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:394:128","0:395:1521"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[249,0],"end":[314,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:320:960","0:321:2501","0:322:2509","0:323:2520"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:528":{"id":"0:528","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:529:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2556-0:539:2640":{"id":"b:2:2556-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12362:8533":{"id":"2:12362:8533","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4524:8533"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44024:3587","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[55,0],"end":[73,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:198:2232","0:199:2065"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:157:685":{"id":"0:157:685","crate_id":0,"name":"fmt","span":{"filename":"src/write/encoder.rs","begin":[84,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2253-0:140:2088":{"id":"b:2:2253-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38:1767":{"id":"0:38:1767","crate_id":0,"name":"display","span":{"filename":"src/display.rs","begin":[1,0],"end":[88,1]},"visibility":"public","docs":"Enables base64'd output anywhere you might use a `Display` implementation, like a format string.\n\n```\nuse base64::{display::Base64Display, engine::general_purpose::STANDARD};\n\nlet data = vec![0x0, 0x1, 0x2, 0x3];\nlet wrapper = Base64Display::new(&data, &STANDARD);\n\nassert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:47:1981"],"is_stripped":false}}},"a:2:8471:3324-0:539:2640":{"id":"a:2:8471:3324-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2322:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:400:2528":{"id":"0:400:2528","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/alphabet.rs","begin":[172,0],"end":[174,2]},"visibility":"public","docs":"The URL safe alphabet (uses `-` and `_`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-4).","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:294:1934":{"id":"0:294:1934","crate_id":0,"name":"GeneralPurpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[22,0],"end":[26,1]},"visibility":"public","docs":"A general-purpose base64 engine.\n\n- It uses no vector CPU instructions, so it will work on any system.\n- It is reasonably fast (~2-3GiB/s).\n- It is not constant-time, though, so it is vulnerable to timing side-channel attacks. For loading cryptographic keys, etc, it is suggested to use the forthcoming constant-time implementation.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:300","a:2:2772:231-0:294:1934","a:2:2755:223-0:294:1934","a:2:2812:3373-0:294:1934","a:2:8471:3324-0:294:1934","a:2:8472:3323-0:294:1934","b:2:2253-0:294:1934","b:2:2556-0:294:1934","b:2:2550-0:294:1934","b:2:2561-0:294:1934","b:2:2546-0:294:1934","b:2:2256-0:294:1934","b:2:3391-0:294:1934","0:302"]}}},"b:2:2556-0:487:1935":{"id":"b:2:2556-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:591:627":{"id":"0:591:627","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:539:2640":{"id":"b:2:2256-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8472:3323-0:496:2407":{"id":"a:2:8472:3323-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2546-0:47:1981":{"id":"b:2:2546-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12297:31894":{"id":"2:12297:31894","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11937:3007","str::split":"2:12285:26954","prim@char":"1:12035:427","str::split_terminator":"2:12294:31893"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43784:3577","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12357:24977":{"id":"2:12357:24977","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2561-0:487:1935":{"id":"b:2:2561-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2755:223-0:559:1777":{"id":"a:2:2755:223-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:609":{"id":"0:609","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,34],"end":[47,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2322:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:439-0:422:1775":{"id":"0:439-0:422:1775","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,24],"end":[165,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine_slice","name":"encode_engine_slice","id":"0:422:1775","glob":false}}},"0:529:431":{"id":"0:529:431","crate_id":0,"name":"clone","span":{"filename":"src/alphabet.rs","begin":[53,9],"end":[53,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2550-0:487:1935":{"id":"b:2:2550-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12250:26923":{"id":"2:12250:26923","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41757:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8471:3324-0:559:1777":{"id":"a:2:8471:3324-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:337:1771":{"id":"0:337:1771","crate_id":0,"name":"Engine","span":{"filename":"src/engine/mod.rs","begin":[39,0],"end":[406,1]},"visibility":"public","docs":"An `Engine` provides low-level encoding and decoding operations that all other higher-level parts of the API use. Users of the library will generally not need to implement this.\n\nDifferent implementations offer different characteristics. The library currently ships with\n[GeneralPurpose] that offers good speed and works on any CPU, with more choices\ncoming later, like a constant-time one when side channel resistance is called for, and vendor-specific vectorized ones for more speed.\n\nSee [general_purpose::STANDARD_NO_PAD] if you just want standard base64. Otherwise, when possible, it's\nrecommended to store the engine in a `const` so that references to it won't pose any lifetime\nissues, and to avoid repeating the cost of engine setup.\n\nSince almost nobody will need to implement `Engine`, docs for internal methods are hidden.","links":{"GeneralPurpose":"0:294:1934","general_purpose::STANDARD_NO_PAD":"0:329:2525"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:338:1898","0:339:2272","0:343:1920","0:344:622","0:348:1972","0:352:2159","0:356:552","0:360:2369","0:364:2383","0:370:2390"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:302"]}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[316,0],"end":[321,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2597:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:325:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2561-0:595:1783":{"id":"b:2:2561-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12235":{"id":"2:12235","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12236:832","2:12237:2035","2:12238:31886","2:12239:31887","2:12241:31888","2:12244:2637","2:12245:31889","2:12246:320","2:12247:319","2:12248:26922","2:12250:26923","2:12252:26924","2:12254:26925","2:12256:31890","2:12257:31891","2:12258:26946","2:12259:26947","2:12260:6330","2:12261:6452","2:12262:1911","2:12263:30115","2:12264:30119","2:12265:29964","2:12266:31892","2:12267:30106","2:12268:26964","2:12271:26965","2:12274:26966","2:12277:3529","2:12281:3494","2:12285:26954","2:12288:26956","2:12291:26958","2:12294:31893","2:12297:31894","2:12300:26960","2:12303:26962","2:12306:31895","2:12309:31896","2:12312:2964","2:12315:31897","2:12318:31898","2:12321:31899","2:12324:31900","2:12326:31901","2:12328:31902","2:12330:31903","2:12331:31904","2:12332:31905","2:12335:31906","2:12338:24793","2:12341:26967","2:12344:31907","2:12347:31908","2:12350:31909","2:12353:31910","2:12355:24973","2:12356:26863","2:12357:24977","2:12358:24978","2:12359:24979","2:12360:31911","2:12362:8533","2:12363:31912"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523":{"id":"0:523","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[450,24],"end":[450,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:524:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2550-0:189:2089":{"id":"b:2:2550-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2546-0:595:1783":{"id":"b:2:2546-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2812:3373-0:539:2640":{"id":"a:2:2812:3373-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2812:3373-0:189:2089":{"id":"a:2:2812:3373-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:575:1655":{"id":"0:575:1655","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[13,16],"end":[13,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2550-0:85:1997":{"id":"b:2:2550-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8471:3324-0:85:1997":{"id":"a:2:8471:3324-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:596:1782":{"id":"0:596:1782","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[50,4],"end":[50,28]},"visibility":"default","docs":"A [DecodeError] occurred","links":{"DecodeError":"0:572:1782"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:598:1655"]},"discriminant":null}}},"b:2:2546-0:294:1934":{"id":"b:2:2546-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:399:1932":{"id":"0:399:1932","crate_id":0,"name":"STANDARD","span":{"filename":"src/alphabet.rs","begin":[165,0],"end":[167,2]},"visibility":"public","docs":"The standard alphabet (uses `+` and `/`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-3).","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:229:1770":{"id":"0:229:1770","crate_id":0,"name":"engine","span":{"filename":"src/engine/mod.rs","begin":[1,0],"end":[465,1]},"visibility":"public","docs":"Provides the [Engine] abstraction and out of the box implementations.","links":{"Engine":"0:337:1771"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:242:1933","0:335-0:294:1934","0:336-0:487:1935","0:337:1771","0:375:1898","0:377:2272","0:496:2407","0:514:2298"],"is_stripped":false}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,20],"end":[136,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2765:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:72:1768":{"id":"0:72:1768","crate_id":0,"name":"read","span":{"filename":"src/read/mod.rs","begin":[1,0],"end":[6,18]},"visibility":"public","docs":"Implementations of `io::Read` to transparently decode base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:126-0:85:1997"],"is_stripped":false}}},"a:2:2772:231-0:559:1777":{"id":"a:2:2772:231-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:47:1981":{"id":"b:2:2556-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2253-0:595:1783":{"id":"b:2:2253-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:320:960":{"id":"0:320:960","crate_id":0,"name":"new","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[255,4],"end":[262,5]},"visibility":"public","docs":"Create a new config with `padding` = `true`, `decode_allow_trailing_bits` = `false`, and\n`decode_padding_mode = DecodePaddingMode::RequireCanonicalPadding`.\n\nThis probably matches most people's expectations, but consider disabling padding to save\na few bytes unless you specifically need it for compatibility with some legacy system.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2812:3373-0:496:2407":{"id":"a:2:2812:3373-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:680-0:572:1782":{"id":"b:5:680-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3548","5:683:3549","5:684:3550"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:378:1781":{"id":"0:378:1781","crate_id":0,"name":"decoded_len_estimate","span":{"filename":"src/engine/mod.rs","begin":[432,4],"end":[432,44]},"visibility":"default","docs":"Returns a conservative (err on the side of too big) estimate of the decoded length to use\nfor pre-allocating buffers, etc.\n\nThe estimate must be no larger than the next largest complete triple of decoded bytes.\nThat is, the final quad of tokens to decode may be assumed to be complete with no padding.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:8472:3323-0:487:1935":{"id":"a:2:8472:3323-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:501:2413":{"id":"0:501:2413","crate_id":0,"name":"RequireNone","span":{"filename":"src/engine/mod.rs","begin":[446,4],"end":[446,15]},"visibility":"default","docs":"Padding must be absent -- for when you want predictable padding, without any wasted bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:680-0:496:2407":{"id":"b:5:680-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3548","5:683:3549","5:684:3550"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:507:685":{"id":"0:507:685","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[439,22],"end":[439,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2561-0:559:1777":{"id":"b:2:2561-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:175:1769":{"id":"0:175:1769","crate_id":0,"name":"write","span":{"filename":"src/write/encoder.rs","begin":[265,4],"end":[384,5]},"visibility":"default","docs":"Encode input and then write to the delegate writer.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nof `input` consumed. The value may be `0`, which interacts poorly with `write_all`, which\ninterprets `Ok(0)` as an error, despite it being allowed by the contract of `write`. See\n<https://github.com/rust-lang/rust/issues/56889> for more on that.\n\nIf the previous call to `write` provided more (encoded) data than the delegate writer could\naccept in a single call to its `write`, the remaining data is buffered. As long as buffered\ndata is present, subsequent calls to `write` will try to write the remaining buffered data\nto the delegate and return either `Ok(0)` -- and therefore not consume any of `input` -- or\nan error.\n\n# Errors\n\nAny errors emitted by the delegate writer are returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:414:622":{"id":"0:414:622","crate_id":0,"name":"encode","span":{"filename":"src/encode.rs","begin":[18,0],"end":[20,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the [`STANDARD` engine](STANDARD).\n\nSee [Engine::encode].","links":{"STANDARD":"0:328:1932","Engine::encode":"0:344:622"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"alloc::string::String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[57,0],"end":[64,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:454:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3391-0:559:1777":{"id":"b:2:3391-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,16],"end":[136,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2322:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[106,0],"end":[110,1]},"visibility":"default","docs":"Pushes the str onto the end of the String","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:210:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:2241"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12312:2964":{"id":"2:12312:2964","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11937:3007","`DoubleEndedIterator`":"2:7388:121","prim@char":"1:12035:427","str::rmatches":"2:12315:31897"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43920:3581","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126-0:85:1997":{"id":"0:126-0:85:1997","crate_id":0,"name":null,"span":{"filename":"src/read/mod.rs","begin":[3,0],"end":[3,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::decoder::DecoderReader","name":"DecoderReader","id":"0:85:1997","glob":false}}},"0:519:627":{"id":"0:519:627","crate_id":0,"name":"eq","span":{"filename":"src/engine/mod.rs","begin":[450,9],"end":[450,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404:2676":{"id":"0:404:2676","crate_id":0,"name":"BIN_HEX","span":{"filename":"src/alphabet.rs","begin":[198,0],"end":[200,2]},"visibility":"public","docs":"The alphabet used in BinHex 4.0 files.\n\nSee [BinHex 4.0 Definition](http://files.stairways.com/other/binhex-40-specs-info.txt)","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12252:26924":{"id":"2:12252:26924","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:548:2644":{"id":"0:548:2644","crate_id":0,"name":"ReservedByte","span":{"filename":"src/alphabet.rs","begin":[145,4],"end":[145,20]},"visibility":"default","docs":"`=` cannot be used","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:550:1655"]},"discriminant":null}}},"0:483-0:329:2525":{"id":"0:483-0:329:2525","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[17,0],"end":[17,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::STANDARD_NO_PAD","name":"BASE64_STANDARD_NO_PAD","id":"0:329:2525","glob":false}}},"0:62:685":{"id":"0:62:685","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"fmt::Error","id":"2:42829:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:496:2407":{"id":"b:2:2546-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:595:1783":{"id":"b:5:680-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3548","5:683:3549","5:684:3550"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:332:1936":{"id":"0:332:1936","crate_id":0,"name":"PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[345,0],"end":[345,66]},"visibility":"public","docs":"Include padding bytes when encoding, and require that they be present when decoding.\n\nThis is the standard per the base64 RFC, but consider using [NO_PAD] instead as padding serves\nlittle purpose in practice.","links":{"NO_PAD":"0:333:2526"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"a:2:2812:3373-0:595:1783":{"id":"a:2:2812:3373-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2561-0:496:2407":{"id":"b:2:2561-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2253-0:487:1935":{"id":"b:2:2253-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[67,0],"end":[74,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","description","type_id","cause","provide"],"trait":{"name":"Error","id":"2:2608:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:456:2797"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:328:1932":{"id":"0:328:1932","crate_id":0,"name":"STANDARD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[330,0],"end":[330,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::STANDARD] base64 alphabet and [PAD] config.","links":{"PAD":"0:332:1936","GeneralPurpose":"0:294:1934","alphabet::STANDARD":"0:399:1932"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:451:685":{"id":"0:451:685","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[31,4],"end":[40,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:559:1777":{"id":"b:5:680-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3548","5:683:3549","5:684:3550"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2772:231-0:85:1997":{"id":"a:2:2772:231-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8472:3323-0:514:2298":{"id":"a:2:8472:3323-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2253-0:514:2298":{"id":"b:2:2253-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:525:2420":{"id":"b:5:680-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3548","5:683:3549","5:684:3550"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2256-0:559:1777":{"id":"b:2:2256-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8472:3323-0:595:1783":{"id":"a:2:8472:3323-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:304:2272":{"id":"0:304:2272","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[44,4],"end":[44,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GeneralPurposeEstimate","id":"0:267:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2256-0:525:2420":{"id":"b:2:2256-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5525:32571":{"id":"5:5525:32571","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3391-0:487:1935":{"id":"b:2:3391-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:551":{"id":"0:551","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,9],"end":[136,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:552:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12303:26962":{"id":"2:12303:26962","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12035:427","str::splitn":"2:12300:26960","self::pattern":"2:11937:3007"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43838:3579","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2755:223-0:189:2089":{"id":"a:2:2755:223-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2550-0:47:1981":{"id":"b:2:2550-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:171":{"id":"0:171","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[248,0],"end":[398,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","is_write_vectored","write_fmt","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3504:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:175:1769","0:179:2211"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2256-0:294:1934":{"id":"b:2:2256-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8472:3323-0:525:2420":{"id":"a:2:8472:3323-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:360:2369":{"id":"0:360:2369","crate_id":0,"name":"decode_vec","span":{"filename":"src/engine/mod.rs","begin":[298,4],"end":[329,5]},"visibility":"default","docs":"Decode the `input` into the supplied `buffer`.\n\nWrites into the supplied `Vec`, which may allocate if its internal buffer isn't big enough.\nReturns a `Result` containing an empty tuple, aka `()`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, alphabet, engine::{self, general_purpose}};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::PAD);\n\nfn main() {\n    use base64::Engine;\n    let mut buffer = Vec::<u8>::new();\n    // with the default engine\n    general_purpose::STANDARD\n        .decode_vec(\"aGVsbG8gd29ybGR+Cg==\", &mut buffer,).unwrap();\n    println!(\"{:?}\", buffer);\n\n    buffer.clear();\n\n    // with a custom engine\n    CUSTOM_ENGINE.decode_vec(\n        \"aGVsbG8gaW50ZXJuZXR-Cg==\",\n        &mut buffer,\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["buffer",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6886:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8471:3324-0:47:1981":{"id":"a:2:8471:3324-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[76,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:458:711"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,9],"end":[137,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2772:231-0:189:2089":{"id":"a:2:2772:231-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:440-0:427:1776":{"id":"0:440-0:427:1776","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,45],"end":[165,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encoded_len","name":"encoded_len","id":"0:427:1776","glob":false}}},"2:12359:24979":{"id":"2:12359:24979","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5510:32568":{"id":"5:5510:32568","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2998","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:3116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2998","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:3116","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[439,29],"end":[439,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2317:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:510:627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12238:31886":{"id":"2:12238:31886","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335-0:294:1934":{"id":"0:335-0:294:1934","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[22,26],"end":[22,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"general_purpose::GeneralPurpose","name":"GeneralPurpose","id":"0:294:1934","glob":false}}},"a:2:8471:3324-0:140:2088":{"id":"a:2:8471:3324-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:321:2501":{"id":"0:321:2501","crate_id":0,"name":"with_encode_padding","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[274,4],"end":[279,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `padding` setting.\n\nIf `padding` is `true`, encoding will append either 1 or 2 `=` padding characters as needed\nto produce an output whose length is a multiple of 4.\n\nPadding is not needed for correct decoding and only serves to waste bytes, but it's in the\n[spec](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2).\n\nFor new applications, consider not using padding if the decoders you're using don't require\npadding to be present.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["padding",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381-0:337:1771":{"id":"0:381-0:337:1771","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[156,0],"end":[156,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"engine::Engine","name":"Engine","id":"0:337:1771","glob":false}}},"0:441-0:559:1777":{"id":"0:441-0:559:1777","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[165,58],"end":[165,74]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::EncodeSliceError","name":"EncodeSliceError","id":"0:559:1777","glob":false}}},"0:0:1787":{"id":"0:0:1787","crate_id":0,"name":"base64","span":{"filename":"src/lib.rs","begin":[1,0],"end":[179,26]},"visibility":"public","docs":"# Getting started\n\n1. Perhaps one of the preconfigured engines in [engine::general_purpose] will suit, e.g.\n[engine::general_purpose::STANDARD_NO_PAD].\n    - These are re-exported in [prelude] with a `BASE64_` prefix for those who prefer to\n      `use base64::prelude::*` or equivalent, e.g. [prelude::BASE64_STANDARD_NO_PAD]\n1. If not, choose which alphabet you want. Most usage will want [alphabet::STANDARD] or [alphabet::URL_SAFE].\n1. Choose which [Engine] implementation you want. For the moment there is only one: [engine::GeneralPurpose].\n1. Configure the engine appropriately using the engine's `Config` type.\n    - This is where you'll select whether to add padding (when encoding) or expect it (when\n    decoding). If given the choice, prefer no padding.\n1. Build the engine using the selected alphabet and config.\n\nFor more detail, see below.\n\n## Alphabets\n\nAn [alphabet::Alphabet] defines what ASCII symbols are used to encode to or decode from.\n\nConstants in [alphabet] like [alphabet::STANDARD] or [alphabet::URL_SAFE] provide commonly used\nalphabets, but you can also build your own custom [alphabet::Alphabet] if needed.\n\n## Engines\n\nOnce you have an `Alphabet`, you can pick which `Engine` you want. A few parts of the public\nAPI provide a default, but otherwise the user must provide an `Engine` to use.\n\nSee [Engine] for more.\n\n## Config\n\nIn addition to an `Alphabet`, constructing an `Engine` also requires an [engine::Config]. Each\n`Engine` has a corresponding `Config` implementation since different `Engine`s may offer different\nlevels of configurability.\n\n# Encoding\n\nSeveral different encoding methods on [Engine] are available to you depending on your desire for\nconvenience vs performance.\n\n| Method                   | Output                       | Allocates                      |\n| ------------------------ | ---------------------------- | ------------------------------ |\n| [Engine::encode]         | Returns a new `String`       | Always                         |\n| [Engine::encode_string]  | Appends to provided `String` | Only if `String` needs to grow |\n| [Engine::encode_slice]   | Writes to provided `&[u8]`   | Never - fastest                |\n\nAll of the encoding methods will pad as per the engine's config.\n\n# Decoding\n\nJust as for encoding, there are different decoding methods available.\n\n| Method                   | Output                        | Allocates                      |\n| ------------------------ | ----------------------------- | ------------------------------ |\n| [Engine::decode]         | Returns a new `Vec<u8>`       | Always                         |\n| [Engine::decode_vec]     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |\n| [Engine::decode_slice]   | Writes to provided `&[u8]`    | Never - fastest                |\n\nUnlike encoding, where all possible input is valid, decoding can fail (see [DecodeError]).\n\nInput can be invalid because it has invalid characters or invalid padding. The nature of how\npadding is checked depends on the engine's config.\nWhitespace in the input is invalid, just like any other non-base64 byte.\n\n# `Read` and `Write`\n\nTo decode a [std::io::Read] of b64 bytes, wrap a reader (file, network socket, etc) with\n[read::DecoderReader].\n\nTo write raw bytes and have them b64 encoded on the fly, wrap a [std::io::Write] with\n[write::EncoderWriter].\n\nThere is some performance overhead (15% or so) because of the necessary buffer shuffling --\nstill fast enough that almost nobody cares. Also, these implementations do not heap allocate.\n\n# `Display`\n\nSee [display] for how to transparently base64 data via a `Display` implementation.\n\n# Examples\n\n## Using predefined engines\n\n```\nuse base64::{Engine as _, engine::general_purpose};\n\nlet orig = b\"data\";\nlet encoded: String = general_purpose::STANDARD_NO_PAD.encode(orig);\nassert_eq!(\"ZGF0YQ\", encoded);\nassert_eq!(orig.as_slice(), &general_purpose::STANDARD_NO_PAD.decode(encoded).unwrap());\n\n// or, URL-safe\nlet encoded_url = general_purpose::URL_SAFE_NO_PAD.encode(orig);\n```\n\n## Custom alphabet, config, and engine\n\n```\nuse base64::{engine, alphabet, Engine as _};\n\n// bizarro-world base64: +/ as the first symbols instead of the last\nlet alphabet =\n    alphabet::Alphabet::new(\"+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\")\n    .unwrap();\n\n// a very weird config that encodes with padding but requires no padding when decoding...?\nlet crazy_config = engine::GeneralPurposeConfig::new()\n    .with_decode_allow_trailing_bits(true)\n    .with_encode_padding(true)\n    .with_decode_padding_mode(engine::DecodePaddingMode::RequireNone);\n\nlet crazy_engine = engine::GeneralPurpose::new(&alphabet, crazy_config);\n\nlet encoded = crazy_engine.encode(b\"abc 123\");\n\n```\n\n# Panics\n\nIf length calculations result in overflowing `usize`, a panic will result.","links":{"alphabet::URL_SAFE":"0:400:2528","Engine::encode_slice":"0:352:2159","Engine":"0:337:1771","Engine::decode":"0:356:552","Engine::encode":"0:344:622","std::io::Read":"1:3447:2016","engine::GeneralPurpose":"0:294:1934","alphabet::Alphabet":"0:525:2420","engine::Config":"0:375:1898","Engine::decode_slice":"0:364:2383","prelude::BASE64_STANDARD_NO_PAD":"0:329:2525","prelude":"0:480:1092","alphabet":"0:382:1772","DecodeError":"0:572:1782","alphabet::STANDARD":"0:399:1932","engine::general_purpose":"0:242:1933","read::DecoderReader":"0:85:1997","std::io::Write":"1:3504:2123","write::EncoderWriter":"0:140:2088","Engine::encode_string":"0:348:1972","engine::general_purpose::STANDARD_NO_PAD":"0:329:2525","Engine::decode_vec":"0:360:2369","display":"0:38:1767"},"attrs":["#![deny(missing_docs, trivial_casts, trivial_numeric_casts,\nunused_extern_crates, unused_import_braces, unused_results,\nvariant_size_differences, warnings)]","#![forbid(unsafe_code)]","#![allow(clippy :: single_component_path_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:38:1767","0:72:1768","0:127:1769","0:229:1770","0:382:1772","0:480:1092","0:381-0:337:1771","0:435-0:414:622","0:436-0:416:1773","0:437-0:419:1774","0:439-0:422:1775","0:440-0:427:1776","0:441-0:559:1777","0:472-0:459:552","0:473-0:461:1778","0:474-0:464:1779","0:476-0:467:1780","0:477-0:470:1781","0:478-0:572:1782","0:479-0:595:1783"],"is_stripped":false}}},"0:540:2055":{"id":"0:540:2055","crate_id":0,"name":"InvalidLength","span":{"filename":"src/alphabet.rs","begin":[139,4],"end":[139,17]},"visibility":"default","docs":"Alphabets must be 64 ASCII bytes","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:492:431":{"id":"0:492:431","crate_id":0,"name":"clone","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:485-0:331:2530":{"id":"0:485-0:331:2530","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[19,0],"end":[19,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::URL_SAFE_NO_PAD","name":"BASE64_URL_SAFE_NO_PAD","id":"0:331:2530","glob":false}}},"5:682:3548":{"id":"5:682:3548","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[82,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","is_write_vectored","write_fmt","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3504:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:208:1769","0:209:2211"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12326:31901":{"id":"2:12326:31901","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:572:1782":{"id":"b:2:2256-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184:600":{"id":"0:184:600","crate_id":0,"name":"drop","span":{"filename":"src/write/encoder.rs","begin":[401,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2565:1521":{"id":"2:2565:1521","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:231-0:47:1981":{"id":"a:2:2772:231-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:547:1655":{"id":"0:547:1655","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[143,20],"end":[143,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:545:2643":{"id":"0:545:2643","crate_id":0,"name":"UnprintableByte","span":{"filename":"src/alphabet.rs","begin":[143,4],"end":[143,23]},"visibility":"default","docs":"All bytes must be printable (in the range `[32, 126]`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:547:1655"]},"discriminant":null}}},"0:560:2336":{"id":"0:560:2336","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/encode.rs","begin":[140,4],"end":[140,23]},"visibility":"default","docs":"The provided slice is too small.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:607:627":{"id":"0:607:627","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[47,23],"end":[47,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12260:6330":{"id":"2:12260:6330","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12035:427"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43686:3001","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2812:3373-0:487:1935":{"id":"a:2:2812:3373-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:364:2383":{"id":"0:364:2383","crate_id":0,"name":"decode_slice","span":{"filename":"src/engine/mod.rs","begin":[343,4],"end":[369,5]},"visibility":"default","docs":"Decode the input into the provided output slice.\n\nReturns the number of bytes written to the slice, or an error if `output` is smaller than\nthe estimated decoded length.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nSee [crate::decoded_len_estimate] for calculating buffer sizes.\n\nSee [Engine::decode_slice_unchecked] for a version that panics instead of returning an error\nif the output buffer is too small.","links":{"crate::decoded_len_estimate":"0:470:1781","Engine::decode_slice_unchecked":"0:370:2390"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228-0:210:2090":{"id":"0:228-0:210:2090","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,49],"end":[7,60]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder_string_writer::StrConsumer","name":"StrConsumer","id":"0:210:2090","glob":false}}},"b:2:2550-0:539:2640":{"id":"b:2:2550-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12315:31897":{"id":"2:12315:31897","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11937:3007","`DoubleEndedIterator`":"2:7388:121","prim@char":"1:12035:427","str::matches":"2:12312:2964"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43938:3582","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481-0:337:1771":{"id":"0:481-0:337:1771","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[14,0],"end":[14,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::Engine","name":"Engine","id":"0:337:1771","glob":false}}},"0:479-0:595:1783":{"id":"0:479-0:595:1783","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,80],"end":[172,96]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::DecodeSliceError","name":"DecodeSliceError","id":"0:595:1783","glob":false}}},"0:482-0:328:1932":{"id":"0:482-0:328:1932","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[16,0],"end":[16,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::STANDARD","name":"BASE64_STANDARD","id":"0:328:1932","glob":false}}},"0:189:2089":{"id":"0:189:2089","crate_id":0,"name":"EncoderStringWriter","span":{"filename":"src/write/encoder_string_writer.rs","begin":[51,0],"end":[53,1]},"visibility":"public","docs":"A `Write` implementation that base64-encodes data using the provided config and accumulates the\nresulting base64 utf8 `&str` in a [StrConsumer] implementation (typically `String`), which is\nthen exposed via `into_inner()`.\n\n# Examples\n\nBuffer base64 in a new String:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut enc = base64::write::EncoderStringWriter::new(&general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// get the resulting String\nlet b64_string = enc.into_inner();\n\nassert_eq!(\"YXNkZg==\", &b64_string);\n```\n\nOr, append to an existing `String`, which implements `StrConsumer`:\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\nlet mut buf = String::from(\"base64: \");\n\nlet mut enc = base64::write::EncoderStringWriter::from_consumer(\n    &mut buf,\n    &general_purpose::STANDARD);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// release the &mut reference on buf\nlet _ = enc.into_inner();\n\nassert_eq!(\"base64: YXNkZg==\", &buf);\n```\n\n# Performance\n\nBecause it has to validate that the base64 is UTF-8, it is about 80% as fast as writing plain\nbytes to a `io::Write`.","links":{"StrConsumer":"0:210:2090"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:210:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:194","0:200","a:2:2772:231-0:189:2089","a:2:2755:223-0:189:2089","a:2:2812:3373-0:189:2089","a:2:8471:3324-0:189:2089","a:2:8472:3323-0:189:2089","b:2:2253-0:189:2089","b:2:2556-0:189:2089","b:2:2550-0:189:2089","b:2:2561-0:189:2089","b:2:2546-0:189:2089","b:2:2256-0:189:2089","b:2:3391-0:189:2089","0:204"]}}},"0:211:2241":{"id":"0:211:2241","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[95,4],"end":[95,37]},"visibility":"default","docs":"Consume the base64 encoded data in `buf`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:461:1778":{"id":"0:461:1778","crate_id":0,"name":"decode_engine","span":{"filename":"src/decode.rs","begin":[97,0],"end":[102,1]},"visibility":"public","docs":" Decode from string reference as octets using the specified [Engine].\n\n See [Engine::decode].\nReturns a `Result` containing a `Vec<u8>`.","links":{"Engine::decode":"0:356:552","Engine":"0:337:1771"},"attrs":["#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:6886:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8471:3324-0:487:1935":{"id":"a:2:8471:3324-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12281:3494":{"id":"2:12281:3494","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41757:181","prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:683:3549":{"id":"5:683:3549","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376:1921":{"id":"0:376:1921","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/mod.rs","begin":[418,4],"end":[418,37]},"visibility":"default","docs":"Returns `true` if padding should be added after the encoded output.\n\nPadding is added outside the engine's encode() since the engine may be used\nto encode only a chunk of the overall output, so it can't always know when\nthe output is \"done\" and would therefore need padding (if configured).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:2755:223-0:487:1935":{"id":"a:2:2755:223-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:454:685":{"id":"0:454:685","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[58,4],"end":[63,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:189:2089":{"id":"b:2:2546-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:590":{"id":"0:590","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,23],"end":[9,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2317:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:591:627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:544:1655":{"id":"0:544:1655","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[141,19],"end":[141,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:2:2755:223-0:572:1782":{"id":"a:2:2755:223-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2550-0:559:1777":{"id":"b:2:2550-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2546-0:539:2640":{"id":"b:2:2546-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12309:31896":{"id":"2:12309:31896","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:552:685":{"id":"0:552:685","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[136,9],"end":[136,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12246:320":{"id":"2:12246:320","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12247:319","`u8`":"1:12052:1544"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:480:1092":{"id":"0:480:1092","crate_id":0,"name":"prelude","span":{"filename":"src/prelude.rs","begin":[1,0],"end":[19,82]},"visibility":"public","docs":"Preconfigured engines for common use cases.\n\nThese are re-exports of `const` engines in [crate::engine::general_purpose], renamed with a `BASE64_`\nprefix for those who prefer to `use` the entire path to a name.\n\n# Examples\n\n```\nuse base64::prelude::{Engine as _, BASE64_STANDARD_NO_PAD};\n\nassert_eq!(\"c29tZSBieXRlcw\", &BASE64_STANDARD_NO_PAD.encode(b\"some bytes\"));\n```","links":{"crate::engine::general_purpose":"0:242:1933"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:481-0:337:1771","0:482-0:328:1932","0:483-0:329:2525","0:484-0:330:2528","0:485-0:331:2530"],"is_stripped":false}}},"0:344:622":{"id":"0:344:622","crate_id":0,"name":"encode","span":{"filename":"src/engine/mod.rs","begin":[118,4],"end":[134,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 using the provided `Engine`.\nReturns a `String`.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\n\nlet b64 = general_purpose::STANDARD.encode(b\"hello world~\");\nprintln!(\"{}\", b64);\n\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nlet b64_url = CUSTOM_ENGINE.encode(b\"hello internet~\");","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:576:1656":{"id":"0:576:1656","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"b:5:5771-0:559:1777":{"id":"b:5:5771-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12300:26960":{"id":"2:12300:26960","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007","str::rsplitn":"2:12303:26962"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43820:3580","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:573:2053":{"id":"0:573:2053","crate_id":0,"name":"InvalidByte","span":{"filename":"src/decode.rs","begin":[13,4],"end":[13,26]},"visibility":"default","docs":"An invalid byte was found in the input. The offset and offending byte are provided.\nPadding characters (`=`) interspersed in the encoded form will be treated as invalid bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:575:1655","0:576:1656"]},"discriminant":null}}},"b:2:2556-0:189:2089":{"id":"b:2:2556-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3391-0:539:2640":{"id":"b:2:3391-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:592":{"id":"0:592","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,34],"end":[9,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2766:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:53":{"id":"0:53","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[23,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["0:57:960"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2556-0:595:1783":{"id":"b:2:2556-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12264:30119":{"id":"2:12264:30119","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12263:30115"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43999:3589","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:599:2336":{"id":"0:599:2336","crate_id":0,"name":"OutputSliceTooSmall","span":{"filename":"src/decode.rs","begin":[54,4],"end":[54,23]},"visibility":"default","docs":"The provided slice _may_ be too small.\n\nThe check is conservative (assumes the last triplet of output bytes will all be needed).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:5771-0:595:1783":{"id":"b:5:5771-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:2211":{"id":"0:179:2211","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder.rs","begin":[391,4],"end":[397,5]},"visibility":"default","docs":"Because this is usually treated as OK to call multiple times, it will *not* flush any\nincomplete chunks of input or write padding.\n# Errors\n\nThe first error that is not of [`ErrorKind::Interrupted`] will be returned.","links":{"`ErrorKind::Interrupted`":"1:8086:2178"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:1933":{"id":"0:242:1933","crate_id":0,"name":"general_purpose","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[1,0],"end":[350,62]},"visibility":"public","docs":"Provides the [GeneralPurpose] engine and associated config types.","links":{"GeneralPurpose":"0:294:1934"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:294:1934","0:487:1935","0:328:1932","0:329:2525","0:330:2528","0:331:2530","0:332:1936","0:333:2526"],"is_stripped":false}}},"0:377:2272":{"id":"0:377:2272","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[426,0],"end":[433,1]},"visibility":"public","docs":"The decode estimate used by an engine implementation. Users do not need to interact with this;\nit is only for engine implementors.\n\nImplementors may store relevant data here when constructing this to avoid having to calculate\nthem again during actual decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:378:1781"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:5:5771-0:572:1782":{"id":"b:5:5771-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,34],"end":[47,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2766:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12363:31912":{"id":"2:12363:31912","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4521:31912"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44033:3588","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:499:2411":{"id":"0:499:2411","crate_id":0,"name":"RequireCanonical","span":{"filename":"src/engine/mod.rs","begin":[444,4],"end":[444,20]},"visibility":"default","docs":"Padding must be canonical (0, 1, or 2 `=` as needed to produce a 4 byte suffix).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2253-0:525:2420":{"id":"b:2:2253-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124:1768":{"id":"0:124:1768","crate_id":0,"name":"read","span":{"filename":"src/read/decoder.rs","begin":[213,4],"end":[315,5]},"visibility":"default","docs":"Decode input from the wrapped reader.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nwritten in `buf`.\n\nWhere possible, this function buffers base64 to minimize the number of read() calls to the\ndelegate reader.\n\n# Errors\n\nAny errors emitted by the delegate reader are returned. Decoding errors due to invalid\nbase64 are also possible, and will have `io::ErrorKind::InvalidData`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:422:1775":{"id":"0:422:1775","crate_id":0,"name":"encode_engine_slice","span":{"filename":"src/encode.rs","begin":[51,0],"end":[57,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied slice.\n\nSee [Engine::encode_slice].","links":{"Engine::encode_slice":"0:352:2159"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_slice\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_slice"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:140:2088":{"id":"b:2:2256-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3391-0:47:1981":{"id":"b:2:3391-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:311:1920":{"id":"0:311:1920","crate_id":0,"name":"config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[185,4],"end":[187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:337:1771","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2812:3373-0:47:1981":{"id":"a:2:2812:3373-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:303:1898":{"id":"0:303:1898","crate_id":0,"name":"Config","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[43,4],"end":[43,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:8472:3323-0:140:2088":{"id":"a:2:8472:3323-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12257:31891":{"id":"2:12257:31891","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12041:1441","crate::ops::IndexMut":"2:3056:2994","str::slice_unchecked":"2:12256:31890"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:231-0:487:1935":{"id":"a:2:2772:231-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2256-0:47:1981":{"id":"b:2:2256-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,27],"end":[53,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2317:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:538:627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:557":{"id":"0:557","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[136,20],"end":[136,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2317:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:558:627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:568:627":{"id":"0:568:627","crate_id":0,"name":"eq","span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2550-0:514:2298":{"id":"b:2:2550-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12237:2035":{"id":"2:12237:2035","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:581:1655":{"id":"0:581:1655","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[24,22],"end":[24,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2550-0:525:2420":{"id":"b:2:2550-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12265:29964":{"id":"2:12265:29964","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43970:3061","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:586:431":{"id":"0:586:431","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:585":{"id":"0:585","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,9],"end":[9,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:586:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:85:1997":{"id":"0:85:1997","crate_id":0,"name":"DecoderReader","span":{"filename":"src/read/decoder.rs","begin":[33,0],"end":[58,1]},"visibility":"public","docs":"A `Read` implementation that decodes base64 data read from an underlying reader.\n\n# Examples\n\n```\nuse std::io::Read;\nuse std::io::Cursor;\nuse base64::engine::general_purpose;\n\n// use a cursor as the simplest possible `Read` -- in real code this is probably a file, etc.\nlet mut wrapped_reader = Cursor::new(b\"YXNkZg==\");\nlet mut decoder = base64::read::DecoderReader::new(\n    &mut wrapped_reader,\n    &general_purpose::STANDARD);\n\n// handle errors as you normally would\nlet mut result = Vec::new();\ndecoder.read_to_end(&mut result).unwrap();\n\nassert_eq!(b\"asdf\", &result[..]);\n\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3447:2016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:106","a:2:2772:231-0:85:1997","a:2:2755:223-0:85:1997","a:2:2812:3373-0:85:1997","a:2:8471:3324-0:85:1997","a:2:8472:3323-0:85:1997","b:2:2253-0:85:1997","b:2:2556-0:85:1997","b:2:2550-0:85:1997","b:2:2561-0:85:1997","b:2:2546-0:85:1997","b:2:2256-0:85:1997","b:2:3391-0:85:1997","0:101","0:120"]}}},"2:2255:2953":{"id":"2:2255:2953","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:487:1935":{"id":"b:2:2546-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3391-0:525:2420":{"id":"b:2:3391-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:375:1898":{"id":"0:375:1898","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[409,0],"end":[419,1]},"visibility":"public","docs":"The minimal level of configuration that engines must support.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:376:1921"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:326"]}}},"0:538:627":{"id":"0:538:627","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[53,27],"end":[53,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:231-0:572:1782":{"id":"a:2:2772:231-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8471:3324-0:595:1783":{"id":"a:2:8471:3324-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:214:2241":{"id":"0:214:2241","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[100,4],"end":[102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3391-0:189:2089":{"id":"b:2:3391-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:504:431":{"id":"0:504:431","crate_id":0,"name":"clone","span":{"filename":"src/engine/mod.rs","begin":[439,9],"end":[439,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521":{"id":"0:521","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[450,20],"end":[450,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2322:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2256-0:595:1783":{"id":"b:2:2256-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12254:26925":{"id":"2:12254:26925","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12344:31907":{"id":"2:12344:31907","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12353:31910":{"id":"2:12353:31910","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11898:127","`FromStr`":"2:11897:3004"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11897:3004","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11897:3004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352:2159":{"id":"0:352:2159","crate_id":0,"name":"encode_slice","span":{"filename":"src/engine/mod.rs","begin":[196,4],"end":[224,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied slice.\nWrites into the supplied output buffer.\n\nThis is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident\nor statically-allocated buffer).\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::general_purpose};\nlet s = b\"hello internet!\";\nlet mut buf = Vec::new();\n// make sure we'll have a slice big enough for base64 + padding\nbuf.resize(s.len() * 4 / 3 + 4, 0);\n\nlet bytes_written = general_purpose::STANDARD.encode_slice(s, &mut buf).unwrap();\n\n// shorten our vec down to just what was written\nbuf.truncate(bytes_written);\n\nassert_eq!(s, general_purpose::STANDARD.decode(&buf).unwrap().as_slice());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397:685":{"id":"0:397:685","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[149,4],"end":[156,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3391-0:595:1783":{"id":"b:2:3391-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2755:223-0:47:1981":{"id":"a:2:2755:223-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12328:31902":{"id":"2:12328:31902","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:231-0:595:1783":{"id":"a:2:2772:231-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5771-0:539:2640":{"id":"b:5:5771-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2550-0:294:1934":{"id":"b:2:2550-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:583:2057":{"id":"0:583:2057","crate_id":0,"name":"InvalidPadding","span":{"filename":"src/decode.rs","begin":[27,4],"end":[27,18]},"visibility":"default","docs":"The nature of the padding was not as configured: absent or incorrect when it must be\ncanonical, or present when it must be absent, etc.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12263:30115":{"id":"2:12263:30115","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12264:30119"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43990:3574","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12360:31911":{"id":"2:12360:31911","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4523:31911"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44015:3586","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:606":{"id":"0:606","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,23],"end":[47,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2317:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:607:627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:477-0:470:1781":{"id":"0:477-0:470:1781","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,45],"end":[172,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decoded_len_estimate","name":"decoded_len_estimate","id":"0:470:1781","glob":false}}},"a:2:8471:3324-0:525:2420":{"id":"a:2:8471:3324-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12241:31888":{"id":"2:12241:31888","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12239:31887"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:569":{"id":"0:569","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,34],"end":[137,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2766:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2552:711":{"id":"2:2552:711","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:514:2298":{"id":"b:2:2256-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[439,29],"end":[439,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2765:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198:2232":{"id":"0:198:2232","crate_id":0,"name":"from_consumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[57,4],"end":[61,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will append to the provided `StrConsumer`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["str_consumer",{"generic":"S"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12358:24978":{"id":"2:12358:24978","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12248:26922":{"id":"2:12248:26922","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41757:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10031:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[74,0],"end":[198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3447:2016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:110:960","0:119:2065"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2812:3373-0:559:1777":{"id":"a:2:2812:3373-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2772:231-0:525:2420":{"id":"a:2:2772:231-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:427:1776":{"id":"0:427:1776","crate_id":0,"name":"encoded_len","span":{"filename":"src/encode.rs","begin":[97,0],"end":[117,1]},"visibility":"public","docs":"Calculate the base64 encoded length for a given input length, optionally including any\nappropriate padding bytes.\n\nReturns `None` if the encoded length can't be represented in `usize`. This will happen for\ninput lengths in approximately the top quarter of the range of `usize`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes_len",{"primitive":"usize"}],["padding",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[60,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3447:2016","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:105:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5527:2832":{"id":"5:5527:2832","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:1898":{"id":"0:338:1898","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[41,4],"end":[41,24]},"visibility":"default","docs":"The config type used by this engine","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Config","id":"0:375:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:323:2520":{"id":"0:323:2520","crate_id":0,"name":"with_decode_padding_mode","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[308,4],"end":[313,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_padding_mode` setting.\n\nPadding is not useful in terms of representing encoded data -- it makes no difference to\nthe decoder if padding is present or not, so if you have some un-padded input to decode, it\nis perfectly fine to use `DecodePaddingMode::Indifferent` to prevent errors from being\nemitted.\n\nHowever, since in practice\n[people who learned nothing from BER vs DER seem to expect base64 to have one canonical encoding](https://eprint.iacr.org/2022/361),\nthe default setting is the stricter `DecodePaddingMode::RequireCanonicalPadding`.\n\nOr, if \"canonical\" in your circumstance means _no_ padding rather than padding to the\nnext multiple of four, there's `DecodePaddingMode::RequireNoPadding`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["mode",{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:567":{"id":"0:567","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2317:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:568:627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2256-0:189:2089":{"id":"b:2:2256-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2556-0:559:1777":{"id":"b:2:2556-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12321:31899":{"id":"2:12321:31899","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11937:3007","`DoubleEndedIterator`":"2:7388:121","prim@char":"1:12035:427","str::match_indices":"2:12318:31898"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43884:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[28,0],"end":[40,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:960"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2755:223-0:514:2298":{"id":"a:2:2755:223-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3391-0:294:1934":{"id":"b:2:3391-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8472:3323-0:539:2640":{"id":"a:2:8472:3323-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8472:3323-0:572:1782":{"id":"a:2:8472:3323-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:140:2088":{"id":"b:2:2556-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:227-0:189:2089":{"id":"0:227-0:189:2089","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[7,28],"end":[7,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::encoder_string_writer::EncoderStringWriter","name":"EncoderStringWriter","id":"0:189:2089","glob":false}}},"0:579:2056":{"id":"0:579:2056","crate_id":0,"name":"InvalidLastSymbol","span":{"filename":"src/decode.rs","begin":[24,4],"end":[24,32]},"visibility":"default","docs":"The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\nThis is indicative of corrupted or truncated Base64.\nUnlike `InvalidByte`, which reports symbols that aren't in the alphabet, this error is for\nsymbols that are in the alphabet but represent nonsensical encodings.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:581:1655","0:582:1656"]},"discriminant":null}}},"0:456:2797":{"id":"0:456:2797","crate_id":0,"name":"source","span":{"filename":"src/decode.rs","begin":[68,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2608:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3391-0:514:2298":{"id":"b:2:3391-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8472:3323-0:85:1997":{"id":"a:2:8472:3323-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:403:2672":{"id":"0:403:2672","crate_id":0,"name":"IMAP_MUTF7","span":{"filename":"src/alphabet.rs","begin":[191,0],"end":[193,2]},"visibility":"public","docs":"The alphabet used in IMAP-modified UTF-7 (uses `+` and `,`).\n\nSee [RFC 3501](https://tools.ietf.org/html/rfc3501#section-5.1.3)","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12261:6452":{"id":"2:12261:6452","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12035:427"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43692:3573","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2561-0:189:2089":{"id":"b:2:2561-0:189:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2556-0:496:2407":{"id":"b:2:2556-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12331:31904":{"id":"2:12331:31904","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5517:32570":{"id":"5:5517:32570","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2065":{"id":"0:170:2065","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder.rs","begin":[241,4],"end":[245,5]},"visibility":"public","docs":"Unwraps this `EncoderWriter`, returning the base writer it writes base64 encoded output\nto.\n\nNormally this method should not be needed, since `finish()` returns the inner writer if\nit completes successfully. That will also ensure all data has been flushed, which the\n`into_inner()` function does *not* do.\n\nCalling this method after `finish()` has completed successfully will panic, since the\nwriter has already been returned.\n\nThis method may be useful if the writer implements additional APIs beyond the `Write`\ntrait. Note that the inner writer might be in an error state or have an incomplete\nbase64 string written to it.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:1769":{"id":"0:208:1769","crate_id":0,"name":"write","span":{"filename":"src/write/encoder_string_writer.rs","begin":[83,4],"end":[85,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:514:2298":{"id":"0:514:2298","crate_id":0,"name":"DecodeMetadata","span":{"filename":"src/engine/mod.rs","begin":[451,0],"end":[456,1]},"visibility":"public","docs":"Metadata about the result of a decode operation","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2772:231-0:514:2298","a:2:2755:223-0:514:2298","a:2:2812:3373-0:514:2298","a:2:8471:3324-0:514:2298","a:2:8472:3323-0:514:2298","b:2:2253-0:514:2298","b:2:2556-0:514:2298","b:2:2550-0:514:2298","b:2:2561-0:514:2298","b:2:2546-0:514:2298","b:2:2256-0:514:2298","b:2:3391-0:514:2298","0:523","0:517","0:520","0:518","0:521"]}}},"b:2:2253-0:47:1981":{"id":"b:2:2253-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2812:3373-0:294:1934":{"id":"a:2:2812:3373-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12256:31890":{"id":"2:12256:31890","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12041:1441","str::slice_mut_unchecked":"2:12257:31891","crate::ops::Index":"2:3052:2993"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8472:3323-0:47:1981":{"id":"a:2:8472:3323-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2561-0:525:2420":{"id":"b:2:2561-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:382:1772":{"id":"0:382:1772","crate_id":0,"name":"alphabet","span":{"filename":"src/alphabet.rs","begin":[1,0],"end":[272,1]},"visibility":"public","docs":"Provides [Alphabet] and constants for alphabets commonly used in the wild.","links":{"Alphabet":"0:525:2420"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:525:2420","0:539:2640","0:399:1932","0:400:2528","0:401:2665","0:402:2668","0:403:2672","0:404:2676"],"is_stripped":false}}},"0:484-0:330:2528":{"id":"0:484-0:330:2528","crate_id":0,"name":null,"span":{"filename":"src/prelude.rs","begin":[18,0],"end":[18,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::engine::general_purpose::URL_SAFE","name":"BASE64_URL_SAFE","id":"0:330:2528","glob":false}}},"0:419:1774":{"id":"0:419:1774","crate_id":0,"name":"encode_engine_string","span":{"filename":"src/encode.rs","begin":[38,0],"end":[44,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 into a supplied `String`.\n\n See [Engine::encode_string].","links":{"Engine::encode_string":"0:348:1972"},"attrs":["#[allow(unused)]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::encode_string\")]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":{"since":"0.21.0","note":"Use Engine::encode_string"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"alloc::string::String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:514:2298":{"id":"b:2:2556-0:514:2298","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2812:3373-0:525:2420":{"id":"a:2:2812:3373-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2812:3373","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3393:1535":{"id":"2:3393:1535","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39599:6374","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:559:1777":{"id":"0:559:1777","crate_id":0,"name":"EncodeSliceError","span":{"filename":"src/encode.rs","begin":[138,0],"end":[141,1]},"visibility":"public","docs":"Errors that can occur while encoding into a slice.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:560:2336"],"impls":["a:2:2772:231-0:559:1777","a:2:2755:223-0:559:1777","a:2:2812:3373-0:559:1777","a:2:8471:3324-0:559:1777","a:2:8472:3323-0:559:1777","b:2:2253-0:559:1777","b:2:2556-0:559:1777","b:2:2550-0:559:1777","b:2:2561-0:559:1777","b:2:2546-0:559:1777","b:2:2256-0:559:1777","b:2:3391-0:559:1777","b:5:680-0:559:1777","b:5:5771-0:559:1777","0:569","0:564","0:431","0:433","0:570","0:562","0:566","0:567"]}}},"2:12236:832":{"id":"2:12236:832","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12035:427"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3391-0:572:1782":{"id":"b:2:3391-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:435-0:414:622":{"id":"0:435-0:414:622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,24],"end":[163,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode","name":"encode","id":"0:414:622","glob":false}}},"0:348:1972":{"id":"0:348:1972","crate_id":0,"name":"encode_string","span":{"filename":"src/engine/mod.rs","begin":[158,4],"end":[171,5]},"visibility":"default","docs":"Encode arbitrary octets as base64 into a supplied `String`.\nWrites into the supplied `String`, which may allocate if its internal buffer isn't big enough.\n\n# Example\n\n```rust\nuse base64::{Engine as _, engine::{self, general_purpose}, alphabet};\nconst CUSTOM_ENGINE: engine::GeneralPurpose =\n    engine::GeneralPurpose::new(&alphabet::URL_SAFE, general_purpose::NO_PAD);\n\nfn main() {\n    let mut buf = String::new();\n    general_purpose::STANDARD.encode_string(b\"hello world~\", &mut buf);\n    println!(\"{}\", buf);\n\n    buf.clear();\n    CUSTOM_ENGINE.encode_string(b\"hello internet~\", &mut buf);\n    println!(\"{}\", buf);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"generic":"T"}],["output_buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2560:1522":{"id":"2:2560:1522","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:2526":{"id":"0:333:2526","crate_id":0,"name":"NO_PAD","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[348,0],"end":[350,62]},"visibility":"public","docs":"Don't add padding when encoding, and require no padding when decoding.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:478-0:572:1782":{"id":"0:478-0:572:1782","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,67],"end":[172,78]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::DecodeError","name":"DecodeError","id":"0:572:1782","glob":false}}},"2:12277:3529":{"id":"2:12277:3529","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41757:181","prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12258:26946":{"id":"2:12258:26946","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12259:26947"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536":{"id":"0:536","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,27],"end":[53,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2765:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:394:128":{"id":"0:394:128","crate_id":0,"name":"Error","span":{"filename":"src/alphabet.rs","begin":[128,4],"end":[128,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2253-0:294:1934":{"id":"b:2:2253-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:539:2640":{"id":"0:539:2640","crate_id":0,"name":"ParseAlphabetError","span":{"filename":"src/alphabet.rs","begin":[137,0],"end":[146,1]},"visibility":"public","docs":"Possible errors when constructing an [Alphabet] from a `str`.","links":{"Alphabet":"0:525:2420"},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:540:2055","0:542:2647","0:545:2643","0:548:2644"],"impls":["a:2:2772:231-0:539:2640","a:2:2755:223-0:539:2640","a:2:2812:3373-0:539:2640","a:2:8471:3324-0:539:2640","a:2:8472:3323-0:539:2640","b:2:2253-0:539:2640","b:2:2556-0:539:2640","b:2:2550-0:539:2640","b:2:2561-0:539:2640","b:2:2546-0:539:2640","b:2:2256-0:539:2640","b:2:3391-0:539:2640","b:5:5771-0:539:2640","0:551","0:554","0:553","0:396","0:556","0:398","0:557"]}}},"2:12355:24973":{"id":"2:12355:24973","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8471:3324-0:496:2407":{"id":"a:2:8471:3324-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:339:2272":{"id":"0:339:2272","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[43,4],"end":[43,40]},"visibility":"default","docs":"The decode estimate used by this engine","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"DecodeEstimate","id":"0:377:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[242,16],"end":[242,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2767:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2561-0:539:2640":{"id":"b:2:2561-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57:960":{"id":"0:57:960","crate_id":0,"name":"new","span":{"filename":"src/display.rs","begin":[25,4],"end":[30,5]},"visibility":"public","docs":"Create a `Base64Display` with the provided engine.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2755:223-0:525:2420":{"id":"a:2:2755:223-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:531:685":{"id":"0:531:685","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[53,16],"end":[53,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:496:2407":{"id":"b:2:2256-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2250:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:24769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:530":{"id":"0:530","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,16],"end":[53,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:531:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[152,0],"end":[152,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","description","type_id","cause","provide"],"trait":{"name":"Error","id":"2:2608:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:550:1655":{"id":"0:550:1655","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[145,17],"end":[145,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"2:12266:31892":{"id":"2:12266:31892","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43980:3575","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2253-0:539:2640":{"id":"b:2:2253-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8471:3324-0:572:1782":{"id":"a:2:8471:3324-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8471:3324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:294:1934":{"id":"b:2:2556-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2526:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:128","2:2560:1522"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476-0:467:1780":{"id":"0:476-0:467:1780","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,24],"end":[172,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"crate::decode::decode_engine_slice","name":"decode_engine_slice","id":"0:467:1780","glob":false}}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[400,0],"end":[407,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2993:2212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:184:600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2755:223-0:140:2088":{"id":"a:2:2755:223-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12267:30106":{"id":"2:12267:30106","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44008:3585","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:520":{"id":"0:520","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[450,20],"end":[450,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2766:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:532":{"id":"0:532","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[53,23],"end":[53,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2766:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:524:685":{"id":"0:524:685","crate_id":0,"name":"fmt","span":{"filename":"src/engine/mod.rs","begin":[450,24],"end":[450,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2561-0:140:2088":{"id":"b:2:2561-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3391-0:140:2088":{"id":"b:2:3391-0:140:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3389:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncoderWriter","id":"0:140:2088","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:3393:1535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8472:3323-0:559:1777":{"id":"a:2:8472:3323-0:559:1777","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:512":{"id":"0:512","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[439,40],"end":[439,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2322:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:437-0:419:1774":{"id":"0:437-0:419:1774","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,47],"end":[163,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]","#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"inner":{"import":{"source":"crate::encode::encode_engine_string","name":"encode_engine_string","id":"0:419:1774","glob":false}}},"b:2:2550-0:572:1782":{"id":"b:2:2550-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[38,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["0:62:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:598:1655":{"id":"0:598:1655","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[50,16],"end":[50,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:464:1779":{"id":"0:464:1779","crate_id":0,"name":"decode_engine_vec","span":{"filename":"src/decode.rs","begin":[109,0],"end":[115,1]},"visibility":"public","docs":"Decode from string reference as octets.\n\nSee [Engine::decode_vec].","links":{"Engine::decode_vec":"0:360:2369"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]","#[deprecated(since = \"0.21.0\", note = \"Use Engine::decode_vec\")]"],"deprecation":{"since":"0.21.0","note":"Use Engine::decode_vec"},"inner":{"function":{"decl":{"inputs":[["input",{"generic":"T"}],["buffer",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"alloc::vec::Vec","id":"5:6886:247","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}],["engine",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"E"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2514:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401:2665":{"id":"0:401:2665","crate_id":0,"name":"CRYPT","span":{"filename":"src/alphabet.rs","begin":[179,0],"end":[181,2]},"visibility":"public","docs":"The `crypt(3)` alphabet (uses `.` and `/` as the first two values).\n\nNot standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:587":{"id":"0:587","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:588:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12318:31898":{"id":"2:12318:31898","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11937:3007","`DoubleEndedIterator`":"2:7388:121","prim@char":"1:12035:427","str::rmatch_indices":"2:12321:31899"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43866:3583","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:602:431":{"id":"0:602:431","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[47,9],"end":[47,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:525:2420":{"id":"0:525:2420","crate_id":0,"name":"Alphabet","span":{"filename":"src/alphabet.rs","begin":[54,0],"end":[56,1]},"visibility":"public","docs":"An alphabet defines the 64 ASCII characters (symbols) used for base64.\n\nCommon alphabets are provided as constants, and custom alphabets\ncan be made via `from_str` or the `TryFrom<str>` implementation.\n\n# Examples\n\nBuilding and using a custom Alphabet:\n\n```\nlet custom = base64::alphabet::Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n\nlet engine = base64::engine::GeneralPurpose::new(\n    &custom,\n    base64::engine::general_purpose::PAD);\n```\n\nBuilding a const:\n\n```\nuse base64::alphabet::Alphabet;\n\nstatic CUSTOM: Alphabet = {\n    // Result::unwrap() isn't const yet, but panic!() is OK\n    match Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\") {\n        Ok(x) => x,\n        Err(_) => panic!(\"creation of alphabet failed\"),\n    }\n};\n```\n\nBuilding a lazy_static:\n\n```\nuse base64::{\n    alphabet::Alphabet,\n    engine::{general_purpose::GeneralPurpose, GeneralPurposeConfig},\n};\n\nlazy_static::lazy_static! {\n    static ref CUSTOM: Alphabet = Alphabet::new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:389","a:2:2772:231-0:525:2420","a:2:2755:223-0:525:2420","a:2:2812:3373-0:525:2420","a:2:8471:3324-0:525:2420","a:2:8472:3323-0:525:2420","b:2:2253-0:525:2420","b:2:2556-0:525:2420","b:2:2550-0:525:2420","b:2:2561-0:525:2420","b:2:2546-0:525:2420","b:2:2256-0:525:2420","b:2:3391-0:525:2420","b:5:680-0:525:2420","0:528","0:530","0:393","0:532","0:537","0:536","0:533"]}}},"0:605":{"id":"0:605","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,23],"end":[47,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2765:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:432:685":{"id":"0:432:685","crate_id":0,"name":"fmt","span":{"filename":"src/encode.rs","begin":[144,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2755:223-0:294:1934":{"id":"a:2:2755:223-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2755:223-0:496:2407":{"id":"a:2:2755:223-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5771-0:47:1981":{"id":"b:5:5771-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["5:5773:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:487:1935":{"id":"b:5:680-0:487:1935","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3548","5:683:3549","5:684:3550"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:392:960":{"id":"0:392:960","crate_id":0,"name":"new","span":{"filename":"src/alphabet.rs","begin":[78,4],"end":[124,5]},"visibility":"public","docs":"Create an `Alphabet` from a string of 64 unique printable ASCII bytes.\n\nThe `=` byte is not allowed as it is used for padding.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["alphabet",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41899:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:570":{"id":"0:570","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,34],"end":[137,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2322:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2550-0:595:1783":{"id":"b:2:2550-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:711"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[148,0],"end":[157,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9371:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:397:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:564":{"id":"0:564","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,16],"end":[137,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:565:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12244:2637":{"id":"2:12244:2637","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11497:1925"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2564:128":{"id":"2:2564:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32257:3131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2772:231-0:539:2640":{"id":"a:2:2772:231-0:539:2640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2772:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseAlphabetError","id":"0:539:2640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[450,9],"end":[450,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2765:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeMetadata","id":"0:514:2298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2559:128":{"id":"2:2559:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:12324:31900":{"id":"2:12324:31900","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2546-0:85:1997":{"id":"b:2:2546-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:330:2528":{"id":"0:330:2528","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[336,0],"end":[336,83]},"visibility":"public","docs":"A [GeneralPurpose] engine using the [alphabet::URL_SAFE] base64 alphabet and [PAD] config.","links":{"PAD":"0:332:1936","alphabet::URL_SAFE":"0:400:2528","GeneralPurpose":"0:294:1934"},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12259:26947":{"id":"2:12259:26947","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12258:26946"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:603":{"id":"0:603","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,16],"end":[47,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9366:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:604:685"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12306:31895":{"id":"2:12306:31895","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41755:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2253-0:496:2407":{"id":"b:2:2253-0:496:2407","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2762:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2247:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2255:2953"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8472:3323-0:294:1934":{"id":"a:2:8472:3323-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8472:3323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/engine/general_purpose/mod.rs","begin":[323,0],"end":[327,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Config","id":"0:375:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurposeConfig","id":"0:487:1935","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:327:1921"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12291:26958":{"id":"2:12291:26958","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11937:3007","`DoubleEndedIterator`":"2:7388:121","prim@char":"1:12035:427","str::split":"2:12285:26954"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43734:3576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11957:3567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:566":{"id":"0:566","crate_id":0,"name":null,"span":{"filename":"src/encode.rs","begin":[137,23],"end":[137,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2765:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2561-0:572:1782":{"id":"b:2:2561-0:572:1782","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeError","id":"0:572:1782","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:322:2509":{"id":"0:322:2509","crate_id":0,"name":"with_decode_allow_trailing_bits","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[288,4],"end":[293,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_allow_trailing_bits` setting.\n\nMost users will not need to configure this. It's useful if you need to decode base64\nproduced by a buggy encoder that has bits set in the unused space on the last base64\ncharacter as per [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).\nIf invalid trailing bits are present and this is `true`, those bits will\nbe silently ignored, else `DecodeError::InvalidLastSymbol` will be emitted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["allow",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2561-0:47:1981":{"id":"b:2:2561-0:47:1981","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Base64Display","id":"0:47:1981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"generic":"E"}}],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2546-0:525:2420":{"id":"b:2:2546-0:525:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2523:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Alphabet","id":"0:525:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:2384"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/engine/mod.rs","begin":[439,16],"end":[439,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2767:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodePaddingMode","id":"0:496:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:199:2065":{"id":"0:199:2065","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder_string_writer.rs","begin":[67,4],"end":[72,5]},"visibility":"public","docs":"Encode all remaining buffered data, including any trailing incomplete input triples and\nassociated padding.\n\nReturns the base64-encoded form of the accumulated written data.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"S"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2755:223-0:85:1997":{"id":"a:2:2755:223-0:85:1997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecoderReader","id":"0:85:1997","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12268:26964":{"id":"2:12268:26964","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12035:427","self::pattern":"2:11937:3007"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11942:2996","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:960":{"id":"0:110:960","crate_id":0,"name":"new","span":{"filename":"src/read/decoder.rs","begin":[76,4],"end":[89,5]},"visibility":"public","docs":"Create a new decoder that will read from the provided reader `r`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["reader",{"generic":"R"}],["engine",{"borrowed_ref":{"lifetime":"'e","mutable":false,"type":{"generic":"E"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:2088":{"id":"0:140:2088","crate_id":0,"name":"EncoderWriter","span":{"filename":"src/write/encoder.rs","begin":[63,0],"end":[81,1]},"visibility":"public","docs":"A `Write` implementation that base64 encodes data before delegating to the wrapped writer.\n\nBecause base64 has special handling for the end of the input data (padding, etc), there's a\n`finish()` method on this type that encodes any leftover input bytes and adds padding if\nappropriate. It's called automatically when deallocated (see the `Drop` implementation), but\nany error that occurs when invoking the underlying writer will be suppressed. If you want to\nhandle such errors, call `finish()` yourself.\n\n# Examples\n\n```\nuse std::io::Write;\nuse base64::engine::general_purpose;\n\n// use a vec as the simplest possible `Write` -- in real code this is probably a file, etc.\nlet mut enc = base64::write::EncoderWriter::new(Vec::new(), &general_purpose::STANDARD);\n\n// handle errors as you normally would\nenc.write_all(b\"asdf\").unwrap();\n\n// could leave this out to be called by Drop, if you don't care\n// about handling errors or getting the delegate writer back\nlet delegate = enc.finish().unwrap();\n\n// base64 was written to the writer\nassert_eq!(b\"YXNkZg==\", &delegate[..]);\n\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Errors\n\nBase64 encoding itself does not generate errors, but errors from the wrapped writer will be\nreturned as per the contract of `Write`.\n\n# Performance\n\nIt has some minor performance loss compared to encoding slices (a couple percent).\nIt does not do any heap allocation.\n\n# Limitations\n\nOwing to the specification of the `write` and `flush` methods on the `Write` trait and their\nimplications for a buffering implementation, these methods may not behave as expected. In\nparticular, calling `write_all` on this interface may fail with `io::ErrorKind::WriteZero`.\nSee the documentation of the `Write` trait implementation for further details.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:158","a:2:2772:231-0:140:2088","a:2:2755:223-0:140:2088","a:2:2812:3373-0:140:2088","a:2:8471:3324-0:140:2088","a:2:8472:3323-0:140:2088","b:2:2253-0:140:2088","b:2:2556-0:140:2088","b:2:2550-0:140:2088","b:2:2561-0:140:2088","b:2:2546-0:140:2088","b:2:2256-0:140:2088","b:2:3391-0:140:2088","0:171","0:180","0:153"]}}},"0:601":{"id":"0:601","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[47,9],"end":[47,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2269:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:602:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:563:431":{"id":"0:563:431","crate_id":0,"name":"clone","span":{"filename":"src/encode.rs","begin":[137,9],"end":[137,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeSliceError","id":"0:559:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2755:223-0:595:1783":{"id":"a:2:2755:223-0:595:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2755:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DecodeSliceError","id":"0:595:1783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:209:2211":{"id":"0:209:2211","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder_string_writer.rs","begin":[87,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2561-0:294:1934":{"id":"b:2:2561-0:294:1934","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2520:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2530:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"GeneralPurpose","id":"0:294:1934","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2564:128","2:2565:1521"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:588:685":{"id":"0:588:685","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[9,16],"end":[9,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9341:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9330:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487:1935":{"id":"0:487:1935","crate_id":0,"name":"GeneralPurposeConfig","span":{"filename":"src/engine/general_purpose/mod.rs","begin":[243,0],"end":[247,1]},"visibility":"public","docs":"Contains configuration parameters for base64 encoding and decoding.\n\n```\n# use base64::engine::GeneralPurposeConfig;\nlet config = GeneralPurposeConfig::new()\n    .with_encode_padding(false);\n    // further customize using `.with_*` methods as needed\n```\n\nThe constants [PAD] and [NO_PAD] cover most use cases.\n\nTo specify the characters used, see [Alphabet].","links":{"PAD":"0:332:1936","Alphabet":"0:525:2420","NO_PAD":"0:333:2526"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:319","a:2:2772:231-0:487:1935","a:2:2755:223-0:487:1935","a:2:2812:3373-0:487:1935","a:2:8471:3324-0:487:1935","a:2:8472:3323-0:487:1935","b:2:2253-0:487:1935","b:2:2556-0:487:1935","b:2:2550-0:487:1935","b:2:2561-0:487:1935","b:2:2546-0:487:1935","b:2:2256-0:487:1935","b:2:3391-0:487:1935","b:5:680-0:487:1935","0:491","0:324","0:493","0:326","0:494"]}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[75,0],"end":[80,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:337:1771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"EncoderStringWriter","id":"0:189:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"generic":"E"}},{"type":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:203:960"],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"17:11381:4961":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:6821:13992":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:9350:4635":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:22546:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:6268:33442":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:40397:8586":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:41831:3121":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:3188:6808":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:4456:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:5565:7691":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:11742:4988":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:45818:6479":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:9921:4785":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"11:968:5983":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"11:817:6169":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:14033:5531":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:4650:7321":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:43522:6434":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:44280:6456":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:4506:7283":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:904:3118":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:12876:5220":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"5:1118:31873":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:9067:8333":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:21056:8763":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:14013:5524":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:13723:5458":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:8883:4498":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:6726:7801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:2772:231":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:7677:200":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:568:6994":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:6796:7851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:3228:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:782:4027":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:9242:4630":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:7505:7899":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:12830:3115":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:44511:4486":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:41950:3698":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:4421:3028":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:12750:5187":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:2504:5722":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:8010:6631":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:12252:5091":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:22231:7942":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:11951:3568":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:1302:4309":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:4051:8636":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:1523:6252":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:9207:8025":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:7359:3377":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:3989:8631":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:10087:6577":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:1733:14039":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"5:3581:3697":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:3034:13883":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"16:7792:20730":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:47573:6537":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:1673:7129":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:12041:1441":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:43582:6438":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:40682:6397":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:1426:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:30503:3112":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:0:837":{"crate_id":6,"path":["libc"],"kind":"module"},"6:4328:7185":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:12059:1159":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:12074:5052":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:1595:7070":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:40189:3587":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:7862:6095":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:43011:6415":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:43595:6439":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:7463:2985":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:579:6999":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:5366:3721":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:4348:248":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:2353:184":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10370:4826":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:119:14393":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:2815:3455":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:6472:4121":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:7436:5820":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:9531:33449":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:5982:5816":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"18:766:24755":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:4475:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:5384:6595":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:2635:3077":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:4572:8676":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:362:6565":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:3268:13881":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:6067:7690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:6850:7876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:2845:14008":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:48182:6556":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:9080:8021":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:2478:3132":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:2321:5708":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:2744:5732":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:4483:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:4770:7365":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:4640:7783":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:7770:6367":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:2220:3053":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:5457:3045":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:21951:6341":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:10646:4862":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:7015:5973":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:2339:5710":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:12001:8335":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:5831:4111":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:8303:6645":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:14:1769":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:9867:4780":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:8168:3059":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:40232:4453":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:46805:6508":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:12775:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"0:38:1767":{"crate_id":0,"path":["base64","display"],"kind":"module"},"7:32:19695":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"18:574:4580":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:7911:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"0:294:1934":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurpose"],"kind":"struct"},"2:40268:3588":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:41079:6314":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:6618:7766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:11351:4956":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:23323:222":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:7211:2984":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:502:4042":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"9:177:8324":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:14499:5673":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:43266:8017":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:40540:6288":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:10432:6667":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:11473:4724":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:11337:20913":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:531:4103":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:12062:5049":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:261:4634":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:45706:6474":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:3330:3118":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:12645:5171":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:12945:5234":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:8989:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:40840:6307":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:4938:7454":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:7529:7903":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:2520:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:10278:4819":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:7250:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:5759:6604":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:10766:8029":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:14042:5532":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:629:4311":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:9381:196":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:9985:4794":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"0:229:1770":{"crate_id":0,"path":["base64","engine"],"kind":"module"},"1:8984:6672":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:5318:4024":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:21722:31615":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:3223:237":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:43503:6431":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:21369:8751":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"5:5:1611":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"2:6732:3503":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:6798:3126":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:7090:5982":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:11845:5001":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:4032:4024":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:1500:7015":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:10462:3580":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:41741:4473":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:6200:6606":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:44632:207":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"9:426:19711":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:32293:6367":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"5:5839:2984":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:13546:5400":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:2855:2989":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:2170:7924":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:4929:7448":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"5:7365:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:3032:5762":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:40558:6390":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:3185:6784":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:22264:8627":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:5398:6596":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"0:328:1932":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD"],"kind":"constant"},"17:10468:4843":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:5363:4300":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:6879:5952":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:9375:3016":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:5975:14313":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:9972:4792":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:3447:2016":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:45902:6482":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:1473:6165":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:46373:6498":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:4743:8644":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:12033:378":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"11:1838:6181":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"11:2180:6922":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:5866:5800":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:8487:6661":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:9746:4086":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:11385:8034":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"0:0:1787":{"crate_id":0,"path":["base64"],"kind":"module"},"2:46349:6497":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:32405:3458":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:7708:5759":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:10929:4914":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:30525:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:6915:5751":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"13:110:33428":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4833:7392":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12778:5191":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:12997:5240":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:940:6169":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:2767:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:44523:14119":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:12738:4100":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:5863:7597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:506:6954":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:46571:6504":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:5760:20720":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:6008:7673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:43270:4481":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:10447:4836":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:47225:6514":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:13113:5259":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"5:1102:31881":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:3735:6254":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:22645:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:10962:4916":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:3568:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:7388:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:3504:2123":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:12136:5060":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:6625:7770":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:2223:32985":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:43027:6418":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:5920:7627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:6425:5900":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:4641:4284":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:6711:7797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:1776:3118":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:4168:8654":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:7492:6068":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:10186:4810":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:10348:6322":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:8573:4495":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:32257:3131":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:9790:33445":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:6607:7761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:1273:6174":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:9025:6679":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:4463:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:4862:7407":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:3224:3084":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"18:80:24743":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:1041:5983":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:48106:6552":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:41023:6309":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"0:499:2411":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireCanonical"],"kind":"variant"},"2:3003:3375":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:5044:7506":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:2428:5719":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:21395:8760":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4745:8646":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"11:2168:6920":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:12846:5201":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:21263:8614":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:5629:4109":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4695:7331":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:8794:20781":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:6753:5934":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:3764:4270":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:12830:5196":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:8248:8623":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:12698:5180":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:39419:6372":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:5727:5783":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:6386:5896":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:9137:4627":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:11218:8033":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:10031:225":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:6165:4083":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:3052:2993":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:5939:5692":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:3594:3698":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:7644:4489":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:638:6569":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"18:636:4602":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:12685:5179":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:2820:3457":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:44328:3569":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:10540:3082":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:4389:7226":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:8181:5761":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:7462:6059":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:12724:5183":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:5068:7513":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:2461:7929":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:7349:8550":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:13897:5497":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:3441:4653":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:32297:6039":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"6:5849:7586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:8050:6132":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:46021:6487":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:6841:7873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:1576:6182":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:9115:221":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:2755:223":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:1055:6172":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"15:327:8311":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:22843:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:4887:7418":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"5:2962:7925":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:22165:30561":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:630:3697":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:12465:5143":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:9328:3064":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:10012:4770":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:4848:7399":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:10430:4831":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:929:8551":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:11367:4958":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:10980:4770":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:11086:4927":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:1928:670":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:2907:5739":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:44122:6445":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:12607:6336":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:1637:6275":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:44735:4488":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:11151:4932":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:7689:3708":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:12172:5069":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:41899:212":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:7881:6627":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:11316:4953":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:3830:4272":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:12098:5056":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:40572:6393":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:4239:209":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:1569:7054":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:21012:30303":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:11872:5009":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:2380:5717":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:822:4030":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:43512:6433":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"11:723:6164":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"0:403:2672":{"crate_id":0,"path":["base64","alphabet","IMAP_MUTF7"],"kind":"constant"},"17:9521:4767":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:4392:6588":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"4:0:2854":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:7884:20731":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"0:514:2298":{"crate_id":0,"path":["base64","engine","DecodeMetadata"],"kind":"struct"},"16:7621:20729":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:1980:187":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:7135:26552":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:43614:6441":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:494:6949":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:46297:6495":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:5905:5803":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:4794:7378":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:9287:6578":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:20826:31811":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:7253:200":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:1881:2608":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:10616:4857":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"16:4745:4286":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:5622:208":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:8072:6133":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:5434:6598":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"5:7474:2986":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:10771:8031":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:1590:7068":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:4984:7477":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:11586:4977":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:40216:30563":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:7586:7916":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:6816:8748":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:2839:5993":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:2881:5738":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"11:1103:6177":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:22513:179":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:4723:7344":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:2817:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:46105:6490":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:7871:6626":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:4716:7343":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:44723:4487":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:42851:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:1536:7031":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:4706:8658":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:2810:5735":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:11191:4655":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:40246:6379":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:3171:3697":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:7660:6079":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:3204:6183":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:22125:30575":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:10165:20819":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:13101:5257":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:7350:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:3191:6809":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:11063:13907":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"9:0:2856":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:573:6996":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:3240:13928":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:12810:5195":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:2595:3067":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"11:332:4015":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:43494:6430":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:40204:4452":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:8396:3316":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:12050:762":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"18:113:24745":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:13215:5278":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:1288:6172":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:8231:3061":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:10507:4848":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:39333:3700":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:6589:7754":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:21271:8754":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:22004:6342":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13739:5461":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:2970:31871":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:14324:5626":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:8292:8019":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:4007:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:40672:6304":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:43604:6440":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"0:401:2665":{"crate_id":0,"path":["base64","alphabet","CRYPT"],"kind":"constant"},"6:4800:7381":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:3217:33379":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:2923:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:40195:6376":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:39560:8544":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:4420:7244":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:44216:6455":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4413:7240":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:14282:5613":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:9041:685":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:8807:6667":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:43019:6417":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:12293:5102":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:11573:4975":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:14090:5547":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:1492:6162":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:40460:6382":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:5435:5768":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:12484:5148":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:12970:5237":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"0:330:2528":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE"],"kind":"constant"},"1:10811:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:3115:3091":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:2809:3453":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:5877:7598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"11:1831:3118":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:7474:6060":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:7581:4127":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:4889:4291":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:6930:4067":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:45920:6483":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:11316:6709":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:48221:6557":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:41071:6312":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"11:836:6170":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12959:5236":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:2131:4042":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:12056:1540":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:12496:5150":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"18:736:24754":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:582:4640":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"18:690:4612":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"0:497:2409":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","Indifferent"],"kind":"variant"},"0:402:2668":{"crate_id":0,"path":["base64","alphabet","BCRYPT"],"kind":"constant"},"2:9630:6318":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:41650:8009":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:3419:3045":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:40590:6394":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:5818:7567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:1527:7026":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:46517:6502":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:11181:8018":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:12598:5165":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:7513:6071":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4380:7221":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:41942:3697":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:7651:6078":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:11389:4963":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:4365:4076":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:3391:3090":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:21265:8752":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:5752:6601":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:12658:5174":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:21147:14028":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:41891:195":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:12621:5170":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:46395:6499":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:13554:5403":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:10228:3065":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:40530:6389":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"11:2130:19783":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:10084:4800":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:8825:20782":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:2526:241":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:10227:4816":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:14378:5647":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:586:8532":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:9829:4090":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"5:6079:3045":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:8877:3121":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:3800:3118":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:40430:4077":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:9207:4629":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:1570:6181":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:30539:30581":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:44706:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"11:695:6163":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:1073:4309":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:7544:6073":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:4587:7316":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:7805:3699":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"0:47:1981":{"crate_id":0,"path":["base64","display","Base64Display"],"kind":"struct"},"0:329:2525":{"crate_id":0,"path":["base64","engine","general_purpose","STANDARD_NO_PAD"],"kind":"constant"},"1:11310:6610":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:14460:5664":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:41873:3321":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:4030:13880":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:3461:5766":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"9:486:19708":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:4469:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:41604:4469":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:7379:28799":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:13244:5281":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:2035:3078":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:7534:5755":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:10974:25154":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:414:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:850:3698":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:11616:6616":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:1681:7130":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:22202:30564":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:3389:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:13876:5492":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"0:496:2407":{"crate_id":0,"path":["base64","engine","DecodePaddingMode"],"kind":"enum"},"6:1520:7023":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:10520:4849":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"10:36:6926":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:4428:7246":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:6901:5750":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:8218:3064":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:1582:6183":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:13667:5446":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"18:755:4625":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:12123:5059":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:42226:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:48144:6554":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:3303:3082":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:2379:8605":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:10240:4790":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:4704:7336":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:10271:3590":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:41755:183":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:6361:5894":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:13989:5517":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:11161:4497":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:43920:3581":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:11358:20914":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:7597:33437":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:1068:6176":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:1513:7021":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"11:1611:4019":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:7102:20727":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:5767:7547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:1761:624":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:9002:24802":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:10316:4823":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:4489:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:4518:7289":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:10440:4833":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:21219:8750":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:7663:6617":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:894:2984":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:7441:3376":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:43702:3064":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:4664:7322":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:5743:5785":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:1257:5983":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:8294:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:6929:5956":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:12049:761":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:6960:5959":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:952:6171":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:0:1433":{"crate_id":1,"path":["std"],"kind":"module"},"6:5074:7515":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:11039:4134":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"18:531:4584":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:10383:4827":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:13040:5246":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:8594:20767":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:43674:3572":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:40581:6294":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"0:400:2528":{"crate_id":0,"path":["base64","alphabet","URL_SAFE"],"kind":"constant"},"17:13914:5500":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:10903:4911":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:14420:5653":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:1561:2984":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:3513:29306":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:2269:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:12737:5185":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:20828:31813":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:11173:20912":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:2477:8614":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:12048:760":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:9660:33448":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:4291:7158":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:7391:20728":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"0:337:1771":{"crate_id":0,"path":["base64","engine","Engine"],"kind":"trait"},"7:79:19702":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:11467:14087":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:9762:33447":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12437:5136":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:22810:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:14514:5674":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:11642:3594":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"11:1517:6179":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:41840:3320":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:8311:6639":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:40520:6387":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:44642:213":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12111:5058":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:5793:7562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"0:72:1768":{"crate_id":0,"path":["base64","read"],"kind":"module"},"14:165:19794":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:3915:4274":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:46729:6506":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:41621:8624":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:400:4636":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:46651:6505":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:40256:4454":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:13286:5288":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:9062:31837":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:6156:5847":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:11910:5024":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:10476:3579":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:41061:4084":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:10494:4846":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6415:5899":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"5:3178:6182":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:9331:2123":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:1821:3114":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"0:404:2676":{"crate_id":0,"path":["base64","alphabet","BIN_HEX"],"kind":"constant"},"5:7529:3118":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"16:6346:5892":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:7503:5754":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:2530:240":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:6775:7837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:32318:6369":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:39599:6374":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:2496:3074":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:40440:6381":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:21397:6340":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:39450:200":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:8947:8721":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"18:96:24744":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:1672:4024":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:42187:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:3939:8629":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:42527:3018":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:41587:4467":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:8546:6590":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:45880:6481":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"11:644:3698":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:12036:1560":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:6696:5921":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:1603:7075":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:9488:33450":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"18:707:3568":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:526:6971":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:12043:5048":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:10344:25177":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:2322:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:4568:7315":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"11:749:2984":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:44463:3558":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:10126:4804":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:5131:193":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:40658:4600":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9059:25162":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:919:6163":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:4748:7354":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:2829:8746":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11162:4933":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:5987:7661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:7346:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:587:7004":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:43980:3575":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:43884:3584":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:11597:6710":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:10203:3698":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:1442:3121":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:5836:7577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:2763:3451":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:3846:6584":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:13981:5516":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:6168:4117":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:5419:4757":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:40489:3062":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:14522:5677":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:13071:5251":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:44439:3560":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:256:4633":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:40826:6306":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:8211:3063":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:12373:5107":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:207:4022":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:3056:2994":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:48065:6549":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:4248:4451":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:2465:2421":{"crate_id":2,"path":["core","convert"],"kind":"module"},"1:12054:1542":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:5088:4297":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:44685:6468":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:2812:3373":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:13710:5453":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:10949:4492":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:1565:3118":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:5994:7662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:9372:4758":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:41967:185":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:5403:4756":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:12543:5156":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:22238:4319":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:3565:4654":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"18:660:4603":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13010:5241":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:1411:3697":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:12983:5239":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:12052:1544":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:4613:4283":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"0:480:1092":{"crate_id":0,"path":["base64","prelude"],"kind":"module"},"6:4973:7471":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:48159:6555":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:3150:2995":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:8848:20783":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:10059:4798":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:5575:6293":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:43036:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"11:1822:3121":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:13693:5452":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:12039:317":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"5:6788:3125":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:41564:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"18:719:4617":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"15:394:19823":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"18:624:33459":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:261:4024":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:13188:5274":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:12554:5157":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:4719:4285":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:6485:4024":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"18:481:4578":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"0:377:2272":{"crate_id":0,"path":["base64","engine","DecodeEstimate"],"kind":"trait"},"6:6022:7676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:46470:6501":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:12208:5074":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:8319:6647":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:4171:3025":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:7360:33440":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:1495:7013":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:12911:5231":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:11984:6713":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:6044:7684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:10292:4770":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:20809:31808":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:9852:20800":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:4638:7781":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:43058:6426":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:14024:5528":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:5890:7604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:40623:6395":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:45750:6476":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:12533:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:11215:4940":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:7828:6091":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:8931:8719":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:11393:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:4189:8656":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:39538:205":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:11456:4139":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:6649:219":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:5384:20718":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:6041:20722":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"11:805:8551":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:44151:6453":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:4557:4281":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:41815:3697":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"0:375:1898":{"crate_id":0,"path":["base64","engine","Config"],"kind":"trait"},"1:10256:8482":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"11:2049:6172":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:14401:5648":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:1631:7100":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:4:1035":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:2150:20846":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"18:590:4590":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:2993:2212":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:276:2998":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:42774:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:4590:13945":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:7546:7908":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:10738:4876":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:40317:13952":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:8097:6135":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:44015:3586":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:7337:2999":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:1557:7046":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:7738:6574":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:5712:5780":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:7613:6077":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:47761:6539":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:6332:5740":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:11541:6584":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:4393:3045":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:44490:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:10831:3059":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:8471:3324":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:9607:4769":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:2921:212":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:39592:6373":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:10771:4879":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:8237:6639":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:5696:20719":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:4478:8658":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:43784:3577":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:2406:1999":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:11991:5037":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"9:393:19710":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:10340:4824":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:5816:5793":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:1892:3861":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:9701:4771":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:9120:6608":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:13274:4951":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:2863:14010":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:6569:5748":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:10265:4818":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:9574:33452":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:6325:1611":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"5:7261:6271":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:881:6165":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"11:736:6165":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:14221:5606":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:123:14394":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:860:3121":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:6985:4507":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:2765:229":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:5080:7518":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:536:5696":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:11687:20792":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:11679:3596":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:2391:8611":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:20796:31612":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:20962:8614":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:44467:3559":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:2406:5718":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:10776:6625":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:12934:5232":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:21834:8753":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:11971:5036":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:7768:5747":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:9373:3015":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:9945:4790":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"11:2201:2999":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:9711:33444":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:3305:13882":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:48080:6550":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:9102:4626":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:2295:438":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:44451:3565":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:12184:5072":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"18:507:4580":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11535:4973":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:43066:6427":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:10456:4839":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:6901:4124":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:2211:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:6792:5946":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:9896:20801":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"11:1012:6174":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:11074:4926":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:7199:6270":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:4462:4278":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:4240:6586":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:22186:30547":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:2178:4647":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:12531:5154":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"0:333:2526":{"crate_id":0,"path":["base64","engine","general_purpose","NO_PAD"],"kind":"constant"},"17:8926:20785":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:47041:6512":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:40367:30576":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:7717:8538":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:1717:7147":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:8015:2058":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:5634:5770":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:10561:4852":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"6:4638:7320":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:42802:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:22579:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:10197:4812":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:10475:4132":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:6318:5890":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:8005:6630":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:488:6946":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:13148:5271":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:43692:3573":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:6637:4024":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:7643:8614":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:9051:20766":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:6744:7811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:44315:6461":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:7859:6624":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:4535:7297":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:5612:3124":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:6303:208":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:41729:4471":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:43624:6442":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:43766:3578":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:8243:6641":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:4497:4279":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:7927:3076":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:62:14339":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:4556:7306":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:10849:28714":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"14:221:6160":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:910:6178":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:14068:5542":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:2548:5724":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:8154:6141":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:356:6564":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:6598:7760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:47683:6538":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:2922:14018":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:6255:4109":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:5017:4295":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:2762:1909":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:868:6164":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:12267:5097":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:6136:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:7582:6074":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"13:0:2853":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:40336:4462":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:595:7009":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"11:1852:6183":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:14536:5680":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:42506:3016":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:22140:6349":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:43838:3579":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:5128:4056":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:7041:5974":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5900:7611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4606:7317":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:13174:5273":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:4895:7423":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:7668:6619":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:4626:7319":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:2886:4106":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:2359:5716":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:6401:5742":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:6204:5854":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:12576:5164":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:2596:5726":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7318:6019":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:40310:4461":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:44459:3564":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:12040:1411":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:11293:4137":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"6:5051:7509":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:13949:5506":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:3264:3086":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:6160:7938":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"16:2670:5729":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:11391:8035":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:4703:8685":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:7552:7909":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11056:4136":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:8995:6675":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:2250:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:3888:4273":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"18:521:24756":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:2213:6580":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:39474:201":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:12047:763":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:7342:33443":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:6648:7788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:4810:7384":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"0:542:2647":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","DuplicatedByte"],"kind":"variant"},"16:4585:4282":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:14434:5655":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:6769:3124":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:12154:5068":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:9480:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:10106:6689":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:8120:3092":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"11:1027:19788":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"5:676:234":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10534:4850":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:47885:6541":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:10714:4874":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:6545:5914":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:2893:14014":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:12038:1073":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:1464:6164":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:30597:30582":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:41958:3121":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:9564:4768":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:44243:6332":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:1638:7104":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:4678:7323":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:11343:6613":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:3000:3374":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"15:306:19814":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:2960:31868":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:1064:6174":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:4164:3045":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:2997:2837":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"5:6558:3121":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:7750:8575":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:8180:3060":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:6834:7870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"11:2033:5983":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:1663:7123":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"0:331:2530":{"crate_id":0,"path":["base64","engine","general_purpose","URL_SAFE_NO_PAD"],"kind":"constant"},"2:43569:6382":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:5798:5788":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:1921:3862":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:8686:20778":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:13451:5317":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:10672:4867":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:3741:6582":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:2317:190":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:4921:4292":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:4129:6285":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:13966:5514":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:31073:185":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"5:0:291":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:5588:5744":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:2156:601":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:10661:4866":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:30469:3111":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:5568:8701":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:10023:4771":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:2517:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:10962:6600":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:10801:6626":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"6:5882:7599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:13259:5285":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:44100:13915":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:2927:14019":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:10603:4856":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"16:6376:20723":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"18:515:4577":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:45796:6478":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:9492:4131":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:3975:8630":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:7463:7898":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:4053:4275":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:9330:212":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"16:6687:5920":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:39613:4321":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:44748:6473":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:22777:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:6279:5888":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:10366:4825":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:4764:7362":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:9752:4772":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:2559:3075":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:9445:4766":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:4872:7413":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:4909:8683":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"5:1426:3698":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:12225:5082":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:4524:7292":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:4417:4277":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:12452:5141":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:7554:5756":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:6818:5947":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:554:6986":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:45772:6477":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:5954:4056":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:22678:180":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:9886:4782":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:11048:4921":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:8894:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:44471:8018":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:6721:20725":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12671:4884":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:5977:4109":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:9998:4747":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:11137:4931":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:42786:6110":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:7846:31835":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:21186:8755":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:6015:7675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:9158:4506":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:14118:5554":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:4160:8653":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:8562:6666":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"5:6955:4071":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:10685:4870":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:40642:6302":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:10949:4915":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:4002:2984":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:14478:5670":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:6742:5933":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:5993:208":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"11:2060:6174":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:6560:4012":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:22057:6343":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:6869:30429":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:6601:8716":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:1630:600":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:50027:8767":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:4835:4289":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:26133:250":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:22113:4318":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:43938:3582":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:10726:4875":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:1756:6276":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:6077:7693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:1138:31884":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:7282:3121":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:3669:4024":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:4310:4075":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:6916:13984":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:4315:7175":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:5008:7484":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:12888:5222":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:40502:6385":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:42811:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:8504:8696":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:3266:3087":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:10580:3708":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:11111:4929":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:4374:3027":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:13202:5277":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:9341:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:43970:3061":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:4781:7373":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:6306:8841":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"11:97:6914":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:44455:3563":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:41030:6310":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:9650:4770":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:4616:7318":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:11788:4992":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:21000:8758":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"6:1506:7018":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:4796:814":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:11897:3004":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:13792:5473":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:11957:3567":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"18:644:4580":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:46775:6507":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:619:3863":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:5648:5774":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:42756:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"7:0:1589":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:3632:3121":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:11295:4949":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:9172:4628":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:41670:30573":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"16:7736:6081":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:2883:14012":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:46548:6503":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:10840:28718":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"16:8281:6153":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:7182:3116":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:14448:5662":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:5449:6599":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:47969:6543":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:7065:3089":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:14145:5561":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:6548:8714":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:7802:2987":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:1733:7152":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:45726:6475":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:14173:5569":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:8765:20780":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:10698:4872":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:5963:5809":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"0:540:2055":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","InvalidLength"],"kind":"variant"},"17:10637:4861":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:1075:4641":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"5:5923:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:43443:6429":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:1482:6178":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11147:4496":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:2766:228":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"5:5769:235":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:4176:8655":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:2247:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13802:5474":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:7221:4036":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:4854:7402":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:40511:6386":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:6436:6607":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:12024:5043":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:14163:5564":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:2766:5733":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:43999:3589":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:5673:5745":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:8472:3323":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:11719:20793":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:10916:4912":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:11244:4978":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:40480:6384":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:46965:6510":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"11:119:4013":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:9390:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"6:4955:7460":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:10214:4815":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:7864:6625":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:3522:3055":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:4642:7785":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:9070:4756":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:14308:5622":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"11:285:6915":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:1575:7056":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:5049:4296":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:5661:5779":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:48091:6551":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13422:5297":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"15:288:19813":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:2049:6254":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:7295:7897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:7523:6072":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"12:0:2859":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:13758:5462":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:2573:4090":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:43866:3583":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:7894:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:2851:5997":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:4949:7459":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:12046:659":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:724:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:12058:1599":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:41052:3090":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:1587:6184":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:6671:7789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11490:4971":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6968:20726":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:4401:7231":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:7425:4317":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:8239:6039":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"9:507:6237":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:13973:5515":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:5775:7549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:42031:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:8853:6668":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:9933:4788":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:40284:3586":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:4394:3029":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:555:6566":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:7743:6623":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:11951:5026":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:11815:4997":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"5:1503:6163":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:6152:4100":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"18:599:33457":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:7568:5757":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:44024:3587":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:5362:3720":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:40549:6290":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:3232:4651":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:11942:2996":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:6261:5885":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:14134:5557":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:5517:6291":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"10:44:6186":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:8813:188":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:10310:6321":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:6615:4122":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:8201:3062":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:8337:6649":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:12035:427":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:11226:4944":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:3797:4271":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:9105:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:43532:6435":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:8659:20765":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:11200:6609":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:12582:194":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:6583:5916":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:4967:3312":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:2933:19859":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:6154:6301":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"5:1514:200":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:7269:33441":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:11718:3595":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:45981:6485":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"3:234:212":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:4740:7351":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:7722:5749":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:3720:3078":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:42520:3017":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:6499:5760":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:12045:657":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:40633:6396":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:43716:3065":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:9625:13959":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"18:609:4596":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:11934:4304":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:12711:5182":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:9139:6609":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:10410:4829":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:21618:8765":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"10:0:2857":{"crate_id":10,"path":["adler"],"kind":"module"},"5:6886:247":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:2982:3066":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:4243:4450":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:11479:6582":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:7558:7910":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:1545:7037":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:47823:6540":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:12017:25159":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:10628:4860":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:653:14751":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:10575:4853":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:10789:6702":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:11201:4935":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:562:6991":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:2788:5734":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:5786:6605":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:481:4102":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:42513:3015":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:13906:5498":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:42746:8010":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:48007:6544":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8902:4501":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:11448:20790":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:10547:4851":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:6156:7719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:21613:8757":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"14:187:19801":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:39372:13884":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:5805:7566":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:6844:5948":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:1649:7112":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:2216:1768":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:5995:5698":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:9377:3017":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:7067:5980":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:5979:7660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:4098:6284":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:47931:6542":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:44447:3561":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:4770:30290":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"5:7245:3121":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:22744:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:7600:4129":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:39494:204":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:46181:6492":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:6513:5904":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:4729:7347":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:20964:8756":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:1702:7140":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:2305:19858":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:48054:6548":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:5829:7575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:8134:6140":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:2608:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"16:5830:5794":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:4774:4287":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:3049:19861":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:44348:2997":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"11:1048:33427":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:2168:14029":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:13162:5272":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:7313:13989":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:6805:7854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:9617:33446":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:5121:4298":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:547:6983":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:2969:19860":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:48034:6546":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:10788:20888":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:11261:4946":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:46419:6500":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:21388:8614":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"18:538:4587":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:11623:6616":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:6432:3706":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:6226:5869":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:11407:20789":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:46040:6488":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:3655:4667":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:541:6980":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:5054:6594":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:47431:6536":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:11237:6608":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"11:311:6918":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"11:0:2858":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"5:4074:3698":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"11:399:33420":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"18:681:4610":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"9:330:6927":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:7782:6083":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:532:6974":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:12520:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:43686:3001":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:21832:8614":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:13611:5440":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:0:2862":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:40601:6299":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:7290:3121":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:14100:5550":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:434:4638":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:42306:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:10021:8614":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:6036:7681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6600:20724":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:3348:3071":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:5015:7487":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:5574:5741":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:878:4032":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:13868:5489":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"19:0:1053":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:4194:3045":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:11702:3593":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:2472:5721":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:5799:7565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:6189:5852":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:10992:6668":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:4917:7439":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"5:4426:4050":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:42109:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11306:4951":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:7809:13988":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"14:0:2860":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:4759:685":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:6076:4113":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"5:4363:4050":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:3183:33380":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:2012:4644":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:635:6567":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:4037:8634":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:2284:19832":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:30509:6366":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:1839:6579":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:14355:5634":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:7935:3078":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:22612:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:11023:4919":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:10036:4797":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:8148:3089":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:8895:20784":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:7541:4511":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:22252:4320":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:6720:7800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:13085:5253":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:7412:4315":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:7382:4314":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:8953:20786":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:11373:4508":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:2864:5737":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:11098:4928":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13567:5410":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"5:1011:4024":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:8869:6670":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:2690:7932":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:12555:30256":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:4395:7228":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:3253:30543":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:11281:4948":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:2876:5998":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:7694:5758":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:22711:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:41706:6585":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:8713:20779":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:9383:3019":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:5418:6597":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:7609:7922":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:643:8535":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:12086:5053":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:3600:5767":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:10397:4828":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"18:614:33456":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:4747:8647":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:5311:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"5:2141:6255":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:10821:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:8285:6585":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:4963:7465":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:9277:4631":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:14056:5539":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:12163:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:4824:8643":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:4862:4290":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:6545:4503":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:2359:191":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:4320:3026":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"0:127:1769":{"crate_id":0,"path":["base64","write"],"kind":"module"},"2:44443:3562":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:9455:33451":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:21014:14028":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:12055:1543":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:11962:3566":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"14:202:2983":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:3226:3085":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:14126:5556":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:11022:6327":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"16:3065:4662":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:46327:6496":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:10179:3697":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11661:4980":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:4985:3045":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:7054:5977":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"14:31:4301":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:12053:1541":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:4879:1022":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:44033:3588":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:14083:5546":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:2898:6002":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:46058:6489":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:40350:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:3919:3045":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:11609:29778":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"6:6565:7737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:7511:7900":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"11:2194:6924":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:44137:6450":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:7272:7886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:837:3697":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:2365:8601":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:6573:7742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"14:215:6158":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"3:0:452":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:9959:4791":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:946:6170":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:6467:5903":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:482:6943":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:40610:6300":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"11:657:3121":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:2918:14017":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:4496:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13575:5411":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:7530:4640":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:3744:6583":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:2574:5725":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:20811:31810":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:500:6951":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:1690:7136":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13135:5270":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:42070:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:9780:4773":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:7564:7911":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:0:2863":{"crate_id":17,"path":["object"],"kind":"module"},"2:10383:3576":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:8167:6144":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:2888:14013":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:9487:6624":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"6:4685:7324":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:11937:3007":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:12006:8540":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:46203:6493":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:11272:4947":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:13890:5495":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:4806:4288":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:8363:6589":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:12057:808":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:6456:5902":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:42265:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:6485:5743":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"5:35:3117":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:14076:5545":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:7599:7920":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:7497:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:30279:8626":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:2450:5720":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:41882:3219":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:7517:7901":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:41992:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:5612:5746":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:13024:5244":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:2722:5731":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:6130:7704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:1709:7143":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:9371:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:5085:6594":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:5025:7492":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:1184:4643":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:2209:4650":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:4846:206":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:2914:14016":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:4138:26556":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:10537:3086":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:2243:7928":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:8195:6146":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:5976:6295":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"13:226:6913":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:10953:4510":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:40812:3063":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:40383:4463":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:8297:8657":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:4787:7376":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12765:5190":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:13816:5475":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:30703:30580":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"16:8115:6137":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:8157:1901":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:8464:6422":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:9110:220":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:22089:6344":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:44008:3585":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:6705:7795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:7919:6629":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"0:399:1932":{"crate_id":0,"path":["base64","alphabet","STANDARD"],"kind":"constant"},"1:1554:3697":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:21203:8614":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"14:160:4301":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:3305:3083":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:10097:4801":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:3498:2984":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:3679:8625":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"9:52:8314":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:44650:197":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:14346:5632":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:10588:4854":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:8556:3697":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"0:501:2413":{"crate_id":0,"path":["base64","engine","DecodePaddingMode","RequireNone"],"kind":"variant"},"16:4949:4293":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:5243:192":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:8825:4496":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:10139:20818":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"6:4550:7304":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"11:1858:6184":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:12280:5101":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"18:699:4613":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"18:0:2864":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:4341:7195":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:4320:6587":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:4801:4107":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:2618:5727":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:0:507":{"crate_id":2,"path":["core"],"kind":"module"},"6:4543:7302":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"0:548:2644":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","ReservedByte"],"kind":"variant"},"1:9175:6685":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:4628:8633":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:4754:7356":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:14110:5553":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"0:332:1936":{"crate_id":0,"path":["base64","engine","general_purpose","PAD"],"kind":"constant"},"15:0:2861":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:8205:20732":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"11:1826:2984":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"11:2186:33426":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:21285:6340":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:9032:6680":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:5737:7522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12790:5192":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:48025:6545":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:21364:8614":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:41823:3698":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:47011:6511":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:10421:6323":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:11547:4974":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:3465:3054":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:1837:6578":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:2523:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:4527:4280":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"11:1845:6182":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"14:40:4304":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:7027:4125":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:5636:4110":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"9:450:19709":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:13922:5502":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:6893:5954":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:3212:6181":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:3315:5765":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:4824:7389":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:39786:26847":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:42384:6317":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:11497:1925":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"0:545:2643":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","UnprintableByte"],"kind":"variant"},"1:1983:186":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:10504:6325":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:40303:4460":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:7309:13990":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:9197:28908":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:12034:957":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:11507:20791":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:2969:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:42148:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:13228:5279":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:2696:5730":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:10750:4877":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"11:2174:6921":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:1776:6575":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:9983:6409":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:14316:5625":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:4918:8684":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:4944:7457":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:44294:13916":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"18:652:4580":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:4992:7479":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:1911:15742":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:3997:8632":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:6868:7879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:43990:3574":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:2526:5723":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:2644:5728":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:43660:3002":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:2363:7937":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:5955:7648":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:12196:5073":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:4234:3697":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:21100:8764":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:48129:6553":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:6363:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:4344:4276":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:4818:7388":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:2871:14011":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:46887:6509":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:6439:2984":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:1747:7935":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:40355:4464":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:39516:203":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"0:242:1933":{"crate_id":0,"path":["base64","engine","general_purpose"],"kind":"module"},"6:6820:7861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:6028:7679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:7278:7888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:48045:6547":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:11124:4930":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:9812:4089":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:21133:8759":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:4986:4294":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:14001:5523":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:7575:7915":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:9366:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:13838:5479":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11617:4978":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"18:564:4589":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:3232:5707":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:9003:20788":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:42829:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:11886:5010":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:3995:6283":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:2166:14028":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:2859:8747":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"18:491:4579":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"9:357:19724":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"11:793:6178":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:46003:6486":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:9844:4095":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"9:237:6422":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:13676:5450":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"5:7449:227":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:45850:6480":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:3529:3057":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:12008:13909":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:7732:8539":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:44435:3557":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:4436:7248":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"11:1501:19789":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:8224:3065":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"11:1121:4309":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:41806:3497":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:9385:3020":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:12042:1525":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:8414:6658":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:6017:20721":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:2910:14015":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:13487:5348":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:9912:4783":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:46151:6491":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:6083:19831":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:43251:6428":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:4446:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"11:760:3118":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:12473:5145":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:4059:8638":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:44168:6454":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:40276:3587":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:9379:3018":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:39434:202":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:13632:5445":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:45951:6484":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:43734:3576":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"11:667:6162":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:12305:5105":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:7128:6683":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:149:4010":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:11327:4954":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:895:3697":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:12060:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:7231:33004":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:1544:3045":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:22073:7939":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:10108:6688":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"17:11235:4945":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:2834:5996":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"11:365:4017":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:14469:5668":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:9823:20799":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:4749:396":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"11:986:6172":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:11639:4655":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4908:7433":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:5967:7653":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:2867:14009":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:11483:4482":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:10989:6326":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:14296:5619":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"8:0:2855":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:14156:5562":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:504:4639":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:41046:6311":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:12513:5153":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:1778:6576":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"5:2966:31872":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:4374:7219":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:1667:1111":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"11:844:6171":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"14:7:4301":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:10534:3084":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:915:6162":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:8970:6671":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:13298:5295":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:3213:14020":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:21:698":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:14335:5631":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:10478:4844":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:12422:5132":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:20781:31612":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:12007:5041":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:47075:6513":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:4304:7167":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:44305:6457":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:10490:6324":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"0:382:1772":{"crate_id":0,"path":["base64","alphabet"],"kind":"module"},"2:31101:3465":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:9037:6681":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:4368:7218":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:7396:30576":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:10166:4509":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"5:2959:3548":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:7125:4112":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"11:798:6166":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:11520:6583":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:44693:6470":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:4047:8635":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:14269:5607":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:41037:3706":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:22148:6350":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:11819:4143":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:12727:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:42345:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:32311:3026":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"11:1818:3697":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:1558:3121":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:43543:6436":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"0:539:2640":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError"],"kind":"enum"},"2:2597:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:5503:6600":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"18:671:4609":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:13826:5476":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8861:3697":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"18:582:3465":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:6688:7790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:11358:6614":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:6171:7730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:8915:8720":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:10327:6599":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:9086:4757":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:2832:5736":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:6171:196":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:2777:3031":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13055:5250":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:3945:8628":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:20768:3465":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:9590:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:11710:4951":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:2904:6003":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:10420:4704":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:7854:4705":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:7545:3119":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:3234:13929":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11062:4925":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:8473:3322":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:43820:3580":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:8579:2996":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:22876:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:32304:6368":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"11:1538:6180":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:5369:3045":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:6352:5893":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:11000:4918":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:923:6166":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:6531:5912":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:1814:6577":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:5322:4299":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:9582:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:21710:6338":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:7191:3121":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:7438:4057":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:4003:8633":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:2381:8606":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:4842:7398":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"0:525:2420":{"crate_id":0,"path":["base64","alphabet","Alphabet"],"kind":"struct"},"17:11761:4991":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:11492:1441":{"crate_id":2,"path":["core","str"],"kind":"module"},"17:13778:5470":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:10112:4802":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:2824:2988":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:7540:7907":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:11753:3590":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:6944:33438":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"18:727:4620":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:8899:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:41693:4470":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:4500:8659":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:11050:4135":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:7284:3320":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"5:3238:6184":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:8341:7770":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:46251:6494":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:12051:758":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:2514:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:12237:5085":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:1696:7139":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:43048:6422":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:3983:6282":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:7766:4492":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"11:403:33421":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:40291:13951":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:1918:6279":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:474:6938":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:5058:7512":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:7006:5970":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:13685:5451":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:10747:6698":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:6243:5875":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:9045:6683":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:7523:7902":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:11173:28716":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:13851:5484":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"0:487:1935":{"crate_id":0,"path":["base64","engine","general_purpose","GeneralPurposeConfig"],"kind":"struct"},"17:8978:20787":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:8839:4497":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:2649:3866":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}