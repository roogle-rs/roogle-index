{"root":"0:0:1847","crate_version":"1.0.12","includes_private":false,"index":{"2:3539:2311":{"id":"2:3539:2311","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3541:170","2:3542:736"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3964-0:462:1669":{"id":"b:2:3964-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10481:141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:489:700"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13404:56166":{"id":"2:13404:56166","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8406:119","str::split":"1:15759:2187","self::pattern":"2:12985:2608","prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49322:2638","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:426:1663":{"id":"b:2:3964-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3164-0:442:1665":{"id":"b:2:3164-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:411:395"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3487:131":{"id":"2:3487:131","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3489:170","2:3490:365"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2838-0:426:1663":{"id":"b:2:2838-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:2252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:791:2917":{"id":"5:791:2917","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:330:1819":{"id":"0:330:1819","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[126,4],"end":[132,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12924:1608","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5714:3490":{"id":"1:5714:3490","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5715:5419"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:121:645":{"id":"0:121:645","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[103,4],"end":[108,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13471:52925":{"id":"2:13471:52925","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13444:59156":{"id":"2:13444:59156","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13004:2626":{"id":"2:13004:2626","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13006:3908","2:13007:905","2:13008:58515","2:13009:58516"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3164-0:462:1669":{"id":"b:2:3164-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:123","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:117:645":{"id":"0:117:645","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[32,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4548:3430":{"id":"1:4548:3430","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4549:2074","1:4550:53052","1:4552:53053","1:4553:53054","1:4554:3431","1:4555:53055","1:4556:53056","1:4558:53057","1:4559:2887","1:4560:2051","1:4561:2871","1:4563:2881"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:407:1646":{"id":"0:407:1646","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:441:645":{"id":"0:441:645","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:493:1648":{"id":"b:2:3179-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:126","2:3183:1389"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6097:59801":{"id":"5:6097:59801","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:2316","`String`":"5:8352:204"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2316","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:2315","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:317:126":{"id":"b:2:2841-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:3986","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:52871"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3070:3889":{"id":"2:3070:3889","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3069:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8431:2517":{"id":"2:8431:2517","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8432:776","2:8433:1846"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:6406-0:317:126":{"id":"b:5:6406-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:2918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3481:129":{"id":"2:3481:129","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3483:363"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3484:130","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[489,0],"end":[497,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:372:1605","0:373:1840"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13377:32131":{"id":"2:13377:32131","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15759:2187"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49587:2652","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3484:130":{"id":"2:3484:130","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3486:364"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3487:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:6406-0:493:1648":{"id":"b:5:6406-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:2918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:487:590":{"id":"0:487:590","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14097:140":{"id":"2:14097:140","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14098:265","2:14099:504","2:14100:268","2:14101:1063"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:458:700":{"id":"0:458:700","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10491:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:523:700":{"id":"0:523:700","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10491:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:317:126":{"id":"b:2:2838-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:2252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:2818-0:493:1648":{"id":"a:2:9217:2818-0:493:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:2818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13359:291":{"id":"2:13359:291","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15759:2187","`u8`":"1:15770:2196"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:1840":{"id":"0:373:1840","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[494,4],"end":[496,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["version",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:208-0:317:126":{"id":"a:2:3247:208-0:317:126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6707:3513":{"id":"1:6707:3513","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6708:8211"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13358:59142":{"id":"2:13358:59142","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:442:1665":{"id":"b:2:3964-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12432:3305":{"id":"2:12432:3305","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12433:2107","2:12434:58540"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:272:401":{"id":"0:272:401","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[52,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37472:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:2817-0:509:1650":{"id":"a:2:9218:2817-0:509:1650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,40],"end":[375,44]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10481:141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:523:700"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10256:2361":{"id":"2:10256:2361","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10257:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8406:119":{"id":"2:8406:119","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8407:2856","2:8408:2857","2:8409:2858","2:8410:2859","2:8414:2860","2:8417:2861"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3168-0:404:1643":{"id":"b:2:3168-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:666"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:199-0:317:126":{"id":"a:2:3235:199-0:317:126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6404:211":{"id":"5:6404:211","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6405:2918"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[29,0],"end":[29,35]},"visibility":{"restricted":{"parent":"0:66:1601","path":"::error"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","cause","description","backtrace","source"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2569:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:502":{"id":"0:502","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:467:1712":{"id":"0:467:1712","crate_id":0,"name":"GreaterEq","span":{"filename":"src/lib.rs","begin":[256,4],"end":[256,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3691:212":{"id":"2:3691:212","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3692:170","2:3693:2597","2:3694:671","2:3695:356"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3696:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3691:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2933:173":{"id":"2:2933:173","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2935:981","2:2936:809","2:2937:775","2:2938:698","2:2939:681"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3168-0:442:1665":{"id":"b:2:3168-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:666"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:447:1647":{"id":"0:447:1647","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[203,4],"end":[203,23]},"visibility":"public","docs":"Non-empty pre-release is only allowed if patch is Some.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"1:5652:3485":{"id":"1:5652:3485","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5653:5419","1:5654:7707"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:380:1802":{"id":"0:380:1802","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[528,4],"end":[530,6]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(all(doc, semver_rustdoc_workaround)))]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"BuildMetadata {\n        identifier: Identifier::empty(),\n    }"}},"0:406:1645":{"id":"0:406:1645","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:489:700":{"id":"0:489:700","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[251,37],"end":[251,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10491:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13457:59158":{"id":"2:13457:59158","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15753:2182","self::pattern":"2:12985:2608"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:2818-0:509:1650":{"id":"a:2:9217:2818-0:509:1650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:2818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:486":{"id":"0:486","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:487:590"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3170:666":{"id":"2:3170:666","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3213:114","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:496:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10481:141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:507:700"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13375:2051":{"id":"2:13375:2051","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49290:2632","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:493:1648":{"id":"b:2:3174-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:126","2:3178:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:208-0:493:1648":{"id":"a:2:3247:208-0:493:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9217:2818":{"id":"2:9217:2818","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22798:3479":{"id":"2:22798:3479","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22788:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13698:137":{"id":"2:13698:137","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13699:170","2:13700:997"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13448:2104":{"id":"2:13448:2104","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12985:2608","prim@char":"1:15753:2182"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10252:2359":{"id":"2:10252:2359","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10253:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13351:59139":{"id":"2:13351:59139","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:473:1715":{"id":"0:473:1715","crate_id":0,"name":"Tilde","span":{"filename":"src/lib.rs","begin":[259,4],"end":[259,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3247:208":{"id":"2:3247:208","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3276:2754-0:462:1669":{"id":"a:2:3276:2754-0:462:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3168-0:317:126":{"id":"b:2:3168-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:666"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:404:1643":{"id":"b:2:3174-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:126","2:3178:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:1847":{"id":"0:0:1847","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[1,0],"end":[543,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/semver)&ensp;[![crates-io]](https://crates.io/crates/semver)&ensp;[![docs-rs]](https://docs.rs/semver)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nA parser and evaluator for Cargo's flavor of Semantic Versioning.\n\nSemantic Versioning (see <https://semver.org>) is a guideline for how\nversion numbers are assigned and incremented. It is widely followed within\nthe Cargo/crates.io ecosystem for Rust.\n\n<br>\n\n# Example\n\n```\nuse semver::{BuildMetadata, Prerelease, Version, VersionReq};\n\nfn main() {\n    let req = VersionReq::parse(\">=1.2.3, <1.8.0\").unwrap();\n\n    // Check whether this requirement matches version 1.2.3-alpha.1 (no)\n    let version = Version {\n        major: 1,\n        minor: 2,\n        patch: 3,\n        pre: Prerelease::new(\"alpha.1\").unwrap(),\n        build: BuildMetadata::EMPTY,\n    };\n    assert!(!req.matches(&version));\n\n    // Check whether it matches 1.3.0 (yes it does)\n    let version = Version::parse(\"1.3.0\").unwrap();\n    assert!(req.matches(&version));\n}\n```\n\n<br><br>\n\n# Scope of this crate\n\nBesides Cargo, several other package ecosystems and package managers for\nother languages also use SemVer:&ensp;RubyGems/Bundler for Ruby, npm for\nJavaScript, Composer for PHP, CocoaPods for Objective-C...\n\nThe `semver` crate is specifically intended to implement Cargo's\ninterpretation of Semantic Versioning.\n\nWhere the various tools differ in their interpretation or implementation of\nthe spec, this crate follows the implementation choices made by Cargo. If\nyou are operating on version numbers from some other package ecosystem, you\nwill want to use a different semver library which is appropriate to that\necosystem.\n\nThe extent of Cargo's SemVer support is documented in the *[Specifying\nDependencies]* chapter of the Cargo reference.\n\n[Specifying Dependencies]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/semver/1.0.12\")]","#![deny(unsafe_op_in_unsafe_fn)]","#![allow(clippy :: cast_lossless, clippy :: cast_possible_truncation, clippy\n:: doc_markdown, clippy :: items_after_statements, clippy :: manual_map,\nclippy :: match_bool, clippy :: missing_errors_doc, clippy ::\nmust_use_candidate, clippy :: needless_doctest_main, clippy ::\noption_if_let_else, clippy :: ptr_as_ptr, clippy :: redundant_else, clippy ::\nsemicolon_if_nothing_returned, clippy :: similar_names, clippy ::\nunnested_or_patterns, clippy :: unseparated_literal_suffix, clippy ::\nwildcard_imports)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:317:126","0:404:1643","0:426:1663","0:442:1665","0:462:1669","0:493:1648","0:509:1650"]}},"1:5706:3488":{"id":"1:5706:3488","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5707:53264"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:53:645":{"id":"0:53:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10258:2362":{"id":"2:10258:2362","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10259:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3135:74":{"id":"2:3135:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3137:2854"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:415":{"id":"0:415","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10254:2360":{"id":"2:10254:2360","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10255:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3235:199":{"id":"2:3235:199","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2569:126":{"id":"1:2569:126","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2570:8382","1:2572:2166","1:2573:8383","1:2574:8384"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9218:2817-0:426:1663":{"id":"a:2:9218:2817-0:426:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:405:1644":{"id":"0:405:1644","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[163,4],"end":[163,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"b:5:787-0:426:1663":{"id":"b:5:787-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:210","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:2915","5:790:2916","5:791:2917"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6776:3469":{"id":"1:6776:3469","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6777:54557"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3174-0:462:1669":{"id":"b:2:3174-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:126","2:3178:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:408:1647":{"id":"0:408:1647","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[166,4],"end":[166,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:3144:216":{"id":"2:3144:216","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3146:126","2:3147:1390"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:462:1669":{"id":"0:462:1669","crate_id":0,"name":"Op","span":{"filename":"src/lib.rs","begin":[253,0],"end":[266,1]},"visibility":"public","docs":"SemVer comparison operator: `=`, `>`, `>=`, `<`, `<=`, `~`, `^`, `*`.\n\n# Op::Exact\n- &ensp;**`=I.J.K`**&emsp;&mdash;&emsp;exactly the version I.J.K\n- &ensp;**`=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0, <I.(J+1).0`\n- &ensp;**`=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0, <(I+1).0.0`\n\n# Op::Greater\n- &ensp;**`>I.J.K`**\n- &ensp;**`>I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.(J+1).0`\n- &ensp;**`>I`**&emsp;&mdash;&emsp;equivalent to `>=(I+1).0.0`\n\n# Op::GreaterEq\n- &ensp;**`>=I.J.K`**\n- &ensp;**`>=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0`\n- &ensp;**`>=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0`\n\n# Op::Less\n- &ensp;**`<I.J.K`**\n- &ensp;**`<I.J`**&emsp;&mdash;&emsp;equivalent to `<I.J.0`\n- &ensp;**`<I`**&emsp;&mdash;&emsp;equivalent to `<I.0.0`\n\n# Op::LessEq\n- &ensp;**`<=I.J.K`**\n- &ensp;**`<=I.J`**&emsp;&mdash;&emsp;equivalent to `<I.(J+1).0`\n- &ensp;**`<=I`**&emsp;&mdash;&emsp;equivalent to `<(I+1).0.0`\n\n# Op::Tilde&emsp;(\"patch\" updates)\n*Tilde requirements allow the **patch** part of the semver version (the third number) to increase.*\n- &ensp;**`~I.J.K`**&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <I.(J+1).0`\n- &ensp;**`~I.J`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`~I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Caret&emsp;(\"compatible\" updates)\n*Caret requirements allow parts that are **right of the first nonzero** part of the semver version to increase.*\n- &ensp;**`^I.J.K`**&ensp;(for I\\>0)&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <(I+1).0.0`\n- &ensp;**`^0.J.K`**&ensp;(for J\\>0)&emsp;&mdash;&emsp;equivalent to `>=0.J.K, <0.(J+1).0`\n- &ensp;**`^0.0.K`**&emsp;&mdash;&emsp;equivalent to `=0.0.K`\n- &ensp;**`^I.J`**&ensp;(for I\\>0 or J\\>0)&emsp;&mdash;&emsp;equivalent to `^I.J.0`\n- &ensp;**`^0.0`**&emsp;&mdash;&emsp;equivalent to `=0.0`\n- &ensp;**`^I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Wildcard\n- &ensp;**`I.J.*`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`I.*`**&ensp;or&ensp;**`I.*.*`**&emsp;&mdash;&emsp;equivalent to `=I`","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:463:1710","0:465:1711","0:467:1712","0:469:1713","0:471:1714","0:473:1715","0:475:1716","0:477:1717"],"impls":["a:2:3276:2754-0:462:1669","a:2:3247:208-0:462:1669","a:2:3235:199-0:462:1669","a:2:9217:2818-0:462:1669","a:2:9218:2817-0:462:1669","b:2:3174-0:462:1669","b:2:3179-0:462:1669","b:2:2838-0:462:1669","b:2:3168-0:462:1669","b:2:3964-0:462:1669","b:2:2841-0:462:1669","b:2:3164-0:462:1669","b:5:787-0:462:1669","0:479","0:480","0:482","0:483","0:485","0:486","0:488","0:491"]}},"2:3132:75":{"id":"2:3132:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3134:292"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3168-0:493:1648":{"id":"b:2:3168-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:666"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:422:981"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6099:52921":{"id":"5:6099:52921","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15759:2187"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:481:395":{"id":"0:481:395","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3696:136":{"id":"2:3696:136","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3698:672"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3691:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:422:981":{"id":"0:422:981","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[161,36],"end":[161,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37472:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10885:202":{"id":"2:10885:202","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10887:170","2:10888:2067","2:10889:56137","2:10890:56138","2:10891:8520","2:10892:736","2:10893:737"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10876:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4745:3885":{"id":"2:4745:3885","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4746:2107","2:4747:58480","2:4748:2866"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:333:1819":{"id":"0:333:1819","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[138,4],"end":[144,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12924:1608","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13370:59143":{"id":"2:13370:59143","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15759:2187","crate::ops::IndexMut":"2:3543:2312","str::slice_unchecked":"1:15759:2187"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:456:890":{"id":"0:456:890","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:507:700":{"id":"0:507:700","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[317,40],"end":[317,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10491:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2887:172":{"id":"2:2887:172","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:590","2:2890:890"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10264:2364":{"id":"2:10264:2364","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10265:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:442:1665":{"id":"b:2:3179-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:126","2:3183:1389"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:268:981":{"id":"0:268:981","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37472:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3397:2590":{"id":"2:3397:2590","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3399:344"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:497":{"id":"0:497","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:498:395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:471:1714":{"id":"0:471:1714","crate_id":0,"name":"LessEq","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3276:2754-0:493:1648":{"id":"a:2:3276:2754-0:493:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:14169:2314":{"id":"2:14169:2314","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14170:57313","2:14171:57314","2:14172:57315","2:14173:57316","2:14174:57317","2:14175:57318","2:14176:2887"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10262:2363":{"id":"2:10262:2363","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10263:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2838-0:462:1669":{"id":"b:2:2838-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:2252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:51:645":{"id":"0:51:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[49,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:320:125":{"id":"0:320:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[26,4],"end":[26,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"b:2:3179-0:509:1650":{"id":"b:2:3179-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:126","2:3183:1389"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:281:669":{"id":"0:281:669","crate_id":0,"name":"from_iter","span":{"filename":"src/impls.rs","begin":[149,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["iter",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:150","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3183:1389":{"id":"2:3183:1389","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3389:2588":{"id":"2:3389:2588","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3391:339"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10491:145":{"id":"2:10491:145","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10492:637","2:10493:1958","2:10494:3398","2:10495:3399","2:10496:3400","2:10497:3401","2:10498:3402","2:10499:3403","2:10500:3404","2:10501:3405","2:10502:3406","2:10503:3407","2:10504:3408","2:10505:3409","2:10506:3410","2:10507:1503"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6100:52922":{"id":"5:6100:52922","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15759:2187"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3334:2577":{"id":"2:3334:2577","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3336:254"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13015:2624":{"id":"2:13015:2624","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:513":{"id":"0:513","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:514:395"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:435:590":{"id":"0:435:590","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:321:1819":{"id":"0:321:1819","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[28,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12924:1608","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6870:3497":{"id":"1:6870:3497","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6871:53001"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:469:1713":{"id":"0:469:1713","crate_id":0,"name":"Less","span":{"filename":"src/lib.rs","begin":[257,4],"end":[257,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:516":{"id":"0:516","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:123","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3543:2312":{"id":"2:3543:2312","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3545:737"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3539:2311","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3164-0:509:1650":{"id":"b:2:3164-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:262:209":{"id":"0:262:209","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[24,4],"end":[24,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:123","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[45,0],"end":[49,1]},"visibility":{"restricted":{"parent":"0:221:1604","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:270:981"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3406:2592":{"id":"2:3406:2592","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:1213"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:455:590":{"id":"0:455:590","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:462:1669":{"id":"b:2:2841-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:3986","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:52871"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:2818-0:426:1663":{"id":"a:2:9217:2818-0:426:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:2818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2838-0:509:1650":{"id":"b:2:2838-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:2252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3383:2587":{"id":"2:3383:2587","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3385:170","2:3386:1212"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13475:59162":{"id":"2:13475:59162","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15753:2182"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49621:2651","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13384:1944":{"id":"2:13384:1944","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15753:2182","self::pattern":"2:12985:2608"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:427:1664":{"id":"0:427:1664","crate_id":0,"name":"comparators","span":{"filename":"src/lib.rs","begin":[190,4],"end":[190,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:222","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"a:2:3247:208-0:462:1669":{"id":"a:2:3247:208-0:462:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8845:2516":{"id":"2:8845:2516","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7886:2499","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6778:3472":{"id":"1:6778:3472","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6779:52895"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3324:2576":{"id":"2:3324:2576","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3326:170","2:3327:1086"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:438:700":{"id":"0:438:700","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10491:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10243:109":{"id":"2:10243:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10244:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:435:590","0:436:890"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7886:2499":{"id":"2:7886:2499","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7887:58575","2:7888:58576","2:7889:58573","2:7890:58571","2:7891:58577","2:7892:58574","2:7893:58572"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3964-0:404:1643":{"id":"b:2:3964-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3148:215":{"id":"2:3148:215","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3150:126","2:3151:1389"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6704:3515":{"id":"1:6704:3515","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6705:53838","1:6706:57391"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:509:1650":{"id":"b:5:787-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:210","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:2915","5:790:2916","5:791:2917"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:440":{"id":"0:440","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,37],"end":[187,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:441:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3338:2581":{"id":"2:3338:2581","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3340:1332"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:463:1710":{"id":"0:463:1710","crate_id":0,"name":"Exact","span":{"filename":"src/lib.rs","begin":[254,4],"end":[254,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:362":{"id":"0:362","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[380,0],"end":[434,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:363:903","0:364:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:45:645":{"id":"0:45:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[5,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6376:3517":{"id":"1:6376:3517","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6377:52959","1:6378:7336","1:6379:52960","1:6380:52961","1:6381:52962","1:6382:52963"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13349:776":{"id":"2:13349:776","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:509:1650":{"id":"b:2:3964-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13454:56173":{"id":"2:13454:56173","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12985:2608","prim@char":"1:15753:2182"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:2754-0:442:1665":{"id":"a:2:3276:2754-0:442:1665","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10193:1955":{"id":"2:10193:1955","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10194:1503","2:10195:1986","2:10197:2712"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3362:2582":{"id":"2:3362:2582","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3364:170","2:3365:338"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13474:3523":{"id":"2:13474:3523","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15753:2182"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49612:2650","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3213:114","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:512:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2838-0:442:1665":{"id":"b:2:2838-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:2252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10526:2493":{"id":"2:10526:2493","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10527:145","2:10528:33365","2:10529:54117"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:199-0:462:1669":{"id":"a:2:3235:199-0:462:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[109,0],"end":[121,1]},"visibility":{"restricted":{"parent":"0:283:1605","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12924:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:326:125","0:327:1819"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:404:1643":{"id":"b:2:3179-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:126","2:3183:1389"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[23,0],"end":[29,1]},"visibility":{"restricted":{"parent":"0:221:1604","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3454:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:262:209","0:263:529"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4605:1955":{"id":"1:4605:1955","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4606:1958","1:4607:53997","1:4609:53998","1:4610:4471","1:4611:53999","1:4612:54000","1:4613:2712","1:4622:2887"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:363:903":{"id":"0:363:903","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[398,4],"end":[406,5]},"visibility":"public","docs":"Create `Version` with an empty pre-release and build metadata.\n\nEquivalent to:\n\n```\n# use semver::{BuildMetadata, Prerelease, Version};\n#\n# const fn new(major: u64, minor: u64, patch: u64) -> Version {\nVersion {\n    major,\n    minor,\n    patch,\n    pre: Prerelease::EMPTY,\n    build: BuildMetadata::EMPTY,\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["major",{"kind":"primitive","inner":"u64"}],["minor",{"kind":"primitive","inner":"u64"}],["patch",{"kind":"primitive","inner":"u64"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5636:3483":{"id":"1:5636:3483","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5637:54440","1:5638:54442","1:5639:54441","1:5640:54443"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3962:68":{"id":"2:3962:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3963:1403"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"5:5828:4255":{"id":"5:5828:4255","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5830:170","5:5831:418"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3235:199-0:404:1643":{"id":"a:2:3235:199-0:404:1643","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:462:1669":{"id":"b:2:3179-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:126","2:3183:1389"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13463:59160":{"id":"2:13463:59160","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12985:2608","prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3243:206":{"id":"2:3243:206","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2832:97":{"id":"2:2832:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2834:2252"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13428:59149":{"id":"2:13428:59149","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12985:2608","str::matches":"1:15759:2187","prim@char":"1:15753:2182","`DoubleEndedIterator`":"2:8406:119"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49526:2645","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3244:205":{"id":"2:3244:205","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:381:903":{"id":"0:381:903","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[532,4],"end":[534,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3966:1403":{"id":"2:3966:1403","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45876:3047","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[80,0],"end":[107,1]},"visibility":{"restricted":{"parent":"0:283:1605","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12924:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:323:125","0:324:1819"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5832:4253":{"id":"5:5832:4253","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5834:170","5:5835:33159"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3377:2586":{"id":"2:3377:2586","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:170","2:3380:1209"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:442:1665":{"id":"0:442:1665","crate_id":0,"name":"Comparator","span":{"filename":"src/lib.rs","begin":[196,0],"end":[204,1]},"visibility":"public","docs":"A pair of comparison operator and partial version, such as `>=1.2`. Forms\none piece of a VersionReq.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:443:1668","0:444:1644","0:445:1645","0:446:1646","0:447:1647"],"impls":["0:371","a:2:3276:2754-0:442:1665","a:2:3247:208-0:442:1665","a:2:3235:199-0:442:1665","a:2:9217:2818-0:442:1665","a:2:9218:2817-0:442:1665","b:2:3174-0:442:1665","b:2:3179-0:442:1665","b:2:2838-0:442:1665","b:2:3168-0:442:1665","b:2:3964-0:442:1665","b:2:2841-0:442:1665","b:2:3164-0:442:1665","b:5:6406-0:442:1665","b:5:787-0:442:1665","0:50","0:280","0:325","0:448","0:450","0:451","0:453","0:454","0:457","0:460"]}},"a:2:9217:2818-0:462:1669":{"id":"a:2:9217:2818-0:462:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:2818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:55:645":{"id":"0:55:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3342:2579":{"id":"2:3342:2579","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:876"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13468:4240":{"id":"2:13468:4240","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:329:125":{"id":"0:329:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[124,4],"end":[124,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[39,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:221:1604","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:268:981"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9217:2818-0:404:1643":{"id":"a:2:9217:2818-0:404:1643","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:2818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4623:3434":{"id":"1:4623:3434","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4624:54188","1:4625:39431","1:4626:54190","1:4627:54189"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3245:106":{"id":"2:3245:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13407:59145":{"id":"2:13407:59145","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::rsplit_terminator":"1:15759:2187","str::split":"1:15759:2187","self::pattern":"2:12985:2608","`DoubleEndedIterator`":"2:8406:119","prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49354:2641","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:518":{"id":"0:518","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3610:2313":{"id":"2:3610:2313","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3612:57530","2:3613:57531","2:3614:56172"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:416":{"id":"0:416","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:417:590","0:418:890"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:327:1819":{"id":"0:327:1819","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[112,4],"end":[120,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12924:1608","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[31,0],"end":[37,1]},"visibility":{"restricted":{"parent":"0:221:1604","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3454:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:265:209","0:266:529"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5702:3482":{"id":"1:5702:3482","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5703:53558"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:382:293":{"id":"0:382:293","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[536,4],"end":[538,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:326:125":{"id":"0:326:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[110,4],"end":[110,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:123","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13010:2625":{"id":"2:13010:2625","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13012:2856","2:13013:57936","2:13014:57937"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13004:2626","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:509:1650":{"id":"0:509:1650","crate_id":0,"name":"BuildMetadata","span":{"filename":"src/lib.rs","begin":[376,0],"end":[378,1]},"visibility":"public","docs":"Optional build metadata identifier. This comes after `+` in a SemVer\nversion, as in `0.8.1+zstd.1.5.0`.\n\n# Examples\n\nSome real world build metadata idioms drawn from crates.io:\n\n- **[libgit2-sys]** <code>0.12.20+<b>1.1.0</b></code> &mdash; for this\n  crate, the build metadata indicates the version of the C libgit2 library\n  that the Rust crate is built against.\n\n- **[mashup]** <code>0.1.13+<b>deprecated</b></code> &mdash; just the word\n  \"deprecated\" for a crate that has been superseded by another. Eventually\n  people will take notice of this in Cargo's build output where it lists the\n  crates being compiled.\n\n- **[google-bigquery2]** <code>2.0.4+<b>20210327</b></code> &mdash; this\n  library is automatically generated from an official API schema, and the\n  build metadata indicates the date on which that schema was last captured.\n\n- **[fbthrift-git]** <code>0.0.6+<b>c7fcc0e</b></code> &mdash; this crate is\n  published from snapshots of a big company monorepo. In monorepo\n  development, there is no concept of versions, and all downstream code is\n  just updated atomically in the same commit that breaking changes to a\n  library are landed. Therefore for crates.io purposes, every published\n  version must be assumed to be incompatible with the previous. The build\n  metadata provides the source control hash of the snapshotted code.\n\n[libgit2-sys]: https://crates.io/crates/libgit2-sys\n[mashup]: https://crates.io/crates/mashup\n[google-bigquery2]: https://crates.io/crates/google-bigquery2\n[fbthrift-git]: https://crates.io/crates/fbthrift-git\n\n# Syntax\n\nBuild metadata is a series of dot separated identifiers immediately\nfollowing the patch or pre-release version. Identifiers must comprise only\nASCII alphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must\nnot be empty. Leading zeros *are* allowed, unlike any other place in the\nSemVer grammar.\n\n# Total ordering\n\nBuild metadata is ignored in evaluating `VersionReq`; it plays no role in\nwhether a `Version` matches any one of the comparison operators.\n\nHowever for comparing build metadatas among one another, they do have a\ntotal order which is determined by lexicographic ordering of dot-separated\ncomponents. Identifiers consisting of only digits are compared numerically.\nOtherwise, identifiers are compared in ASCII sort order. Any numeric\nidentifier is always less than any non-numeric identifier.\n\nExample:&ensp;`demo`&ensp;&lt;&ensp;`demo.85`&ensp;&lt;&ensp;`demo.90`&ensp;&lt;&ensp;`demo.090`&ensp;&lt;&ensp;`demo.200`&ensp;&lt;&ensp;`demo.1a0`&ensp;&lt;&ensp;`demo.a`&ensp;&lt;&ensp;`memo`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:379","a:2:3276:2754-0:509:1650","a:2:3247:208-0:509:1650","a:2:3235:199-0:509:1650","a:2:9217:2818-0:509:1650","a:2:9218:2817-0:509:1650","b:2:3174-0:509:1650","b:2:3179-0:509:1650","b:2:2838-0:509:1650","b:2:3168-0:509:1650","b:2:3964-0:509:1650","b:2:2841-0:509:1650","b:2:3164-0:509:1650","b:5:6406-0:509:1650","b:5:787-0:509:1650","0:54","0:60","0:264","0:269","0:275","0:331","0:511","0:513","0:515","0:516","0:518","0:519","0:522"]}},"b:2:3174-0:442:1665":{"id":"b:2:3174-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:126","2:3178:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3367:2583":{"id":"2:3367:2583","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3369:170","2:3370:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:265:209":{"id":"0:265:209","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[32,4],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"5:6408:2918":{"id":"5:6408:2918","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:404:1643":{"id":"b:2:2841-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:3986","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:52871"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6081:59798":{"id":"5:6081:59798","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8352:204"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9237:3477":{"id":"1:9237:3477","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9238:53845","1:9239:53846","1:9240:53847","1:9241:53848","1:9242:4167","1:9243:38962","1:9244:53844"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:431":{"id":"0:431","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,16],"end":[187,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:123","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5570:3506":{"id":"1:5570:3506","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5571:4917","1:5572:2132"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13437:59152":{"id":"2:13437:59152","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13434:59151":{"id":"2:13434:59151","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12985:2608","str::match_indices":"1:15759:2187","prim@char":"1:15753:2182","`DoubleEndedIterator`":"2:8406:119"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49472:2647","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:2818-0:317:126":{"id":"a:2:9217:2818-0:317:126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:2818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2838-0:493:1648":{"id":"b:2:2838-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:2252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4908:3525":{"id":"1:4908:3525","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4909:3310","1:4910:53534"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:429:395":{"id":"0:429:395","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:504:590","0:505:890"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:789:2915":{"id":"5:789:2915","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:383:1846":{"id":"0:383:1846","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[540,4],"end":[542,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:276:401":{"id":"0:276:401","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[107,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37472:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:450":{"id":"0:450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,16],"end":[195,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23641:3976":{"id":"2:23641:3976","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23642:3993"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23637:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3245:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3247:208-0:404:1643":{"id":"a:2:3247:208-0:404:1643","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2892:123":{"id":"2:2892:123","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[436,0],"end":[479,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:366:1831","0:367:1605","0:368:1840"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8841:2515":{"id":"2:8841:2515","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13394:2861":{"id":"2:13394:2861","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47340:165","self::pattern":"2:12985:2608","prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6077:59797":{"id":"5:6077:59797","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2316","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:2315","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2316","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:2315","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[31,0],"end":[88,1]},"visibility":{"restricted":{"parent":"0:66:1601","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:117:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:50":{"id":"0:50","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[48,0],"end":[79,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:51:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2840:2252":{"id":"2:2840:2252","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9218:2817":{"id":"2:9218:2817","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[81,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:53:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:454":{"id":"0:454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:455:590","0:456:890"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13439:59153":{"id":"2:13439:59153","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:404:1643":{"id":"b:2:3164-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5692:3487":{"id":"1:5692:3487","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5693:57368","1:5694:57369","1:5695:57370","1:5696:57371"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10481:141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:424:700"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3245:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:424:700":{"id":"0:424:700","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[161,48],"end":[161,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::hash::Hasher","id":"2:10491:145","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:368:1840":{"id":"0:368:1840","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[476,4],"end":[478,5]},"visibility":"public","docs":"Evaluate whether the given `Version` satisfies the version requirement\ndescribed by `self`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["version",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:475:1716":{"id":"0:475:1716","crate_id":0,"name":"Caret","span":{"filename":"src/lib.rs","begin":[260,4],"end":[260,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:411:395":{"id":"0:411:395","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[161,9],"end":[161,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7695:3615":{"id":"1:7695:3615","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7696:53869"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13470:52924":{"id":"2:13470:52924","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:2817-0:317:126":{"id":"a:2:9218:2817-0:317:126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[317,25],"end":[317,27]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13350:1846":{"id":"2:13350:1846","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13374:3915":{"id":"2:13374:3915","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49280:2633","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3346:2578":{"id":"2:3346:2578","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3348:545"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:372:1605":{"id":"0:372:1605","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[490,4],"end":[492,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10260:178":{"id":"2:10260:178","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10261:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3177:126":{"id":"2:3177:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"2:12924:1608":{"id":"2:12924:1608","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12925:125","2:12926:1819"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13401:31999":{"id":"2:13401:31999","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15753:2182","self::pattern":"2:12985:2608"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12777:2653","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57:645":{"id":"0:57:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[94,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13413:56168":{"id":"2:13413:56168","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:12985:2608","prim@char":"1:15753:2182","str::rsplitn":"1:15759:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49408:2643","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13443:59155":{"id":"2:13443:59155","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[123,0],"end":[133,1]},"visibility":{"restricted":{"parent":"0:283:1605","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12924:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:329:125","0:330:1819"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13352:59140":{"id":"2:13352:59140","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418:890":{"id":"0:418:890","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12995:2623":{"id":"2:12995:2623","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12997:2626","2:12998:58298","2:12999:58299","2:13000:58300","2:13001:58302","2:13002:58301","2:13003:58303"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6406-0:426:1663":{"id":"b:5:6406-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:2918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3213:114":{"id":"2:3213:114","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3214:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13398:2096":{"id":"2:13398:2096","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:15759:2187","prim@char":"1:15753:2182","self::pattern":"2:12985:2608","`DoubleEndedIterator`":"2:8406:119","str::rsplit":"1:15759:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49304:2640","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13376:32141":{"id":"2:13376:32141","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15759:2187"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49578:2636","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:443:1668":{"id":"0:443:1668","crate_id":0,"name":"op","span":{"filename":"src/lib.rs","begin":[197,4],"end":[197,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:13431:59150":{"id":"2:13431:59150","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12985:2608","str::rmatch_indices":"1:15759:2187","`DoubleEndedIterator`":"2:8406:119","prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49454:2646","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61:645":{"id":"0:61:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4630:3437":{"id":"1:4630:3437","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4631:54305","1:4632:54306","1:4633:54308","1:4635:3436","1:4636:54307","1:4638:2096","1:4639:4548"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4548:3430","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[483,0],"end":[487,1]},"visibility":"crate","docs":"The default VersionReq is the same as [`VersionReq::STAR`].","links":{"`VersionReq::STAR`":"0:426:1663"},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3213:114","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:370:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[51,0],"end":[104,1]},"visibility":{"restricted":{"parent":"0:221:1604","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2923:166","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:272:401"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:378:1846":{"id":"0:378:1846","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[517,4],"end":[519,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[522,0],"end":[543,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:380:1802","0:381:903","0:382:293","0:383:1846"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13410:59146":{"id":"2:13410:59146","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:15753:2182","self::pattern":"2:12985:2608","str::split":"1:15759:2187","str::split_terminator":"1:15759:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49372:2639","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13419:59147":{"id":"2:13419:59147","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:509:1650":{"id":"b:2:3174-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:126","2:3178:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[135,0],"end":[145,1]},"visibility":{"restricted":{"parent":"0:283:1605","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12924:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:332:125","0:333:1819"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6780:3473":{"id":"1:6780:3473","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6781:53787"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3454:115":{"id":"2:3454:115","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3455:209","2:3456:529"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:323:125":{"id":"0:323:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[81,4],"end":[81,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:520:590":{"id":"0:520:590","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13373:2120":{"id":"2:13373:2120","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49274:2634","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13380:32126":{"id":"2:13380:32126","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49596:2648","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:505:890":{"id":"0:505:890","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:512:59":{"id":"0:512:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[375,9],"end":[375,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:493:1648":{"id":"b:2:3164-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3318:2574":{"id":"2:3318:2574","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:170","2:3321:544"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:493:1648":{"id":"b:5:787-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:210","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:2915","5:790:2916","5:791:2917"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:449:395":{"id":"0:449:395","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:444:1644":{"id":"0:444:1644","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[198,4],"end":[198,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"2:3774:2603":{"id":"2:3774:2603","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13381:56172":{"id":"2:13381:56172","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:12985:2608","prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266:529":{"id":"0:266:529","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3454:115","args":null,"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13713:149":{"id":"2:13713:149","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13714:170","2:13715:149","2:13716:750"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:199-0:509:1650":{"id":"a:2:3235:199-0:509:1650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13354:59141":{"id":"2:13354:59141","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15759:2187"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:317:126":{"id":"b:2:3174-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:126","2:3178:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:2817-0:493:1648":{"id":"a:2:9218:2817-0:493:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:417:590":{"id":"0:417:590","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[161,20],"end":[161,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13371:2146":{"id":"2:13371:2146","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15759:2187"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:123","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:377:293":{"id":"0:377:293","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[513,4],"end":[515,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3303:2428":{"id":"2:3303:2428","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3305:170","2:3306:253"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3141:134":{"id":"2:3141:134","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3143:666"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13469:52923":{"id":"2:13469:52923","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[106,0],"end":[146,1]},"visibility":{"restricted":{"parent":"0:221:1604","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2923:166","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:276:401"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2841-0:426:1663":{"id":"b:2:2841-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:3986","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:52871"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13378:4548":{"id":"2:13378:4548","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49558:2635","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3182:126":{"id":"2:3182:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38653:3046","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:13357:2132":{"id":"2:13357:2132","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12456:2627"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:366:1831":{"id":"0:366:1831","crate_id":0,"name":"STAR","span":{"filename":"src/lib.rs","begin":[451,4],"end":[453,6]},"visibility":"public","docs":"A `VersionReq` with no constraint on the version numbers it matches.\nEquivalent to `VersionReq::parse(\"*\").unwrap()`.\n\nIn terms of comparators this is equivalent to `>=0.0.0`.\n\nCounterintuitively a `*` VersionReq does not match every possible\nversion number. In particular, in order for *any* `VersionReq` to match\na pre-release version, the `VersionReq` must contain at least one\n`Comparator` that has an explicit major, minor, and patch version\nidentical to the pre-release being matched, and that has a nonempty\npre-release component. Since `*` is not written with an explicit major,\nminor, and patch version, and does not contain a nonempty pre-release\ncomponent, it does not match any pre-release versions.","links":{},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"VersionReq {\n        comparators: Vec::new(),\n    }"}},"2:13441:59154":{"id":"2:13441:59154","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:453":{"id":"0:453","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,20],"end":[195,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:332:125":{"id":"0:332:125","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[136,4],"end":[136,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"a:2:3276:2754-0:404:1643":{"id":"a:2:3276:2754-0:404:1643","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:324:1819":{"id":"0:324:1819","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[83,4],"end":[106,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:12924:1608","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376:903":{"id":"0:376:903","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[509,4],"end":[511,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:442:1665":{"id":"b:5:787-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:210","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:2915","5:790:2916","5:791:2917"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:515":{"id":"0:515","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,25],"end":[375,27]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3235:199-0:493:1648":{"id":"a:2:3235:199-0:493:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6474:3501":{"id":"1:6474:3501","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6475:53023","1:6476:53024"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8321:2520":{"id":"2:8321:2520","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8323:2135"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13361:2067":{"id":"2:13361:2067","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47340:165"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3313:2429":{"id":"2:3313:2429","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3315:170","2:3316:875"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13372:56157":{"id":"2:13372:56157","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15759:2187"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5658:3486":{"id":"1:5658:3486","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5659:6912","1:5660:53558","1:5661:5419","1:5662:53559","1:5663:3794","1:5664:3795","1:5665:53560","1:5666:1280","1:5667:53561","1:5668:53562","1:5669:53563","1:5670:53564","1:5671:53565","1:5672:53566","1:5673:53567","1:5674:53568"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10481:141":{"id":"2:10481:141","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10482:700","2:10484:3397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:446:1646":{"id":"0:446:1646","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[201,4],"end":[201,26]},"visibility":"public","docs":"Patch is only allowed if minor is Some.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}},"param_names":[]}}},"2:13390:2898":{"id":"2:13390:2898","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15753:2182","`None`":"2:47340:165","self::pattern":"2:12985:2608"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13422:59148":{"id":"2:13422:59148","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6406-0:442:1665":{"id":"b:5:6406-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:2918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:477:1717":{"id":"0:477:1717","crate_id":0,"name":"Wildcard","span":{"filename":"src/lib.rs","begin":[261,4],"end":[261,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3702:2597":{"id":"2:3702:2597","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3704:55219"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13379:59144":{"id":"2:13379:59144","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49568:2637","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[46,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:49:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2857:104":{"id":"2:2857:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2858:395","2:2859:397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:263:529":{"id":"0:263:529","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[26,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:3454:115","args":null,"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:2754-0:317:126":{"id":"a:2:3276:2754-0:317:126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3964-0:317:126":{"id":"b:2:3964-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8838:2513":{"id":"2:8838:2513","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:6406-0:404:1643":{"id":"b:5:6406-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:2918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8362:150":{"id":"2:8362:150","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8363:2107","2:8364:2323","2:8365:751"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:420:401":{"id":"0:420:401","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37472:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[110,0],"end":[114,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:59:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2841-0:493:1648":{"id":"b:2:2841-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:3986","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:52871"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,31],"end":[195,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10481:141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:458:700"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:448":{"id":"0:448","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,9],"end":[195,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:449:395"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13416:56170":{"id":"2:13416:56170","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:12985:2608","prim@char":"1:15753:2182","str::splitn":"1:15759:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49426:2642","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:2817-0:404:1643":{"id":"a:2:9218:2817-0:404:1643","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3679:2595":{"id":"2:3679:2595","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3610:2313","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:783:210":{"id":"5:783:210","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:2915","5:785:2916","5:786:2917"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[102,0],"end":[109,1]},"visibility":{"restricted":{"parent":"0:66:1601","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:121:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13445:59157":{"id":"2:13445:59157","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15753:2182","self::pattern":"2:12985:2608"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13015:2624","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:199-0:426:1663":{"id":"a:2:3235:199-0:426:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:480":{"id":"0:480","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:481:395"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3247:208-0:426:1663":{"id":"a:2:3247:208-0:426:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13466:1605":{"id":"2:13466:1605","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12924:1608","`FromStr`":"2:12924:1608"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12924:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12924:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:442:1665":{"id":"b:2:2841-0:442:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:3986","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:52871"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3138:148":{"id":"2:3138:148","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3140:2855"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22992:3994":{"id":"2:22992:3994","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23641:3976","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22983:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:364:1605":{"id":"0:364:1605","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[431,4],"end":[433,5]},"visibility":"public","docs":"Create `Version` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `1.0` &mdash; too few numeric components. A SemVer version must have\n  exactly three. If you are looking at something that has fewer than\n  three numbers in it, it's possible it is a `VersionReq` instead (with\n  an implicit default `^` comparison operator).\n\n- `1.0.01` &mdash; a numeric component has a leading zero.\n\n- `1.0.unknown` &mdash; unexpected character in one of the components.\n\n- `1.0.0-` or `1.0.0+` &mdash; the pre-release or build metadata are\n  indicated present but empty.\n\n- `1.0.0-alpha_123` &mdash; pre-release or build metadata have something\n  outside the allowed characters, which are `0-9`, `A-Z`, `a-z`, `-`,\n  and `.` (dot).\n\n- `23456789999999999999.0.0` &mdash; overflow of a u64.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:2754-0:426:1663":{"id":"a:2:3276:2754-0:426:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:429:395"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2838-0:404:1643":{"id":"b:2:2838-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:2252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8371:2518":{"id":"2:8371:2518","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8373:2862","2:8375:2863","2:8376:2864"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6602:3486":{"id":"1:6602:3486","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6603:53215","1:6604:7258","1:6605:7259","1:6606:7261","1:6607:7260","1:6608:7262","1:6609:7263","1:6610:7265","1:6611:5461","1:6612:7268","1:6613:7269","1:6614:7270","1:6615:7271","1:6616:7272","1:6617:7273","1:6618:7266","1:6619:7267"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8560:156":{"id":"2:8560:156","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8561:2107","2:8562:905","2:8563:2865","2:8566:2866","2:8567:481","2:8569:2867","2:8572:2868","2:8573:2869","2:8574:2870","2:8575:2871","2:8577:2521","2:8579:2872","2:8580:2873","2:8582:824","2:8585:2874","2:8592:2875","2:8594:2876","2:8597:1967","2:8598:2877","2:8599:2878","2:8601:2879","2:8603:2880","2:8606:1284","2:8607:2881","2:8608:2882","2:8612:2883","2:8615:2884","2:8616:2885","2:8617:2886","2:8619:2887","2:8620:2332","2:8622:2888","2:8625:2889","2:8627:2890","2:8637:2891","2:8652:2892","2:8654:2893","2:8658:2894","2:8667:2895","2:8670:2896","2:8672:2897","2:8675:264","2:8682:281","2:8689:2898","2:8696:2899","2:8705:2900","2:8715:998","2:8722:2901","2:8729:2488","2:8730:2485","2:8731:2490","2:8743:2489","2:8750:2487","2:8762:2486","2:8769:2902","2:8770:2903","2:8775:2904","2:8778:2905","2:8781:2906","2:8782:2135","2:8784:2907","2:8786:401","2:8789:2908","2:8792:981","2:8795:2909","2:8798:590","2:8801:2910","2:8804:890","2:8806:809","2:8808:775","2:8810:698","2:8812:681","2:8814:2911","2:8815:2912","2:8823:2913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:404:1643":{"id":"b:5:787-0:404:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:210","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:2915","5:790:2916","5:791:2917"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:2817-0:462:1669":{"id":"a:2:9218:2817-0:462:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:521:890":{"id":"0:521:890","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2835:3986":{"id":"2:2835:3986","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2837:52871"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3401:2591":{"id":"2:3401:2591","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:1210"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,16],"end":[161,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13451:1942":{"id":"2:13451:1942","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15753:2182","self::pattern":"2:12985:2608"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:436:890":{"id":"0:436:890","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[187,20],"end":[187,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1079:3521":{"id":"1:1079:3521","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:2915","1:1081:4240","1:1082:52921","1:1083:52922","1:1084:52923","1:1085:52924","1:1086:52925"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:44":{"id":"0:44","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[4,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:45:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:437":{"id":"0:437","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,31],"end":[187,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10481:141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:438:700"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6078:2465":{"id":"5:6078:2465","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8352:204"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8325:2519":{"id":"2:8325:2519","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8327:2907"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:199-0:442:1665":{"id":"a:2:3235:199-0:442:1665","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:199","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:59:645":{"id":"0:59:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3467:2593":{"id":"2:3467:2593","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3468:531"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3454:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:367:1605":{"id":"0:367:1605","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[470,4],"end":[472,5]},"visibility":"public","docs":"Create `VersionReq` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `>a.b` &mdash; unexpected characters in the partial version.\n\n- `@1.0.0` &mdash; unrecognized comparison operator.\n\n- `^1.0.0, ` &mdash; unexpected end of input.\n\n- `>=1.0 <2.0` &mdash; missing comma between comparators.\n\n- `*.*` &mdash; unsupported wildcard syntax.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:426:1663":{"id":"0:426:1663","crate_id":0,"name":"VersionReq","span":{"filename":"src/lib.rs","begin":[189,0],"end":[191,1]},"visibility":"public","docs":"**SemVer version requirement** describing the intersection of some version\ncomparators, such as `>=1.2.3, <1.8`.\n\n# Syntax\n\n- Either `*` (meaning \"any\"), or one or more comma-separated comparators.\n\n- A [`Comparator`] is an operator ([`Op`]) and a partial version, separated\n  by optional whitespace. For example `>=1.0.0` or `>=1.0`.\n\n- Build metadata is syntactically permitted on the partial versions, but is\n  completely ignored, as it's never relevant to whether any comparator\n  matches a particular version.\n\n- Whitespace is permitted around commas and around operators. Whitespace is\n  not permitted within a partial version, i.e. anywhere between the major\n  version number and its minor, patch, pre-release, or build metadata.","links":{"`Op`":"0:462:1669","`Comparator`":"0:442:1665"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:427:1664"],"impls":["0:365","a:2:3276:2754-0:426:1663","a:2:3247:208-0:426:1663","a:2:3235:199-0:426:1663","a:2:9217:2818-0:426:1663","a:2:9218:2817-0:426:1663","b:2:3174-0:426:1663","b:2:3179-0:426:1663","b:2:2838-0:426:1663","b:2:3168-0:426:1663","b:2:3964-0:426:1663","b:2:2841-0:426:1663","b:2:3164-0:426:1663","b:5:6406-0:426:1663","b:5:787-0:426:1663","0:48","0:280","0:322","0:428","0:430","0:431","0:433","0:434","0:437","0:440","0:369"]}},"2:3240:2753":{"id":"2:3240:2753","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:426:1663":{"id":"b:2:3179-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:126","2:3183:1389"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6098:2507":{"id":"5:6098:2507","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8352:204"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:208-0:509:1650":{"id":"a:2:3247:208-0:509:1650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:317:126":{"id":"b:2:3179-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:126","2:3183:1389"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:426:1663":{"id":"b:2:3168-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:666"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:404:1643":{"id":"0:404:1643","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[162,0],"end":[168,1]},"visibility":"public","docs":"**SemVer version** as defined by <https://semver.org>.\n\n# Syntax\n\n- The major, minor, and patch numbers may be any integer 0 through u64::MAX.\n  When representing a SemVer version as a string, each number is written as\n  a base 10 integer. For example, `1.0.119`.\n\n- Leading zeros are forbidden in those positions. For example `1.01.00` is\n  invalid as a SemVer version.\n\n- The pre-release identifier, if present, must conform to the syntax\n  documented for [`Prerelease`].\n\n- The build metadata, if present, must conform to the syntax documented for\n  [`BuildMetadata`].\n\n- Whitespace is not allowed anywhere in the version.\n\n# Total ordering\n\nGiven any two SemVer versions, one is less than, greater than, or equal to\nthe other. Versions may be compared against one another using Rust's usual\ncomparison operators.\n\n- The major, minor, and patch number are compared numerically from left to\nright, lexicographically ordered as a 3-tuple of integers. So for example\nversion `1.5.0` is less than version `1.19.0`, despite the fact that\n\"1.19.0\" &lt; \"1.5.0\" as ASCIIbetically compared strings and 1.19 &lt; 1.5\nas real numbers.\n\n- When major, minor, and patch are equal, a pre-release version is\n  considered less than the ordinary release:&ensp;version `1.0.0-alpha.1` is\n  less than version `1.0.0`.\n\n- Two pre-releases of the same major, minor, patch are compared by\n  lexicographic ordering of dot-separated components of the pre-release\n  string.\n\n  - Identifiers consisting of only digits are compared\n    numerically:&ensp;`1.0.0-pre.8` is less than `1.0.0-pre.12`.\n\n  - Identifiers that contain a letter or hyphen are compared in ASCII sort\n    order:&ensp;`1.0.0-pre12` is less than `1.0.0-pre8`.\n\n  - Any numeric identifier is always less than any non-numeric\n    identifier:&ensp;`1.0.0-pre.1` is less than `1.0.0-pre.x`.\n\nExample:&ensp;`1.0.0-alpha`&ensp;&lt;&ensp;`1.0.0-alpha.1`&ensp;&lt;&ensp;`1.0.0-alpha.beta`&ensp;&lt;&ensp;`1.0.0-beta`&ensp;&lt;&ensp;`1.0.0-beta.2`&ensp;&lt;&ensp;`1.0.0-beta.11`&ensp;&lt;&ensp;`1.0.0-rc.1`&ensp;&lt;&ensp;`1.0.0`","links":{"`Prerelease`":"0:493:1648","`BuildMetadata`":"0:509:1650"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:405:1644","0:406:1645","0:407:1646","0:408:1647","0:409:1649"],"impls":["0:362","a:2:3276:2754-0:404:1643","a:2:3247:208-0:404:1643","a:2:3235:199-0:404:1643","a:2:9217:2818-0:404:1643","a:2:9218:2817-0:404:1643","b:2:3174-0:404:1643","b:2:3179-0:404:1643","b:2:2838-0:404:1643","b:2:3168-0:404:1643","b:2:3964-0:404:1643","b:2:2841-0:404:1643","b:2:3164-0:404:1643","b:5:6406-0:404:1643","b:5:787-0:404:1643","0:44","0:56","0:319","0:410","0:412","0:413","0:415","0:416","0:419","0:421","0:423"]}},"b:2:3168-0:509:1650":{"id":"b:2:3168-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:666"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[87,0],"end":[91,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:55:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:460":{"id":"0:460","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:461:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6354:3513":{"id":"1:6354:3513","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6355:3794","1:6356:3795","1:6357:8210","1:6358:53872","1:6360:53876","1:6362:53873","1:6363:53874","1:6365:53875"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13365:56138":{"id":"2:13365:56138","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:409:1649":{"id":"0:409:1649","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[167,4],"end":[167,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[25,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:283:1605","path":"::parse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12924:1608","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:320:125","0:321:1819"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[499,0],"end":[520,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:375:1802","0:376:903","0:377:293","0:378:1846"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3174-0:426:1663":{"id":"b:2:3174-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:126","2:3178:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,26],"end":[251,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13425:1840":{"id":"2:13425:1840","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:15753:2182","`DoubleEndedIterator`":"2:8406:119","str::matches":"1:15759:2187","self::pattern":"2:12985:2608"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49508:2644","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10250:118":{"id":"2:10250:118","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10251:645"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3276:2754":{"id":"2:3276:2754","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5564:3508":{"id":"1:5564:3508","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5565:57310","1:5566:4276"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10459:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13460:59159":{"id":"2:13460:59159","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15753:2182","self::pattern":"2:12985:2608"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:2817-0:442:1665":{"id":"a:2:9218:2817-0:442:1665","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:2817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:790:2916":{"id":"5:790:2916","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[116,0],"end":[120,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:61:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:504:590":{"id":"0:504:590","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[317,29],"end":[317,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:270:981":{"id":"0:270:981","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["rhs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37472:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:492:645":{"id":"0:492:645","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6406-0:509:1650":{"id":"b:5:6406-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10250:118","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:2918"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:514:395":{"id":"0:514:395","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[375,18],"end":[375,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5644:3484":{"id":"1:5644:3484","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5645:5419","1:5646:57400","1:5647:57401"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3276:2754-0:509:1650":{"id":"a:2:3276:2754-0:509:1650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9217:2818-0:442:1665":{"id":"a:2:9217:2818-0:442:1665","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:2818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[148,0],"end":[156,1]},"visibility":{"restricted":{"parent":"0:221:1604","path":"::impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromIterator","id":"2:8358:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:281:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22947:16267":{"id":"2:22947:16267","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22948:6414","2:22949:58564","2:22950:58565"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22940:3480","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3478:2068":{"id":"2:3478:2068","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3479:564"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8358:135":{"id":"2:8358:135","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8360:669"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:462:1669":{"id":"b:5:787-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:210","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:2915","5:790:2916","5:791:2917"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13369:3687":{"id":"2:13369:3687","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3539:2311","str::slice_mut_unchecked":"1:15759:2187","`str`":"1:15759:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[161,31],"end":[161,34]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2923:166","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:420:401"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13348":{"id":"2:13348","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12445:1316","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13349:776","2:13350:1846","2:13351:59139","2:13352:59140","2:13354:59141","2:13357:2132","2:13358:59142","2:13359:291","2:13360:1951","2:13361:2067","2:13363:56137","2:13365:56138","2:13367:8520","2:13369:3687","2:13370:59143","2:13371:2146","2:13372:56157","2:13373:2120","2:13374:3915","2:13375:2051","2:13376:32141","2:13377:32131","2:13378:4548","2:13379:59144","2:13380:32126","2:13381:56172","2:13384:1944","2:13387:55854","2:13390:2898","2:13394:2861","2:13398:2096","2:13401:31999","2:13404:56166","2:13407:59145","2:13410:59146","2:13413:56168","2:13416:56170","2:13419:59147","2:13422:59148","2:13425:1840","2:13428:59149","2:13431:59150","2:13434:59151","2:13437:59152","2:13439:59153","2:13441:59154","2:13443:59155","2:13444:59156","2:13445:59157","2:13448:2104","2:13451:1942","2:13454:56173","2:13457:59158","2:13460:59159","2:13463:59160","2:13466:1605","2:13468:4240","2:13469:52923","2:13470:52924","2:13471:52925","2:13472:59161","2:13474:3523","2:13475:59162"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13360:1951":{"id":"2:13360:1951","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15770:2196"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:645":{"id":"0:49:645","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3178:1390":{"id":"2:3178:1390","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47467:194","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:215","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:370:59":{"id":"0:370:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[484,4],"end":[486,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:519":{"id":"0:519","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[375,29],"end":[375,38]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:172","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:520:590","0:521:890"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:493:1648":{"id":"b:2:3964-0:493:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1403"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:208-0:442:1665":{"id":"a:2:3247:208-0:442:1665","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Comparator","id":"0:442:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13363:56137":{"id":"2:13363:56137","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47340:165"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:462:1669":{"id":"b:2:3168-0:462:1669","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:666"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13472:59161":{"id":"2:13472:59161","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15753:2182"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49603:2649","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13367:8520":{"id":"2:13367:8520","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10885:202","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3355:2585":{"id":"2:3355:2585","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3356:170","2:3357:936"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3167:2855":{"id":"2:3167:2855","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3141:134"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:496:59":{"id":"0:496:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[317,9],"end":[317,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:465:1711":{"id":"0:465:1711","crate_id":0,"name":"Greater","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3308:2430":{"id":"2:3308:2430","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3310:170","2:3311:1331"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:498:395":{"id":"0:498:395","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[317,18],"end":[317,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Prerelease","id":"0:493:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3393:2589":{"id":"2:3393:2589","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3395:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:317:126":{"id":"0:317:126","crate_id":0,"name":"Error","span":{"filename":"src/parse.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Error parsing a SemVer version or version requirement.\n\n# Example\n\n```\nuse semver::Version;\n\nfn main() {\n    let err = Version::parse(\"1.q.r\").unwrap_err();\n\n    // \"unexpected character 'q' while parsing minor version number\"\n    eprintln!(\"{}\", err);\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:2754-0:317:126","a:2:3247:208-0:317:126","a:2:3235:199-0:317:126","a:2:9217:2818-0:317:126","a:2:9218:2817-0:317:126","b:2:3174-0:317:126","b:2:3179-0:317:126","b:2:2838-0:317:126","b:2:3168-0:317:126","b:2:3964-0:317:126","b:2:2841-0:317:126","b:2:3164-0:317:126","b:5:6406-0:317:126","0:115","0:116","0:120"]}},"0:461:645":{"id":"0:461:645","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[195,37],"end":[195,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10203:133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10192:194","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375:1802":{"id":"0:375:1802","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[505,4],"end":[507,6]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(all(doc, semver_rustdoc_workaround)))]"],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"Prerelease {\n        identifier: Identifier::empty(),\n    }"}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2843:52871":{"id":"2:2843:52871","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2923:166":{"id":"2:2923:166","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2924:401","2:2925:2488","2:2926:2485","2:2927:2853"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:123","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[93,0],"end":[108,1]},"visibility":{"restricted":{"parent":"0:8:1600","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Version","id":"0:404:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:57:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13387:55854":{"id":"2:13387:55854","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12985:2608","prim@char":"1:15753:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12995:2623","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13010:2625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3737:2602":{"id":"2:3737:2602","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:2841-0:509:1650":{"id":"b:2:2841-0:509:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:3986","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"BuildMetadata","id":"0:509:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:52871"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6096:59800":{"id":"5:6096:59800","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8352:204"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:317:126":{"id":"b:2:3164-0:317:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:317:126","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3164-0:426:1663":{"id":"b:2:3164-0:426:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:134","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"VersionReq","id":"0:426:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2855"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3350:2580":{"id":"2:3350:2580","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3352:1087"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6084:59799":{"id":"5:6084:59799","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8352:204"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:204","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6076":{"id":"5:6076","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5896:1316","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6077:59797","5:6078:2465","5:6081:59798","5:6084:59799","5:6096:59800","5:6097:59801","5:6098:2507","5:6099:52921","5:6100:52922"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3372:2584":{"id":"2:3372:2584","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:170","2:3375:343"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:493:1648":{"id":"0:493:1648","crate_id":0,"name":"Prerelease","span":{"filename":"src/lib.rs","begin":[318,0],"end":[320,1]},"visibility":"public","docs":"Optional pre-release identifier on a version string. This comes after `-` in\na SemVer version, like `1.0.0-alpha.1`\n\n# Examples\n\nSome real world pre-release idioms drawn from crates.io:\n\n- **[mio]** <code>0.7.0-<b>alpha.1</b></code> &mdash; the most common style\n  for numbering pre-releases.\n\n- **[pest]** <code>1.0.0-<b>beta.8</b></code>,&ensp;<code>1.0.0-<b>rc.0</b></code>\n  &mdash; this crate makes a distinction between betas and release\n  candidates.\n\n- **[sassers]** <code>0.11.0-<b>shitshow</b></code> &mdash; ???.\n\n- **[atomic-utils]** <code>0.0.0-<b>reserved</b></code> &mdash; a squatted\n  crate name.\n\n[mio]: https://crates.io/crates/mio\n[pest]: https://crates.io/crates/pest\n[atomic-utils]: https://crates.io/crates/atomic-utils\n[sassers]: https://crates.io/crates/sassers\n\n*Tip:* Be aware that if you are planning to number your own pre-releases,\nyou should prefer to separate the numeric part from any non-numeric\nidentifiers by using a dot in between. That is, prefer pre-releases\n`alpha.1`, `alpha.2`, etc rather than `alpha1`, `alpha2` etc. The SemVer\nspec's rule for pre-release precedence has special treatment of numeric\ncomponents in the pre-release string, but only if there are no non-digit\ncharacters in the same dot-separated component. So you'd have `alpha.2` &lt;\n`alpha.11` as intended, but `alpha11` &lt; `alpha2`.\n\n# Syntax\n\nPre-release strings are a series of dot separated identifiers immediately\nfollowing the patch version. Identifiers must comprise only ASCII\nalphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must not be\nempty. Numeric identifiers must not include leading zeros.\n\n# Total ordering\n\nPre-releases have a total order defined by the SemVer spec. It uses\nlexicographic ordering of dot-separated components. Identifiers consisting\nof only digits are compared numerically. Otherwise, identifiers are compared\nin ASCII sort order. Any numeric identifier is always less than any\nnon-numeric identifier.\n\nExample:&ensp;`alpha`&ensp;&lt;&ensp;`alpha.85`&ensp;&lt;&ensp;`alpha.90`&ensp;&lt;&ensp;`alpha.200`&ensp;&lt;&ensp;`alpha.0a`&ensp;&lt;&ensp;`alpha.1a0`&ensp;&lt;&ensp;`alpha.a`&ensp;&lt;&ensp;`beta`","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:374","a:2:3276:2754-0:493:1648","a:2:3247:208-0:493:1648","a:2:3235:199-0:493:1648","a:2:9217:2818-0:493:1648","a:2:9218:2817-0:493:1648","b:2:3174-0:493:1648","b:2:3179-0:493:1648","b:2:2838-0:493:1648","b:2:3168-0:493:1648","b:2:3964-0:493:1648","b:2:2841-0:493:1648","b:2:3164-0:493:1648","b:5:6406-0:493:1648","b:5:787-0:493:1648","0:52","0:58","0:261","0:267","0:271","0:328","0:495","0:497","0:499","0:500","0:502","0:503","0:506"]}},"0:445:1645":{"id":"0:445:1645","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[199,4],"end":[199,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47340:165","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}},"param_names":[]}}},"0:491":{"id":"0:491","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,43],"end":[251,48]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10243:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Op","id":"0:462:1669","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:492:645"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3521:2600":{"id":"2:3521:2600","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3523:225","2:3524:195","2:3525:58158"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3330:2575":{"id":"2:3330:2575","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3331:170","2:3332:896"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"paths":{"2:3247:208":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:5969:7241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:50240:4158":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"18:720:5252":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:9217:2818":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:1533:6582":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:9933:8119":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:7191:8202":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:3331:3571":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:12783:5690":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:49558:2635":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:11362:2642":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:4439:6973":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:3834:5145":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"8:0:2154":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:14049:3453":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:22994:3993":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"0:317:126":{"crate_id":0,"path":["semver","Error"],"kind":"struct"},"17:12373:5620":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:10477:5006":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:1602:6620":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:1708:6694":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:7412:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:1736:6706":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"9:996:4433":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:7236:4754":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:6812:7376":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:7626:2327":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:1194:8607":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:3041:4855":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:1563:6595":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"12:1855:144":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:0:781":{"crate_id":6,"path":["libc"],"kind":"module"},"2:24533:2043":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:5346:4679":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:7205:4751":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:299:8109":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:10236:4957":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:6208:4728":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:12126:3652":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:5292:7100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:1760:6715":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:1441:3551":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:11089:3535":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:49890:3903":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:13590:5960":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:3945:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:51515:4011":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:9896:60101":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:12645:5672":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:10193:1955":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:13258:5875":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:584:6547":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:15765:2191":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:22792:3478":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:8264:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:46272:4230":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:11678:5475":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:51711:7550":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:49454:2646":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:11269:2638":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:50293:2403":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:9961:8120":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:1476:2321":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:23899:4073":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:51334:4027":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"7:85:44230":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:4401:6955":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:13942:6073":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:2399:8196":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:3918:6759":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:10435:8129":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6110:4719":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:49587:2652":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:49133:3317":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:5191:7052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:5415:3779":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:50989:4005":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:1617:6632":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:12431:5632":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:6602:3486":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:46129:2650":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"0:404:1643":{"crate_id":0,"path":["semver","Version"],"kind":"struct"},"2:27918:2432":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:6376:3517":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:52245:4015":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:3691:212":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:47373:2107":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:47603:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"16:6964:2814":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:7467:4682":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:3367:2583":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:11847:3610":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"5:4237:5145":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:7042:4899":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:1665:6668":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:11482:3588":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:1729:3785":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4183:6882":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:14055:3451":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:9551:4959":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:5815:4596":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:52005:4035":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:4276:3756":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:2586:8201":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"16:6731:4888":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:4671:6117":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:9296:5343":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:7886:2499":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:49612:2650":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:14939:3681":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:4355:3456":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:12756:5686":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:46476:2533":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:10571:8136":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:3800:6104":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:7250:4755":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:11114:2640":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:13215:38925":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:10758:3447":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:3772:6103":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:10531:2494":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:3235:199":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:4908:3525":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:51220:3995":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:47467:194":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:1554:6590":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:11376:3314":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:3393:2589":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"10:0:2156":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:8187:2323":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:8849:4958":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:7420:4702":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:50872:7539":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:3483:2319":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:3350:2580":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"5:8314:4274":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:5766:4594":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:5580:4583":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:2325:4286":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:4325:6920":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:6236:3791":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:52280:3997":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:10481:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:5428:7170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6605:4695":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:10742:3749":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"0:475:1716":{"crate_id":0,"path":["semver","Op","Caret"],"kind":"variant"},"1:10591:4293":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:4955:6126":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:8065:2500":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"0:442:1665":{"crate_id":0,"path":["semver","Comparator"],"kind":"struct"},"5:8282:4273":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"18:790:5040":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:897:3695":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:49865:3901":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:11779:5501":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:4641:6116":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:49408:2643":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:49195:3318":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:13916:5200":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:6691:4741":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:3303:2428":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:2859:168":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:3336:4267":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:632:6573":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"0:462:1669":{"crate_id":0,"path":["semver","Op"],"kind":"enum"},"2:8325:2519":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:1527:6579":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:5564:3508":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"9:1056:4427":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:45911:2374":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:21:657":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:1501:3545":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"0:473:1715":{"crate_id":0,"path":["semver","Op","Tilde"],"kind":"variant"},"1:5775:3838":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"18:896:5049":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:49472:2647":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:46242:4228":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:5877:3844":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:3539:2311":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:32163:2309":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:49426:2642":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:13231:3786":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:14884:3619":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:10256:2361":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:6899:7387":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:5407:4571":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4478:6988":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:8181:2323":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:46313:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:2164:564":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:3990:6804":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:0:2161":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:45897:3928":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:12632:5671":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:6665:4303":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:3543:5174":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12917:5699":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:10203:133":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:12671:5674":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:1942:1946":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:3070:3889":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:13547:5950":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:3241:2846":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:11238:3845":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:6858:7378":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"9:27:4416":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"18:774:5250":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:13172:5852":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:2401:8197":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:10458:5303":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:10266:4975":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"12:1159:4498":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:4083:6848":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:11303:3510":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:10526:2493":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:4501:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:10149:8118":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:12582:5654":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:15223:7715":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:6718:4887":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:11767:5498":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:3064:4912":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:7738:4757":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:46279:4231":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:10635:5358":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:15774:2200":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"3:0:416":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:3365:3570":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:5960:4602":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"9:776:4414":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:49114:3308":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:12028:5548":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:57296:7619":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:15247:4529":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"9:900:6470":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:5548:7206":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:11794:5507":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:3487:131":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:0:474":{"crate_id":2,"path":["core"],"kind":"module"},"16:2773:4876":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"18:660:5053":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:5269:7087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"12:1253:3554":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"18:744:60111":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:47340:165":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:8280:3719":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:4394:3452":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:3245:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"5:1658:3544":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:4431:6968":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:1511:3547":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:7346:174":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:12086:3650":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:11330:14384":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:47390:3311":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:7843:4759":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:47459:177":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"18:169:52543":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:3488:4863":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:52781:4009":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"16:6269:4731":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:6185:7344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:3401:2591":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4227:6886":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:11499:5441":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:15773:2199":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:578:6544":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:7571:4677":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"12:1144:3553":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"12:2009:2323":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"14:47:8171":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:4306:6911":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"13:232:6408":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:11065:3310":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:6014:4724":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:6870:7380":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:2460:8199":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:1717:6700":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:5644:3484":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:15148:3772":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:13894:58444":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"6:6124:7301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:10081:4986":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:4470:6986":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:10377:4977":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:670:39723":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:3862:6721":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:13788:6030":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:13912:6065":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:2512:4972":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:9809:60098":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:6947:4241":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:10532:11054":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:10529:5357":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:15759:2187":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:3383:2587":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:11196:3313":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"9:1020:4434":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:10885:202":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:9245:4934":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:23985:7418":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:3743:4929":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"18:820:5043":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:9759:8116":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:50044:2622":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:11492:3310":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:3334:2577":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:3276:2754":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:4996:4100":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"5:8130:59030":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:13842:6050":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:5421:4572":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:2163:2323":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:47561:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:10398:8185":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:1011:3310":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"12:2323:6416":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"14:244:6361":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:53144:4016":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:4392:3451":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:1908:40695":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:9361:8368":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:11900:54580":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"1:14794:3611":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:50196:7538":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:8902:46247":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:50048:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:13789:176":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:13306:5883":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:13520:5943":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:11940:3310":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:3720:3963":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"18:667:5054":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:542:4617":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:55974:224":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:7146:4746":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:4517:7003":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:48406:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:51563:3996":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:0:265":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:12568:5199":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:52167:4008":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:10502:5356":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"12:892:4490":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:4145:6880":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:1622:6634":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:3240:2753":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:3287:4861":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:11304:46257":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:3264:4860":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:15778:2204":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:46135:7507":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:51767:7552":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:8352:204":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:4790:6121":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:9721:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:49204:3321":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:1655:3554":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:2181:3571":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:11118:46256":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:5790:4595":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:5228:7066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:4377:6947":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:32210:58468":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:15772:2198":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:48464:2358":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"6:6910:7391":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:5197:7053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:5185:7049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:12195:5577":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:5945:7224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:3978:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:3148:215":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:11337:5004":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"18:610:5051":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:12208:5579":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:3767:3311":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:8808:2504":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"12:181:4506":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:5433:4573":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:13824:8187":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:10243:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:15769:2195":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:11714:5485":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:3035:7397":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:4340:2323":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:5885:3846":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:1534:3550":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"12:2309:6414":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:9186:4940":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:3917:3642":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:51663:7549":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:5130:7010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:24431:2437":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:7875:5176":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"6:511:6502":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:6136:4720":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:7160:8202":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10317:4973":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:11750:5490":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:8841:2515":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:4255:3792":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:10553:3555":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:11258:3793":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:1419:3310":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:1236:8112":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"14:0:2159":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:13098:5841":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:1215:4284":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:3522:5266":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:13010:2625":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:5658:3486":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"5:5410:3422":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:5652:3485":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"14:250:6363":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:2569:126":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"2:50966:4017":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"12:396:4504":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10331:4988":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:7024:4898":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"18:754:60109":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:5522:4580":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:10716:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:6768:4891":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:6214:7360":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:10547:11056":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:3091:4913":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:5636:3483":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:12610:5660":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:1658:6664":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:10975:8152":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:10656:5360":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:7927:3719":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"12:2018:2319":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:12442:5634":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:6469:2525":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:46495:2535":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:3263:2848":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:4890:6124":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13062:5811":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:4300:6908":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:55961:224":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:3714:6102":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"18:644:5052":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:10827:4933":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:2159:3310":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:11092:3624":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"17:9133:46253":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:49596:2648":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:8431:2517":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:13733:6011":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:2376:2044":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:3957:6785":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"0:471:1714":{"crate_id":0,"path":["semver","Op","LessEq"],"kind":"variant"},"2:53360:7608":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:7568:3606":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:7453:4681":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:11026:8156":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:10264:2364":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:5370:4224":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:1045:3504":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:46157:4056":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:12262:5587":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:47398:2323":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"5:8297:4198":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:46457:2524":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:46173:4058":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:8189:3719":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:9521:8609":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:2748:565":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:6005:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:11572:5458":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:13554:5951":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:5359:7142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:14583:3612":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:69:2318":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:9627:3766":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:11026:2635":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:15503:5204":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:14781:3610":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:1547:6587":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:11100:4965":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:46265:4229":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:3120:3431":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"9:234:4392":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:12168:5365":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:10487:141":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:50070:3654":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:51053:4026":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:49105:3307":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:9971:60100":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:46435:2531":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:37496:2484":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:6744:4889":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:14826:7710":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:11555:5456":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:1637:3552":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:46331:4198":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13609:5965":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:10117:5024":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:46852:2510":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7073:4745":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:6396:2536":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:5347:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:3737:2602":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:11307:3315":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:14061:190":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:51586:3999":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:51848:4040":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:3951:6783":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:53375:7609":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:5310:189":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:3145:4865":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:10864:5393":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:3338:2581":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:11482:5436":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"18:694:5055":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:5400:7162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:5978:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:1528:3549":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:10734:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:5371:7149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:14052:3455":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:49223:3320":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12343:5601":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:3521:2600":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:5714:3490":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:294:8108":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:47729:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:4120:6867":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:3138:148":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"5:8122:4263":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:4052:6830":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:47645:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:10095:5022":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:49213:3319":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:6391:4733":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:13637:5973":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:24567:2443":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:10563:3556":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:4164:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:2260:3987":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:13865:6051":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:11147:5407":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"6:4013:6813":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:4510:4322":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"2:12432:3305":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:4449:6979":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:14566:8206":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:12221:5580":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"12:2331:2317":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:45876:3047":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:7216:4752":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:4489:2508":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:12076:3628":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:4293:6907":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:3964:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:46556:2526":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"18:766:5260":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:22536:58152":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"18:620:5249":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:12234:5582":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:50012:2613":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"16:6087:4678":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10489:5009":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:46565:2540":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:3239:3732":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:49603:2649":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:49753:3898":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:4127:6869":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:3043:8545":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:6176:7341":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"19:0:978":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:5210:7054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:15751:2180":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:48110:2359":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:49280:2633":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:10253:4976":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:8247:3562":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:3604:5270":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:543:6518":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:3118:4866":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"12:812:3545":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:10061:8124":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:783:210":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:12071:3812":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:2246:2480":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:10570:12061":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:52088:4020":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:4347:6931":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:3135:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:12010:5547":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"18:811:5042":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:13477:5928":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:13598:5961":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:13386:5905":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13221:5866":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:8375:4248":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"5:2548:4290":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:5589:762":{"crate_id":2,"path":["core","iter"],"kind":"module"},"0:509:1650":{"crate_id":0,"path":["semver","BuildMetadata"],"kind":"struct"},"1:8703:161":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:6491:4735":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"5:3946:2319":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:11992:5172":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:5001:4101":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:47897:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:1472:3552":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:46396:5166":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:51927:4028":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:9528:5191":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:23806:4176":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"12:1688:4513":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"12:2032:3571":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:7833:5164":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:4992:2375":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:13163:5851":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:9600:60102":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:9925:4138":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:10623:8140":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:46406:8188":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:6893:7386":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:8954:4942":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:14970:3683":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:50918:4037":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:13732:3607":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:46448:2523":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:48367:132":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:46647:2547":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:14413:3433":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:11062:3533":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"6:4341:6928":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:1676:6676":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:4133:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:12666:2657":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:9280:5342":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:10106:5023":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:48480:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:38716:2849":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"14:231:4250":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:10504:3702":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:22551:58152":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:9488:5190":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:13377:5904":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:12467:5637":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:3567:3439":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:11001:8154":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:48665:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:10246:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:53296:7604":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:4364:6942":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:4281:6900":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6999:4744":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:6778:3472":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:15764:2190":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:3338:4604":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:51127:4018":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:22983:3480":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:1630:3541":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:6612:7268":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:510:8110":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:46188:4232":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:4241:6887":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:49123:3316":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:2366:586":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:56039:224":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11184:3774":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:49722:3894":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"14:189:8171":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"12:968:3549":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:5255:7086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:10321:5195":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:6518:4736":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"9:0:2155":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:10750:3445":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:11539:5452":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:8288:3585":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"2:50040:2621":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:11019:2640":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:2195:5147":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11045:46255":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:10695:3495":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:48343:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:6021:4849":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:10407:4971":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"9:41:4417":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:46211:2651":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:15771:2197":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:10912:8144":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"15:0:2160":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:1680:183":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:5882:5157":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:46348:4199":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:8234:2317":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:47771:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:50024:2617":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:55987:224":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1700:6693":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:11030:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:46318:4197":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:9799:8117":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:46616:2528":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"18:739:8106":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:10996:2531":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:48394:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"12:1118:3552":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:3966:6790":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:9440:5346":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:1153:8189":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:50036:2620":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:23877:7409":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:24101:2434":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:616:6563":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:88:39325":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:10128:5025":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"15:248:4521":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:7637:3609":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:46258:2649":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:9769:60103":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:6424:4734":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"18:885:5048":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:49900:3904":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:5314:5341":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:3213:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:9665:5193":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:6707:3513":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"12:1762:5143":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:49322:2638":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:24011:38643":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:3533:3444":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:14010:4160":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:5330:5342":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:8963:3632":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"9:603:8339":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"13:120:44567":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:4638:5150":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:7366:2323":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:7360:183":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:8160:4246":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:13620:5966":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"5:8363:4247":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:9065:46251":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:6100:7289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:994:4261":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:6864:7379":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:3033:2915":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:7816:3968":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:1592:3310":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"5:8099:2323":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:46466:2532":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:3355:2585":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:10250:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:7022:14383":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:6851:2549":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:8105:4262":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:7342:4714":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:3039:8544":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:4927:2373":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:2196:1034":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:11498:3590":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:2031:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4511:7001":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:9404:5345":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:13780:6029":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6577:4738":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:8381:3666":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:6155:7327":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:15757:2185":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:15756:2184":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:5898:3847":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5953:7229":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:3397:2590":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:15776:2202":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:11604:5464":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:10471:53033":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:12725:5680":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:24465:2042":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:6807:4743":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:0:2162":{"crate_id":17,"path":["object"],"kind":"module"},"2:7628:2521":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:8144:2323":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:4353:3455":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:14:1958":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:4704:6118":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:5753:4593":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:4410:6958":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:10460:3692":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:11226:3527":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:12275:5588":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:3484:130":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:2754:4606":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:6250:2326":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:9886:8118":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:13497:5935":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:14376:7708":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:13698:137":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:53261:7601":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:8138:2503":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:4371:6944":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:12480:5639":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:10938:8149":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:50249:4159":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:52431:4021":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:599:6555":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:4358:6939":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:3454:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:2727:3044":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:5147:2378":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:11434:5421":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:8310:4333":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"5:1195:59138":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:22992:3994":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:15753:2182":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:5505:4579":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:10516:5010":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13540:5949":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:9339:2623":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:0:1307":{"crate_id":1,"path":["std"],"kind":"module"},"2:22570:58202":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:3244:205":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:13331:5892":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:6366:4518":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:12385:5622":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:6776:3469":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:2857:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:2060:3422":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:12229:8199":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:9755:5194":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:3372:2584":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:3679:2595":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:374:4280":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:10028:8121":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:46575:2541":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:49621:2651":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:12106:3651":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:45956:4089":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"12:2005:3310":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:3346:2578":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:24363:2438":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:13933:6071":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:5293:3772":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:13061:3893":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:1646:3553":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13986:6080":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11159:5408":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:12307:5595":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:14423:53048":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:49801:3899":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"12:2039:3572":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:7295:4698":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5231:6129":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:6474:3501":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"18:782:5250":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"3:300:194":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:10974:3435":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:15735:53030":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:10279:4986":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:823:5194":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"1:10690:3728":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:6413:4517":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:3774:2603":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:49169:3322":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:6681:4304":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:7971:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:13582:5958":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:46198:4233":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:3481:129":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:4614:53214":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:11970:5539":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:5118:4107":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:32204:3065":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:13004:2626":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:3112:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"18:0:2163":{"crate_id":18,"path":["memchr"],"kind":"module"},"19:117:5245":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"6:4494:6993":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:32262:58470":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"16:6126:4725":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:4521:3422":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:47687:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:14353:7700":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:13488:5932":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:12011:3671":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:10597:1285":{"crate_id":2,"path":["core","slice"],"kind":"module"},"16:5595:4584":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"18:712:2484":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:11962:5537":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:1486:3554":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:2213:4270":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:3330:2575":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:9074:8203":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6935:7394":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:4566:3432":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:8346:7401":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"6:1630:6639":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7823:4692":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:6152:4680":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:51239:7543":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"12:2303:6413":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:5407:7164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:3478:2068":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"12:949:3548":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:4623:223":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:6780:3473":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:6569:4884":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:6554:4737":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:2269:2479":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:23993:7419":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:7827:3718":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"5:4210:2321":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:4847:4098":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:14000:6083":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:6636:4697":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:13746:6017":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:13370:5902":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:4506:6113":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:10962:3433":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"5:4694:5150":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:5531:4303":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:11390:3312":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:3253:3736":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:3892:6739":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:3324:2576":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:6887:7385":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:5542:11059":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:9592:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:3324:3310":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:12995:2623":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:7185:4749":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:12559:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:45629:2604":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:15777:2203":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:12507:5642":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:10052:8123":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"11:46:6419":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"16:4304:6107":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:12066:3647":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"13:0:2152":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:2835:3986":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:13819:6037":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:6219:4729":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:6614:7270":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"9:963:4432":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:13748:8553":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:11328:5687":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:10254:2360":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:9005:46249":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:10200:8126":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:11006:2545":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:6051:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:15763:2189":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:5436:7172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:51743:7551":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:7158:4747":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:47536:167":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:14955:3682":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:23916:7411":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46596:2543":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:13627:5968":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:6949:4895":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:4282:3758":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:547:4591":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:4033:6822":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:3117:2074":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:9264:5341":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:4883:4099":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"12:976:3550":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:14358:7702":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:47527:2323":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:11835:5518":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"12:930:3546":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:53097:3998":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:6252:4730":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:46518:2537":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:2175:3570":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:48361:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"0:477:1717":{"crate_id":0,"path":["semver","Op","Wildcard"],"kind":"variant"},"5:1602:3311":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:3881:6731":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:9039:3627":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:5159:7034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:11439:3587":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"18:857:5046":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:10346:5197":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:7104:5159":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:50941:4025":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:5941:178":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:5469:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:49879:3902":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:10260:178":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"12:1667:4512":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:9162:4961":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:13564:5954":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"12:354:6409":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:2484:46339":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:22940:3480":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"5:8114:2321":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:11121:7674":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"6:6923:7392":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:6091:7285":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:607:8111":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:12699:5678":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:10486:3717":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:4023:6819":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:56026:224":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13810:6035":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:55881:3972":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:10260:5415":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:3610:2313":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13205:5863":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:11862:3611":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:3377:2586":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:57275:7618":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:50281:2405":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:13465:5927":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:51974:4032":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:53222:4001":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:12081:3629":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:46818:2502":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:3702:2597":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11628:5468":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:11164:7680":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"6:3972:6792":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:9210:46254":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:5127:2376":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:531:6513":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:12408:5631":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"11:54:4488":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:11234:3327":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:15767:2193":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"5:7808:5159":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:7554:3605":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4387:6950":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:48124:2362":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:13884:6056":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:6468:2321":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:8825:3820":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"1:4605:1955":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:11907:7697":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"18:829:5044":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:13506:5936":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:12051:5551":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:5073:2374":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:1639:3542":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"16:7761:4758":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:13963:6076":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:5828:4255":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:12456:2627":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:3342:2579":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:5702:3482":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:13180:5853":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:7884:4688":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"14:56:5436":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:13468:3636":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:11406:5417":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:5459:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:22589:58203":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"12:747:3310":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:49045:4152":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:24601:2440":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:48891:3333":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:10887:5394":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:3889:4334":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:50186:190":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:13595:3617":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:11956:2323":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:1235:4285":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:8447:2320":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:53183:4036":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:12456:5636":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:24114:2446":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:9849:60106":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:2437:8198":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:6221:7363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"0:465:1711":{"crate_id":0,"path":["semver","Op","Greater"],"kind":"variant"},"2:47981:4202":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:15724:11058":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"9:1075:4435":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4101:6857":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:11995:3670":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:10160:5353":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:9943:60107":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:1432:3311":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:50028:2618":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:1497:3544":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:3253:2308":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:5832:4253":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:5488:4578":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:11948:3665":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:11822:5517":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:4272:6895":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:6644:7375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13685:6010":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:2843:4850":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:45721:183":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"12:784:3544":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:10558:8133":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:11277:3514":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:51365:4031":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:23932:7413":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:50204:179":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:14406:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:5717:4589":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:10468:5007":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:7437:5145":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:3696:136":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:6072:4699":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:15754:2183":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:11422:3586":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:3318:2574":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"12:866:2321":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:53437:7611":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:3406:2592":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:48656:2495":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:12659:5673":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:3389:2588":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:10838:1988":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:6354:3513":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:3365:4605":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:4995:6127":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:1522:6577":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:53322:7606":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:591:6550":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:5528:7192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:45705:185":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:47519:3311":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:4316:3454":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"12:556:142":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:13924:6067":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:49913:7750":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"16:4852:6123":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:3237:2449":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:7279:4900":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:5472:4577":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:7786:4691":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:5999:3781":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:5632:4585":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:49372:2639":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:23735:4174":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:9930:4139":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:2832:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:10448:5008":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:15768:2194":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:4028:3983":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"16:4922:6125":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:47450:3182":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:11252:3773":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:10611:8139":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:9660:5192":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"16:4230:6106":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"9:469:8329":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:12924:1608":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:6176:4727":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:6238:4683":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:12142:5569":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:46144:4055":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:47813:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:1540:6585":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:49143:3324":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:10353:4979":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:13748:58443":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:5998:7253":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:32198:2310":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:1306:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:11696:5484":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:53250:7600":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:49684:3890":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"9:692:4367":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:13843:3608":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:10833:3640":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:14807:3651":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:53270:7602":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:4157:4945":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:11885:7696":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:10211:8127":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:5868:5154":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"18:152:52542":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:12327:5596":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:9237:3477":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:10192:194":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"5:8090:2315":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:10584:4944":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:7870:4687":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:6682:4694":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:4279:3757":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:14000:3886":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:610:6560":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:11056:3528":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:10252:2359":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:7250:5145":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:7477:4703":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:7856:4760":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:13377:8198":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:2487:2401":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:2892:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:11399:3585":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"18:849:5045":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6357:4732":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:12073:5560":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:11834:170":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:2769:3045":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"18:837:2626":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:8374:191":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:525:6510":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:12537:5647":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11809:5513":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:6870:3497":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:12521:5645":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:13453:5921":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:8739:8203":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:7894:4717":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:4350:6108":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:10814:4932":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"14:11:8171":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:14698:5201":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:48887:4238":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:13192:5858":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:3868:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:605:6558":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:8873:3644":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:24397:2436":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"5:432:2316":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:12742:2658":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:5987:7248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"12:2025:3570":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:3708:2599":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"12:1651:4511":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:11877:3612":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:3549:6101":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"12:2013:2321":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:14989:3689":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:2462:8200":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:5282:7093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:1442:2323":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:3320:4914":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:7174:4748":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"5:1648:3543":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11059:3529":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"2:50263:157":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:9574:4964":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:10950:8150":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:923:4260":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:5847:3841":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:10420:4970":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:53281:7603":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:51388:4034":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:1156:8191":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46606:2544":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:14720:5203":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:4066:6838":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:4005:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:3172:4856":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:4040:6825":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"12:840:3541":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"18:866:5047":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:48687:7532":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"12:112:60095":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13282:5881":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:10140:4988":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:7692:3613":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"12:469:60091":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:7226:4753":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:11089:3311":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:4438:3310":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:15766:2192":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:6881:7384":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:49354:2641":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:3391:3573":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:32362:58466":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:3243:206":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:5029:6128":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:4395:6954":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:32023:2422":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:13041:5802":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:52971:4013":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:3370:4268":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:52214:4012":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:9839:4988":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:11244:3784":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:12445:1316":{"crate_id":2,"path":["core","str"],"kind":"module"},"1:2166:2321":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:10828:3639":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:11141:53051":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:12155:5572":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:48103:2360":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:6464:4693":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:8406:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:1079:3521":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:46547:2539":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:699:3691":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:11859:3325":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:12552:5651":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:13799:6034":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:11588:5463":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:1572:6601":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:519:6507":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:9528:2632":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:5855:4597":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:11847:5521":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:10071:5028":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:13396:8552":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"0:426:1663":{"crate_id":0,"path":["semver","VersionReq"],"kind":"struct"},"16:7195:4750":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:7514:4701":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:10262:2363":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:6757:3422":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:4095:6854":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:22523:2484":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:3543:2312":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:10673:46439":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:56013:224":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:5170:2377":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"12:1100:3551":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:15758:2186":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:1457:3553":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:6616:7272":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:1486:2319":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:3218:4858":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:6101:4676":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:11358:4936":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:4714:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:7392:4686":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:24635:2441":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:48117:2361":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:4623:3434":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:46219:4227":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:1723:6703":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:56000:224":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10271:8213":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:6032:4613":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"12:429:4503":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:15775:2201":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:5221:7062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:13296:5882":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:15719:8347":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:46527:2538":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:11348:3575":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:1596:6618":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:51484:4007":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10988:8153":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:13978:6077":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"11:0:2157":{"crate_id":11,"path":["adler"],"kind":"module"},"17:13240:5867":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:5295:44672":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:45657:2601":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:3962:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:4448:6111":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:10491:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:3939:6105":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:6645:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"5:155:265":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"2:48695:7533":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:12982:5750":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:24737:2444":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:2543:5005":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:6068:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:11281:7257":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:11892:3326":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:53307:7605":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:7764:222":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:7804:4690":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:24079:7431":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:1492:3543":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:15752:2181":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:10788:8141":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:2933:173":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:11640:5471":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:5570:3506":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:49182:3323":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:5420:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:9533:8610":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"1:903:3696":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:4523:7006":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:9649:8114":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:11993:5544":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:10224:8128":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:8838:2513":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:1744:6710":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:1584:6610":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:45746:184":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:13119:5846":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"12:377:4505":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:9218:2817":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:8560:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:12095:5561":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:5692:3487":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:2968:4853":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:49274:2634":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:12741:5682":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:15088:3537":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:4301:3311":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:3195:4857":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:51095:7541":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:6085:7283":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:11348:2643":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:15169:3779":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:4314:3453":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:47441:2815":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:46298:4060":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:12703:2659":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:13772:6026":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:5273:4611":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12040:5550":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:7604:2326":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:3141:134":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:23542:3306":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:3467:2593":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:14097:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:1689:4282":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:2187:3572":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:4215:6885":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:9088:46252":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:49578:2636":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"9:157:4384":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:13770:3609":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:25107:2431":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:47855:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:5975:4722":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:11082:4941":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:11458:5435":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:161:39392":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"18:729:60110":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:13574:5957":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:45790:186":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"9:809:3585":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7406:4684":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:8362:150":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:46834:2506":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:8539:3798":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"18:136:52541":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:6620:4882":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:6614:7372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"18:636:5250":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:15110:3771":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:7549:4689":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:12027:3672":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:50083:4209":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:6116:3790":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:4630:3437":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:11277:5412":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:51538:4014":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:45836:2594":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:22851:3993":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:3877:3447":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:13015:2624":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:5384:4570":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:15760:2188":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:46504:7518":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:12726:2656":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:2794:4608":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:11519:5451":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:50016:2615":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:46426:2522":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:49304:2640":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"9:722:4368":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:6200:7351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"12:0:2158":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"5:3754:3310":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:1161:11057":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:4459:6980":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:2192:3573":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:11726:5488":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:10258:2362":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:14338:3516":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:6636:7373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:681:5415":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:46536:2548":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:24703:2439":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:50020:2616":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:7264:4696":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:9476:5347":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:1623:3551":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:51200:7542":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:53398:7610":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:4425:6965":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:2772:4289":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:51022:4038":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:11015:8155":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:1613:2323":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:4008:8113":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:13154:5847":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:48677:3585":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:7928:3928":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:8929:46248":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:6106:7290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:46627:2545":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:11616:5467":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:1136:3048":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:53241:7599":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:11157:2653":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:22788:3480":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"12:925:3543":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:45904:3929":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:49526:2645":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:4193:6883":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:5063:4106":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:38653:3046":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:10041:8122":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:10844:4988":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:7520:3603":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:11947:5533":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:14389:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:48640:2496":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:11178:3773":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:50893:7540":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:3144:216":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13532:5946":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"15:269:4525":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:4331:6922":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:2305:4347":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:7695:3615":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:11086:3534":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:6704:3515":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:11013:2632":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:15258:4529":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:2733:4607":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:11233:3842":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:13318:5886":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11254:4960":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:4762:6120":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:12685:5675":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:7333:4700":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:6644:4740":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:3018:4854":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:3114:3729":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:14983:3688":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:5414:7165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:23641:3976":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:11665:5474":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:46863:2512":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:12566:3728":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:2887:172":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:4594:5148":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"12:1235:4501":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"18:677:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:6852:7377":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:5736:4590":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:52892:4029":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:624:6568":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:2889:4870":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:47407:2814":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:2170:2319":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:11378:4935":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:8371:2518":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:12771:5687":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"12:160:4502":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:11186:5409":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:4203:6884":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:9219:2816":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:2945:4875":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:49262:2630":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:8845:2516":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:13356:5900":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:8590:3801":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:12568:5652":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:11932:5529":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:6166:4726":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:2171:3063":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:537:6515":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:46584:2542":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:10304:4974":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:563:6535":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:13348:5897":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:5783:5145":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:8032:3719":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:8388:3667":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:11509:3591":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:6592:58505":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"14:216:44601":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:7582:3607":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"9:749:4369":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:10702:3496":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:2866:4851":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:3905:6749":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:49096:3309":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:22591:58198":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:7832:8547":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"12:937:3547":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:2257:4287":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:5312:7116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:5563:7217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11653:5473":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:47382:3310":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:2923:166":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:2856:169":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:13713:149":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"12:853:3542":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"1:8093:5176":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"6:6239:7366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:7237:175":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:12712:5679":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:4386:6109":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:3621:3446":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:24033:38635":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:10543:5397":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:13054:5809":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:51287:4039":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:51181:4010":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:157:39391":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:9612:3765":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:3313:2429":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:11189:3775":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"12:463:60094":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:12051:3806":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:11915:5523":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:7205:2321":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:156:504":{"crate_id":5,"path":["alloc","alloc","dealloc"],"kind":"function"},"12:761:3311":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:13898:6058":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:786:5194":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"16:7303:4756":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:46486:2534":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:12494:5641":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:22568:58200":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:5386:7151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"0:463:1710":{"crate_id":0,"path":["semver","Op","Exact"],"kind":"variant"},"2:45869:2596":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:3357:3572":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:9726:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:10001:46301":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:4823:6122":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:24499:2435":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:13394:5907":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:46825:2504":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"18:650:5050":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:4702:3882":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"15:230:4520":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:4112:6862":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:3069:3480":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:53345:7607":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:6591:4739":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:4060:6835":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:3392:4867":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:51437:4019":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:9368:5344":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"0:493:1648":{"crate_id":0,"path":["semver","Prerelease"],"kind":"struct"},"12:1180:4499":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"14:194:44595":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:51611:4000":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:10459:3480":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"18:704:5250":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11199:5411":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:9332:5003":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:8321:2520":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:3132:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:9729:60105":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:1505:3546":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"5:6404:211":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:5456:4574":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"12:2315:60090":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:7119:4614":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:4:963":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:3308:2430":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:3265:3742":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:10596:2531":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:15770:2196":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:49736:3897":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:10876:3480":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:3429:4609":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:37472:167":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:49247:2631":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:24669:2442":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"0:0:1847":{"crate_id":0,"path":["semver"],"kind":"module"},"16:4614:6115":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:3444:3443":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"7:0:1454":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:45767:187":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:8358:135":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:5241:7075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:46236:2650":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:51076:4030":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:8152:183":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:3255:3737":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:9034:46250":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:24086:2445":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:5167:7036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:1690:6687":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:5290:3771":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:14570:3509":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:23970:4069":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"12:1200:4500":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:3506:4862":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:1669:3545":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:5561:4582":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:49707:3891":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:5869:3843":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:47511:3310":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:10946:2500":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:49828:3900":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:51158:4006":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"12:774:2323":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:14169:2314":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:11828:3608":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:50032:2619":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:23957:2433":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:5360:4569":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:4632:3422":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:52638:4041":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:5672:4586":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:3362:2582":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:49508:2644":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"5:8430:2319":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:4317:6916":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:12795:5697":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:14130:3702":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:569:6538":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"9:927:44327":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:6848:3474":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10801:8143":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:3241:4859":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:4548:3430":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:49290:2632":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:10685:3505":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"7:38:44223":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:3295:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:4417:6110":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:6780:4742":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:14363:3495":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:46843:2508":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:12985:2608":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:10587:8206":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:5379:7150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:4182:3459":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"1:14714:5202":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:12118:5567":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:7714:2530":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:2912:4852":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:4734:6119":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:10962:8151":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:46637:2546":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:4690:3881":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:12247:5584":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:1021:3719":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"5:8328:4275":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:9870:645":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:8638:3810":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"0:469:1713":{"crate_id":0,"path":["semver","Op","Less"],"kind":"variant"},"2:47939:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"12:2045:3573":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:10481:3700":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:12946:5719":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:1522:3548":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"12:877:2319":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:13446:5920":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:5274:7088":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:5707:4587":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"1:14846:3650":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:24049:38644":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:3965:5145":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:2314:4978":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:5996:4723":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:9689:60099":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:49568:2637":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:3962:194":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:11738:5489":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:1838:5145":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:15232:53031":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:1463:3542":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:11231:4962":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13429:5913":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:7378:4685":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:48376:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:13402:5909":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:4046:6827":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:4745:3885":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:23637:3480":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:22947:16267":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:5563:3965":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:53034:4033":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:48428:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:48648:7528":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:2991:4864":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:13760:6023":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12182:5576":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:10179:5355":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"9:686:4365":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"4:0:2153":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:1450:3541":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4073:6841":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:8546:3800":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:1091:5145":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:12598:5658":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:9719:8115":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:1934:2319":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"6:6028:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:5927:4600":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"18:801:5041":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:8122:57840":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:11889:53050":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"6:4262:6888":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:12287:5589":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:13210:8186":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"17:1311:5029":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:10953:3458":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:22798:3479":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:10599:8138":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:9659:60104":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:4535:6114":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:3034:59008":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:5522:7191":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:3997:6808":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11981:5542":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:11032:3527":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"1:7534:3604":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:2816:4869":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:4419:6964":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:14876:7711":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:13272:5880":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:5706:3488":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:11962:3668":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:12777:2653":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:45813:188":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:10926:8148":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:10403:4984":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:3743:159":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:11982:3669":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:8960:3807":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"0:467:1712":{"crate_id":0,"path":["semver","Op","GreaterEq"],"kind":"variant"},"16:4477:6112":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"}},"external_crates":{"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"}},"format_version":15}