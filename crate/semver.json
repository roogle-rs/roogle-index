{"root":"0:0:2102","crate_version":"1.0.20","includes_private":false,"index":{"5:5532:2683":{"id":"5:5532:2683","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[127,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12375:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:232:133","0:233:2053"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:193:1126"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2303-0:387:1882":{"id":"b:2:2303-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25288"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:342:1881":{"id":"0:342:1881","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[204,4],"end":[204,23]},"visibility":"public","docs":"Non-empty pre-release is only allowed if patch is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,20],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,37],"end":[188,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:336:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5804-0:337:1899":{"id":"b:5:5804-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,26],"end":[252,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:35:712":{"id":"0:35:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12768:2368":{"id":"2:12768:2368","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12415:2820","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split_whitespace":"2:12746:30768","str::rsplit":"2:12774:29288"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43851:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12795:2096":{"id":"2:12795:2096","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12415:2820","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatches":"2:12798:33118"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44055:2857","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12744:7430":{"id":"2:12744:7430","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43827:2846","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5538:33791":{"id":"5:5538:33791","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305:1881":{"id":"0:305:1881","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[167,4],"end":[167,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12798:33118":{"id":"2:12798:33118","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12415:2820","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::matches":"2:12795:2096"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44073:2858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:341":{"id":"0:274:341","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[556,4],"end":[558,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:402:1884":{"id":"b:2:2300-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12739:33113":{"id":"2:12739:33113","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12040:1531","str::slice_mut_unchecked":"2:12740:33114","crate::ops::Index":"2:3112:2580"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:301:1877":{"id":"b:2:2606-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12801:33119":{"id":"2:12801:33119","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12415:2820","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatch_indices":"2:12804:33120"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44001:2859","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:712":{"id":"0:85:712","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[33,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,20],"end":[196,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:390:60":{"id":"0:390:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[318,9],"end":[318,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,16],"end":[162,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:230:2053":{"id":"0:230:2053","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[116,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12375:1842","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:322:1897":{"id":"b:2:3450-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:331:656":{"id":"0:331:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[188,20],"end":[188,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,25],"end":[376,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12830:33128":{"id":"2:12830:33128","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2965-0:402:1884":{"id":"a:2:2872:2965-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2965","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2621-0:301:1877":{"id":"b:2:2621-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338:1902":{"id":"0:338:1902","crate_id":0,"name":"op","span":{"filename":"src/lib.rs","begin":[198,4],"end":[198,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:5:682-0:322:1897":{"id":"b:5:682-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3178","5:685:3179","5:686:3180"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12842:27840":{"id":"2:12842:27840","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12733:29255":{"id":"2:12733:29255","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:402:1884":{"id":"a:2:2815:243-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12727:2403":{"id":"2:12727:2403","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11970:2840"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5549:27836":{"id":"5:5549:27836","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12841:27839"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,16],"end":[162,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12721:33109":{"id":"2:12721:33109","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336:712":{"id":"0:336:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[188,37],"end":[188,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:1884":{"id":"0:402:1884","crate_id":0,"name":"BuildMetadata","span":{"filename":"src/lib.rs","begin":[377,0],"end":[379,1]},"visibility":"public","docs":"Optional build metadata identifier. This comes after `+` in a SemVer\nversion, as in `0.8.1+zstd.1.5.0`.\n\n# Examples\n\nSome real world build metadata idioms drawn from crates.io:\n\n- **[libgit2-sys]** <code>0.12.20+<b>1.1.0</b></code> &mdash; for this\n  crate, the build metadata indicates the version of the C libgit2 library\n  that the Rust crate is built against.\n\n- **[mashup]** <code>0.1.13+<b>deprecated</b></code> &mdash; just the word\n  \"deprecated\" for a crate that has been superseded by another. Eventually\n  people will take notice of this in Cargo's build output where it lists the\n  crates being compiled.\n\n- **[google-bigquery2]** <code>2.0.4+<b>20210327</b></code> &mdash; this\n  library is automatically generated from an official API schema, and the\n  build metadata indicates the date on which that schema was last captured.\n\n- **[fbthrift-git]** <code>0.0.6+<b>c7fcc0e</b></code> &mdash; this crate is\n  published from snapshots of a big company monorepo. In monorepo\n  development, there is no concept of versions, and all downstream code is\n  just updated atomically in the same commit that breaking changes to a\n  library are landed. Therefore for crates.io purposes, every published\n  version must be assumed to be incompatible with the previous. The build\n  metadata provides the source control hash of the snapshotted code.\n\n[libgit2-sys]: https://crates.io/crates/libgit2-sys\n[mashup]: https://crates.io/crates/mashup\n[google-bigquery2]: https://crates.io/crates/google-bigquery2\n[fbthrift-git]: https://crates.io/crates/fbthrift-git\n\n# Syntax\n\nBuild metadata is a series of dot separated identifiers immediately\nfollowing the patch or pre-release version. Identifiers must comprise only\nASCII alphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must\nnot be empty. Leading zeros *are* allowed, unlike any other place in the\nSemVer grammar.\n\n# Total ordering\n\nBuild metadata is ignored in evaluating `VersionReq`; it plays no role in\nwhether a `Version` matches any one of the comparison operators.\n\nHowever for comparing build metadatas among one another, they do have a\ntotal order which is determined by lexicographic ordering of dot-separated\ncomponents. Identifiers consisting of only digits are compared numerically.\nOtherwise, identifiers are compared in ASCII sort order. Any numeric\nidentifier is always less than any non-numeric identifier.\n\nExample:&ensp;`demo`&ensp;&lt;&ensp;`demo.85`&ensp;&lt;&ensp;`demo.90`&ensp;&lt;&ensp;`demo.090`&ensp;&lt;&ensp;`demo.200`&ensp;&lt;&ensp;`demo.1a0`&ensp;&lt;&ensp;`demo.a`&ensp;&lt;&ensp;`memo`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:276","a:2:8879:3079-0:402:1884","a:2:2832:253-0:402:1884","a:2:2872:2965-0:402:1884","a:2:2815:243-0:402:1884","a:2:8878:3080-0:402:1884","b:2:2300-0:402:1884","b:2:2303-0:402:1884","b:2:2610-0:402:1884","b:2:2616-0:402:1884","b:2:3450-0:402:1884","b:2:2606-0:402:1884","b:2:2621-0:402:1884","b:5:682-0:402:1884","b:5:5804-0:402:1884","0:414","0:36","0:411","0:406","0:412","0:198","0:408","0:192","0:30","0:234","0:404","0:187","0:409"]}}},"a:2:2815:243-0:301:1877":{"id":"a:2:2815:243-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:260:1839":{"id":"0:260:1839","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[432,4],"end":[434,5]},"visibility":"public","docs":"Create `Version` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `1.0` &mdash; too few numeric components. A SemVer version must have\n  exactly three. If you are looking at something that has fewer than\n  three numbers in it, it's possible it is a `VersionReq` instead (with\n  an implicit default `^` comparison operator).\n\n- `1.0.01` &mdash; a numeric component has a leading zero.\n\n- `1.0.unknown` &mdash; unexpected character in one of the components.\n\n- `1.0.0-` or `1.0.0+` &mdash; the pre-release or build metadata are\n  indicated present but empty.\n\n- `1.0.0-alpha_123` &mdash; pre-release or build metadata have something\n  outside the allowed characters, which are `0-9`, `A-Z`, `a-z`, `-`,\n  and `.` (dot).\n\n- `23456789999999999999.0.0` &mdash; overflow of a u64.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12749:33115":{"id":"2:12749:33115","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44115:2850","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:301:1877":{"id":"b:5:682-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3178","5:685:3179","5:686:3180"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:204:742":{"id":"0:204:742","crate_id":0,"name":"from_iter","span":{"filename":"src/impls.rs","begin":[149,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7747:162","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317":{"id":"0:317","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,36],"end":[162,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:318:1126"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,20],"end":[188,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:331:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:365:1948":{"id":"0:365:1948","crate_id":0,"name":"LessEq","span":{"filename":"src/lib.rs","begin":[259,4],"end":[259,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2872:2965-0:387:1882":{"id":"a:2:2872:2965-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2965","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:220:134":{"id":"0:220:134","crate_id":0,"name":"Error","span":{"filename":"src/parse.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Error parsing a SemVer version or version requirement.\n\n# Example\n\n```\nuse semver::Version;\n\nfn main() {\n    let err = Version::parse(\"1.q.r\").unwrap_err();\n\n    // \"unexpected character 'q' while parsing minor version number\"\n    eprintln!(\"{}\", err);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8879:3079-0:220:134","a:2:2832:253-0:220:134","a:2:2872:2965-0:220:134","a:2:2815:243-0:220:134","a:2:8878:3080-0:220:134","b:2:2300-0:220:134","b:2:2303-0:220:134","b:2:2610-0:220:134","b:2:2616-0:220:134","b:2:3450-0:220:134","b:2:2606-0:220:134","b:2:2621-0:220:134","b:5:5804-0:220:134","0:83","0:84","0:88"]}}},"0:199:459":{"id":"0:199:459","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[107,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:133":{"id":"0:229:133","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[114,4],"end":[114,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:235:133":{"id":"0:235:133","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[140,4],"end":[140,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:189:591":{"id":"0:189:591","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3049:123","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:712":{"id":"0:29:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:1839":{"id":"0:269:1839","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[538,4],"end":[540,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337:1899":{"id":"0:337:1899","crate_id":0,"name":"Comparator","span":{"filename":"src/lib.rs","begin":[197,0],"end":[205,1]},"visibility":"public","docs":"A pair of comparison operator and partial version, such as `>=1.2`. Forms\none piece of a VersionReq.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:338:1902","0:339:1878","0:340:1879","0:341:1880","0:342:1881"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:268","a:2:8879:3079-0:337:1899","a:2:2832:253-0:337:1899","a:2:2872:2965-0:337:1899","a:2:2815:243-0:337:1899","a:2:8878:3080-0:337:1899","b:2:2300-0:337:1899","b:2:2303-0:337:1899","b:2:2610-0:337:1899","b:2:2616-0:337:1899","b:2:3450-0:337:1899","b:2:2606-0:337:1899","b:2:2621-0:337:1899","b:5:682-0:337:1899","b:5:5804-0:337:1899","0:349","0:203","0:26","0:354","0:345","0:346","0:348","0:343","0:351","0:228"]}}},"a:2:8878:3080-0:356:1903":{"id":"a:2:8878:3080-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[81,0],"end":[85,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:29:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2616-0:356:1903":{"id":"b:2:2616-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12815:33126":{"id":"2:12815:33126","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12440:2835","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12745:2320":{"id":"2:12745:2320","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43837:2845","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:301:1877":{"id":"b:2:2300-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2612:739":{"id":"2:2612:739","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:325:452":{"id":"0:325:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[188,9],"end":[188,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12719:867":{"id":"2:12719:867","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12034:448"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:220:134":{"id":"b:2:2303-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25288"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12742:29278":{"id":"2:12742:29278","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12741:2417"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:387:1882":{"id":"a:2:2832:253-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:357:1944":{"id":"0:357:1944","crate_id":0,"name":"Exact","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[104,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:356:1903":{"id":"b:5:682-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3178","5:685:3179","5:686:3180"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2616-0:301:1877":{"id":"b:2:2616-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2872:2965-0:322:1897":{"id":"a:2:2872:2965-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2965","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:413:656":{"id":"0:413:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[376,29],"end":[376,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314:656":{"id":"0:314:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[162,20],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5806:1589":{"id":"5:5806:1589","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341:1880":{"id":"0:341:1880","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[202,4],"end":[202,26]},"visibility":"public","docs":"Patch is only allowed if minor is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"0:320:776":{"id":"0:320:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[162,48],"end":[162,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:712":{"id":"0:89:712","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[105,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:322:1897":{"id":"b:2:2300-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[48,0],"end":[79,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:27:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2621-0:356:1903":{"id":"b:2:2621-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2616-0:402:1884":{"id":"b:2:2616-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12737:8670":{"id":"2:12737:8670","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:3079-0:337:1899":{"id":"a:2:8879:3079-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12833:33129":{"id":"2:12833:33129","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[116,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2616-0:322:1897":{"id":"b:2:2616-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12746:30768":{"id":"2:12746:30768","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12747:30780"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44125:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12774:29288":{"id":"2:12774:29288","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12415:2820","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split":"2:12768:2368"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43869:2851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12827:33127":{"id":"2:12827:33127","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:459":{"id":"0:195:459","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[52,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12764:3121":{"id":"2:12764:3121","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:356:1903":{"id":"0:356:1903","crate_id":0,"name":"Op","span":{"filename":"src/lib.rs","begin":[254,0],"end":[267,1]},"visibility":"public","docs":"SemVer comparison operator: `=`, `>`, `>=`, `<`, `<=`, `~`, `^`, `*`.\n\n# Op::Exact\n- &ensp;**`=I.J.K`**&emsp;&mdash;&emsp;exactly the version I.J.K\n- &ensp;**`=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0, <I.(J+1).0`\n- &ensp;**`=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0, <(I+1).0.0`\n\n# Op::Greater\n- &ensp;**`>I.J.K`**\n- &ensp;**`>I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.(J+1).0`\n- &ensp;**`>I`**&emsp;&mdash;&emsp;equivalent to `>=(I+1).0.0`\n\n# Op::GreaterEq\n- &ensp;**`>=I.J.K`**\n- &ensp;**`>=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0`\n- &ensp;**`>=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0`\n\n# Op::Less\n- &ensp;**`<I.J.K`**\n- &ensp;**`<I.J`**&emsp;&mdash;&emsp;equivalent to `<I.J.0`\n- &ensp;**`<I`**&emsp;&mdash;&emsp;equivalent to `<I.0.0`\n\n# Op::LessEq\n- &ensp;**`<=I.J.K`**\n- &ensp;**`<=I.J`**&emsp;&mdash;&emsp;equivalent to `<I.(J+1).0`\n- &ensp;**`<=I`**&emsp;&mdash;&emsp;equivalent to `<(I+1).0.0`\n\n# Op::Tilde&emsp;(\"patch\" updates)\n*Tilde requirements allow the **patch** part of the semver version (the third number) to increase.*\n- &ensp;**`~I.J.K`**&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <I.(J+1).0`\n- &ensp;**`~I.J`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`~I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Caret&emsp;(\"compatible\" updates)\n*Caret requirements allow parts that are **right of the first nonzero** part of the semver version to increase.*\n- &ensp;**`^I.J.K`**&ensp;(for I\\>0)&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <(I+1).0.0`\n- &ensp;**`^0.J.K`**&ensp;(for J\\>0)&emsp;&mdash;&emsp;equivalent to `>=0.J.K, <0.(J+1).0`\n- &ensp;**`^0.0.K`**&emsp;&mdash;&emsp;equivalent to `=0.0.K`\n- &ensp;**`^I.J`**&ensp;(for I\\>0 or J\\>0)&emsp;&mdash;&emsp;equivalent to `^I.J.0`\n- &ensp;**`^0.0`**&emsp;&mdash;&emsp;equivalent to `=0.0`\n- &ensp;**`^I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Wildcard\n- &ensp;**`I.J.*`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`I.*`**&ensp;or&ensp;**`I.*.*`**&emsp;&mdash;&emsp;equivalent to `=I`","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:357:1944","0:359:1945","0:361:1946","0:363:1947","0:365:1948","0:367:1949","0:369:1950","0:371:1951"],"impls":["a:2:8879:3079-0:356:1903","a:2:2832:253-0:356:1903","a:2:2872:2965-0:356:1903","a:2:2815:243-0:356:1903","a:2:8878:3080-0:356:1903","b:2:2300-0:356:1903","b:2:2303-0:356:1903","b:2:2610-0:356:1903","b:2:2616-0:356:1903","b:2:3450-0:356:1903","b:2:2606-0:356:1903","b:2:2621-0:356:1903","b:5:682-0:356:1903","0:376","0:380","0:377","0:379","0:374","0:373","0:385","0:382"]}}},"0:263:2087":{"id":"0:263:2087","crate_id":0,"name":"STAR","span":{"filename":"src/lib.rs","begin":[499,4],"end":[501,6]},"visibility":"public","docs":"A `VersionReq` with no constraint on the version numbers it matches.\nEquivalent to `VersionReq::parse(\"*\").unwrap()`.\n\nIn terms of comparators this is equivalent to `>=0.0.0`.\n\nCounterintuitively a `*` VersionReq does not match every possible\nversion number. In particular, in order for *any* `VersionReq` to match\na pre-release version, the `VersionReq` must contain at least one\n`Comparator` that has an explicit major, minor, and patch version\nidentical to the pre-release being matched, and that has a nonempty\npre-release component. Since `*` is not written with an explicit major,\nminor, and patch version, and does not contain a nonempty pre-release\ncomponent, it does not match any pre-release versions.","links":{},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:12722:33110":{"id":"2:12722:33110","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2624:134":{"id":"2:2624:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32351:5971","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:185:255":{"id":"0:185:255","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[24,4],"end":[24,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"a:2:2832:253-0:301:1877":{"id":"a:2:2832:253-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:337:1899":{"id":"b:2:2303-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25288"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2609:3115":{"id":"2:2609:3115","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2583:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,16],"end":[196,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265:2096":{"id":"0:265:2096","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[524,4],"end":[526,5]},"visibility":"public","docs":"Evaluate whether the given `Version` satisfies the version requirement\ndescribed by `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,20],"end":[196,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:350:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2606-0:337:1899":{"id":"b:2:2606-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8878:3080-0:402:1884":{"id":"a:2:8878:3080-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:402:1884":{"id":"b:2:2303-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25288"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12786:29292":{"id":"2:12786:29292","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12034:448","str::splitn":"2:12783:29290","self::pattern":"2:12415:2820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43973:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:3079-0:322:1897":{"id":"a:2:8879:3079-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:352:776":{"id":"0:352:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[196,31],"end":[196,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[110,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2616-0:220:134":{"id":"b:2:2616-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:316:459":{"id":"0:316:459","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[162,31],"end":[162,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:255":{"id":"0:188:255","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[32,4],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:359:1945":{"id":"0:359:1945","crate_id":0,"name":"Greater","span":{"filename":"src/lib.rs","begin":[256,4],"end":[256,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2872:2965-0:337:1899":{"id":"a:2:2872:2965-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2965","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12743:2391":{"id":"2:12743:2391","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43821:2847","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:322:1897":{"id":"b:2:2303-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25288"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:402:1884":{"id":"b:5:682-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3178","5:685:3179","5:686:3180"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[32,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2621-0:220:134":{"id":"b:2:2621-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5804-0:301:1877":{"id":"b:5:5804-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:275:2101":{"id":"0:275:2101","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[560,4],"end":[562,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,22],"end":[252,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,29],"end":[318,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:398:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12809:33122":{"id":"2:12809:33122","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,0],"end":[527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:2087","0:264:1839","0:265:2096"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,31],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:333:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8878:3080-0:220:134":{"id":"a:2:8878:3080-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2606-0:356:1903":{"id":"b:2:2606-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,37],"end":[196,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:355:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:400:776":{"id":"0:400:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[318,40],"end":[318,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3080-0:337:1899":{"id":"a:2:8878:3080-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[106,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2400:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:459"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5550:27837":{"id":"5:5550:27837","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12842:27840"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:3079-0:301:1877":{"id":"a:2:8879:3079-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:304:1880":{"id":"0:304:1880","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[166,4],"end":[166,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:270:2096":{"id":"0:270:2096","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[542,4],"end":[544,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[148,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:7743:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:204:742"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,0],"end":[563,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:272:2036","0:273:1029","0:274:341","0:275:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8878:3080-0:387:1882":{"id":"a:2:8878:3080-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:302:1878":{"id":"0:302:1878","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:2832:253-0:322:1897":{"id":"a:2:2832:253-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:233:2053":{"id":"0:233:2053","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[130,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12375:1842","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,9],"end":[318,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:390:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12735:29256":{"id":"2:12735:29256","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,43],"end":[252,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:386:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,9],"end":[162,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:308:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,16],"end":[188,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,18],"end":[318,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:392:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2300-0:220:134":{"id":"b:2:2300-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[30,0],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","source","description","cause","type_id"],"trait":{"name":"Error","id":"2:2668:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12771:29286":{"id":"2:12771:29286","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12231:2866","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:220:134":{"id":"b:2:3450-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2616-0:337:1899":{"id":"b:2:2616-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2815:243-0:337:1899":{"id":"a:2:2815:243-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2815:243-0:356:1903":{"id":"a:2:2815:243-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:236:2053":{"id":"0:236:2053","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[142,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12375:1842","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:1879":{"id":"0:340:1879","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[200,4],"end":[200,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"b:2:2621-0:337:1899":{"id":"b:2:2621-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363:1947":{"id":"0:363:1947","crate_id":0,"name":"Less","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:344:452":{"id":"0:344:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[196,9],"end":[196,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12375:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:133","0:230:2053"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:415:776":{"id":"0:415:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[376,40],"end":[376,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:356:1903":{"id":"a:2:2832:253-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:407:452":{"id":"0:407:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[376,18],"end":[376,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:60":{"id":"0:405:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12724:33111":{"id":"2:12724:33111","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12722:33110"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12720:2101":{"id":"2:12720:2101","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12804:33120":{"id":"2:12804:33120","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12415:2820","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::match_indices":"2:12801:33119"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44019:2860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,9],"end":[252,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,25],"end":[318,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232:133":{"id":"0:232:133","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[128,4],"end":[128,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,48],"end":[162,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:320:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12839:30422":{"id":"2:12839:30422","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39878:30418","Self::is_ascii":"2:12838:27834"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39878:30418","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315":{"id":"0:315","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,31],"end":[162,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2400:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:316:459"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2872:2965-0:301:1877":{"id":"a:2:2872:2965-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2965","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:253-0:337:1899":{"id":"a:2:2832:253-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227:2053":{"id":"0:227:2053","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[87,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12375:1842","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,29],"end":[376,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279:341":{"id":"0:279:341","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[574,4],"end":[576,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:402:1884":{"id":"a:2:2832:253-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5548:2726":{"id":"5:5548:2726","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3080-0:322:1897":{"id":"a:2:8878:3080-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:367:1949":{"id":"0:367:1949","crate_id":0,"name":"Tilde","span":{"filename":"src/lib.rs","begin":[260,4],"end":[260,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[51,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2400:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:459"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:392:452":{"id":"0:392:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[318,18],"end":[318,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12813:33124":{"id":"2:12813:33124","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:712":{"id":"0:21:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[5,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:220:134":{"id":"a:2:2832:253-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[4,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:21:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:322:1897":{"id":"a:2:2815:243-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3450-0:387:1882":{"id":"b:2:3450-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12821:2216":{"id":"2:12821:2216","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:1951":{"id":"0:371:1951","crate_id":0,"name":"Wildcard","span":{"filename":"src/lib.rs","begin":[262,4],"end":[262,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12843:33130":{"id":"2:12843:33130","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4615:33130"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44150:2862","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:361:1946":{"id":"0:361:1946","crate_id":0,"name":"GreaterEq","span":{"filename":"src/lib.rs","begin":[257,4],"end":[257,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2610-0:220:134":{"id":"b:2:2610-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,20],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:314:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:685:3179":{"id":"5:685:3179","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:322:1897":{"id":"b:2:2606-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:322:1897":{"id":"0:322:1897","crate_id":0,"name":"VersionReq","span":{"filename":"src/lib.rs","begin":[190,0],"end":[192,1]},"visibility":"public","docs":"**SemVer version requirement** describing the intersection of some version\ncomparators, such as `>=1.2.3, <1.8`.\n\n# Syntax\n\n- Either `*` (meaning \"any\"), or one or more comma-separated comparators.\n\n- A [`Comparator`] is an operator ([`Op`]) and a partial version, separated\n  by optional whitespace. For example `>=1.0.0` or `>=1.0`.\n\n- Build metadata is syntactically permitted on the partial versions, but is\n  completely ignored, as it's never relevant to whether any comparator\n  matches a particular version.\n\n- Whitespace is permitted around commas and around operators. Whitespace is\n  not permitted within a partial version, i.e. anywhere between the major\n  version number and its minor, patch, pre-release, or build metadata.","links":{"`Op`":"0:356:1903","`Comparator`":"0:337:1899"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:323:1898"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:262","a:2:8879:3079-0:322:1897","a:2:2832:253-0:322:1897","a:2:2872:2965-0:322:1897","a:2:2815:243-0:322:1897","a:2:8878:3080-0:322:1897","b:2:2300-0:322:1897","b:2:2303-0:322:1897","b:2:2610-0:322:1897","b:2:2616-0:322:1897","b:2:3450-0:322:1897","b:2:2606-0:322:1897","b:2:2621-0:322:1897","b:5:682-0:322:1897","b:5:5804-0:322:1897","0:330","0:203","0:324","0:266","0:329","0:225","0:332","0:24","0:335","0:326","0:327"]}}},"0:387:1882":{"id":"0:387:1882","crate_id":0,"name":"Prerelease","span":{"filename":"src/lib.rs","begin":[319,0],"end":[321,1]},"visibility":"public","docs":"Optional pre-release identifier on a version string. This comes after `-` in\na SemVer version, like `1.0.0-alpha.1`\n\n# Examples\n\nSome real world pre-release idioms drawn from crates.io:\n\n- **[mio]** <code>0.7.0-<b>alpha.1</b></code> &mdash; the most common style\n  for numbering pre-releases.\n\n- **[pest]** <code>1.0.0-<b>beta.8</b></code>,&ensp;<code>1.0.0-<b>rc.0</b></code>\n  &mdash; this crate makes a distinction between betas and release\n  candidates.\n\n- **[sassers]** <code>0.11.0-<b>shitshow</b></code> &mdash; ???.\n\n- **[atomic-utils]** <code>0.0.0-<b>reserved</b></code> &mdash; a squatted\n  crate name.\n\n[mio]: https://crates.io/crates/mio\n[pest]: https://crates.io/crates/pest\n[atomic-utils]: https://crates.io/crates/atomic-utils\n[sassers]: https://crates.io/crates/sassers\n\n*Tip:* Be aware that if you are planning to number your own pre-releases,\nyou should prefer to separate the numeric part from any non-numeric\nidentifiers by using a dot in between. That is, prefer pre-releases\n`alpha.1`, `alpha.2`, etc rather than `alpha1`, `alpha2` etc. The SemVer\nspec's rule for pre-release precedence has special treatment of numeric\ncomponents in the pre-release string, but only if there are no non-digit\ncharacters in the same dot-separated component. So you'd have `alpha.2` &lt;\n`alpha.11` as intended, but `alpha11` &lt; `alpha2`.\n\n# Syntax\n\nPre-release strings are a series of dot separated identifiers immediately\nfollowing the patch version. Identifiers must comprise only ASCII\nalphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must not be\nempty. Numeric identifiers must not include leading zeros.\n\n# Total ordering\n\nPre-releases have a total order defined by the SemVer spec. It uses\nlexicographic ordering of dot-separated components. Identifiers consisting\nof only digits are compared numerically. Otherwise, identifiers are compared\nin ASCII sort order. Any numeric identifier is always less than any\nnon-numeric identifier.\n\nExample:&ensp;`alpha`&ensp;&lt;&ensp;`alpha.85`&ensp;&lt;&ensp;`alpha.90`&ensp;&lt;&ensp;`alpha.200`&ensp;&lt;&ensp;`alpha.0a`&ensp;&lt;&ensp;`alpha.1a0`&ensp;&lt;&ensp;`alpha.a`&ensp;&lt;&ensp;`beta`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:271","a:2:8879:3079-0:387:1882","a:2:2832:253-0:387:1882","a:2:2872:2965-0:387:1882","a:2:2815:243-0:387:1882","a:2:8878:3080-0:387:1882","b:2:2300-0:387:1882","b:2:2303-0:387:1882","b:2:2610-0:387:1882","b:2:2616-0:387:1882","b:2:3450-0:387:1882","b:2:2606-0:387:1882","b:2:2621-0:387:1882","b:5:682-0:387:1882","b:5:5804-0:387:1882","0:28","0:190","0:194","0:389","0:393","0:399","0:34","0:391","0:394","0:396","0:184","0:231","0:397"]}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,18],"end":[376,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:407:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12760:3159":{"id":"2:12760:3159","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5804-0:322:1897":{"id":"b:5:5804-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2302:2524":{"id":"2:2302:2524","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:301:1877":{"id":"b:2:2610-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12777:33116":{"id":"2:12777:33116","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12415:2820","str::split":"2:12768:2368","prim@char":"1:12034:448","`DoubleEndedIterator`":"2:7785:127","str::rsplit_terminator":"2:12780:33117"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43901:2854","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:301:1877":{"id":"b:2:2303-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25288"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,9],"end":[188,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:325:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2872:2965-0:220:134":{"id":"a:2:2872:2965-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2965","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2610-0:402:1884":{"id":"b:2:2610-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2300-0:356:1903":{"id":"b:2:2300-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267:60":{"id":"0:267:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[532,4],"end":[534,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12840:27838":{"id":"2:12840:27838","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:387:1882":{"id":"b:2:2621-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,29],"end":[376,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:413:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12730:2321":{"id":"2:12730:2321","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12051:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12750:31080":{"id":"2:12750:31080","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44143:2861","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,25],"end":[376,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[23,0],"end":[29,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3049:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:185:255","0:186:591"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5804-0:387:1882":{"id":"b:5:5804-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277:2036":{"id":"0:277:2036","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[566,4],"end":[568,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:278:1029":{"id":"0:278:1029","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[570,4],"end":[572,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12729:339":{"id":"2:12729:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12730:2321","`u8`":"1:12051:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12731:2340":{"id":"2:12731:2340","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12748:25900":{"id":"2:12748:25900","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44105:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12824:29297":{"id":"2:12824:29297","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[139,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12375:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:235:133","0:236:2053"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12757:28891":{"id":"2:12757:28891","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3080-0:301:1877":{"id":"a:2:8878:3080-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:264:1839":{"id":"0:264:1839","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[518,4],"end":[520,5]},"visibility":"public","docs":"Create `VersionReq` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `>a.b` &mdash; unexpected characters in the partial version.\n\n- `@1.0.0` &mdash; unrecognized comparison operator.\n\n- `^1.0.0, ` &mdash; unexpected end of input.\n\n- `>=1.0 <2.0` &mdash; missing comma between comparators.\n\n- `*.*` &mdash; unsupported wildcard syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,16],"end":[196,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301:1877":{"id":"0:301:1877","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[163,0],"end":[169,1]},"visibility":"public","docs":"**SemVer version** as defined by <https://semver.org>.\n\n# Syntax\n\n- The major, minor, and patch numbers may be any integer 0 through u64::MAX.\n  When representing a SemVer version as a string, each number is written as\n  a base 10 integer. For example, `1.0.119`.\n\n- Leading zeros are forbidden in those positions. For example `1.01.00` is\n  invalid as a SemVer version.\n\n- The pre-release identifier, if present, must conform to the syntax\n  documented for [`Prerelease`].\n\n- The build metadata, if present, must conform to the syntax documented for\n  [`BuildMetadata`].\n\n- Whitespace is not allowed anywhere in the version.\n\n# Total ordering\n\nGiven any two SemVer versions, one is less than, greater than, or equal to\nthe other. Versions may be compared against one another using Rust's usual\ncomparison operators.\n\n- The major, minor, and patch number are compared numerically from left to\nright, lexicographically ordered as a 3-tuple of integers. So for example\nversion `1.5.0` is less than version `1.19.0`, despite the fact that\n\"1.19.0\" &lt; \"1.5.0\" as ASCIIbetically compared strings and 1.19 &lt; 1.5\nas real numbers.\n\n- When major, minor, and patch are equal, a pre-release version is\n  considered less than the ordinary release:&ensp;version `1.0.0-alpha.1` is\n  less than version `1.0.0`.\n\n- Two pre-releases of the same major, minor, patch are compared by\n  lexicographic ordering of dot-separated components of the pre-release\n  string.\n\n  - Identifiers consisting of only digits are compared\n    numerically:&ensp;`1.0.0-pre.8` is less than `1.0.0-pre.12`.\n\n  - Identifiers that contain a letter or hyphen are compared in ASCII sort\n    order:&ensp;`1.0.0-pre12` is less than `1.0.0-pre8`.\n\n  - Any numeric identifier is always less than any non-numeric\n    identifier:&ensp;`1.0.0-pre.1` is less than `1.0.0-pre.x`.\n\nExample:&ensp;`1.0.0-alpha`&ensp;&lt;&ensp;`1.0.0-alpha.1`&ensp;&lt;&ensp;`1.0.0-alpha.beta`&ensp;&lt;&ensp;`1.0.0-beta`&ensp;&lt;&ensp;`1.0.0-beta.2`&ensp;&lt;&ensp;`1.0.0-beta.11`&ensp;&lt;&ensp;`1.0.0-rc.1`&ensp;&lt;&ensp;`1.0.0`","links":{"`Prerelease`":"0:387:1882","`BuildMetadata`":"0:402:1884"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:302:1878","0:303:1879","0:304:1880","0:305:1881","0:306:1883"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:258","a:2:8879:3079-0:301:1877","a:2:2832:253-0:301:1877","a:2:2872:2965-0:301:1877","a:2:2815:243-0:301:1877","a:2:8878:3080-0:301:1877","b:2:2300-0:301:1877","b:2:2303-0:301:1877","b:2:2610-0:301:1877","b:2:2616-0:301:1877","b:2:3450-0:301:1877","b:2:2606-0:301:1877","b:2:2621-0:301:1877","b:5:682-0:301:1877","b:5:5804-0:301:1877","0:312","0:319","0:32","0:317","0:307","0:313","0:315","0:222","0:20","0:309","0:310"]}}},"0:25:712":{"id":"0:25:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:322:1897":{"id":"b:2:2610-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2102":{"id":"0:0:2102","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[1,0],"end":[581,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/semver)&ensp;[![crates-io]](https://crates.io/crates/semver)&ensp;[![docs-rs]](https://docs.rs/semver)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nA parser and evaluator for Cargo's flavor of Semantic Versioning.\n\nSemantic Versioning (see <https://semver.org>) is a guideline for how\nversion numbers are assigned and incremented. It is widely followed within\nthe Cargo/crates.io ecosystem for Rust.\n\n<br>\n\n# Example\n\n```\nuse semver::{BuildMetadata, Prerelease, Version, VersionReq};\n\nfn main() {\n    let req = VersionReq::parse(\">=1.2.3, <1.8.0\").unwrap();\n\n    // Check whether this requirement matches version 1.2.3-alpha.1 (no)\n    let version = Version {\n        major: 1,\n        minor: 2,\n        patch: 3,\n        pre: Prerelease::new(\"alpha.1\").unwrap(),\n        build: BuildMetadata::EMPTY,\n    };\n    assert!(!req.matches(&version));\n\n    // Check whether it matches 1.3.0 (yes it does)\n    let version = Version::parse(\"1.3.0\").unwrap();\n    assert!(req.matches(&version));\n}\n```\n\n<br><br>\n\n# Scope of this crate\n\nBesides Cargo, several other package ecosystems and package managers for\nother languages also use SemVer:&ensp;RubyGems/Bundler for Ruby, npm for\nJavaScript, Composer for PHP, CocoaPods for Objective-C...\n\nThe `semver` crate is specifically intended to implement Cargo's\ninterpretation of Semantic Versioning.\n\nWhere the various tools differ in their interpretation or implementation of\nthe spec, this crate follows the implementation choices made by Cargo. If\nyou are operating on version numbers from some other package ecosystem, you\nwill want to use a different semver library which is appropriate to that\necosystem.\n\nThe extent of Cargo's SemVer support is documented in the *[Specifying\nDependencies]* chapter of the Cargo reference.\n\n[Specifying Dependencies]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/semver/1.0.20\")]","#![deny(unsafe_op_in_unsafe_fn)]","#![allow(clippy :: cast_lossless, clippy :: cast_possible_truncation, clippy\n:: doc_markdown, clippy :: items_after_statements, clippy :: manual_map,\nclippy :: match_bool, clippy :: missing_errors_doc, clippy ::\nmust_use_candidate, clippy :: needless_doctest_main, clippy ::\noption_if_let_else, clippy :: ptr_as_ptr, clippy :: redundant_else, clippy ::\nsemicolon_if_nothing_returned, clippy :: similar_names, clippy ::\nunnested_or_patterns, clippy :: unseparated_literal_suffix, clippy ::\nwildcard_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:257-0:220:134","0:301:1877","0:322:1897","0:337:1899","0:356:1903","0:387:1882","0:402:1884"],"is_stripped":false}}},"0:191:1126":{"id":"0:191:1126","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:337:1899":{"id":"b:2:3450-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:355:712":{"id":"0:355:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[196,37],"end":[196,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2305:25288":{"id":"2:2305:25288","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:356:1903":{"id":"b:2:2610-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12841:27839":{"id":"2:12841:27839","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272:2036":{"id":"0:272:2036","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[548,4],"end":[550,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5547:33793":{"id":"5:5547:33793","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2584","`String`":"5:7529:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2584","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:133":{"id":"0:223:133","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[26,4],"end":[26,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2610-0:387:1882":{"id":"b:2:2610-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,31],"end":[196,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:352:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:339:1878":{"id":"0:339:1878","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[199,4],"end":[199,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"2:12838:27834":{"id":"2:12838:27834","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12783:29290":{"id":"2:12783:29290","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820","str::rsplitn":"2:12786:29292"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43955:2856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:387:1882":{"id":"b:5:682-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3178","5:685:3179","5:686:3180"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[565,0],"end":[581,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:277:2036","0:278:1029","0:279:341","0:280:2101"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12846:33131":{"id":"2:12846:33131","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4613:33131"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44168:2864","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:2053":{"id":"0:224:2053","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[28,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12375:1842","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:2075":{"id":"0:261:2075","crate_id":0,"name":"cmp_precedence","span":{"filename":"src/lib.rs","begin":[476,4],"end":[481,5]},"visibility":"public","docs":"Compare the major, minor, patch, and pre-release value of two versions,\ndisregarding build metadata. Versions that differ only in build metadata\nare considered equal. This comparison is what the SemVer spec refers to\nas \"precedence\".\n\n# Example\n\n```\nuse semver::Version;\n\nlet mut versions = [\n    \"1.20.0+c144a98\".parse::<Version>().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n];\n\n// This is a stable sort, so it preserves the relative order of equal\n// elements. The three 1.20.0 versions differ only in build metadata so\n// they are not reordered relative to one another.\nversions.sort_by(Version::cmp_precedence);\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n]);\n\n// Totally order the versions, including comparing the build metadata.\nversions.sort();\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5546:33792":{"id":"5:5546:33792","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:220:134":{"id":"b:2:2606-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:337:1899":{"id":"b:5:682-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3178","5:685:3179","5:686:3180"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33:712":{"id":"0:33:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[94,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[93,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:33:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:220:134":{"id":"a:2:2815:243-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8879:3079-0:356:1903":{"id":"a:2:8879:3079-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:308:452":{"id":"0:308:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[162,9],"end":[162,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2619:134":{"id":"2:2619:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:226:133":{"id":"0:226:133","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[85,4],"end":[85,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,9],"end":[196,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:344:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:386:712":{"id":"0:386:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[252,43],"end":[252,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:387:1882":{"id":"b:2:2616-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[381,0],"end":[482,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:259:1029","0:260:1839","0:261:2075"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2606-0:387:1882":{"id":"b:2:2606-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:3079-0:402:1884":{"id":"a:2:8879:3079-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2621-0:402:1884":{"id":"b:2:2621-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,0],"end":[535,1]},"visibility":"default","docs":"The default VersionReq is the same as [`VersionReq::STAR`].","links":{"`VersionReq::STAR`":"0:263:2087"},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12814:33125":{"id":"2:12814:33125","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12845:9035":{"id":"2:12845:9035","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4616:9035"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44159:2863","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12718":{"id":"2:12718","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12719:867","2:12720:2101","2:12721:33109","2:12722:33110","2:12724:33111","2:12727:2403","2:12728:33112","2:12729:339","2:12730:2321","2:12731:2340","2:12733:29255","2:12735:29256","2:12737:8670","2:12739:33113","2:12740:33114","2:12741:2417","2:12742:29278","2:12743:2391","2:12744:7430","2:12745:2320","2:12746:30768","2:12747:30780","2:12748:25900","2:12749:33115","2:12750:31080","2:12751:29296","2:12754:2218","2:12757:28891","2:12760:3159","2:12764:3121","2:12768:2368","2:12771:29286","2:12774:29288","2:12777:33116","2:12780:33117","2:12783:29290","2:12786:29292","2:12789:29294","2:12792:29295","2:12795:2096","2:12798:33118","2:12801:33119","2:12804:33120","2:12807:33121","2:12809:33122","2:12811:33123","2:12813:33124","2:12814:33125","2:12815:33126","2:12818:2377","2:12821:2216","2:12824:29297","2:12827:33127","2:12830:33128","2:12833:33129","2:12836:1839","2:12838:27834","2:12839:30422","2:12840:27838","2:12841:27839","2:12842:27840","2:12843:33130","2:12845:9035","2:12846:33131"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257-0:220:134":{"id":"0:257-0:220:134","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[111,0],"end":[111,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::parse::Error","name":"Error","id":"0:220:134","glob":false}}},"2:12789:29294":{"id":"2:12789:29294","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12728:33112":{"id":"2:12728:33112","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12741:2417":{"id":"2:12741:2417","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12742:29278"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12780:33117":{"id":"2:12780:33117","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12415:2820","str::split":"2:12768:2368","prim@char":"1:12034:448","str::split_terminator":"2:12777:33116"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43919:2852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:337:1899":{"id":"b:2:2300-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381:656":{"id":"0:381:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[252,26],"end":[252,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:322:1897":{"id":"b:2:2621-0:322:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:3079-0:220:134":{"id":"a:2:8879:3079-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3450-0:301:1877":{"id":"b:2:3450-0:301:1877","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2625:1612":{"id":"2:2625:1612","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:383:776":{"id":"0:383:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[252,37],"end":[252,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,25],"end":[318,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12751:29296":{"id":"2:12751:29296","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12740:33114":{"id":"2:12740:33114","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12040:1531","crate::ops::IndexMut":"2:3116:2581","str::slice_unchecked":"2:12739:33113"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,40],"end":[376,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:415:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:193:1126":{"id":"0:193:1126","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12792:29295":{"id":"2:12792:29295","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:712":{"id":"0:31:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:30":{"id":"0:30","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[87,0],"end":[91,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:31:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:399":{"id":"0:399","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,40],"end":[318,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:400:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[31,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3049:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:188:255","0:189:591"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[537,0],"end":[545,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:1839","0:270:2096"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:306:1883":{"id":"0:306:1883","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2606-0:402:1884":{"id":"b:2:2606-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3115"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:776":{"id":"0:333:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[188,31],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2620:1614":{"id":"2:2620:1614","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12807:33121":{"id":"2:12807:33121","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12836:1839":{"id":"2:12836:1839","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12376:133","`FromStr`":"2:12375:1842"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12375:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12375:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:33790":{"id":"5:5535:33790","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:356:1903":{"id":"b:2:2303-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25288"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3450-0:356:1903":{"id":"b:2:3450-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,22],"end":[252,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,29],"end":[318,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5530":{"id":"5:5530","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5531:33789","5:5532:2683","5:5535:33790","5:5538:33791","5:5546:33792","5:5547:33793","5:5548:2726","5:5549:27836","5:5550:27837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8879:3079-0:387:1882":{"id":"a:2:8879:3079-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5804-0:402:1884":{"id":"b:5:5804-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:318:1126":{"id":"0:318:1126","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[162,36],"end":[162,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:1029":{"id":"0:273:1029","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[552,4],"end":[554,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:656":{"id":"0:398:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[318,29],"end":[318,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:3180":{"id":"5:686:3180","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:350:656":{"id":"0:350:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[196,20],"end":[196,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:405:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2300-0:387:1882":{"id":"b:2:2300-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:27:712":{"id":"0:27:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[49,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:591":{"id":"0:186:591","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[26,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3049:123","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,20],"end":[188,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:1126"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12754:2218":{"id":"2:12754:2218","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:387:1882":{"id":"a:2:2815:243-0:387:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:37:712":{"id":"0:37:712","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:382":{"id":"0:382","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,37],"end":[252,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:383:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:1029":{"id":"0:259:1029","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[399,4],"end":[407,5]},"visibility":"public","docs":"Create `Version` with an empty pre-release and build metadata.\n\nEquivalent to:\n\n```\n# use semver::{BuildMetadata, Prerelease, Version};\n#\n# const fn new(major: u64, minor: u64, patch: u64) -> Version {\nVersion {\n    major,\n    minor,\n    patch,\n    pre: Prerelease::EMPTY,\n    build: BuildMetadata::EMPTY,\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["major",{"primitive":"u64"}],["minor",{"primitive":"u64"}],["patch",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5804-0:220:134":{"id":"b:5:5804-0:220:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,15],"end":[252,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,16],"end":[188,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:375:452":{"id":"0:375:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[252,15],"end":[252,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3452:1627":{"id":"2:3452:1627","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39691:7211","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[25,0],"end":[82,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12375:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:301:1877","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:133","0:224:2053"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323:1898":{"id":"0:323:1898","crate_id":0,"name":"comparators","span":{"filename":"src/lib.rs","begin":[191,4],"end":[191,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::alloc::vec::Vec","id":"5:6954:269","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"5:684:3178":{"id":"5:684:3178","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:280:2101":{"id":"0:280:2101","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[578,4],"end":[580,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:1879":{"id":"0:303:1879","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2610-0:337:1899":{"id":"b:2:2610-0:337:1899","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1899","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,26],"end":[252,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:402:1884":{"id":"b:2:3450-0:402:1884","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2964","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1884","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:369:1950":{"id":"0:369:1950","crate_id":0,"name":"Caret","span":{"filename":"src/lib.rs","begin":[261,4],"end":[261,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12747:30780":{"id":"2:12747:30780","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12746:30768"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44134:2865","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12818:2377":{"id":"2:12818:2377","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2820"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5531:33789":{"id":"5:5531:33789","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2584","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2584","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[84,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12375:1842","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:322:1897","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:133","0:227:2053"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12811:33123":{"id":"2:12811:33123","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2965-0:356:1903":{"id":"a:2:2872:2965-0:356:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2965","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"6:7645:7041":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:22:726":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:946:8317":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:2201:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:42481:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:4870:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:39608:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:42117:3585":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:22524:7109":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:48142:7554":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:14146:5263":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:4330:8350":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:10266:8194":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:22304:9367":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"5:5872:2589":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:10490:9114":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:207:4196":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:31167:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:10973:3587":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:2913:4280":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:9575:34106":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:14421:5355":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13287:4987":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:10241:4538":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:40655:7360":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:6059:6784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:43720:2744":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:4105:14413":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:3990:9159":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:41126:2721":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:5897:6695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:11292:4310":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:21421:9114":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"18:636:4396":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:4884:6511":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:2766:5430":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:10317:4558":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:5673:5442":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:569:6111":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:5397:8405":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"0:337:1899":{"crate_id":0,"path":["semver","Comparator"],"kind":"struct"},"6:4556:6393":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:42559:8357":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:40285:7340":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:4864:31967":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:1576:6173":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:4682:14469":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"9:507:6036":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:14002:5225":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:6646:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:23228:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:10931:2856":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:3682:4197":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"0:357:1944":{"crate_id":0,"path":["semver","Op","Exact"],"kind":"variant"},"1:12045:688":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:3338:2587":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"6:4841:6494":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:475:6055":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:4800:6471":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:45841:7454":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:6100:6804":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:10100:2714":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:12038:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"6:5009:6582":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:6583:5608":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:2832:5433":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"11:1160:8324":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"15:288:20337":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13260:4984":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:4153:9180":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:4179:8348":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:7067:5691":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"14:187:20325":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:7894:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:6804:6926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8843:7657":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:1514:6138":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:4233:8399":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13576:5110":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:4364:6284":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:1537:6148":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:8233:8433":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:4404:2620":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:2548:5421":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:14043:5234":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13740:5161":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:7360:34097":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:23042:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:10340:8703":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:4462:5473":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:40520:4248":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:9845:2609":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:46193:7469":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:12044:4746":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:10298:4261":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"11:774:5960":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:2915:2789":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:5570:6820":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:2978:2802":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:7006:8284":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:3150:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:40530:8363":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:12738:4884":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:42074:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:2537:9114":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:4986:5489":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:42206:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:44574:2830":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:7568:5454":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:910:8325":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"6:5140:6642":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:4070:8347":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"11:883:8318":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:32499:3103":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:4939:1092":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:8992:25653":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:8275:7627":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:256:8156":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:4745:6442":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:11887:4707":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:6222:6833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:41997:3586":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:40445:7354":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:3293:2810":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:8147:7621":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:6960:8283":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:10534:8389":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"5:6525:4197":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:5044:6600":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:3968:9157":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:7505:7084":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:30605:3310":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:44777:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:40381:14475":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:12699:4879":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:3032:5459":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:2596:5423":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:44125:2849":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:10157:8452":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:40739:2766":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:12209:4772":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:4478:2623":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:2601:4261":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:46910:7507":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:400:8158":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:5017:5490":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:2618:5424":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:22151:9373":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"18:564:4385":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:42362:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:13694:5152":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:2670:5426":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:43694:3598":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:40407:14476":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:9306:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:40730:2765":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:32387:8361":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:12831:4895":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:7333:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:8097:5811":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:9052:21291":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:43955:2856":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:6156:5569":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"11:2562:5972":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:10576:4570":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:6226:8268":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:12005:9042":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:4401:6312":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:47818:7548":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:39878:30418":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:12779:4890":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:8154:8303":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:10411:8200":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:8829:7656":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:7292:2719":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:622:3294":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:48226:7561":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:7702:7054":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:3445:8395":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:4182:9183":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"18:690:4400":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:43765:3594":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:2933:20383":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:4394:4246":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:10367:8196":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:2958:2798":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:22244:9375":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:12226:4780":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:12946:4933":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:13852:5186":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:10535:4567":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:44594:2826":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:40346:7346":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:3986:4220":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:1184:8161":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:11309:7689":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:7474:8294":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"11:2469:2587":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:23321:2662":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:5989:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:6599:2591":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:12057:1691":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"14:40:4722":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:5084:8402":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:1644:629":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:5827:4283":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:7657:7043":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:10078:8381":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:44134:2865":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:4535:6382":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:2894:2658":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:42323:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"9:393:20234":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:2943:2794":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:10495:4563":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:4471:9185":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:13974:5217":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:6479:2589":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:78:1691":{"crate_id":2,"path":["core","usize"],"kind":"module"},"6:489:6063":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"18:521:25282":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:4943:848":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:8797:8436":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:11548:4673":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:43654:3582":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:10648:3585":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:13275:4644":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:8170:9113":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:629:8331":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:45931:7458":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:47708:7547":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:9004:21313":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:10580:4305":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"5:7529:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:10739:8223":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"11:2443:2589":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"5:4177:4220":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:4058:8346":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:44566:2825":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"11:844:9053":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"18:582:2710":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:7291:2589":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:1522:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:9608:8173":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:11408:21314":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:3232:5404":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:10699:8219":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:4744:9173":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:9049:25596":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:6017:21245":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:40366:2863":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:44411:7436":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:10060:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:5982:5538":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:894:2589":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:4344:5471":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:868:5960":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"5:7311:32964":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:7518:4229":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:7679:7048":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:2982:2803":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4860:6502":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:1961:2699":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:9311:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:41866:7627":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"18:590:4386":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:105:313":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"5:6008:8696":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:3201:8389":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:21540:9114":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:3049:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:9187:26151":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:11449:21315":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:13547:5099":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:2970:7065":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11952:4724":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:46462:7481":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:10715:8221":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:7902:7580":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:46786:7490":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:44828:7450":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13299:4994":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:43645:3584":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"18:113:25271":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:3232:8167":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:8896:21309":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:10198:8189":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:1697:6256":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:4082:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:10508:4565":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:1967:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:6700:6890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:48020:7551":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:48264:7563":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:1591:6185":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:7462:2258":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4488:6363":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:14461:5366":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:7041:5685":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:9811:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8979:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"13:110:34085":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4847:6497":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:44001:2859":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:12087:4751":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:9110:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:12268:4795":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:4702:9212":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:6813:9283":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:14119:5256":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:8849:21308":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:9148:7668":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:3888:5468":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:2864:5434":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:4496:6365":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:10617:4574":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:3502:9112":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:12033:1025":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:40393:7348":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:30633:31048":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:10904:8224":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:62:14784":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:42520:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:12041:1617":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:7828:5766":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:14309:5324":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:13216:4977":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:9469:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:4893:6514":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:9035:7663":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10060:4542":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:501:6068":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:6718:6899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:4835:5484":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:44299:7432":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:2364:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:14317:5327":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:7782:5758":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:2305:20382":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:4639:6912":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:42167:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:2209:8166":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:6898:4296":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"11:123:4187":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"11:2326:8319":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:2580:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:42931:2220":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:2210:9096":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"7:0:1681":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:8239:5742":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:12514:4852":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7523:5748":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:46386:7479":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12599:4864":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:7581:4299":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:12306:4803":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:582:4514":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:724:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:6071:6791":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:4361:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:4557:5476":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:10162:1498":{"crate_id":2,"path":["core","slice"],"kind":"module"},"1:7644:9114":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:3287:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:9651:4553":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"10:36:5975":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:48189:7558":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:7513:5747":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:13686:5151":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12532:4853":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:4783:6462":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:41175:2733":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:45985:7460":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:22289:9114":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"9:330:6013":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:10955:8408":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:11873:4706":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"11:396:4191":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:8552:7651":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:7844:8422":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:504:4214":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"11:2542:5968":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:10313:4266":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:5322:5494":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:46508:7483":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4428:6335":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:10963:4616":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:14025:5230":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:12791:4891":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:22202:8653":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:7896:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:2587:4277":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:1450:2591":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:11227:4637":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:7739:9072":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:10323:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:10500:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:9851:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:3427:7625":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:3282:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11911:4721":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:687:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:8301:8431":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:2899:2786":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:23197:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:3280:8393":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:6542:8416":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:4989:6571":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:11384:7696":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"10:0:2428":{"crate_id":10,"path":["adler"],"kind":"module"},"6:542:6097":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:2231:32943":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:7597:34095":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:6425:5591":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:1744:653":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:9763:34101":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:21429:9288":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:6856:2595":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10113:8188":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"11:2403:3586":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"6:574:6113":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:2919:2793":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:495:6066":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:10441:8203":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:42440:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:9100:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:13817:5176":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:2948:2795":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:42014:3076":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:8138:2258":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:44253:7422":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:10384:8198":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:5612:5443":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:4325:8349":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:11789:4688":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:6929:5669":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:8954:21311":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:7391:21252":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:5956:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:5130:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:2251:7068":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:32351:5971":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"5:6346:9377":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:7102:21251":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:6079:6792":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:2823:3097":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:40637:2758":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:3325:9141":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"11:1891:2589":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:2827:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:2427:2441":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:8287:9184":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:7522:2722":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:3312:31985":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:43837:2845":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:39691:7211":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:40617:2756":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:5939:5534":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"11:1582:8326":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"11:2352:8321":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:9129:7667":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:4698:6437":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"11:837:8312":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:5339:4197":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:43775:3595":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:13072:4950":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:3932:9156":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:12766:4889":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:43445:3605":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:1531:8334":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:5645:2594":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:11662:4679":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:0:528":{"crate_id":2,"path":["core"],"kind":"module"},"2:48215:7560":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:12157:2872":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:357:8369":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"9:52:8585":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:5798:5513":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:9702:8174":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:15:2224":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:13102:4956":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:6120:6809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:13555:5102":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:44150:2862":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:2788:5431":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:22615:7119":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:6682:6883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:2284:20356":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:14084:5248":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:45953:7459":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:8214:2853":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:41853:7389":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:6819:6931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:2380:5414":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:11001:4618":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:5004:6580":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:9934:8180":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"14:221:5905":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:7284:3076":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:42921:7396":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:14111:5255":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:5748:8409":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:42133:2591":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:48104:7553":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:6148:4271":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"15:306:20338":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:3080:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:5661:5502":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:8201:2734":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:43851:2853":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:46156:7467":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:6913:6992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:9853:21325":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:2369:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:44019:2860":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:2927:2790":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:0:2433":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:8546:3585":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:39705:7213":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:2583:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:14379:5349":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:4705:9185":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:1496:6130":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:7660:5754":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"11:1923:5965":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:9753:8175":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:42961:5785":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:6047:6779":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:5023:6588":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:43746:3593":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:5963:8246":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:2953:2796":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:40400:7349":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:43869:2851":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:14057:5241":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:8050:5807":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"11:1051:8321":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:10521:4566":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:4724:6439":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:21549:9286":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:482:4273":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:3243:8392":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:2663:8388":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:4949:5488":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:43426:7411":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:4458:2621":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:8002:8426":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:39652:2807":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13203:4976":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10686:8217":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:14500:5375":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:13869:5191":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:13982:5218":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:1481:5961":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:4388:6302":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:1041:5694":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:46240:7470":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:6889:6982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:13668:5146":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:3748:8335":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:44870:2639":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:3576:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:11508:21316":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:1763:7088":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:10740:8460":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:13163:4971":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:8795:21306":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:1265:5694":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:7262:2583":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:4641:5479":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"5:2698:7072":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:12000:8606":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:3813:2587":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:10662:8213":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"18:652:4375":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:11614:7700":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:11688:21317":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:43211:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5015:6583":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:5384:21242":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:9446:8170":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:4585:5477":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:2877:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:14283:5315":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:21226:32056":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"6:4647:6433":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:7849:7577":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:7664:8419":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:30338:2656":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:12025:4741":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:3737:8397":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:11338:21438":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:12486:14435":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:6012:6758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:434:4470":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:7755:8421":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4473:6357":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:4169:9182":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:44055:2857":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:8974:8439":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:6696:5633":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:44858:2641":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:43194:7404":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:9661:34103":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"11:430:34084":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:9351:4526":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:14449:5364":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:14164:5266":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:3512:9133":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:11236:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"2:2316:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:13260:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"13:226:5952":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:8826:21307":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11262:4639":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:10804:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:12124:4757":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"18:766:25281":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:7907:7581":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:5502:8408":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:43919:2852":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:1055:8319":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:4666:6434":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:106:567":{"crate_id":5,"path":["alloc","alloc","dealloc"],"kind":"function"},"6:1718:6264":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:5627:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:8960:7662":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:10890:3590":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:43241:7410":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:8867:2591":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:4800:4281":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:41133:2723":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"0:371:1951":{"crate_id":0,"path":["semver","Op","Wildcard"],"kind":"variant"},"1:5973:4289":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:1481:2310":{"crate_id":2,"path":["core","mem"],"kind":"module"},"18:96:25270":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:12423:4832":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:8210:2738":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:3484:2221":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:596:6126":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"11:351:34076":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:4676:6435":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:3982:9158":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:2538:14480":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:5634:4289":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:44168:2864":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"11:1917:5964":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"9:177:8595":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:6560:4186":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:11970:2840":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:4908:6521":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:507:6071":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:11152:8239":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:11192:4626":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:6741:6917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:2504:5419":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:1146:32977":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:21979:9114":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:11174:21437":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:10024:8174":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:11087:8234":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:14091:5249":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:13017:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:47360:7514":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:5075:6610":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:2837:2576":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:10950:8227":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:41683:7373":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:11245:4677":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:8991:2834":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:3565:8169":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:21212:32051":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4566:6400":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:536:5394":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:13091:8359":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:4045:4197":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:12185:4770":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:43663:3583":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:6943:7007":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:4843:417":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:10166:21344":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:10215:4257":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:14523:5379":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:10562:4569":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:10293:4553":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:43809:2843":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8007:8427":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:42057:3321":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:6792:5659":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:41700:7375":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"11:2304:5694":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:9853:2612":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13229:4978":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:6415:5590":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:23104:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:4516:6374":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:8281:5825":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:23073:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:5955:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:2297:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:6164:4288":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:12048:791":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:4641:6914":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:42066:3681":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:2574:5422":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:7706:2742":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:44598:2827":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:4044:9163":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"9:450:20233":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:9087:4518":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:7070:2743":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:7554:8345":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:7541:8468":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"11:2554:34074":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:8878:3080":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:2203:8385":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"11:1676:4193":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"15:0:2432":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:12960:4935":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:45861:7455":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:10140:21343":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:6681:4197":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:2880:2694":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:2428:5416":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:8327:8435":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:9839:117":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:11935:4722":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:40707:2749":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10431:8202":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:11621:7700":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:5974:6730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:2987:2804":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:47566:7546":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:7476:31054":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:40755:2767":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:9847:2610":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:3062:2805":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"18:614:34115":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:10769:7577":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:40627:2757":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:14127:5258":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:40358:2864":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11474:4484":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:9638:2630":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:4549:6390":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:1903:3293":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:6112:4220":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:6332:5437":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:7839:4463":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:12429:2837":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:10647:4658":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"11:2498:20308":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:9391:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"5:122:2309":{"crate_id":5,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"2:26168:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:22175:9114":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"2:40473:7355":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:3168:28363":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4955:6546":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"11:102:5953":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:781:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:6243:8271":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:2969:20384":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:3165:28366":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:6666:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:12253:4789":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:21827:9114":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"5:3212:5964":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:7718:9040":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:1528:6143":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"0:402:1884":{"crate_id":0,"path":["semver","BuildMetadata"],"kind":"struct"},"1:3203:8390":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:30621:2220":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:2825:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:11317:4646":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:8879:3079":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:1874:3292":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:3493:28407":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:8208:2845":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:14157:5264":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:13039:32209":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"11:673:3585":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:44767:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:8815:7655":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:7639:7040":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:1749:2697":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:4806:5483":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:6196:8414":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:11368:4650":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:10537:8391":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"11:2548:5969":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:40919:2770":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:44459:2838":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"5:1110:32979":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:12054:1635":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:4889:5486":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:4947:6541":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:12044:686":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:41929:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:4:1105":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:1910:699":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:11352:4649":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:21168:32048":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:42681:2609":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:2936:2797":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:11202:4628":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"5:5802:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:44570:2828":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:5634:5498":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:9522:8171":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:12034:448":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:1539:2591":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"18:0:2435":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:10764:7678":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:14479:5372":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:10371:8197":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:11112:8236":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"0:359:1945":{"crate_id":0,"path":["semver","Op","Greater"],"kind":"variant"},"1:1407:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"11:875:8317":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:14470:5370":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:7362:2591":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44586:2831":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:39542:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:1734:6269":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:11607:27891":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:9022:8444":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:43594:8368":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:13612:5140":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:7090:5693":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:7622:7035":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:48279:7564":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:44820:7834":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:3672:9154":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"5:4207:4220":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:10751:4579":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:1557:5963":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:6893:5667":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:14402:5350":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:10099:8450":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"1:5641:7572":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:9373:4527":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:1546:2587":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:48160:7555":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"0:363:1947":{"crate_id":0,"path":["semver","Op","Less"],"kind":"variant"},"1:8309:7629":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:6114:6806":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"18:507:4375":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:13056:4949":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:1075:8160":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:638:8372":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:41980:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:7884:21255":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:4455:6345":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:7240:30846":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13967:5216":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:4543:6387":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:3220:5962":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:8248:32340":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"16:7342:34098":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:13724:5158":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:40646:2759":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"0:367:1949":{"crate_id":0,"path":["semver","Op","Tilde"],"kind":"variant"},"1:7600:4301":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:9887:8177":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:2722:5428":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:7370:2591":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:10475:4304":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:46940:7508":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:3112:2580":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:8892:7659":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"9:426:20235":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:21180:32048":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:3282:8394":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:11536:4672":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:3996:9160":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:1596:6187":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:39684:2809":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:2905:2788":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:40608:2747":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:7856:7578":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:43004:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:8404:7640":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:12912:4930":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:5867:6678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:40306:31065":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:6961:7010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:44646:7447":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:43673:3591":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11972:4734":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:1490:8325":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:1632:6217":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:2321:5405":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:12811:4894":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:4774:5482":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:1797:8381":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:2043:7058":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:13568:5109":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:6072:4284":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:9999:4507":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:8880:3078":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:12053:1634":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:44479:2839":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:44582:2833":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:21857:3580":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:6401:5439":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:5121:5493":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:22258:2676":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"11:328:5957":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"0:0:2102":{"crate_id":0,"path":["semver"],"kind":"module"},"6:5921:6704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:11965:1531":{"crate_id":2,"path":["core","str"],"kind":"module"},"1:10249:9241":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:1761:8380":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:8181:5458":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:7862:5770":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:860:2591":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"18:719:4406":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:9197:7672":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:11099:8235":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:5859:6676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:5910:6696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:11342:7693":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:2668:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:12120:2870":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:22418:7107":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:44159:2863":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:46116:7465":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:6107:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:44143:2861":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:13315:2582":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:4922:6529":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:14537:5382":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:5727:5507":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:588:9034":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:8072:5808":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"11:2369:8330":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"5:2149:7060":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:12453:4840":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:1639:6221":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:4506:6371":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:9481:4303":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:2012:8162":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:1913:16189":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:14135:5259":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:4523:6377":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:2974:8694":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:2577:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:13990:5219":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:7462:7079":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:10085:8186":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:46706:7489":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:7365:7017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:3073:2341":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:261:4197":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"16:5648:8244":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:2294:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:48169:7556":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:41908:7391":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:12008:4739":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:12877:4919":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:43233:7409":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:12056:842":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:1650:6229":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:837:3585":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:12231:2866":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:3915:5469":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:5866:5526":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:44602:7446":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:10981:4553":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:44347:7434":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:13175:4972":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:7137:27789":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:12040:1531":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:123:14839":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:5310:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:12049:792":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:40769:2768":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"11:832:8325":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:9329:2845":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6879:5665":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:1563:5964":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:2696:5427":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:2406:5415":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:21832:9291":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:6927:7001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:13004:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:6687:5632":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:43223:7405":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:12155:4766":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:10759:7676":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:12466:4842":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:1507:6135":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:2967:3178":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:4449:4247":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:2889:2659":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:46015:7461":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:10772:4581":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:23290:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"4:0:2425":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:6531:5604":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:48294:7565":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:7613:2587":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"11:856:8315":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:2178:8163":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"18:736:25280":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6261:8279":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:9532:34107":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13423:4996":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:14174:5271":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:46652:7487":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:11818:4315":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:3191:33033":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:11315:8465":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:6691:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10638:4578":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:14435:5357":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:12485:4847":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:10824:7622":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"5:7271:2591":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:6361:5582":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:6742:5645":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:6721:21249":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:43202:2715":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:1568:5965":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:4313:8400":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:1500:8310":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:10946:6033":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:5242:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:1772:2696":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:21442:7106":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:3209:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13114:4958":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:11273:4640":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:6346:8282":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:11720:21318":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:14270:5309":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:7932:7058":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"5:7341:7078":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:10589:4571":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:7916:8424":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:9792:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:44578:2829":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:4613:5478":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"9:0:2427":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:4385:8401":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10127:4544":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:1680:4197":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:23135:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:4610:6421":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:4439:4222":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:588:6121":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"11:299:5954":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:10052:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:10833:28401":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"16:5363:5495":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:10970:26126":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:40457:31054":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:40487:9083":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:6468:4293":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:42688:2608":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:10469:4561":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:5053:8402":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:12037:1142":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:46432:7480":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:9165:8447":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:952:8318":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:8873:7658":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:9138:4520":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:6545:5606":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:5969:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:10548:4568":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:563:6108":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:8563:7652":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:6251:4289":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:30797:31060":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"18:660:8151":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"9:237:7405":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:9618:34109":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:7651:8302":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:7736:5756":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:44282:7431":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:9841:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:13041:4945":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:6781:6919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:7318:5725":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:5033:6594":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:3116:2581":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:14034:5233":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:6818:5660":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:10013:4553":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"18:699:4401":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:3241:8391":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:4862:5485":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:4776:6461":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:9493:32337":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:1651:3308":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"11:2151:8321":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:39586:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4375:6292":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:3272:2808":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:40586:2755":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:7530:4514":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:4998:6577":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:11618:4677":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:22698:7131":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"11:1910:5963":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:2970:2800":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:6169:6822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"18:609:8150":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:6545:9252":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:2400:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:7668:7047":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:5891:6694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:2911:2787":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:1434:3586":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:4902:8353":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:5941:6717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:4321:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:11125:8237":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:12046:793":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:4210:7092":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:12112:4756":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:12971:4936":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:12935:4931":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:3327:2815":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:42142:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:3734:8396":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:7381:26417":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:21214:32046":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:580:6116":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:7462:5743":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:5085:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:1296:8319":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:11172:28404":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:4745:5481":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:4932:6535":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:47022:7509":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:7879:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:12051:1636":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:8905:9257":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"14:160:8307":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:2869:3099":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:22333:9368":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"14:165:20318":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:10740:2866":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:9712:34105":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:11743:4684":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:5052:6602":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:9836:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:9849:2611":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:4461:6348":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:11075:8233":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"11:1025:8319":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:5088:5492":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:1604:6192":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:3733:7058":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:12998:4939":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:7756:2740":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:46554:7485":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:4406:4220":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:11458:3599":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:11307:4644":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:30599:2578":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:43973:2855":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:4823:9170":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:6253:2773":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:12544:4855":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:1064:8321":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:3557:2589":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"11:2124:5694":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:39566:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:4902:6520":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:9565:8172":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:6445:7097":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"5:3589:3585":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:14356:5336":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:6837:6942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:4814:6477":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:13915:5202":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:1019:4197":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:11640:4626":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:12058:1238":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:35:2586":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:2212:2677":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:30691:31051":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:12099:4754":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:14336:5333":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:46484:7482":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:12889:4921":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:2822:2964":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:44785:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:11036:4307":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:13793:5174":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:14014:5226":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:929:9053":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:11163:4621":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:40909:2769":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:7598:7031":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:3031:2813":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"17:11394:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"3:0:473":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:12672:4586":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:2810:5432":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"15:394:20347":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"17:9781:8176":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:12712:4881":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:2450:5417":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:5573:9239":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:21195:32055":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:6866:2596":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:7492:5744":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"16:6279:5576":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:904:2587":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:6359:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:72:842":{"crate_id":2,"path":["core","isize"],"kind":"module"},"2:5828:2748":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:22556:7113":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:46175:7468":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:10917:8225":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:5387:14428":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:2519:8386":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:21981:9287":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:4808:6475":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:44436:7437":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:7792:21254":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:42977:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:5992:6742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:1382:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:5696:21243":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:13211:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:3162:26330":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:12646:4870":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:1710:6260":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:41119:7368":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:11491:4670":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:43683:3592":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:923:8312":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:45885:7456":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:4628:6432":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4529:6379":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:40322:7344":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:10187:4550":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:11491:3600":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:11587:4676":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:7371:7019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:4449:6343":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:4719:5480":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:48241:7562":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:40698:2763":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:23166:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:39526:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:9973:7386":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:8714:21304":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:6432:8415":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:6499:5457":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:40336:7345":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:5715:2760":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2206:2347":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:6189:5574":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:41148:2727":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:4493:9186":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:5928:6708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:1822:8382":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"11:700:2591":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:10604:4573":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:10457:8208":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:7651:7042":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:3049:20385":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:7543:7085":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:6228:6834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:8937:9258":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:2931:2792":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:12059:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:6376:21247":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:46338:7478":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:12196:2871":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:46286:7476":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:4434:6336":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:48180:7557":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:8386:9221":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"0:356:1903":{"crate_id":0,"path":["semver","Op"],"kind":"enum"},"1:8477:7643":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:39427:2817":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:2884:2657":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:10945:2855":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:22067:9371":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:11282:4641":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:39513:2806":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:6998:4238":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:48317:7566":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:8205:21256":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:8687:21303":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:11983:7740":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"16:5049:5491":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:11138:8238":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:42005:2591":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:4764:6454":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:22471:7108":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:7556:7030":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:8353:7630":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"14:31:8307":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:43441:7412":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"11:1883:3585":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:6968:21250":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:6934:7004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"7:78:20226":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:11296:4642":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:3368:2727":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:43733:3597":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"5:5383:14427":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:1691:6253":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:40669:2761":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:42245:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:8660:21290":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:41717:9153":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:44658:14573":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:13827:5177":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:2968:33107":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:44883:7453":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:7692:7052":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12075:4750":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:47896:7549":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:7708:5456":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:2369:9103":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:9208:4522":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:5130:6641":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:13066:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:8766:21305":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:5123:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:41157:2729":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"16:5743:5508":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:654:15197":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:7544:5749":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:32412:7202":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:12050:788":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"5:7301:4207":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:2744:5429":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:46530:7484":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:8293:8434":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"18:491:4374":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:42986:2220":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:22580:2660":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:6844:5661":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:12016:26139":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:7534:5452":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:2339:5407":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:3448:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"18:681:4397":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"11:2569:2585":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"11:2536:5967":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"18:624:34114":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:261:8157":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:1535:3585":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:9173:4521":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:4921:5487":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:4968:6556":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:44115:2850":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:8927:21310":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:23011:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:5574:5438":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:22112:9372":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:4908:9210":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:22190:9374":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:9276:3710":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:2210:2676":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:6798:6924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:557:8371":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:5816:5518":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:43901:2854":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:2355:9099":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:46864:7506":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:2472:5418":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"13:0:2424":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:11160:7656":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:6318:5579":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:9897:21326":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:13189:4973":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:0:2434":{"crate_id":17,"path":["object"],"kind":"module"},"1:9015:2260":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:11478:8396":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:48066:7552":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:41989:3585":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:5760:21244":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:21423:9285":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:9960:8182":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"11:811:2587":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:11180:7446":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:9843:2608":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:8201:2769":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:2875:3101":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"19:0:1122":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:11816:4694":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"18:481:4373":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:7610:7033":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"0:301:1877":{"crate_id":0,"path":["semver","Version"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:44590:2832":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:527:6088":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:41746:7382":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:14069:5244":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:4578:6406":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:11357:7694":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:44425:14442":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:13759:5162":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:3692:2591":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:14325:5328":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:574:4375":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:7015:5684":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:14222:5308":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:850:3586":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:6944:34094":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:13633:5145":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:9456:34104":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:4710:6438":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"18:671:8155":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"11:1896:2587":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:646:9037":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:22669:31062":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:2623:8387":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:44841:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:11992:4735":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"9:357:20248":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:7028:4297":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"11:2383:3585":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:7722:5446":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:12035:1652":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:6450:4254":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"6:5152:6647":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:13488:5047":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:8851:3585":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:2709:3297":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:40374:2862":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:533:6091":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:12984:4938":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:6386:5587":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:9476:8422":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"5:2978:8695":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:7621:21253":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:5712:5504":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:12039:1498":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:11956:3579":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:9793:2221":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:11199:7667":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:10794:7578":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:41142:2725":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:4351:6275":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10228:8193":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:2907:5436":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:40294:7341":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:4830:6486":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:4878:6510":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:6764:6918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"5:7445:4224":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:11217:7688":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:46605:7486":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:3246:5965":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:6915:5448":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:7710:2741":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:5542:4220":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"5:7325:2591":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:12725:4882":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:6837:2594":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:0:872":{"crate_id":6,"path":["libc"],"kind":"module"},"6:5117:6635":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:9105:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:12497:4849":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:2371:9104":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:5146:6644":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:8282:7628":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:2574:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"8:0:2426":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"0:369:1950":{"crate_id":0,"path":["semver","Op","Caret"],"kind":"variant"},"5:825:4202":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"5:3225:33034":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:8921:9256":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:555:6103":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:8012:2257":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:45907:7457":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:10814:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:32405:2620":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:7733:9041":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:10727:8222":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:10629:4577":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"5:1472:5960":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:40550:8364":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:8536:7648":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"11:1566:20313":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:4966:9217":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:5885:6691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:12032:399":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:46037:7462":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:5111:6632":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"16:3065:4417":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:47176:7512":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:6263:6859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:40678:2762":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:9243:4523":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"0:365:1948":{"crate_id":0,"path":["semver","Op","LessEq"],"kind":"variant"},"17:12137:4758":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:13452:5016":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"18:515:4378":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:12646:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:4505:2622":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:5448:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:2881:5435":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"5:276:2584":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:2150:21371":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:21197:32043":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"11:742:8311":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"18:707:2837":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:2139:4214":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:4131:27799":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:4627:9160":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:7343:7016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"11:364:4189":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:1784:2587":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:13086:4952":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:7604:7032":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:12063:4747":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:149:4184":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:21368:9114":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:13222:4271":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"7:31:20219":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"11:787:5961":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:7645:7573":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:8227:8431":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:8195:5818":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:785:4199":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:1511:8311":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"11:1142:8323":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:41660:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:22705:2663":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:1558:6163":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:2832:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:7054:5688":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:22204:2676":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:11940:3577":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:11328:4647":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:11595:7699":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:7279:7077":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:4999:4220":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:7492:7082":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:8859:8438":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:2406:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:43795:2844":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:2815:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:46683:7488":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:8238:9152":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:3441:8168":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"14:7:8307":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:13136:4969":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:48356:7567":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:4616:6423":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:4087:3586":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:5905:5528":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:8454:7405":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:3764:5465":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:9027:8445":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:6136:6813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:7866:7579":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:42401:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:7269:34096":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:32391:5742":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:6299:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:44073:2858":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:1664:6240":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:44446:7441":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:12440:2835":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:12555:4856":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"14:215:5903":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:10341:4560":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:6268:34099":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:8494:9234":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:6658:6866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:504:8159":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:43186:2716":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:10037:4540":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:12577:4863":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12659:4873":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:8803:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:42702:2611":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:9103:4519":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:10842:28403":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:7838:2739":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:7669:7574":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:11047:4308":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:3797:5466":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"11:1007:5694":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:6041:21246":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:21869:32053":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"18:727:4409":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:2923:2791":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:5830:5519":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:9472:712":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:2974:2801":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:5782:8413":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:7023:4242":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:8204:2737":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:11762:4687":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"5:678:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:13839:5180":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:10672:3586":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:44374:7435":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:7388:7029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:2353:2667":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:6467:5595":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:2057:8335":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:43827:2846":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:12622:4869":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:10540:8393":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:12847:4900":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:2178:7062":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:3077:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:12751:4886":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:7694:5455":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:10782:7684":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"5:881:4204":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"15:327:8582":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:4253:2619":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:11532:2354":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"5:7429:9052":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:2469:7069":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:1073:8324":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:5755:8412":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:6159:6819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:8115:5813":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:1281:8321":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:6569:5445":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:6868:6968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:363:8370":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:6898:6985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"18:755:4414":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:3938:9155":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:3830:5467":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"11:2231:5966":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"11:1107:8322":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:919:8311":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:1310:8324":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:13877:5194":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13907:5200":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12173:4767":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:7176:2754":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:4603:6419":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:11372:7739":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11063:8232":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:13779:5170":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:8158:7622":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:9095:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:6456:5594":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:41167:2731":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:8221:2848":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:5403:4517":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:9922:8179":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:4917:9211":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:12238:4783":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:1546:6154":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:4527:5475":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7768:5444":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:12047:790":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:12052:1633":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"14:0:2431":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:6985:8633":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:10097:8451":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:10942:8421":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:12474:4844":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:4686:6436":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:1674:6246":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"18:538:4383":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:3461:5463":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:10673:8214":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:4497:5474":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:31195:2710":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:14515:5376":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"11:1087:34079":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:8167:8306":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:9973:8183":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:4755:6449":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"18:80:25269":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:7128:7663":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:1681:1179":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:5987:4228":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"5:1126:8693":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4977:6562":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"14:202:14443":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:22540:7110":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46055:7463":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:9855:2613":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:2590:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:41830:31059":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"5:4860:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:11539:8398":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:1551:5962":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:13898:5199":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:10398:8199":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:42695:2610":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"5:4247:3585":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:6352:5581":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:11455:4312":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:11382:4653":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:10448:5966":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:6485:5440":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"11:687:3586":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:10779:3588":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:43821:2847":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:42949:31601":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:3839:8398":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"12:0:2430":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:4742:9171":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:11146:7655":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:4738:6440":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:1682:6247":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:3083:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:2964:2799":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"5:7417:2585":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"11:1066:20312":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:10479:1877":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:4015:2589":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:42047:3077":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:10058:149":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"1:7924:8425":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:881:5961":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:11518:8397":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:1542:2589":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:6248:6848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12281:4799":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:6612:4294":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:2381:9109":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:43755:3596":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:12438:4836":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:8595:21292":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:4161:9181":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:9946:4538":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:44105:2848":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:13803:5175":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:4040:9162":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:14077:5247":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:6513:5596":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:46086:7464":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:6428:2723":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:5104:6629":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:6086:6793":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:2359:5413":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:47100:7510":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:40426:7353":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:10215:8192":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:641:8374":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:23766:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:1759:8379":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:10959:3589":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:12415:2820":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:4824:6483":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:12294:4800":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"5:3179:3585":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:41889:7390":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:5068:6607":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:4030:9161":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:11236:4638":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:10432:8436":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:1970:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5982:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:40557:2744":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:7503:5451":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:7785:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"18:644:4375":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:11711:4644":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:9986:8184":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:3186:5963":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:13950:5208":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:12374:4807":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:9868:4535":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11390:8241":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:5637:4220":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:40577:2745":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:2826:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"6:6711:6895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:4571:9203":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:43026:2618":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:6204:8253":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:11053:4309":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:10988:7657":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:1820:3710":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:10930:4613":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:7629:2588":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"18:599:34113":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:1501:6132":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:2948:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:6598:8699":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:9913:8178":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:8331:6899":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13677:5150":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:4440:6338":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:47210:7513":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:4789:6465":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13711:5153":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:2946:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"6:4854:6499":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"11:2140:8319":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:1558:4220":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:4746:9174":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:40599:2746":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:40720:2764":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:32398:8362":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:7690:4305":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:6901:5447":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:40933:2771":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:11390:7697":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:1840:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"9:486:20232":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:3315:5462":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:12197:4771":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:22653:31049":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:46316:7477":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:1570:6171":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:2657:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:548:6100":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:10697:2853":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:1419:3585":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"11:0:2429":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:3396:4220":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:915:8310":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:40279:2863":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:940:8315":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:4053:5470":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:40687:2772":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"11:1903:5962":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:6753:5646":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:44621:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:119:14838":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"11:710:8310":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:12180:2869":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:8979:21312":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:12055:1632":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:3364:2816":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"11:1603:8327":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:4417:5472":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:9824:21324":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:2526:5420":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:7613:8301":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:2644:5425":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:5588:5441":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"10:44:5976":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:44268:7428":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:898:3585":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:9071:4517":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:3602:3586":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:13923:5204":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:3299:2812":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:8985:8441":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:9070:7666":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"0:361:1946":{"crate_id":0,"path":["semver","Op","GreaterEq"],"kind":"variant"},"0:322:1897":{"crate_id":0,"path":["semver","VersionReq"],"kind":"struct"},"0:387:1882":{"crate_id":0,"path":["semver","Prerelease"],"kind":"struct"},"5:5149:4228":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:47146:7511":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:10281:4260":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:7436:5542":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:6439:2750":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:21370:9289":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:10098:8187":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:14101:5252":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:533:4274":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:2586:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:3655:4422":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:21158:2710":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:9489:34102":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:22592:31055":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:6128:6811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"11:434:34080":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:6954:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:2423:2591":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:8134:5816":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:13149:4970":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:7633:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:11359:21439":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:22731:2664":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:6083:20355":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:13011:4940":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:1703:6257":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7554:5453":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:13891:5197":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:48200:7559":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:22632:31074":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:7747:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:11574:4674":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:40440:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"18:531:4380":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:12686:4878":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:13025:4943":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:5435:5496":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:39630:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"5:4376:4222":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:12435:2836":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13245:4980":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"11:1887:2591":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:7582:5750":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:46138:7466":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:11216:4633":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:44231:14441":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:1521:6140":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6600:21248":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:9278:4524":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:2200:630":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:12420:2834":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:7743:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:22607:7118":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:4052:9165":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:4914:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:14297:5321":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:42125:3586":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:22980:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:5433:8407":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:9498:8604":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:9791:34108":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:4637:6910":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:11049:8228":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"11:800:2589":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:5383:8403":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:7616:7034":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:483:6060":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:12375:1842":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:39466:2814":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"6:4480:6361":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11024:4619":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4595:6414":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:2872:2965":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:4584:6409":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:10789:21413":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10279:8195":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:30565:2577":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:0:1523":{"crate_id":1,"path":["std"],"kind":"module"},"17:11846:4698":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:5417:8406":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:3600:5464":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:23259:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:10095:2713":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:42284:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:10421:4462":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:10817:3601":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:5829:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:14347:5334":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:5419:4518":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:5995:5397":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:47958:7550":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:8191:2755":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:22719:2661":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:6813:6930":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:40779:2752":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:21551:7106":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:22338:9366":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:10852:2851":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}