{"root":"0:0:2094","crate_version":"1.0.20","includes_private":false,"index":{"b:2:2616-0:356:1895":{"id":"b:2:2616-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:131","2:2620:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[127,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12370:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:232:130","0:233:2045"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2606-0:220:131":{"id":"b:2:2606-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3106"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2616-0:301:1869":{"id":"b:2:2616-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:131","2:2620:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363:1939":{"id":"0:363:1939","crate_id":0,"name":"Less","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:337:1891":{"id":"0:337:1891","crate_id":0,"name":"Comparator","span":{"filename":"src/lib.rs","begin":[197,0],"end":[205,1]},"visibility":"public","docs":"A pair of comparison operator and partial version, such as `>=1.2`. Forms\none piece of a VersionReq.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:338:1894","0:339:1870","0:340:1871","0:341:1872","0:342:1873"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:268","a:2:8874:3070-0:337:1891","a:2:8873:3071-0:337:1891","a:2:2815:240-0:337:1891","a:2:2832:250-0:337:1891","a:2:2872:2956-0:337:1891","b:2:2621-0:337:1891","b:2:2303-0:337:1891","b:2:2300-0:337:1891","b:2:2610-0:337:1891","b:2:2606-0:337:1891","b:2:2616-0:337:1891","b:2:3450-0:337:1891","b:5:5799-0:337:1891","b:5:682-0:337:1891","0:228","0:26","0:351","0:349","0:345","0:348","0:343","0:354","0:346","0:203"]}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,20],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,37],"end":[188,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9831:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:336:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:322:1889":{"id":"0:322:1889","crate_id":0,"name":"VersionReq","span":{"filename":"src/lib.rs","begin":[190,0],"end":[192,1]},"visibility":"public","docs":"**SemVer version requirement** describing the intersection of some version\ncomparators, such as `>=1.2.3, <1.8`.\n\n# Syntax\n\n- Either `*` (meaning \"any\"), or one or more comma-separated comparators.\n\n- A [`Comparator`] is an operator ([`Op`]) and a partial version, separated\n  by optional whitespace. For example `>=1.0.0` or `>=1.0`.\n\n- Build metadata is syntactically permitted on the partial versions, but is\n  completely ignored, as it's never relevant to whether any comparator\n  matches a particular version.\n\n- Whitespace is permitted around commas and around operators. Whitespace is\n  not permitted within a partial version, i.e. anywhere between the major\n  version number and its minor, patch, pre-release, or build metadata.","links":{"`Op`":"0:356:1895","`Comparator`":"0:337:1891"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:323:1890"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:262","a:2:8874:3070-0:322:1889","a:2:8873:3071-0:322:1889","a:2:2815:240-0:322:1889","a:2:2832:250-0:322:1889","a:2:2872:2956-0:322:1889","b:2:2621-0:322:1889","b:2:2303-0:322:1889","b:2:2300-0:322:1889","b:2:2610-0:322:1889","b:2:2606-0:322:1889","b:2:2616-0:322:1889","b:2:3450-0:322:1889","b:5:5799-0:322:1889","b:5:682-0:322:1889","0:324","0:327","0:332","0:225","0:330","0:326","0:24","0:329","0:203","0:266","0:335"]}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,26],"end":[252,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:220:131":{"id":"0:220:131","crate_id":0,"name":"Error","span":{"filename":"src/parse.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Error parsing a SemVer version or version requirement.\n\n# Example\n\n```\nuse semver::Version;\n\nfn main() {\n    let err = Version::parse(\"1.q.r\").unwrap_err();\n\n    // \"unexpected character 'q' while parsing minor version number\"\n    eprintln!(\"{}\", err);\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8874:3070-0:220:131","a:2:8873:3071-0:220:131","a:2:2815:240-0:220:131","a:2:2832:250-0:220:131","a:2:2872:2956-0:220:131","b:2:2621-0:220:131","b:2:2303-0:220:131","b:2:2300-0:220:131","b:2:2610-0:220:131","b:2:2606-0:220:131","b:2:2616-0:220:131","b:2:3450-0:220:131","b:5:5799-0:220:131","0:83","0:84","0:88"]}}},"b:5:682-0:301:1869":{"id":"b:5:682-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3169","5:685:3170","5:686:3171"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:387:1874":{"id":"b:2:2610-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:331:653":{"id":"0:331:653","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[188,20],"end":[188,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:337:1891":{"id":"b:2:2621-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:131","2:2625:1604"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2616-0:387:1874":{"id":"b:2:2616-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:131","2:2620:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:386:709":{"id":"0:386:709","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[252,43],"end":[252,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[45,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:193:1121"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12734:8664":{"id":"2:12734:8664","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12743:30966":{"id":"2:12743:30966","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12744:30962"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44064:2840","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12742:2311":{"id":"2:12742:2311","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43776:2836","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2956-0:301:1869":{"id":"a:2:2872:2956-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:390:60":{"id":"0:390:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[318,9],"end":[318,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,20],"end":[196,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:240-0:220:131":{"id":"a:2:2815:240-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,16],"end":[162,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186:588":{"id":"0:186:588","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[26,4],"end":[28,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3049:120","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:1121":{"id":"0:193:1121","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[46,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:31106:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2956-0:402:1876":{"id":"a:2:2872:2956-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,25],"end":[376,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12716:864":{"id":"2:12716:864","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12026:444"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12789:29446":{"id":"2:12789:29446","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12741:7422":{"id":"2:12741:7422","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12026:444"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43766:2837","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5541:33946":{"id":"5:5541:33946","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7520:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:685:3170":{"id":"5:685:3170","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12757:3150":{"id":"2:12757:3150","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41870:194","prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:3171":{"id":"5:686:3171","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:387:1874":{"id":"b:2:3450-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:310":{"id":"0:310","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,16],"end":[162,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5799-0:322:1889":{"id":"b:5:5799-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5797:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5801:1581"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:407:448":{"id":"0:407:448","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[376,18],"end":[376,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:1121":{"id":"0:318:1121","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[162,36],"end":[162,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31106:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:773":{"id":"0:320:773","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[162,48],"end":[162,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10055:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:402:1876":{"id":"b:2:2300-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2515"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12840:33284":{"id":"2:12840:33284","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4610:33284"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44089:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:455":{"id":"0:199:455","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[107,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31106:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317":{"id":"0:317","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,36],"end":[162,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:318:1121"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,20],"end":[188,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:331:653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323:1890":{"id":"0:323:1890","crate_id":0,"name":"comparators","span":{"filename":"src/lib.rs","begin":[191,4],"end":[191,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::alloc::vec::Vec","id":"5:6945:266","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:3450-0:337:1891":{"id":"b:2:3450-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[81,0],"end":[85,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:29:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:356:1895":{"id":"b:2:3450-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2872:2956-0:337:1891":{"id":"a:2:2872:2956-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:387:1874":{"id":"0:387:1874","crate_id":0,"name":"Prerelease","span":{"filename":"src/lib.rs","begin":[319,0],"end":[321,1]},"visibility":"public","docs":"Optional pre-release identifier on a version string. This comes after `-` in\na SemVer version, like `1.0.0-alpha.1`\n\n# Examples\n\nSome real world pre-release idioms drawn from crates.io:\n\n- **[mio]** <code>0.7.0-<b>alpha.1</b></code> &mdash; the most common style\n  for numbering pre-releases.\n\n- **[pest]** <code>1.0.0-<b>beta.8</b></code>,&ensp;<code>1.0.0-<b>rc.0</b></code>\n  &mdash; this crate makes a distinction between betas and release\n  candidates.\n\n- **[sassers]** <code>0.11.0-<b>shitshow</b></code> &mdash; ???.\n\n- **[atomic-utils]** <code>0.0.0-<b>reserved</b></code> &mdash; a squatted\n  crate name.\n\n[mio]: https://crates.io/crates/mio\n[pest]: https://crates.io/crates/pest\n[atomic-utils]: https://crates.io/crates/atomic-utils\n[sassers]: https://crates.io/crates/sassers\n\n*Tip:* Be aware that if you are planning to number your own pre-releases,\nyou should prefer to separate the numeric part from any non-numeric\nidentifiers by using a dot in between. That is, prefer pre-releases\n`alpha.1`, `alpha.2`, etc rather than `alpha1`, `alpha2` etc. The SemVer\nspec's rule for pre-release precedence has special treatment of numeric\ncomponents in the pre-release string, but only if there are no non-digit\ncharacters in the same dot-separated component. So you'd have `alpha.2` &lt;\n`alpha.11` as intended, but `alpha11` &lt; `alpha2`.\n\n# Syntax\n\nPre-release strings are a series of dot separated identifiers immediately\nfollowing the patch version. Identifiers must comprise only ASCII\nalphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must not be\nempty. Numeric identifiers must not include leading zeros.\n\n# Total ordering\n\nPre-releases have a total order defined by the SemVer spec. It uses\nlexicographic ordering of dot-separated components. Identifiers consisting\nof only digits are compared numerically. Otherwise, identifiers are compared\nin ASCII sort order. Any numeric identifier is always less than any\nnon-numeric identifier.\n\nExample:&ensp;`alpha`&ensp;&lt;&ensp;`alpha.85`&ensp;&lt;&ensp;`alpha.90`&ensp;&lt;&ensp;`alpha.200`&ensp;&lt;&ensp;`alpha.0a`&ensp;&lt;&ensp;`alpha.1a0`&ensp;&lt;&ensp;`alpha.a`&ensp;&lt;&ensp;`beta`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:271","a:2:8874:3070-0:387:1874","a:2:8873:3071-0:387:1874","a:2:2815:240-0:387:1874","a:2:2832:250-0:387:1874","a:2:2872:2956-0:387:1874","b:2:2621-0:387:1874","b:2:2303-0:387:1874","b:2:2300-0:387:1874","b:2:2610-0:387:1874","b:2:2606-0:387:1874","b:2:2616-0:387:1874","b:2:3450-0:387:1874","b:5:5799-0:387:1874","b:5:682-0:387:1874","0:194","0:396","0:391","0:393","0:28","0:34","0:190","0:184","0:231","0:394","0:399","0:389","0:397"]}}},"5:684:3169":{"id":"5:684:3169","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2606-0:337:1891":{"id":"b:2:2606-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3106"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5801:1581":{"id":"5:5801:1581","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12765:2359":{"id":"2:12765:2359","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12410:2811","`DoubleEndedIterator`":"2:7780:124","prim@char":"1:12026:444","str::split_whitespace":"2:12743:30966","str::rsplit":"2:12771:29439"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43790:2844","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12748:29447":{"id":"2:12748:29447","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12768:29437":{"id":"2:12768:29437","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12226:2857","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:220:131":{"id":"b:2:2300-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2515"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[104,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9831:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12737:33268":{"id":"2:12737:33268","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12032:1523","crate::ops::IndexMut":"2:3116:2572","str::slice_unchecked":"2:12736:33267"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:306:1875":{"id":"0:306:1875","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:344:448":{"id":"0:344:448","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[196,9],"end":[196,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12730:29406":{"id":"2:12730:29406","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41870:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:220:131":{"id":"0:257-0:220:131","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[111,0],"end":[111,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::parse::Error","name":"Error","id":"0:220:131","glob":false}}},"b:2:2606-0:402:1876":{"id":"b:2:2606-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3106"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12761:3112":{"id":"2:12761:3112","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41870:194","prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26":{"id":"0:26","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[48,0],"end":[79,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:27:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2094":{"id":"0:0:2094","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[1,0],"end":[581,1]},"visibility":"public","docs":"[![github]](https://github.com/dtolnay/semver)&ensp;[![crates-io]](https://crates.io/crates/semver)&ensp;[![docs-rs]](https://docs.rs/semver)\n\n[github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github\n[crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust\n[docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs\n\n<br>\n\nA parser and evaluator for Cargo's flavor of Semantic Versioning.\n\nSemantic Versioning (see <https://semver.org>) is a guideline for how\nversion numbers are assigned and incremented. It is widely followed within\nthe Cargo/crates.io ecosystem for Rust.\n\n<br>\n\n# Example\n\n```\nuse semver::{BuildMetadata, Prerelease, Version, VersionReq};\n\nfn main() {\n    let req = VersionReq::parse(\">=1.2.3, <1.8.0\").unwrap();\n\n    // Check whether this requirement matches version 1.2.3-alpha.1 (no)\n    let version = Version {\n        major: 1,\n        minor: 2,\n        patch: 3,\n        pre: Prerelease::new(\"alpha.1\").unwrap(),\n        build: BuildMetadata::EMPTY,\n    };\n    assert!(!req.matches(&version));\n\n    // Check whether it matches 1.3.0 (yes it does)\n    let version = Version::parse(\"1.3.0\").unwrap();\n    assert!(req.matches(&version));\n}\n```\n\n<br><br>\n\n# Scope of this crate\n\nBesides Cargo, several other package ecosystems and package managers for\nother languages also use SemVer:&ensp;RubyGems/Bundler for Ruby, npm for\nJavaScript, Composer for PHP, CocoaPods for Objective-C...\n\nThe `semver` crate is specifically intended to implement Cargo's\ninterpretation of Semantic Versioning.\n\nWhere the various tools differ in their interpretation or implementation of\nthe spec, this crate follows the implementation choices made by Cargo. If\nyou are operating on version numbers from some other package ecosystem, you\nwill want to use a different semver library which is appropriate to that\necosystem.\n\nThe extent of Cargo's SemVer support is documented in the *[Specifying\nDependencies]* chapter of the Cargo reference.\n\n[Specifying Dependencies]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/semver/1.0.20\")]","#![deny(unsafe_op_in_unsafe_fn)]","#![allow(clippy :: cast_lossless, clippy :: cast_possible_truncation, clippy\n:: doc_markdown, clippy :: items_after_statements, clippy :: manual_map,\nclippy :: match_bool, clippy :: missing_errors_doc, clippy ::\nmust_use_candidate, clippy :: needless_doctest_main, clippy ::\noption_if_let_else, clippy :: ptr_as_ptr, clippy :: redundant_else, clippy ::\nsemicolon_if_nothing_returned, clippy :: similar_names, clippy ::\nunnested_or_patterns, clippy :: unseparated_literal_suffix, clippy ::\nwildcard_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:257-0:220:131","0:301:1869","0:322:1889","0:337:1891","0:356:1895","0:387:1874","0:402:1876"],"is_stripped":false}}},"b:2:3450-0:322:1889":{"id":"b:2:3450-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:191:1121":{"id":"0:191:1121","crate_id":0,"name":"partial_cmp","span":{"filename":"src/impls.rs","begin":[40,4],"end":[42,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:31106:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:2093":{"id":"0:275:2093","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[560,4],"end":[562,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12780:29441":{"id":"2:12780:29441","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811","str::rsplitn":"2:12783:29443"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43894:2847","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:709":{"id":"0:21:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[5,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:220:131":{"id":"b:2:2303-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25282"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:189:588":{"id":"0:189:588","crate_id":0,"name":"deref","span":{"filename":"src/impls.rs","begin":[34,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:3049:120","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413:653":{"id":"0:413:653","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[376,29],"end":[376,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2612:736":{"id":"2:2612:736","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[116,0],"end":[120,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9831:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5542:33947":{"id":"5:5542:33947","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2575","`String`":"5:7520:246"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2575","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:356:1895":{"id":"b:2:2610-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2815:240-0:301:1869":{"id":"a:2:2815:240-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12792:2088":{"id":"2:12792:2088","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12410:2811","`DoubleEndedIterator`":"2:7780:124","prim@char":"1:12026:444","str::rmatches":"2:12795:33272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43994:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:322:1889":{"id":"b:2:2610-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12839:27851":{"id":"2:12839:27851","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:240-0:387:1874":{"id":"a:2:2815:240-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:31:709":{"id":"0:31:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5527:2674":{"id":"5:5527:2674","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7520:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302:1870":{"id":"0:302:1870","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[164,4],"end":[164,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,16],"end":[196,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:402:1876":{"id":"0:402:1876","crate_id":0,"name":"BuildMetadata","span":{"filename":"src/lib.rs","begin":[377,0],"end":[379,1]},"visibility":"public","docs":"Optional build metadata identifier. This comes after `+` in a SemVer\nversion, as in `0.8.1+zstd.1.5.0`.\n\n# Examples\n\nSome real world build metadata idioms drawn from crates.io:\n\n- **[libgit2-sys]** <code>0.12.20+<b>1.1.0</b></code> &mdash; for this\n  crate, the build metadata indicates the version of the C libgit2 library\n  that the Rust crate is built against.\n\n- **[mashup]** <code>0.1.13+<b>deprecated</b></code> &mdash; just the word\n  \"deprecated\" for a crate that has been superseded by another. Eventually\n  people will take notice of this in Cargo's build output where it lists the\n  crates being compiled.\n\n- **[google-bigquery2]** <code>2.0.4+<b>20210327</b></code> &mdash; this\n  library is automatically generated from an official API schema, and the\n  build metadata indicates the date on which that schema was last captured.\n\n- **[fbthrift-git]** <code>0.0.6+<b>c7fcc0e</b></code> &mdash; this crate is\n  published from snapshots of a big company monorepo. In monorepo\n  development, there is no concept of versions, and all downstream code is\n  just updated atomically in the same commit that breaking changes to a\n  library are landed. Therefore for crates.io purposes, every published\n  version must be assumed to be incompatible with the previous. The build\n  metadata provides the source control hash of the snapshotted code.\n\n[libgit2-sys]: https://crates.io/crates/libgit2-sys\n[mashup]: https://crates.io/crates/mashup\n[google-bigquery2]: https://crates.io/crates/google-bigquery2\n[fbthrift-git]: https://crates.io/crates/fbthrift-git\n\n# Syntax\n\nBuild metadata is a series of dot separated identifiers immediately\nfollowing the patch or pre-release version. Identifiers must comprise only\nASCII alphanumerics and hyphens: `0-9`, `A-Z`, `a-z`, `-`. Identifiers must\nnot be empty. Leading zeros *are* allowed, unlike any other place in the\nSemVer grammar.\n\n# Total ordering\n\nBuild metadata is ignored in evaluating `VersionReq`; it plays no role in\nwhether a `Version` matches any one of the comparison operators.\n\nHowever for comparing build metadatas among one another, they do have a\ntotal order which is determined by lexicographic ordering of dot-separated\ncomponents. Identifiers consisting of only digits are compared numerically.\nOtherwise, identifiers are compared in ASCII sort order. Any numeric\nidentifier is always less than any non-numeric identifier.\n\nExample:&ensp;`demo`&ensp;&lt;&ensp;`demo.85`&ensp;&lt;&ensp;`demo.90`&ensp;&lt;&ensp;`demo.090`&ensp;&lt;&ensp;`demo.200`&ensp;&lt;&ensp;`demo.1a0`&ensp;&lt;&ensp;`demo.a`&ensp;&lt;&ensp;`memo`","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:276","a:2:8874:3070-0:402:1876","a:2:8873:3071-0:402:1876","a:2:2815:240-0:402:1876","a:2:2832:250-0:402:1876","a:2:2872:2956-0:402:1876","b:2:2621-0:402:1876","b:2:2303-0:402:1876","b:2:2300-0:402:1876","b:2:2610-0:402:1876","b:2:2606-0:402:1876","b:2:2616-0:402:1876","b:2:3450-0:402:1876","b:5:5799-0:402:1876","b:5:682-0:402:1876","0:187","0:406","0:198","0:408","0:414","0:404","0:411","0:234","0:409","0:412","0:36","0:192","0:30"]}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,20],"end":[196,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:350:653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2625:1604":{"id":"2:2625:1604","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12815:2368":{"id":"2:12815:2368","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2305:25282":{"id":"2:2305:25282","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:130":{"id":"0:223:130","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[26,4],"end":[26,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:230:2045":{"id":"0:230:2045","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[116,4],"end":[124,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12370:1834","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:322:1889":{"id":"b:2:2606-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3106"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:398:653":{"id":"0:398:653","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[318,29],"end":[318,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[110,0],"end":[114,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9831:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:1831":{"id":"0:269:1831","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[538,4],"end":[540,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:387:1874":{"id":"b:2:2300-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2515"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12744:30962":{"id":"2:12744:30962","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12743:30966"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44073:2856","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:402:1876":{"id":"b:2:2303-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25282"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226:130":{"id":"0:226:130","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[85,4],"end":[85,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12747:31299":{"id":"2:12747:31299","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44082:2852","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:2045":{"id":"0:236:2045","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[142,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12370:1834","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5526:33943":{"id":"5:5526:33943","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2575","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2575","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5543:2717":{"id":"5:5543:2717","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7520:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:240-0:356:1895":{"id":"a:2:2815:240-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2610-0:301:1869":{"id":"b:2:2610-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12740:2382":{"id":"2:12740:2382","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12026:444"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43760:2838","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:250-0:220:131":{"id":"a:2:2832:250-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:340:1871":{"id":"0:340:1871","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[200,4],"end":[200,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"2:12843:33285":{"id":"2:12843:33285","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4608:33285"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44107:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5533:33945":{"id":"5:5533:33945","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7520:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5525":{"id":"5:5525","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5526:33943","5:5527:2674","5:5530:33944","5:5533:33945","5:5541:33946","5:5542:33947","5:5543:2717","5:5544:27847","5:5545:27848"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12746:33269":{"id":"2:12746:33269","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44054:2841","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2624:131":{"id":"2:2624:131","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32290:5963","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[32,0],"end":[90,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,22],"end":[252,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,29],"end":[318,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:398:653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[484,0],"end":[527,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:2079","0:264:1831","0:265:2088"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,31],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10047:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:333:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12728:2331":{"id":"2:12728:2331","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41870:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2956-0:322:1889":{"id":"a:2:2872:2956-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3452:1619":{"id":"2:3452:1619","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39630:7203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,37],"end":[196,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9831:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:355:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[106,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2400:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:250-0:387:1874":{"id":"a:2:2832:250-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2616-0:220:131":{"id":"b:2:2616-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:131","2:2620:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:367:1941":{"id":"0:367:1941","crate_id":0,"name":"Tilde","span":{"filename":"src/lib.rs","begin":[260,4],"end":[260,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2302:2515":{"id":"2:2302:2515","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:220:131":{"id":"b:2:3450-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:25:709":{"id":"0:25:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[34,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:220:131":{"id":"b:2:2621-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:131","2:2625:1604"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8874:3070-0:301:1869":{"id":"a:2:8874:3070-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8874:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:203":{"id":"0:203","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[148,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:7738:139","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:204:739"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,0],"end":[563,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:272:2028","0:273:1025","0:274:338","0:275:2093"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:356:1895":{"id":"b:5:682-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3169","5:685:3170","5:686:3171"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12745:28325":{"id":"2:12745:28325","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44044:2839","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355:709":{"id":"0:355:709","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[196,37],"end":[196,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12724:2394":{"id":"2:12724:2394","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11965:2831"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389":{"id":"0:389","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,9],"end":[318,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:390:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12751:2209":{"id":"2:12751:2209","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:739":{"id":"0:204:739","crate_id":0,"name":"from_iter","span":{"filename":"src/impls.rs","begin":[149,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7742:159","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,43],"end":[252,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9831:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:386:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:263:2079":{"id":"0:263:2079","crate_id":0,"name":"STAR","span":{"filename":"src/lib.rs","begin":[499,4],"end":[501,6]},"visibility":"public","docs":"A `VersionReq` with no constraint on the version numbers it matches.\nEquivalent to `VersionReq::parse(\"*\").unwrap()`.\n\nIn terms of comparators this is equivalent to `>=0.0.0`.\n\nCounterintuitively a `*` VersionReq does not match every possible\nversion number. In particular, in order for *any* `VersionReq` to match\na pre-release version, the `VersionReq` must contain at least one\n`Comparator` that has an explicit major, minor, and patch version\nidentical to the pre-release being matched, and that has a nonempty\npre-release component. Since `*` is not written with an explicit major,\nminor, and patch version, and does not contain a nonempty pre-release\ncomponent, it does not match any pre-release versions.","links":{},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:12777:33271":{"id":"2:12777:33271","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12410:2811","str::split":"2:12765:2359","prim@char":"1:12026:444","str::split_terminator":"2:12774:33270"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43858:2843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,9],"end":[162,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:308:448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,16],"end":[188,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,18],"end":[318,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:392:448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:383:773":{"id":"0:383:773","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[252,37],"end":[252,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10055:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[30,0],"end":[30,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","source","provide","description","type_id"],"trait":{"name":"Error","id":"2:2668:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::parse::Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8874:3070-0:322:1889":{"id":"a:2:8874:3070-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8874:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:381:653":{"id":"0:381:653","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[252,26],"end":[252,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12833:1831":{"id":"2:12833:1831","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12371:130","`FromStr`":"2:12370:1834"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12370:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12370:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12835:27845":{"id":"2:12835:27845","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5530:33944":{"id":"5:5530:33944","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7520:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:448":{"id":"0:392:448","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[318,18],"end":[318,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8873:3071-0:220:131":{"id":"a:2:8873:3071-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8873:3071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2872:2956-0:387:1874":{"id":"a:2:2872:2956-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2610-0:402:1876":{"id":"b:2:2610-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:274:338":{"id":"0:274:338","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[556,4],"end":[558,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[113,0],"end":[125,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12370:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:130","0:230:2045"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12795:33272":{"id":"2:12795:33272","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12410:2811","`DoubleEndedIterator`":"2:7780:124","prim@char":"1:12026:444","str::matches":"2:12792:2088"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44012:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:60":{"id":"0:405:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:2088":{"id":"0:265:2088","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[524,4],"end":[526,5]},"visibility":"public","docs":"Evaluate whether the given `Version` satisfies the version requirement\ndescribed by `self`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:1025":{"id":"0:273:1025","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[552,4],"end":[554,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:250-0:402:1876":{"id":"a:2:2832:250-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,9],"end":[252,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,25],"end":[318,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:325:448":{"id":"0:325:448","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[188,9],"end":[188,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:709":{"id":"0:33:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[94,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,48],"end":[162,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10047:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:320:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:315":{"id":"0:315","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,31],"end":[162,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2400:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:316:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2620:1606":{"id":"2:2620:1606","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5799-0:220:131":{"id":"b:5:5799-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5797:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5801:1581"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:250-0:301:1869":{"id":"a:2:2832:250-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2621-0:301:1869":{"id":"b:2:2621-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:131","2:2625:1604"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:356:1895":{"id":"0:356:1895","crate_id":0,"name":"Op","span":{"filename":"src/lib.rs","begin":[254,0],"end":[267,1]},"visibility":"public","docs":"SemVer comparison operator: `=`, `>`, `>=`, `<`, `<=`, `~`, `^`, `*`.\n\n# Op::Exact\n- &ensp;**`=I.J.K`**&emsp;&mdash;&emsp;exactly the version I.J.K\n- &ensp;**`=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0, <I.(J+1).0`\n- &ensp;**`=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0, <(I+1).0.0`\n\n# Op::Greater\n- &ensp;**`>I.J.K`**\n- &ensp;**`>I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.(J+1).0`\n- &ensp;**`>I`**&emsp;&mdash;&emsp;equivalent to `>=(I+1).0.0`\n\n# Op::GreaterEq\n- &ensp;**`>=I.J.K`**\n- &ensp;**`>=I.J`**&emsp;&mdash;&emsp;equivalent to `>=I.J.0`\n- &ensp;**`>=I`**&emsp;&mdash;&emsp;equivalent to `>=I.0.0`\n\n# Op::Less\n- &ensp;**`<I.J.K`**\n- &ensp;**`<I.J`**&emsp;&mdash;&emsp;equivalent to `<I.J.0`\n- &ensp;**`<I`**&emsp;&mdash;&emsp;equivalent to `<I.0.0`\n\n# Op::LessEq\n- &ensp;**`<=I.J.K`**\n- &ensp;**`<=I.J`**&emsp;&mdash;&emsp;equivalent to `<I.(J+1).0`\n- &ensp;**`<=I`**&emsp;&mdash;&emsp;equivalent to `<(I+1).0.0`\n\n# Op::Tilde&emsp;(\"patch\" updates)\n*Tilde requirements allow the **patch** part of the semver version (the third number) to increase.*\n- &ensp;**`~I.J.K`**&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <I.(J+1).0`\n- &ensp;**`~I.J`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`~I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Caret&emsp;(\"compatible\" updates)\n*Caret requirements allow parts that are **right of the first nonzero** part of the semver version to increase.*\n- &ensp;**`^I.J.K`**&ensp;(for I\\>0)&emsp;&mdash;&emsp;equivalent to `>=I.J.K, <(I+1).0.0`\n- &ensp;**`^0.J.K`**&ensp;(for J\\>0)&emsp;&mdash;&emsp;equivalent to `>=0.J.K, <0.(J+1).0`\n- &ensp;**`^0.0.K`**&emsp;&mdash;&emsp;equivalent to `=0.0.K`\n- &ensp;**`^I.J`**&ensp;(for I\\>0 or J\\>0)&emsp;&mdash;&emsp;equivalent to `^I.J.0`\n- &ensp;**`^0.0`**&emsp;&mdash;&emsp;equivalent to `=0.0`\n- &ensp;**`^I`**&emsp;&mdash;&emsp;equivalent to `=I`\n\n# Op::Wildcard\n- &ensp;**`I.J.*`**&emsp;&mdash;&emsp;equivalent to `=I.J`\n- &ensp;**`I.*`**&ensp;or&ensp;**`I.*.*`**&emsp;&mdash;&emsp;equivalent to `=I`","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:357:1936","0:359:1937","0:361:1938","0:363:1939","0:365:1940","0:367:1941","0:369:1942","0:371:1943"],"impls":["a:2:8874:3070-0:356:1895","a:2:8873:3071-0:356:1895","a:2:2815:240-0:356:1895","a:2:2832:250-0:356:1895","a:2:2872:2956-0:356:1895","b:2:2621-0:356:1895","b:2:2303-0:356:1895","b:2:2300-0:356:1895","b:2:2610-0:356:1895","b:2:2606-0:356:1895","b:2:2616-0:356:1895","b:2:3450-0:356:1895","b:5:682-0:356:1895","0:379","0:377","0:373","0:374","0:382","0:380","0:385","0:376"]}}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,29],"end":[376,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12804:33275":{"id":"2:12804:33275","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:361:1938":{"id":"0:361:1938","crate_id":0,"name":"GreaterEq","span":{"filename":"src/lib.rs","begin":[257,4],"end":[257,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[51,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2400:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:195:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235:130":{"id":"0:235:130","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[140,4],"end":[140,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[4,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:21:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:402:1876":{"id":"b:2:3450-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:259:1025":{"id":"0:259:1025","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[399,4],"end":[407,5]},"visibility":"public","docs":"Create `Version` with an empty pre-release and build metadata.\n\nEquivalent to:\n\n```\n# use semver::{BuildMetadata, Prerelease, Version};\n#\n# const fn new(major: u64, minor: u64, patch: u64) -> Version {\nVersion {\n    major,\n    minor,\n    patch,\n    pre: Prerelease::EMPTY,\n    build: BuildMetadata::EMPTY,\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["major",{"primitive":"u64"}],["minor",{"primitive":"u64"}],["patch",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12732:29407":{"id":"2:12732:29407","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10495:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12783:29443":{"id":"2:12783:29443","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12026:444","str::splitn":"2:12780:29441","self::pattern":"2:12410:2811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43912:2846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:301:1869":{"id":"b:2:3450-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:250-0:322:1889":{"id":"a:2:2832:250-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:337:1891":{"id":"b:2:2303-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25282"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[162,20],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:314:653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2619:131":{"id":"2:2619:131","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:195:455":{"id":"0:195:455","crate_id":0,"name":"cmp","span":{"filename":"src/impls.rs","begin":[52,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31106:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,18],"end":[376,23]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:407:448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:264:1831":{"id":"0:264:1831","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[518,4],"end":[520,5]},"visibility":"public","docs":"Create `VersionReq` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `>a.b` &mdash; unexpected characters in the partial version.\n\n- `@1.0.0` &mdash; unrecognized comparison operator.\n\n- `^1.0.0, ` &mdash; unexpected end of input.\n\n- `>=1.0 <2.0` &mdash; missing comma between comparators.\n\n- `*.*` &mdash; unsupported wildcard syntax.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12718:33263":{"id":"2:12718:33263","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:337:1891":{"id":"b:2:2610-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12725:33266":{"id":"2:12725:33266","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12771:29439":{"id":"2:12771:29439","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12410:2811","`DoubleEndedIterator`":"2:7780:124","prim@char":"1:12026:444","str::split":"2:12765:2359"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43808:2842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12806:33276":{"id":"2:12806:33276","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2045":{"id":"0:233:2045","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[130,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12370:1834","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12727:2312":{"id":"2:12727:2312","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12043:1628"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12837:27849":{"id":"2:12837:27849","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,9],"end":[188,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:325:448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:229:130":{"id":"0:229:130","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[114,4],"end":[114,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2872:2956-0:356:1895":{"id":"a:2:2872:2956-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12836:29348":{"id":"2:12836:29348","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39817:29355","Self::is_ascii":"2:12835:27845"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39817:29355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:448":{"id":"0:375:448","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[252,15],"end":[252,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:60":{"id":"0:267:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[532,4],"end":[534,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8873:3071-0:301:1869":{"id":"a:2:8873:3071-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8873:3071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8873:3071-0:337:1891":{"id":"a:2:8873:3071-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8873:3071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2815:240-0:337:1891":{"id":"a:2:2815:240-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:337:1891":{"id":"b:5:682-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3169","5:685:3170","5:686:3171"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,29],"end":[376,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:413:653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2616-0:402:1876":{"id":"b:2:2616-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:131","2:2620:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:252":{"id":"0:185:252","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[24,4],"end":[24,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[23,0],"end":[29,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3049:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:185:252","0:186:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2303-0:322:1889":{"id":"b:2:2303-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25282"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,25],"end":[376,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12754:28887":{"id":"2:12754:28887","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:240-0:322:1889":{"id":"a:2:2815:240-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5799-0:402:1876":{"id":"b:5:5799-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5797:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5801:1581"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:308:448":{"id":"0:308:448","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[162,9],"end":[162,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:356:1895":{"id":"b:2:2606-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3106"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:270:2088":{"id":"0:270:2088","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[542,4],"end":[544,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["version",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:709":{"id":"0:27:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[49,4],"end":[78,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12717:2093":{"id":"2:12717:2093","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2956-0:220:131":{"id":"a:2:2872:2956-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2956","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2621-0:387:1874":{"id":"b:2:2621-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:131","2:2625:1604"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:338":{"id":"0:279:338","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[574,4],"end":[576,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:709":{"id":"0:37:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12808:33277":{"id":"2:12808:33277","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:402:1876":{"id":"b:2:2621-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:131","2:2625:1604"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:188:252":{"id":"0:188:252","crate_id":0,"name":"Target","span":{"filename":"src/impls.rs","begin":[32,4],"end":[32,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:234":{"id":"0:234","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[139,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12370:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:235:130","0:236:2045"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12726:336":{"id":"2:12726:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12727:2312","`u8`":"1:12043:1628"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12827:33282":{"id":"2:12827:33282","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,16],"end":[196,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:682-0:387:1874":{"id":"b:5:682-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3169","5:685:3170","5:686:3171"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:359:1937":{"id":"0:359:1937","crate_id":0,"name":"Greater","span":{"filename":"src/lib.rs","begin":[256,4],"end":[256,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2832:250-0:337:1891":{"id":"a:2:2832:250-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12738:2408":{"id":"2:12738:2408","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12739:29429"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304:1872":{"id":"0:304:1872","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[166,4],"end":[166,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2606-0:387:1874":{"id":"b:2:2606-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3106"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2300-0:356:1895":{"id":"b:2:2300-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2515"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:371:1943":{"id":"0:371:1943","crate_id":0,"name":"Wildcard","span":{"filename":"src/lib.rs","begin":[262,4],"end":[262,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:305:1873":{"id":"0:305:1873","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[167,4],"end":[167,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12736:33267":{"id":"2:12736:33267","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12032:1523","str::slice_mut_unchecked":"2:12737:33268","crate::ops::Index":"2:3112:2571"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:301:1869":{"id":"b:2:2300-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2515"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,31],"end":[196,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10047:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:352:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:35:709":{"id":"0:35:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[111,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2609:3106":{"id":"2:2609:3106","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2583:138"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12812:33280":{"id":"2:12812:33280","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12435:2826","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276":{"id":"0:276","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[565,0],"end":[581,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:277:2028","0:278:1025","0:279:338","0:280:2093"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12786:29445":{"id":"2:12786:29445","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:773":{"id":"0:333:773","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[188,31],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10055:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:709":{"id":"0:85:709","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[33,4],"end":[89,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341:1872":{"id":"0:341:1872","crate_id":0,"name":"patch","span":{"filename":"src/lib.rs","begin":[202,4],"end":[202,26]},"visibility":"public","docs":"Patch is only allowed if minor is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}}}},"b:5:682-0:402:1876":{"id":"b:5:682-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3169","5:685:3170","5:686:3171"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:250-0:356:1895":{"id":"a:2:2832:250-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[93,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9831:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:33:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:336:709":{"id":"0:336:709","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[188,37],"end":[188,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:773":{"id":"0:400:773","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[318,40],"end":[318,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10055:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:220:131":{"id":"b:2:2610-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12798:33273":{"id":"2:12798:33273","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12410:2811","`DoubleEndedIterator`":"2:7780:124","prim@char":"1:12026:444","str::rmatch_indices":"2:12801:33274"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43940:2850","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12842:9029":{"id":"2:12842:9029","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4611:9029"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44098:2854","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,9],"end":[196,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:344:448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[381,0],"end":[482,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:259:1025","0:260:1831","0:261:2067"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2621-0:322:1889":{"id":"b:2:2621-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:131","2:2625:1604"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8874:3070-0:356:1895":{"id":"a:2:8874:3070-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8874:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:415:773":{"id":"0:415:773","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[376,40],"end":[376,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10055:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[531,0],"end":[535,1]},"visibility":"default","docs":"The default VersionReq is the same as [`VersionReq::STAR`].","links":{"`VersionReq::STAR`":"0:263:2079"},"attrs":["#[cfg(not(no_const_vec_new))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:350:653":{"id":"0:350:653","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[196,20],"end":[196,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12811:33279":{"id":"2:12811:33279","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5545:27848":{"id":"5:5545:27848","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12839:27851"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314:653":{"id":"0:314:653","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[162,20],"end":[162,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12715":{"id":"2:12715","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12716:864","2:12717:2093","2:12718:33263","2:12719:33264","2:12721:33265","2:12724:2394","2:12725:33266","2:12726:336","2:12727:2312","2:12728:2331","2:12730:29406","2:12732:29407","2:12734:8664","2:12736:33267","2:12737:33268","2:12738:2408","2:12739:29429","2:12740:2382","2:12741:7422","2:12742:2311","2:12743:30966","2:12744:30962","2:12745:28325","2:12746:33269","2:12747:31299","2:12748:29447","2:12751:2209","2:12754:28887","2:12757:3150","2:12761:3112","2:12765:2359","2:12768:29437","2:12771:29439","2:12774:33270","2:12777:33271","2:12780:29441","2:12783:29443","2:12786:29445","2:12789:29446","2:12792:2088","2:12795:33272","2:12798:33273","2:12801:33274","2:12804:33275","2:12806:33276","2:12808:33277","2:12810:33278","2:12811:33279","2:12812:33280","2:12815:2368","2:12818:2207","2:12821:29448","2:12824:33281","2:12827:33282","2:12830:33283","2:12833:1831","2:12835:27845","2:12836:29348","2:12837:27849","2:12838:27850","2:12839:27851","2:12840:33284","2:12842:9029","2:12843:33285"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,25],"end":[318,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8873:3071-0:402:1876":{"id":"a:2:8873:3071-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8873:3071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:414":{"id":"0:414","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,40],"end":[376,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10047:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:415:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:29:709":{"id":"0:29:709","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[31,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3049:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:188:252","0:189:588"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:303:1871":{"id":"0:303:1871","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:399":{"id":"0:399","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,40],"end":[318,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10047:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:400:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[537,0],"end":[545,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:1831","0:270:2088"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:369:1942":{"id":"0:369:1942","crate_id":0,"name":"Caret","span":{"filename":"src/lib.rs","begin":[261,4],"end":[261,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2303-0:387:1874":{"id":"b:2:2303-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25282"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:30":{"id":"0:30","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[87,0],"end":[91,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:31:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12810:33278":{"id":"2:12810:33278","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12830:33283":{"id":"2:12830:33283","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8874:3070-0:402:1876":{"id":"a:2:8874:3070-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8874:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2616-0:337:1891":{"id":"b:2:2616-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:131","2:2620:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,22],"end":[252,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,29],"end":[318,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:342:1873":{"id":"0:342:1873","crate_id":0,"name":"pre","span":{"filename":"src/lib.rs","begin":[204,4],"end":[204,23]},"visibility":"public","docs":"Non-empty pre-release is only allowed if patch is Some.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:277:2028":{"id":"0:277:2028","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[566,4],"end":[568,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:272:2028":{"id":"0:272:2028","crate_id":0,"name":"EMPTY","span":{"filename":"src/lib.rs","begin":[548,4],"end":[550,6]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:8873:3071-0:322:1889":{"id":"a:2:8873:3071-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8873:3071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:339:1870":{"id":"0:339:1870","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[199,4],"end":[199,18]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:8873:3071-0:387:1874":{"id":"a:2:8873:3071-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8873:3071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12824:33281":{"id":"2:12824:33281","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5799-0:387:1874":{"id":"b:5:5799-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5797:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5801:1581"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2606-0:301:1869":{"id":"b:2:2606-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:3106"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:405:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12801:33274":{"id":"2:12801:33274","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12410:2811","`DoubleEndedIterator`":"2:7780:124","prim@char":"1:12026:444","str::match_indices":"2:12798:33273"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43958:2851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12838:27850":{"id":"2:12838:27850","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:1869":{"id":"0:301:1869","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[163,0],"end":[169,1]},"visibility":"public","docs":"**SemVer version** as defined by <https://semver.org>.\n\n# Syntax\n\n- The major, minor, and patch numbers may be any integer 0 through u64::MAX.\n  When representing a SemVer version as a string, each number is written as\n  a base 10 integer. For example, `1.0.119`.\n\n- Leading zeros are forbidden in those positions. For example `1.01.00` is\n  invalid as a SemVer version.\n\n- The pre-release identifier, if present, must conform to the syntax\n  documented for [`Prerelease`].\n\n- The build metadata, if present, must conform to the syntax documented for\n  [`BuildMetadata`].\n\n- Whitespace is not allowed anywhere in the version.\n\n# Total ordering\n\nGiven any two SemVer versions, one is less than, greater than, or equal to\nthe other. Versions may be compared against one another using Rust's usual\ncomparison operators.\n\n- The major, minor, and patch number are compared numerically from left to\nright, lexicographically ordered as a 3-tuple of integers. So for example\nversion `1.5.0` is less than version `1.19.0`, despite the fact that\n\"1.19.0\" &lt; \"1.5.0\" as ASCIIbetically compared strings and 1.19 &lt; 1.5\nas real numbers.\n\n- When major, minor, and patch are equal, a pre-release version is\n  considered less than the ordinary release:&ensp;version `1.0.0-alpha.1` is\n  less than version `1.0.0`.\n\n- Two pre-releases of the same major, minor, patch are compared by\n  lexicographic ordering of dot-separated components of the pre-release\n  string.\n\n  - Identifiers consisting of only digits are compared\n    numerically:&ensp;`1.0.0-pre.8` is less than `1.0.0-pre.12`.\n\n  - Identifiers that contain a letter or hyphen are compared in ASCII sort\n    order:&ensp;`1.0.0-pre12` is less than `1.0.0-pre8`.\n\n  - Any numeric identifier is always less than any non-numeric\n    identifier:&ensp;`1.0.0-pre.1` is less than `1.0.0-pre.x`.\n\nExample:&ensp;`1.0.0-alpha`&ensp;&lt;&ensp;`1.0.0-alpha.1`&ensp;&lt;&ensp;`1.0.0-alpha.beta`&ensp;&lt;&ensp;`1.0.0-beta`&ensp;&lt;&ensp;`1.0.0-beta.2`&ensp;&lt;&ensp;`1.0.0-beta.11`&ensp;&lt;&ensp;`1.0.0-rc.1`&ensp;&lt;&ensp;`1.0.0`","links":{"`Prerelease`":"0:387:1874","`BuildMetadata`":"0:402:1876"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:302:1870","0:303:1871","0:304:1872","0:305:1873","0:306:1875"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:258","a:2:8874:3070-0:301:1869","a:2:8873:3071-0:301:1869","a:2:2815:240-0:301:1869","a:2:2832:250-0:301:1869","a:2:2872:2956-0:301:1869","b:2:2621-0:301:1869","b:2:2303-0:301:1869","b:2:2300-0:301:1869","b:2:2610-0:301:1869","b:2:2606-0:301:1869","b:2:2616-0:301:1869","b:2:3450-0:301:1869","b:5:5799-0:301:1869","b:5:682-0:301:1869","0:315","0:307","0:32","0:317","0:319","0:222","0:313","0:309","0:310","0:312","0:20"]}}},"b:2:2300-0:322:1889":{"id":"b:2:2300-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2515"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89:709":{"id":"0:89:709","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[105,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9806:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9787:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5799-0:301:1869":{"id":"b:5:5799-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5797:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5801:1581"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:316:455":{"id":"0:316:455","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[162,31],"end":[162,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31106:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,20],"end":[188,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2616-0:322:1889":{"id":"b:2:2616-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:131","2:2620:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:357:1936":{"id":"0:357:1936","crate_id":0,"name":"Exact","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/impls.rs","begin":[39,0],"end":[43,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:1121"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:224:2045":{"id":"0:224:2045","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[28,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12370:1834","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:356:1895":{"id":"b:2:2621-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:131","2:2625:1604"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8874:3070-0:337:1891":{"id":"a:2:8874:3070-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8874:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8873:3071-0:356:1895":{"id":"a:2:8873:3071-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8873:3071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5799-0:337:1891":{"id":"b:5:5799-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5797:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5801:1581"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:382":{"id":"0:382","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,37],"end":[252,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10047:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:383:773"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278:1025":{"id":"0:278:1025","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[570,4],"end":[572,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12739:29429":{"id":"2:12739:29429","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12738:2408"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[188,16],"end":[188,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,15],"end":[252,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232:130":{"id":"0:232:130","crate_id":0,"name":"Err","span":{"filename":"src/parse.rs","begin":[128,4],"end":[128,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2300-0:337:1891":{"id":"b:2:2300-0:337:1891","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Comparator","id":"0:337:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2515"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12719:33264":{"id":"2:12719:33264","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352:773":{"id":"0:352:773","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[196,31],"end":[196,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10055:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12721:33265":{"id":"2:12721:33265","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12719:33264"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[25,0],"end":[82,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12370:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:130","0:224:2045"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12818:2207":{"id":"2:12818:2207","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12821:29448":{"id":"2:12821:29448","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12026:444","self::pattern":"2:12410:2811"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41868:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12430:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:2045":{"id":"0:227:2045","crate_id":0,"name":"from_str","span":{"filename":"src/parse.rs","begin":[87,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12370:1834","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:240-0:402:1876":{"id":"a:2:2815:240-0:402:1876","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BuildMetadata","id":"0:402:1876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:24":{"id":"0:24","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[33,0],"end":[46,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9836:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:25:709"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8874:3070-0:387:1874":{"id":"a:2:8874:3070-0:387:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8874:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prerelease","id":"0:387:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:682-0:322:1889":{"id":"b:5:682-0:322:1889","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:3169","5:685:3170","5:686:3171"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,26],"end":[252,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:260:1831":{"id":"0:260:1831","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[432,4],"end":[434,5]},"visibility":"public","docs":"Create `Version` by parsing from string representation.\n\n# Errors\n\nPossible reasons for the parse to fail include:\n\n- `1.0` &mdash; too few numeric components. A SemVer version must have\n  exactly three. If you are looking at something that has fewer than\n  three numbers in it, it's possible it is a `VersionReq` instead (with\n  an implicit default `^` comparison operator).\n\n- `1.0.01` &mdash; a numeric component has a leading zero.\n\n- `1.0.unknown` &mdash; unexpected character in one of the components.\n\n- `1.0.0-` or `1.0.0+` &mdash; the pre-release or build metadata are\n  indicated present but empty.\n\n- `1.0.0-alpha_123` &mdash; pre-release or build metadata have something\n  outside the allowed characters, which are `0-9`, `A-Z`, `a-z`, `-`,\n  and `.` (dot).\n\n- `23456789999999999999.0.0` &mdash; overflow of a u64.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42013:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:2093":{"id":"0:280:2093","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[578,4],"end":[580,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8874:3070-0:220:131":{"id":"a:2:8874:3070-0:220:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8874:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:220:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:356:1895":{"id":"b:2:2303-0:356:1895","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25282"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:365:1940":{"id":"0:365:1940","crate_id":0,"name":"LessEq","span":{"filename":"src/lib.rs","begin":[259,4],"end":[259,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2303-0:301:1869":{"id":"b:2:2303-0:301:1869","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:301:1869","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:25282"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/parse.rs","begin":[84,0],"end":[111,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12370:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::VersionReq","id":"0:322:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:130","0:227:2045"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:261:2067":{"id":"0:261:2067","crate_id":0,"name":"cmp_precedence","span":{"filename":"src/lib.rs","begin":[476,4],"end":[481,5]},"visibility":"public","docs":"Compare the major, minor, patch, and pre-release value of two versions,\ndisregarding build metadata. Versions that differ only in build metadata\nare considered equal. This comparison is what the SemVer spec refers to\nas \"precedence\".\n\n# Example\n\n```\nuse semver::Version;\n\nlet mut versions = [\n    \"1.20.0+c144a98\".parse::<Version>().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n];\n\n// This is a stable sort, so it preserves the relative order of equal\n// elements. The three 1.20.0 versions differ only in build metadata so\n// they are not reordered relative to one another.\nversions.sort_by(Version::cmp_precedence);\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n]);\n\n// Totally order the versions, including comparing the build metadata.\nversions.sort();\nassert_eq!(versions, [\n    \"1.0.0-alpha\".parse().unwrap(),\n    \"1.0.0\".parse().unwrap(),\n    \"1.20.0\".parse().unwrap(),\n    \"1.20.0+bc17664\".parse().unwrap(),\n    \"1.20.0+c144a98\".parse().unwrap(),\n]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ordering","id":"2:31106:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5544:27847":{"id":"5:5544:27847","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12838:27850"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7520:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12774:33270":{"id":"2:12774:33270","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12410:2811","str::split":"2:12765:2359","prim@char":"1:12026:444","`DoubleEndedIterator`":"2:7780:124","str::rsplit_terminator":"2:12777:33271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43840:2845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12415:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:1894":{"id":"0:338:1894","crate_id":0,"name":"op","span":{"filename":"src/lib.rs","begin":[198,4],"end":[198,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Op","id":"0:356:1895","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"paths":{"17:11408:21308":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:10090:2704":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:6691:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"0:337:1891":{"crate_id":0,"path":["semver","Comparator"],"kind":"struct"},"1:4022:9155":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"11:2461:5959":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:6513:5588":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:22241:9282":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:261:8151":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:7457:2249":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9278:4516":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:1650:6221":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:2469:7061":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"8:0:2417":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:2964:2790":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:9834:114":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:588:6113":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:4806:5475":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:1691:6245":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:5955:6720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12099:4746":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"9:426:20229":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:12075:4742":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:3974:9152":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:2889:2650":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:4082:3577":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:6961:7002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:42223:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:10479:1869":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:10140:21337":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"16:4889:5478":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:46879:7500":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:10643:3576":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:2618:5416":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:7682:4297":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"14:221:5897":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:946:8311":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:1840:182":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:40459:4240":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:8193:2760":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:15:2215":{"crate_id":2,"path":["core","write"],"kind":"macro"},"18:507:4367":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:4325:8344":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:22546:7110":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:5830:5511":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:7573:4291":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:8874:3070":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:5626:4281":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:43602:3574":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:9301:81":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:32290:5963":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:8139:7615":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"11:1869:5955":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"0:0:2094":{"crate_id":0,"path":["semver"],"kind":"module"},"17:14523:5371":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:10562:4561":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"6:4947:6533":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:641:8368":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:10215:8186":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:6226:8262":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"5:7361:2582":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:11028:4299":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:2987:2795":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:2815:240":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:7924:7050":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:7833:2730":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:9787:229":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:13817:5168":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:1075:8154":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11491:4662":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:9753:8169":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13852:5178":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:41058:7360":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:42106:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:10113:8182":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:11191:7661":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:10885:3581":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:1710:6252":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10411:8194":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:6534:8410":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:7353:2582":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:10847:2842":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:6188:8408":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:2504:5411":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:4815:9164":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:43659:2735":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:2881:5427":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:4053:5462":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:11873:4698":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:12050:1232":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:12811:4886":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"11:693:2582":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:43714:3586":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"18:719:4398":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:2406:205":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:0:310":{"crate_id":5,"path":["alloc"],"kind":"module"},"9:330:6005":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:7710:9034":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"18:548:146":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:9897:21320":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:1772:2687":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:5963:8240":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:22463:7101":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:43584:3575":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:9887:8171":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:1310:8318":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:13149:4962":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:13923:5196":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:6434:2741":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:44513:2821":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:48139:7551":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:9781:8170":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:11613:7694":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:8301:7623":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:11762:4679":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:22239:9108":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:11599:27987":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:4401:4212":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:11574:4666":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:4516:6366":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:3077:134":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:12175:2860":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:14084:5240":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:3116:2572":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:10521:4558":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:50119:9296":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:5104:6621":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:4461:6340":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:14309:5316":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:1064:8315":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:9189:7666":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:5747:8406":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:4900:9204":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:11587:4668":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:6583:5600":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:12751:4878":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:434:4462":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:4870:6498":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"18:113:25265":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11935:4714":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:9836:123":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:3808:2578":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:2974:2792":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:4830:6478":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:13967:5208":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:3282:257":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:7171:2745":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:6047:6771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:23198:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:14500:5367":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:5140:6634":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:10293:4253":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"0:359:1937":{"crate_id":0,"path":["semver","Op","Greater"],"kind":"variant"},"16:2933:20377":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:7702:7046":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:10495:242":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:4549:6382":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:21175:2701":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:7534:7077":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:3557:2580":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:2919:2784":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:8952:7656":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:21692:7098":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:10947:8402":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:923:8306":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:3232:8161":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:5375:8397":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:4535:6374":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:21507:9293":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:11548:4665":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:9019:8439":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:2823:3088":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:11972:4726":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:40412:7347":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:3193:8383":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:10371:8191":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"14:7:8301":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:22129:32248":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:44044:2839":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:13779:5162":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:12410:2811":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:5866:5518":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:1763:7080":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:8115:5805":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:1718:6256":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:22670:2655":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:46325:7471":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:42056:3576":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:2590:260":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:5992:6734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:3032:5451":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:10686:8211":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:22020:9286":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:11099:8229":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:8199:2728":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:7894:7574":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:10662:8207":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:9092:237":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:3729:8391":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:7636:9108":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:2284:20350":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:14461:5358":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:2178:8157":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:9489:34058":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:44418:2830":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:5389:8399":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:13245:4972":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:2406:5407":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:5403:4509":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:44350:7428":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:39630:7203":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:13568:5101":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:6687:5624":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:14119:5248":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:4036:9157":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:11887:4699":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:6666:6863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:11992:8600":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:929:9047":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"14:0:2422":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:105:310":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"6:6934:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:43776:2836":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:2579:4269":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:6140:4263":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:2209:8160":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:12485:4839":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:10673:8208":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:4058:8340":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:4497:5466":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:10751:7670":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:536:5386":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:9373:4519":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:9848:2603":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:7708:5448":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:1744:650":{"crate_id":1,"path":["std","env"],"kind":"module"},"0:322:1889":{"crate_id":0,"path":["semver","VersionReq"],"kind":"struct"},"17:3565:8163":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"5:6857:2587":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:2369:128":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:44780:174":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:13136:4961":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:40233:7333":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:44286:7426":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:6268:34050":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:7633:7031":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:2400:198":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10950:8221":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:13175:4964":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:6083:20349":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:7656:8413":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:44073:2856":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:6844:5653":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:42301:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:1903:3284":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:6943:6999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"11:1842:3576":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:9071:4509":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:3083:136":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:2826:247":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:31106:199":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:7622:7027":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:6742:5637":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:7067:5683":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:2210:2667":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"16:6600:21242":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:23074:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:14069:5236":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:7738:139":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:40379:103":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:9329:2836":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:11960:1523":{"crate_id":2,"path":["core","str"],"kind":"module"},"2:42013:229":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:5565:9233":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:11152:7650":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:501:6060":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"11:1876:5956":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:4631:6904":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"11:759:5952":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:7371:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:6868:6960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"11:2494:2576":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"11:2394:2578":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"1:588:9028":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"5:2970:7057":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:4628:6424":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:43734:2835":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:4922:6521":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:10198:8183":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:41944:2582":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:4161:9176":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:6945:266":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:12040:788":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:11618:4669":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13633:5137":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:6474:2580":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:10127:4536":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:3677:4189":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:9179:27101":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:6017:21239":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:47149:7505":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:10070:8375":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"15:394:20341":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"17:11152:8233":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:3692:2582":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:43694:3587":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:5045:8396":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:44375:7429":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"11:389:4183":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:12877:4911":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:10085:8180":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:12038:790":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:6989:4230":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:26107:269":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:5740:8403":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:2359:5405":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:7318:5717":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:4738:9168":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:10629:4569":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:9791:34054":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:10166:21338":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"16:4862:5477":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:8181:5450":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:2931:2783":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:5033:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:5982:5530":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:13907:5192":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12725:4874":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:8162:9107":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:22571:31072":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:43612:3582":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:5017:5482":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:8004:2248":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:10934:8415":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:9702:8168":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:10469:4553":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:1542:2580":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:10816:7616":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:4320:8343":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:9522:8165":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:43150:150":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:21540:9288":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:40858:2761":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:123:14833":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:6228:6826":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:2978:2793":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:43685:3584":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:4174:9177":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:9712:34060":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:11510:8391":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:9853:21319":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"6:6682:6875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:1558:6155":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:9842:2601":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:7462:5735":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:904:2578":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:1644:626":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:12889:4913":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"7:0:1673":{"crate_id":7,"path":["unwind"],"kind":"module"},"11:1855:2578":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:12112:4748":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"18:582:2701":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:563:6100":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:13072:4942":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:2316:107":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:7831:4455":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:62:14778":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:2923:2782":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:9014:8438":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:1265:5686":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:44537:2818":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4506:6363":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:3888:5460":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"18:521:25276":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:13102:4948":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:5088:5484":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:3299:2803":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:2593:4253":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12831:4887":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:557:8365":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:6248:6840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:21776:9280":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"9:393:20228":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"11:860:8311":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:13898:5191":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:569:6103":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:1759:8373":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:44822:7445":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:21678:9283":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:1419:3576":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:7128:7657":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:13452:5008":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:9651:4545":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:7780:124":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:8843:3576":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:400:8152":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:495:6058":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:6781:6911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4884:6503":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:1596:6179":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"11:1525:20307":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:3049:120":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:40224:7332":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:10398:8193":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:44385:7433":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:44509:2819":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:48203:7555":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:4686:6428":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:7597:34047":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:4824:6475":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:11368:4642":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:12025:4733":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:21218:32264":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"18:0:2426":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:21419:8647":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:42005:3672":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:40608:2752":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:8538:3576":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:4736:9167":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:6804:6918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:3179:3576":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:12030:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:2810:5424":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:7523:5740":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:952:8312":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:4399:2611":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:4082:104":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:10930:4605":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:8875:3069":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:7492:5736":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:9446:8164":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:6279:5568":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"11:0:2420":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:7651:8296":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:12026:444":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"11:796:2578":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:42627:2599":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:41847:7383":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:47897:7542":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:6243:4281":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:11075:8227":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:3232:5396":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"5:5867:2580":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:12032:1523":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:4998:6569":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:12847:4892":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:12294:4792":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:10940:2846":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:4968:6548":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:7554:5445":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:14325:5320":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11992:4727":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"11:785:2580":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:32337:8356":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:42620:2600":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"11:1092:8316":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:48005:7544":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:40694:2758":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:8293:8425":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:12912:4922":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"18:707:2828":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:43858:2843":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:12152:2863":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:44054:2841":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:39591:2798":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:11328:4639":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:32326:8355":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:46544:7478":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:2364:204":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:8243:32351":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:6263:6851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:7668:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:46493:7477":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:1551:5954":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:6499:5449":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:12033:1609":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:6189:5566":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:43912:2846":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"11:1850:2580":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:7269:34051":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"11:2351:2582":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"1:10834:27967":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:7639:7032":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:6968:21244":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:11125:8231":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:21188:32250":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:14101:5244":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:14537:5374":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:47085:7503":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:8795:21300":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:3797:5458":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:3287:140":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:533:4266":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:41769:31075":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:12453:4832":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:10739:8217":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:7102:21245":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:2297:100":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:4428:6327":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:21233:32262":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:6079:6784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:4986:5481":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:6248:2764":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:39644:7205":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:40320:14468":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:4305:8394":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:11359:21433":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:44107:2855":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:7262:2582":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:12238:4775":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:12370:1834":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:42145:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:10806:122":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:42379:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:14025:5222":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:6847:2586":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:22981:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:11536:4664":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"4:0:2416":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:30572:31056":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"0:387:1874":{"crate_id":0,"path":["semver","Prerelease"],"kind":"struct"},"16:5995:5389":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:1604:6184":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:42925:2211":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:12039:787":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:9007:2251":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"18:96:25264":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:7999:8421":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:9062:7660":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"5:5951:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:45800:7447":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"14:165:20312":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:3924:9150":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:46277:7470":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:2943:2785":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:8396:7634":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:7889:172":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:4010:2580":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:5774:8407":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:11338:21432":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:5049:5483":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:4909:9205":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:13299:4986":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:6560:4178":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:43894:2847":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"18:599:34068":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6531:5596":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"14:40:4714":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:6156:5561":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:1146:32805":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:9467:709":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:638:8366":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:41087:2718":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:13827:5169":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:4958:9211":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:44716:230":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:2766:5422":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:11296:4634":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:7661:7568":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:3220:5954":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13216:4969":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:4473:2614":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:2139:4206":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:46371:7472":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:46447:7475":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"18:636:4388":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:48218:7556":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:47115:7504":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:46961:7501":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:3461:5455":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:8205:21250":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:5384:21236":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:6171:209":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:9960:8176":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:11024:4611":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:2361:9097":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:12008:4731":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:4921:5479":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:363:8364":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:11587:7693":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:5144:4220":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:4584:6401":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:7994:8420":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:48154:7552":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"18:614:34066":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"11:1036:8315":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"11:731:8305":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"11:2368:2580":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"6:6136:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:4677:14462":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11911:4713":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10266:8188":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:22519:2651":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:9840:2600":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:2212:2668":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"17:10963:4608":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"18:609:8144":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:5440:108":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"11:992:5686":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:40848:2760":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:8714:21298":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:46803:7498":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:5696:21237":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:44706:222":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:4949:5480":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:678:253":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:483:6052":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:23012:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:1874:3283":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:9456:34061":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:12025:1021":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:7568:5446":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:3317:9135":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:40566:2748":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:1521:6132":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:5859:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:11087:8228":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:10441:8197":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:9661:34055":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"11:1145:8318":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:40678:2757":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:21216:32267":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:39569:219":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:14515:5368":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:6059:6776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:475:6047":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:48165:7553":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:10457:8202":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:1539:2582":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:43125:2707":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:4641:5471":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"11:2473:5961":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:4745:6434":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:10535:4559":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:8826:21301":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:39405:2805":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"17:12738:4876":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:11711:4636":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:5982:6727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:4738:6432":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:1797:8375":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:11164:27963":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:11390:8235":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:7916:8419":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:10431:8196":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"18:671:8149":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:45892:7451":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:10638:4570":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:3049:20379":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:1761:8374":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:21795:9108":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:4473:6349":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:32330:5734":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:6386:5579":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:3031:2804":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:44560:125":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:47757:7540":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:41656:9147":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:11394:131":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:910:8319":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"5:1019:4189":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:860:2582":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:10013:4545":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:1110:32807":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:8865:7652":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:11965:2831":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:13114:4950":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:5152:6639":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:2345:2658":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:7503:5443":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:2788:5423":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:2058:5686":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:8954:21305":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:14402:5342":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:3664:9148":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:7287:2710":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:11301:7683":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:12960:4927":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:41114:2724":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:12045:1626":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:39547:217":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:8595:21286":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:40708:2759":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:5661:5494":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:4745:5473":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:40332:7340":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:11951:3570":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:2347:9093":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:654:15191":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:10761:7571":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:6291:223":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:5969:6721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:9565:8166":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:276:2575":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:3476:2212":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:9208:4514":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"11:1010:8313":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:46622:7480":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:8323:6891":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:3065:4409":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:1522:213":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:12226:4772":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:9052:21285":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:13163:4963":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:7604:2578":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"16:6893:5659":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:9965:7378":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:9844:2602":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:7483:7074":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:7782:5750":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:7517:2713":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:43748:2834":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"18:590:4378":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:43141:2706":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:8469:7637":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:10157:1491":{"crate_id":2,"path":["core","slice"],"kind":"module"},"6:6798:6916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:4629:6902":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:555:6095":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:9173:4513":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:4371:4214":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:4172:4212":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:2586:261":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13612:5132":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:9763:34059":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:3073:2332":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:12712:4873":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:7544:5741":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:39452:2797":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"11:2479:34028":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:48128:7550":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:22357:7099":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"11:772:5953":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"5:1281:8315":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:9493:8598":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:4841:6486":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:1639:6213":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:13891:5189":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:6792:5651":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:2615:8381":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4566:6392":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:14222:5300":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:46095:7459":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:3274:8388":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:4710:6430":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4893:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:42340:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:46469:7476":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:4994:4212":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:7496:7076":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"18:766:25275":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:8134:5808":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:12577:4855":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:580:6108":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:3504:9127":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:940:8309":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5727:5499":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"11:2334:3577":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"5:5982:4220":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:4248:2610":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:2150:21365":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:7677:213":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:8183:2746":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:542:6089":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:12008:27107":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:13793:5166":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:12185:4762":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:6658:6858":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:7391:21246":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:5075:6602":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:12047:1624":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"11:2260:8313":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"10:44:5968":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:4694:9206":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:6977:8627":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:4595:6406":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:11334:7687":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"11:122:4179":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:4:1100":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:4389:4238":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:6764:6910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:7701:2733":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:6086:6785":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:781:98":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"0:367:1941":{"crate_id":0,"path":["semver","Op","Tilde"],"kind":"variant"},"17:10421:4454":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:8884:7653":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:44221:7423":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:12191:2862":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:1528:6135":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:43633:3589":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:1531:8328":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:9461:132":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:41936:3577":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:40297:2855":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:10098:8181":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:2864:5426":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:10774:3579":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:7848:7572":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:6341:9370":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:30630:31046":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:2655:8382":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:41828:7382":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:2580:156":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:5710:2751":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:23167:185":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:2373:9103":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:6467:5587":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:10526:8383":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:10279:8189":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:1749:2688":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:6440:7089":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"16:7694:5447":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:3312:32015":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:12374:4799":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"0:361:1938":{"crate_id":0,"path":["semver","Op","GreaterEq"],"kind":"variant"},"6:5044:6592":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:11282:4633":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:14347:5326":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:22025:9294":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"5:5640:2585":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:9831:114":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"18:681:4389":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:415:178":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:6569:5437":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:40218:2854":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:1680:4189":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:4044:9159":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:9306:88":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:43704:3585":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"3:0:469":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:4563:9197":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:0:869":{"crate_id":6,"path":["libc"],"kind":"module"},"2:10735:2857":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:45824:7448":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:7474:8288":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"5:7520:246":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:122:2300":{"crate_id":5,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"2:23105:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"6:6114:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:11382:4645":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:6376:21241":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:3160:27373":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"11:1862:5954":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:8984:25423":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:9973:8177":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6879:5657":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:6456:5586":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"7:31:20213":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:4939:1087":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:14164:5258":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:11935:3568":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:11228:155":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"17:9922:8173":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:32351:7194":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:3246:5957":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:4527:5467":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7768:5436":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:5634:5490":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:8859:2582":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:13982:5210":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:45994:7455":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:44364:14435":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:30504:2568":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"9:0:2418":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:9243:4515":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:5117:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:12532:4845":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:7522:4506":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:6828:2585":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:12423:4824":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"14:202:14436":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:12046:1627":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:5928:6700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:4697:9179":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:44505:2816":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:44398:2829":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"0:371:1943":{"crate_id":0,"path":["semver","Op","Wildcard"],"kind":"variant"},"15:306:20332":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:8167:8300":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:1563:5956":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:5322:5486":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:7621:21247":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:3154:28838":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:10962:27119":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"18:727:4401":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:40659:2755":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"11:822:8306":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:10024:8168":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"11:2165:5958":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:9633:2621":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"5:1472:5952":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:43940:2850":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:2419:2432":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:13488:5039":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:46255:7469":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:919:8305":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:43172:7401":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:2583:138":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"18:644:4367":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:6676:4189":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"18:660:8145":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13555:5094":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:22531:31065":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:10904:8218":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:8219:8425":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:2958:2789":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:2577:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:3272:2799":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:10091:8444":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"2:22644:2654":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:7841:7571":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:10293:4545":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:12514:4844":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:10241:9235":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:3233:8385":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:3338:2578":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:13576:5102":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:6718:6891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:4776:6453":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:0:2425":{"crate_id":17,"path":["object"],"kind":"module"},"6:489:6055":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:2827:112":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:8195:5810":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"18:755:4406":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:44809:2630":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:21771:9108":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:7235:31117":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:7604:7024":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:2894:2649":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:7792:21248":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"18:491:4366":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:46114:7460":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:504:8153":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:2722:5420":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:7054:5680":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"12:0:2421":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:11227:4629":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:10572:4297":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:42262:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:4603:6411":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:11816:4686":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:14077:5239":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:850:3577":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:11174:21431":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:6927:6993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:11039:4300":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:6819:6923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:10241:4530":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:6537:9246":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:8206:2844":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:6041:21240":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:10774:7678":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:2905:4272":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:5981:223":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:2905:2779":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:7360:34052":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:1682:6239":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5123:6630":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:3602:3577":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12791:4883":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:9986:8178":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:12197:4763":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"11:703:8304":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:5378:14420":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:8446:7397":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:3272:8387":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:6401:5431":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:40261:7336":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:44082:2852":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:7129:26973":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:4764:6446":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:10980:7651":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:0:1515":{"crate_id":1,"path":["std"],"kind":"module"},"5:3576:176":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:6159:6811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:6818:5652":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:2596:5415":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:7253:2574":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:3080:135":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:7725:9035":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:7408:2576":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:14091:5241":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:12027:1644":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:622:3285":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:41792:7381":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:5798:5505":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:39481:213":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:47959:7543":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:2670:5418":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:3191:33042":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:31134:2701":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:149:4176":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:7751:2731":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:1490:8319":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:13915:5194":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:11307:4636":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:10424:8430":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:1822:8376":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:3419:7619":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:45870:7450":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:8072:5800":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:4205:7084":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:3986:4212":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:7598:7023":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:1591:6177":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:687:113":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:4955:6538":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:1184:8155":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:14111:5247":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:12481:14428":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:12049:1683":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:10532:8387":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:13063:208":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:13011:4932":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:1697:6248":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:22950:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:10589:4563":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"18:564:4377":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:4485:9180":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12971:4928":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:42081:199":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:4808:6467":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:4897:8347":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"11:680:3577":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:1558:4212":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:5921:6696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:3915:5461":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:44313:7427":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:21804:7098":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:44797:2632":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:3225:33044":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:2877:109":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:32438:3094":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:11307:8459":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:14479:5364":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:22919:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:4647:6425":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:2915:2780":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:7343:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:3728:7050":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:6837:6934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:898:3576":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:23260:2653":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"18:80:25263":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:9846:209":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:8050:5799":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:10926:2847":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12281:4791":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:43533:8362":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3360:2718":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:6753:5638":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:533:6083":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:46849:7499":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:11349:7688":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:48099:7547":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:14034:5225":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:14014:5218":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:4417:5464":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:12063:4739":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:5588:5433":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:7533:8462":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:14127:5250":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:12984:4930":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:9806:137":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:5068:6599":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:4666:6426":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:46055:7457":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"9:357:20242":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:3988:9154":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:14449:5356":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:44238:7424":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"11:829:9047":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:5797:254":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:6120:6801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:22495:7105":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:43593:3573":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:10384:8192":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:2251:7060":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:4800:6463":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:2668:131":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:10954:3580":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:40275:7337":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:14057:5233":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:7373:27419":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:13869:5183":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:13208:110":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:7747:8415":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:1041:5686":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:21371:9285":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"11:1541:8320":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:10149:8446":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:11743:4676":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:42634:2601":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:10508:4557":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:2538:14473":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:43840:2845":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:9087:4510":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:8766:21299":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:21203:32250":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:10055:150":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:2872:2956":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:3388:4212":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:21421:2667":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:12699:4871":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:2967:3169":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:482:4265":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:39817:29355":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:6696:5625":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:10968:3578":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:10576:4562":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"11:1072:34032":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:5435:5488":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:8205:2729":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:9138:4512":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:6700:6882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:42870:2211":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:1481:2301":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:5537:4212":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"15:288:20331":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:40547:2738":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:8913:9250":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:6420:2714":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"18:531:4372":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:47835:7541":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:41928:3576":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11236:4630":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:7582:5742":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"13:110:34038":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:825:4194":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:10812:3592":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:4613:5470":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:4719:5472":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:7620:2579":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:8150:7616":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"18:515:4370":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:10715:8215":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:43958:2851":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:22592:31064":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:44585:7439":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:4914:6516":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:10060:4534":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:44525:2822":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:44529:2823":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:13086:4944":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:1450:2582":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:3150:97":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:2911:2778":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:6805:9277":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:4242:3576":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:2969:20378":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:12466:4834":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:5076:8396":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:2884:2648":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"11:357:4181":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"11:1846:2582":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"18:481:4365":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:785:4191":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:40313:2853":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:868:5952":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:5052:6594":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:4440:6330":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:42916:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:9946:4530":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:46591:7479":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:12424:2828":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:11453:3590":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:40626:2763":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:45846:7449":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:40285:7338":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"11:817:8319":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:9157:8441":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"17:10448:5958":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:10053:146":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"6:5146:6636":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"5:7316:2582":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:12044:1625":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:6944:34048":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:915:8304":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5015:6575":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:43766:2837":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:4500:2613":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:8130:2249":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"11:483:147":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:13287:4979":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:42064:3577":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:12173:4759":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:4835:5476":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:14317:5319":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:6012:6750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"11:2238:5686":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:629:8325":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:12037:685":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:41919:167":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:106:563":{"crate_id":5,"path":["alloc","alloc","dealloc"],"kind":"function"},"17:9618:34062":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:11216:4625":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:12555:4848":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:44724:210":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:14002:5217":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:1535:3576":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:10796:133":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:12029:1137":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:7888:122":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:11284:4302":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:8239:5734":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:14421:5347":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:3293:2801":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:12031:1491":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:1407:149":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:11688:21311":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:1703:6249":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:5673:5434":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:40617:2753":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:5867:6670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:43162:7397":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:21626:9279":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:9468:8416":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:41081:2716":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:21593:9284":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:4989:6563":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"5:7282:2580":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:40305:2854":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:11209:7682":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:10315:108":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:12036:683":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:30736:31049":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:2825:248":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:596:6118":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:507:6063":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:10467:4296":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:11486:3591":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:5965:4281":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:9102:155":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:3930:9149":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:1635:4185":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:5302:123":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:7388:7021":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:12622:4861":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"11:2074:8313":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:2832:5425":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:42498:8351":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:2948:2786":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:2968:33055":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:7651:7034":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:5085:6607":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:8873:3071":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:724:147":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:7020:4289":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:9140:7662":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"5:6594:2582":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:42965:2609":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:11846:4690":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:9027:7657":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:12155:4758":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:14174:5263":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:261:4189":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:881:4196":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:12115:2861":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:4578:6398":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:2548:5413":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:8986:2825":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:1501:6124":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"10:36:5967":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:3235:8386":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:4878:6502":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:4462:5465":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:12599:4856":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:48256:7558":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:44012:2849":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:1664:6232":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:5562:6812":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:11273:4632":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:10617:4566":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:7731:9066":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:11449:21309":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"16:7884:21249":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:10210:4249":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"5:7332:7070":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:1434:3577":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:42641:2602":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:7645:7033":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:5910:6688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:1910:696":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:3437:8389":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:6003:8690":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:504:4206":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:7065:2734":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:7453:7071":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:40585:2750":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:13312:2573":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:8225:8427":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:39366:2808":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:3364:2807":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:12430:2827":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:41106:2722":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:42900:5777":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"5:2149:7052":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:43790:2844":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:11049:8222":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:13036:32439":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:7015:5676":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:2195:8379":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:11317:4638":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:13740:5153":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:8835:7651":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:21407:9287":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"2:45954:7453":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:10825:27965":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:5234:206":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:4977:6554":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:12435:2826":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:4908:6513":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:4145:9174":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:11382:7691":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:1651:3299":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:4755:6441":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:5130:6633":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"11:2423:20302":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"14:187:20319":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:7722:5438":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:11975:7734":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"5:4202:4212":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:3112:2571":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:41622:7365":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:9934:8174":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:43760:2838":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:2657:119":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:40365:7345":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"14:31:8301":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:4932:6527":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:6590:8693":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:1681:1173":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:8097:5803":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:10667:3577":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"7:78:20220":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:11138:7649":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:548:6092":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:46401:7473":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:12044:4738":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:10089:8445":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:4860:6494":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:42459:94":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:3448:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:48119:7549":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:2938:229":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:40426:9077":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"3:234:229":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:1514:6130":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:7545:8339":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:574:6105":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:7692:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"11:1562:8321":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:527:6080":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:7899:7575":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:41096:2720":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:11789:4680":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:7616:7026":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:14470:5362":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:7090:5685":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:42184:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:4619:9154":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:30277:2647":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:11527:2345":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:44098:2854":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:4174:8342":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:41868:197":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:5419:4510":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:48180:7554":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:9913:8172":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:2899:2777":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"9:450:20227":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:43994:2848":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:13677:5142":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:4032:9156":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"11:1882:5957":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:1674:6238":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:11045:4301":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:46645:7481":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"11:2085:8315":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"11:666:3576":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:41072:2714":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:12438:4828":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"19:0:1117":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:3831:8392":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:6813:6922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:9473:4295":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:22:723":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:21235:32266":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:5334:4189":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:14270:5301":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:3726:8390":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:4855:220":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:9268:3701":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:8528:7642":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:5760:21238":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"5:1511:8305":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:10917:8219":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:8267:7621":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:9608:8167":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"9:237:7397":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:207:4188":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:12766:4881":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:8927:21304":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:12043:1628":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:40669:2756":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:1073:8318":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:7657:7035":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:13219:4263":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:10495:4555":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:5829:6643":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:13203:4968":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"13:0:2415":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:837:3576":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:41599:164":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:10647:4650":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:11352:4641":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:43133:7396":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:41065:2712":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:8294:131":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:7270:7069":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:10548:4560":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:13711:5145":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:44597:14566":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:13950:5200":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:9824:21318":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:2321:5397":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:11001:4610":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4902:6512":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"9:52:8579":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:2744:5421":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"0:369:1942":{"crate_id":0,"path":["semver","Op","Caret"],"kind":"variant"},"1:8230:9146":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:2012:8156":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:47299:7506":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:23043:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:5633:7566":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"11:868:8312":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"11:2303:8324":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:10772:4573":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:1784:2578":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:881:5953":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:7436:5534":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:10367:8190":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:7006:8278":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:646:9031":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:4316:224":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:256:8150":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:1546:6146":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:43380:7404":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:7862:5762":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:3441:8162":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:6243:8265":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:4344:5463":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:5897:6687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:4854:6491":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:2880:2685":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:14379:5341":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"5:4434:4214":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:12544:4847":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:5574:5430":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:40516:2736":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:13694:5144":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:11952:4716":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"14:215:5895":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:3764:5457":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:5816:5510":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:2472:5410":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:2574:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"0:365:1940":{"crate_id":0,"path":["semver","Op","LessEq"],"kind":"variant"},"17:8979:21306":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:6318:5571":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:78:1683":{"crate_id":2,"path":["core","usize"],"kind":"module"},"1:3485:27927":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:44170:14434":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:2698:7064":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"0:363:1939":{"crate_id":0,"path":["semver","Op","Less"],"kind":"variant"},"1:11364:7733":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:8213:2839":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:10037:4532":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:39505:215":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"18:624:34069":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4480:6353":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:4543:6379":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:7292:4199":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:4676:6427":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:7324:213":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:40576:2749":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:6890:4288":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:48233:7557":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:48081:7546":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:11192:4618":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:1734:6261":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13025:4935":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:47647:7539":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:12268:4787":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:10981:4545":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:12042:785":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:3327:2806":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:40538:2737":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:13001:143":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:7365:7009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:44064:2840":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:10699:8213":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:22554:7111":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:41639:7367":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:40525:2746":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"18:736:25274":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:7828:5758":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:44521:2824":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:10692:2844":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:8378:9215":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:3209:214":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:1568:5957":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:1500:8304":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:0:2424":{"crate_id":16,"path":["gimli"],"kind":"module"},"5:2043:7050":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:14297:5313":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:11245:4669":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:30544:3301":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:6913:6984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:5941:6709":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4783:6454":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:7836:8416":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:40556:2747":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:3600:5456":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:2982:2794":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:2927:2781":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"11:1687:149":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8789:8430":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:1913:16183":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:3830:5459":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:46025:7456":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:40346:14469":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:1576:6165":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"11:2487:5964":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12686:4870":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:4724:6431":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:40384:7346":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:21672:9281":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:7679:7040":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:6915:5440":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:6100:6796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:13803:5167":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:4375:6284":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:10938:6025":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:14146:5255":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:8285:8428":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12474:4836":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"18:538:4375":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:44533:2817":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:43672:3588":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:6638:236":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:5632:4212":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:4557:5468":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:22608:31052":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:1126:8687":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:13547:5091":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:14135:5251":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:42860:7388":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"16:7513:5739":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:21802:9289":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13260:4976":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"5:7302:32817":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:4496:6357":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12659:4865":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:10276:4252":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:11606:7694":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"15:327:8576":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"11:2286:8315":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:7858:7573":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:10047:146":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:8807:7649":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:22658:2652":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"18:574:4367":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:7742:159":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:11470:8390":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:11474:4476":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:3212:5956":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:10308:4258":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:8660:21284":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:2574:5414":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:21610:9108":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:2953:2787":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:2822:2955":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:44759:7828":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:10228:8187":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:4377:8395":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"9:486:20226":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:4123:26972":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:4814:6469":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4616:6415":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:9087:180":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:44207:7420":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4488:6355":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:1965:200":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:10756:7672":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:4388:6294":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"0:356:1895":{"crate_id":0,"path":["semver","Op"],"kind":"enum"},"5:1481:5953":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:6156:4280":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:2428:5408":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11997:9036":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:10786:7572":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:1962:201":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:5363:5487":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:7610:7025":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"10:0:2419":{"crate_id":10,"path":["adler"],"kind":"module"},"2:32344:2611":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"16:6352:5573":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"11:423:34037":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:6425:5583":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:46077:7458":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"11:1127:8317":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:40637:2754":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:5122:207":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:4040:4189":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:5425:8401":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:4847:6489":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:6545:5598":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:46225:7468":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:6485:5432":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:14043:5226":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:2202:9090":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:13088:8353":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:2537:9108":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:8851:8432":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:47505:7538":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:6128:6803":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:7736:5748":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:6460:4285":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:5612:5435":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:6445:4246":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:11063:8226":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:10727:8216":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"9:177:8589":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:9999:4499":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:6332:5429":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:9838:2599":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:2294:99":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:5409:8400":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:48108:7548":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:7420:9046":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:5009:6574":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"11:1051:20306":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:8896:21303":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:8929:9252":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:2978:8689":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:11172:7438":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"6:6169:6814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:1820:3701":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:13189:4965":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:4401:6304":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:40872:2762":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:5648:8238":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:9850:2604":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:10317:4550":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:5905:5520":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:48295:7559":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:11138:8232":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:6107:6797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:5111:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"11:2317:3576":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:2363:9098":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:8849:21302":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12672:4578":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:2178:7054":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:7871:133":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:5939:5526":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:46179:7462":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:5712:5496":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:5382:14421":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:12024:395":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:44089:2853":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:12946:4925":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:12226:2857":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"15:0:2423":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:8200:2836":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:2875:3092":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:8555:7646":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"11:427:34033":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:40396:31068":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13041:4937":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:2907:5428":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:1632:6209":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"9:507:6028":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:10789:21407":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:7908:8418":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:9532:34057":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:8821:7650":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:9103:4511":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:1557:5955":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:3062:2796":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11720:21312":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"18:652:4367":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:9575:34056":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:1537:6140":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:44192:7414":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:2832:250":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:13974:5209":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:41953:3067":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:2380:5406":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:40339:7341":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:2200:627":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:44541:7438":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:2940:131":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:41805:7621":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:0:524":{"crate_id":2,"path":["core"],"kind":"module"},"5:6107:4212":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:43365:7403":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:22117:3571":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:6424:8409":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"0:357:1936":{"crate_id":0,"path":["semver","Op","Exact"],"kind":"variant"},"0:301:1869":{"crate_id":0,"path":["semver","Version"],"kind":"struct"},"2:40718:2743":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:42420:87":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:13229:4970":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:7592:4293":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:12253:4781":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:12051:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:10332:8697":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:2305:20376":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"5:3589:3576":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:9788:2212":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:46725:7482":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7660:5746":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:6901:5439":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:6721:21243":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:9004:21307":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:3315:5454":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"5:3743:8329":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:39623:2800":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:4070:8341":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9391:132":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:2869:3090":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:13275:4636":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:4463:9179":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:2837:2567":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:2231:32841":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:12209:4764":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:5819:4275":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:13257:145":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:14356:5328":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:40469:8357":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:7556:7022":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:4434:6328":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:3494:9106":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:8196:2725":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:6346:8276":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:2450:5409":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:40646:2740":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:13668:5138":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:11640:4618":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:10485:9108":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:2526:5412":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:8274:7622":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:46423:7474":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:2644:5417":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:40245:31073":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"14:160:8301":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:11112:8230":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:5743:5500":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:8977:8435":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:4453:2612":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:9121:7661":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:6520:4189":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:8486:9228":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"11:841:8309":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"18:690:4392":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:1546:2578":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:10187:4542":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:44767:7442":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:8687:21297":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:8971:110":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:894:2580":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:12779:4882":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:48043:7545":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:12935:4923":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:11163:4613":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:2974:8688":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:35:2577":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:44517:2820":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:10529:8385":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:22479:7102":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:3655:4414":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:4585:5469":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"16:4774:5474":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:5121:5485":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:8345:7624":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:39465:216":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"5:7436:4216":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:4523:6369":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:14283:5307":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:12998:4931":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:5619:223":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:7284:3067":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:3960:9151":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:6071:6783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10341:4552":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"0:402:1876":{"crate_id":0,"path":["semver","BuildMetadata"],"kind":"struct"},"1:8544:7645":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6960:8277":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:10095:2705":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"13:226:5944":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:6064:4276":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:13014:158":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:46132:7461":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:45924:7452":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:4351:6267":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13056:4941":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:357:8363":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:11531:8392":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:4356:267":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11662:4671":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:7342:34053":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:6741:6909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:12048:839":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:5494:8402":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"5:2057:8329":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:8154:8297":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:13724:5150":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:5023:6580":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:21670:9108":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:12497:4841":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:43384:3596":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:8897:9251":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:6929:5661":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:45780:7446":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:1296:8313":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:11202:4620":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"5:3186:5955":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:6222:6825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:4859:32006":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:6204:8247":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:4792:4273":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:7509:4221":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:2193:132":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:5974:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:22637:7123":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:8795:202":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:21463:9292":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"11:344:34029":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"18:699:4393":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:14336:5325":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4556:6385":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:41986:3068":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"11:101:5945":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:13877:5186":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:7041:5677":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:1507:6127":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:4444:4239":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:43808:2842":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:2198:2338":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:4789:6457":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:12041:789":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:10604:4565":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:30560:2211":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:9868:4527":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:119:14832":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:40594:7352":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:6889:6974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:10751:4571":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:13839:5172":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11508:21310":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:12137:4750":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:23229:183":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:23136:184":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:30538:2569":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:41685:7374":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"5:1382:96":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:2696:5419":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"5:7014:4234":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:9041:25422":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:40496:2735":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"11:2467:5960":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:6604:4286":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:4838:413":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:10732:8454":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:7613:8295":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:72:839":{"crate_id":2,"path":["core","isize"],"kind":"module"},"1:11376:7690":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:9097:238":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:4455:6337":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:8319:8429":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:12124:4749":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:13990:5211":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:13423:4988":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:12646:4862":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:7534:5444":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:23705:239":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:2339:5399":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:9488:32353":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:43180:7402":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:6261:8273":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:8966:8433":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:6415:5582":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:12087:4743":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:11810:4307":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:5004:6572":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:8281:5817":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11262:4631":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:13759:5154":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:3982:9153":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:5885:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:4529:6371":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:6898:6977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:21554:2667":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:11447:4304":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:1961:2690":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:14435:5349":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:2511:8380":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:45976:7454":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:1496:6122":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:6361:5574":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:2709:3288":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:21369:9108":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:4734:9165":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:4698:6429":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:582:4506":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:4364:6276":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:8279:9178":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:2936:2788":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:41996:3312":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:6711:6887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:4610:6413":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:4105:14406":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"5:7467:31068":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:43622:3583":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:2970:2791":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:42072:2582":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:4449:6335":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:12306:4795":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:12643:114":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:6351:179":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:4153:9175":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"11:324:5949":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:39525:218":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:42888:31613":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:4225:8393":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:3157:27369":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:42943:131":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:12415:2825":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:4938:845":{"crate_id":2,"path":["core","iter"],"kind":"module"},"11:298:5946":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:7637:7567":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:40489:8358":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:47039:7502":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:4633:6906":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:3195:8384":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:5823:2739":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:1570:6163":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:22410:7100":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:9351:4518":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13686:5143":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:5891:6686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:7705:2732":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:1055:8313":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:14157:5256":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}